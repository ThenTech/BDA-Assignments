[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 14): NAME(NAME) 'is_ordered'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 25): NAME(NAME) 'lstToCheck'
[00](01, 25)-(01, 26): RPAR(OP) ')'
[00](01, 26)-(01, 27): COLON(OP) ':'
[00](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): INDENT(INDENT) '\t'
[01](01, 01)-(01, 13): NAME(NAME) 'correctorder'
[01](01, 14)-(01, 15): EQUAL(OP) '='
[01](01, 16)-(01, 20): NAME(NAME) 'True'
[01](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): INDENT(INDENT) '\t'
[02](01, 01)-(01, 11): NAME(NAME) 'lastnumber'
[02](01, 12)-(01, 13): EQUAL(OP) '='
[02](01, 14)-(01, 24): NAME(NAME) 'lstToCheck'
[02](01, 24)-(01, 25): LSQB(OP) '['
[02](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[02](01, 26)-(01, 27): RSQB(OP) ']'
[02](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): INDENT(INDENT) '\t'
[03](01, 01)-(01, 04): NAME(NAME) 'for'
[03](01, 05)-(01, 11): NAME(NAME) 'number'
[03](01, 12)-(01, 14): NAME(NAME) 'in'
[03](01, 15)-(01, 25): NAME(NAME) 'lstToCheck'
[03](01, 25)-(01, 26): COLON(OP) ':'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[04](01, 02)-(01, 04): NAME(NAME) 'if'
[04](01, 05)-(01, 11): NAME(NAME) 'number'
[04](01, 12)-(01, 13): LESS(OP) '<'
[04](01, 14)-(01, 24): NAME(NAME) 'lastnumber'
[04](01, 24)-(01, 25): COLON(OP) ':'
[04](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): INDENT(INDENT) '\t\t\t'
[05](01, 03)-(01, 15): NAME(NAME) 'correctorder'
[05](01, 16)-(01, 17): EQUAL(OP) '='
[05](01, 18)-(01, 23): NAME(NAME) 'False'
[05](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[06](01, 02)-(01, 12): NAME(NAME) 'lastnumber'
[06](01, 13)-(01, 14): EQUAL(OP) '='
[06](01, 15)-(01, 21): NAME(NAME) 'number'
[06](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): INDENT(INDENT) '\t'
[07](01, 01)-(01, 07): NAME(NAME) 'return'
[07](01, 08)-(01, 19): NAME(NAME) 'correctorde'
[07](01, 19)-(01, 20): NEWLINE(NEWLINE)
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

