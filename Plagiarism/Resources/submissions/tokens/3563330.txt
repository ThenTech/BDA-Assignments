[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'a'
[01](01, 01)-(01, 02): EQUAL(OP) '='
[01](01, 02)-(01, 07): NAME(NAME) 'input'
[01](01, 07)-(01, 08): LPAR(OP) '('
[01](01, 08)-(01, 25): STRING(STRING) '"give a sentence"'
[01](01, 25)-(01, 26): RPAR(OP) ')'
[01](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'b'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 06): STRING(STRING) '""'
[02](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'count'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'for'
[04](01, 04)-(01, 05): NAME(NAME) 'i'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 14): NAME(NAME) 'range'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 18): NAME(NAME) 'len'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 20): NAME(NAME) 'a'
[04](01, 20)-(01, 21): RPAR(OP) ')'
[04](01, 21)-(01, 22): RPAR(OP) ')'
[04](01, 22)-(01, 23): COLON(OP) ':'
[04](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 08): NAME(NAME) 'a'
[05](01, 08)-(01, 09): LSQB(OP) '['
[05](01, 09)-(01, 10): NAME(NAME) 'i'
[05](01, 10)-(01, 11): RSQB(OP) ']'
[05](01, 12)-(01, 14): LESSEQUAL(OP) '<='
[05](01, 15)-(01, 18): STRING(STRING) '"z"'
[05](01, 19)-(01, 22): NAME(NAME) 'and'
[05](01, 23)-(01, 24): NAME(NAME) 'a'
[05](01, 24)-(01, 25): LSQB(OP) '['
[05](01, 25)-(01, 26): NAME(NAME) 'i'
[05](01, 26)-(01, 27): RSQB(OP) ']'
[05](01, 28)-(01, 30): GREATEREQUAL(OP) '>='
[05](01, 31)-(01, 34): STRING(STRING) '"A"'
[05](01, 34)-(01, 35): COLON(OP) ':'
[05](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 09): NAME(NAME) 'b'
[06](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[06](01, 11)-(01, 12): NAME(NAME) 'a'
[06](01, 12)-(01, 13): LSQB(OP) '['
[06](01, 13)-(01, 14): NAME(NAME) 'i'
[06](01, 14)-(01, 15): RSQB(OP) ']'
[06](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 13): NAME(NAME) 'count'
[07](01, 13)-(01, 15): PLUSEQUAL(OP) '+='
[07](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[07](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 06): NAME(NAME) 'if'
[08](01, 07)-(01, 08): NAME(NAME) 'i'
[08](01, 08)-(01, 09): PLUS(OP) '+'
[08](01, 09)-(01, 10): NUMBER(NUMBER) '1'
[08](01, 10)-(01, 11): LESS(OP) '<'
[08](01, 12)-(01, 13): LPAR(OP) '('
[08](01, 13)-(01, 16): NAME(NAME) 'len'
[08](01, 16)-(01, 17): LPAR(OP) '('
[08](01, 17)-(01, 18): NAME(NAME) 'a'
[08](01, 18)-(01, 19): RPAR(OP) ')'
[08](01, 19)-(01, 20): MINUS(OP) '-'
[08](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[08](01, 21)-(01, 22): RPAR(OP) ')'
[08](01, 22)-(01, 23): COLON(OP) ':'
[08](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 12): NAME(NAME) 'a'
[09](01, 12)-(01, 13): LSQB(OP) '['
[09](01, 13)-(01, 14): NAME(NAME) 'i'
[09](01, 14)-(01, 15): PLUS(OP) '+'
[09](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[09](01, 16)-(01, 17): RSQB(OP) ']'
[09](01, 18)-(01, 19): GREATER(OP) '>'
[09](01, 20)-(01, 23): STRING(STRING) '"z"'
[09](01, 24)-(01, 27): NAME(NAME) 'and'
[09](01, 28)-(01, 29): NAME(NAME) 'a'
[09](01, 29)-(01, 30): LSQB(OP) '['
[09](01, 30)-(01, 31): NAME(NAME) 'i'
[09](01, 32)-(01, 33): PLUS(OP) '+'
[09](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[09](01, 35)-(01, 36): RSQB(OP) ']'
[09](01, 37)-(01, 38): LESS(OP) '<'
[09](01, 39)-(01, 42): STRING(STRING) '"A"'
[09](01, 43)-(01, 46): NAME(NAME) 'and'
[09](01, 47)-(01, 48): NAME(NAME) 'a'
[09](01, 48)-(01, 49): LSQB(OP) '['
[09](01, 49)-(01, 50): NAME(NAME) 'i'
[09](01, 51)-(01, 52): PLUS(OP) '+'
[09](01, 53)-(01, 54): NUMBER(NUMBER) '2'
[09](01, 54)-(01, 55): RSQB(OP) ']'
[09](01, 56)-(01, 58): LESSEQUAL(OP) '<='
[09](01, 59)-(01, 62): STRING(STRING) '"z"'
[09](01, 63)-(01, 66): NAME(NAME) 'and'
[09](01, 67)-(01, 68): NAME(NAME) 'a'
[09](01, 68)-(01, 69): LSQB(OP) '['
[09](01, 69)-(01, 70): NAME(NAME) 'i'
[09](01, 71)-(01, 72): PLUS(OP) '+'
[09](01, 73)-(01, 74): NUMBER(NUMBER) '2'
[09](01, 74)-(01, 75): RSQB(OP) ']'
[09](01, 76)-(01, 78): GREATEREQUAL(OP) '>='
[09](01, 79)-(01, 82): STRING(STRING) '"A"'
[09](01, 83)-(01, 84): COLON(OP) ':'
[09](01, 84)-(01, 85): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 17): NAME(NAME) 'print'
[10](01, 17)-(01, 18): LPAR(OP) '('
[10](01, 18)-(01, 19): NAME(NAME) 'b'
[10](01, 20)-(01, 21): PLUS(OP) '+'
[10](01, 22)-(01, 25): STRING(STRING) '" "'
[10](01, 26)-(01, 27): PLUS(OP) '+'
[10](01, 28)-(01, 31): NAME(NAME) 'str'
[10](01, 31)-(01, 32): LPAR(OP) '('
[10](01, 32)-(01, 37): NAME(NAME) 'count'
[10](01, 37)-(01, 38): RPAR(OP) ')'
[10](01, 38)-(01, 39): RPAR(OP) ')'
[10](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 17): NAME(NAME) 'count'
[11](01, 17)-(01, 18): EQUAL(OP) '='
[11](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[11](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 13): NAME(NAME) 'b'
[12](01, 13)-(01, 14): EQUAL(OP) '='
[12](01, 14)-(01, 16): STRING(STRING) '""'
[12](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 06): NAME(NAME) 'if'
[13](01, 07)-(01, 08): NAME(NAME) 'i'
[13](01, 08)-(01, 10): EQEQUAL(OP) '=='
[13](01, 10)-(01, 11): LPAR(OP) '('
[13](01, 11)-(01, 14): NAME(NAME) 'len'
[13](01, 14)-(01, 15): LPAR(OP) '('
[13](01, 15)-(01, 16): NAME(NAME) 'a'
[13](01, 16)-(01, 17): RPAR(OP) ')'
[13](01, 17)-(01, 18): MINUS(OP) '-'
[13](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[13](01, 19)-(01, 20): RPAR(OP) ')'
[13](01, 20)-(01, 21): COLON(OP) ':'
[13](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 13): NAME(NAME) 'print'
[14](01, 13)-(01, 14): LPAR(OP) '('
[14](01, 14)-(01, 15): NAME(NAME) 'b'
[14](01, 16)-(01, 17): PLUS(OP) '+'
[14](01, 18)-(01, 21): STRING(STRING) '" "'
[14](01, 22)-(01, 23): PLUS(OP) '+'
[14](01, 24)-(01, 27): NAME(NAME) 'str'
[14](01, 27)-(01, 28): LPAR(OP) '('
[14](01, 28)-(01, 33): NAME(NAME) 'count'
[14](01, 33)-(01, 34): RPAR(OP) ')'
[14](01, 34)-(01, 35): RPAR(OP) ')'
[14](01, 35)-(01, 36): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

