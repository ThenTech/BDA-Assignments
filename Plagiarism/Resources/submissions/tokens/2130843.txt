[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 07): NAME(NAME) 'numberX'
[00](01, 08)-(01, 09): EQUAL(OP) '='
[00](01, 10)-(01, 13): NAME(NAME) 'int'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 19): NAME(NAME) 'input'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): RPAR(OP) ')'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 07): NAME(NAME) 'numberY'
[01](01, 08)-(01, 09): EQUAL(OP) '='
[01](01, 10)-(01, 13): NAME(NAME) 'int'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 19): NAME(NAME) 'input'
[01](01, 19)-(01, 20): LPAR(OP) '('
[01](01, 20)-(01, 21): RPAR(OP) ')'
[01](01, 21)-(01, 22): RPAR(OP) ')'
[01](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'prodX'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'for'
[04](01, 04)-(01, 05): NAME(NAME) 'i'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 14): NAME(NAME) 'range'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[04](01, 16)-(01, 17): COMMA(OP) ','
[04](01, 18)-(01, 25): NAME(NAME) 'numberX'
[04](01, 25)-(01, 26): PLUS(OP) '+'
[04](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[04](01, 27)-(01, 28): RPAR(OP) ')'
[04](01, 28)-(01, 29): COLON(OP) ':'
[04](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'prodX'
[05](01, 10)-(01, 12): STAREQUAL(OP) '*='
[05](01, 13)-(01, 14): NAME(NAME) 'i'
[05](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 05): NAME(NAME) 'prodY'
[07](01, 06)-(01, 07): EQUAL(OP) '='
[07](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[07](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 03): NAME(NAME) 'for'
[08](01, 04)-(01, 05): NAME(NAME) 'i'
[08](01, 06)-(01, 08): NAME(NAME) 'in'
[08](01, 09)-(01, 14): NAME(NAME) 'range'
[08](01, 14)-(01, 15): LPAR(OP) '('
[08](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[08](01, 16)-(01, 17): COMMA(OP) ','
[08](01, 18)-(01, 25): NAME(NAME) 'numberY'
[08](01, 25)-(01, 26): PLUS(OP) '+'
[08](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[08](01, 27)-(01, 28): RPAR(OP) ')'
[08](01, 28)-(01, 29): COLON(OP) ':'
[08](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'prodY'
[09](01, 10)-(01, 12): STAREQUAL(OP) '*='
[09](01, 13)-(01, 14): NAME(NAME) 'i'
[09](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): NAME(NAME) 'verschil'
[11](01, 09)-(01, 10): EQUAL(OP) '='
[11](01, 11)-(01, 18): NAME(NAME) 'numberX'
[11](01, 18)-(01, 19): MINUS(OP) '-'
[11](01, 19)-(01, 26): NAME(NAME) 'numberY'
[11](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): NAME(NAME) 'prodVerschil'
[12](01, 13)-(01, 14): EQUAL(OP) '='
[12](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[12](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 03): NAME(NAME) 'for'
[13](01, 04)-(01, 05): NAME(NAME) 'i'
[13](01, 06)-(01, 08): NAME(NAME) 'in'
[13](01, 09)-(01, 14): NAME(NAME) 'range'
[13](01, 14)-(01, 15): LPAR(OP) '('
[13](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[13](01, 16)-(01, 17): COMMA(OP) ','
[13](01, 18)-(01, 26): NAME(NAME) 'verschil'
[13](01, 26)-(01, 27): PLUS(OP) '+'
[13](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[13](01, 28)-(01, 29): RPAR(OP) ')'
[13](01, 29)-(01, 30): COLON(OP) ':'
[13](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 16): NAME(NAME) 'prodVerschil'
[14](01, 17)-(01, 19): STAREQUAL(OP) '*='
[14](01, 20)-(01, 21): NAME(NAME) 'i'
[14](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 06): NAME(NAME) 'result'
[16](01, 07)-(01, 08): EQUAL(OP) '='
[16](01, 09)-(01, 12): NAME(NAME) 'int'
[16](01, 12)-(01, 13): LPAR(OP) '('
[16](01, 13)-(01, 18): NAME(NAME) 'prodX'
[16](01, 18)-(01, 19): SLASH(OP) '/'
[16](01, 19)-(01, 20): LPAR(OP) '('
[16](01, 20)-(01, 25): NAME(NAME) 'prodY'
[16](01, 25)-(01, 26): STAR(OP) '*'
[16](01, 26)-(01, 38): NAME(NAME) 'prodVerschil'
[16](01, 38)-(01, 39): RPAR(OP) ')'
[16](01, 39)-(01, 40): RPAR(OP) ')'
[16](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 05): NAME(NAME) 'print'
[17](01, 05)-(01, 06): LPAR(OP) '('
[17](01, 06)-(01, 14): STRING(STRING) '"result"'
[17](01, 14)-(01, 15): COMMA(OP) ','
[17](01, 16)-(01, 22): NAME(NAME) 'result'
[17](01, 22)-(01, 23): RPAR(OP) ')'
[17](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

