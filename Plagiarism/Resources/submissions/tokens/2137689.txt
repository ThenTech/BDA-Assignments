[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'word_1'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 42): STRING(STRING) '"Give a word or sentence: "'
[00](01, 42)-(01, 43): RPAR(OP) ')'
[00](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'word_2'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 14): NAME(NAME) 'input'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 48): STRING(STRING) '"Give another word or sentence: "'
[01](01, 48)-(01, 49): RPAR(OP) ')'
[01](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): NAME(NAME) 'length_1'
[03](01, 09)-(01, 10): EQUAL(OP) '='
[03](01, 11)-(01, 14): NAME(NAME) 'len'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 21): NAME(NAME) 'word_1'
[03](01, 21)-(01, 22): RPAR(OP) ')'
[03](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): NAME(NAME) 'length_2'
[04](01, 09)-(01, 10): EQUAL(OP) '='
[04](01, 11)-(01, 14): NAME(NAME) 'len'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 21): NAME(NAME) 'word_2'
[04](01, 21)-(01, 22): RPAR(OP) ')'
[04](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NAME(NAME) 'i'
[06](01, 02)-(01, 03): EQUAL(OP) '='
[06](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[06](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NAME(NAME) 'a'
[07](01, 02)-(01, 03): EQUAL(OP) '='
[07](01, 04)-(01, 08): NAME(NAME) 'True'
[07](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 02): NAME(NAME) 'if'
[09](01, 03)-(01, 11): NAME(NAME) 'length_1'
[09](01, 12)-(01, 14): NOTEQUAL(OP) '!='
[09](01, 15)-(01, 23): NAME(NAME) 'length_2'
[09](01, 23)-(01, 24): COLON(OP) ':'
[09](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 09): NAME(NAME) 'print'
[10](01, 09)-(01, 10): LPAR(OP) '('
[10](01, 10)-(01, 16): NAME(NAME) 'word_1'
[10](01, 16)-(01, 17): COMMA(OP) ','
[10](01, 18)-(01, 25): STRING(STRING) '" and "'
[10](01, 25)-(01, 26): COMMA(OP) ','
[10](01, 27)-(01, 33): NAME(NAME) 'word_2'
[10](01, 33)-(01, 34): COMMA(OP) ','
[10](01, 35)-(01, 54): STRING(STRING) '" are not anagrams"'
[10](01, 54)-(01, 55): COMMA(OP) ','
[10](01, 56)-(01, 59): NAME(NAME) 'sep'
[10](01, 59)-(01, 60): EQUAL(OP) '='
[10](01, 60)-(01, 62): STRING(STRING) '""'
[10](01, 62)-(01, 63): RPAR(OP) ')'
[10](01, 63)-(01, 64): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): NAME(NAME) 'else'
[11](01, 04)-(01, 05): COLON(OP) ':'
[11](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 09): NAME(NAME) 'while'
[12](01, 10)-(01, 11): NAME(NAME) 'i'
[12](01, 12)-(01, 13): LESS(OP) '<'
[12](01, 14)-(01, 22): NAME(NAME) 'length_1'
[12](01, 22)-(01, 23): COLON(OP) ':'
[12](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 17): NAME(NAME) 'word_1'
[13](01, 17)-(01, 18): LSQB(OP) '['
[13](01, 18)-(01, 19): NAME(NAME) 'i'
[13](01, 19)-(01, 20): RSQB(OP) ']'
[13](01, 21)-(01, 23): NAME(NAME) 'in'
[13](01, 24)-(01, 30): NAME(NAME) 'word_2'
[13](01, 30)-(01, 31): COLON(OP) ':'
[13](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 13): NAME(NAME) 'a'
[14](01, 14)-(01, 15): EQUAL(OP) '='
[14](01, 16)-(01, 20): NAME(NAME) 'True'
[14](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 13): NAME(NAME) 'i'
[15](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[15](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[15](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 12): NAME(NAME) 'else'
[16](01, 12)-(01, 13): COLON(OP) ':'
[16](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 17): NAME(NAME) 'print'
[17](01, 17)-(01, 18): LPAR(OP) '('
[17](01, 18)-(01, 24): NAME(NAME) 'word_1'
[17](01, 24)-(01, 25): COMMA(OP) ','
[17](01, 26)-(01, 33): STRING(STRING) '" and "'
[17](01, 33)-(01, 34): COMMA(OP) ','
[17](01, 35)-(01, 41): NAME(NAME) 'word_2'
[17](01, 41)-(01, 42): COMMA(OP) ','
[17](01, 43)-(01, 62): STRING(STRING) '" are not anagrams"'
[17](01, 62)-(01, 63): COMMA(OP) ','
[17](01, 64)-(01, 67): NAME(NAME) 'sep'
[17](01, 67)-(01, 68): EQUAL(OP) '='
[17](01, 68)-(01, 70): STRING(STRING) '""'
[17](01, 70)-(01, 71): RPAR(OP) ')'
[17](01, 71)-(01, 72): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 13): NAME(NAME) 'i'
[18](01, 14)-(01, 15): EQUAL(OP) '='
[18](01, 16)-(01, 24): NAME(NAME) 'length_1'
[18](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 13): NAME(NAME) 'a'
[19](01, 14)-(01, 15): EQUAL(OP) '='
[19](01, 16)-(01, 21): NAME(NAME) 'False'
[19](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 06): NAME(NAME) 'if'
[20](01, 07)-(01, 08): NAME(NAME) 'a'
[20](01, 09)-(01, 11): EQEQUAL(OP) '=='
[20](01, 12)-(01, 16): NAME(NAME) 'True'
[20](01, 16)-(01, 17): COLON(OP) ':'
[20](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 13): NAME(NAME) 'print'
[21](01, 13)-(01, 14): LPAR(OP) '('
[21](01, 14)-(01, 20): NAME(NAME) 'word_1'
[21](01, 20)-(01, 21): COMMA(OP) ','
[21](01, 22)-(01, 29): STRING(STRING) '" and "'
[21](01, 29)-(01, 30): COMMA(OP) ','
[21](01, 31)-(01, 37): NAME(NAME) 'word_2'
[21](01, 37)-(01, 38): COMMA(OP) ','
[21](01, 39)-(01, 54): STRING(STRING) '" are anagrams"'
[21](01, 54)-(01, 55): COMMA(OP) ','
[21](01, 56)-(01, 59): NAME(NAME) 'sep'
[21](01, 59)-(01, 60): EQUAL(OP) '='
[21](01, 60)-(01, 62): STRING(STRING) '""'
[21](01, 62)-(01, 63): RPAR(OP) ')'
[21](01, 63)-(01, 64): NEWLINE(NEWLINE)
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

