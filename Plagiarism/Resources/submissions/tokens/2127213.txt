[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'a'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 41): STRING(STRING) '"Amount of 1 eurocent coins = "'
[00](01, 41)-(01, 42): RPAR(OP) ')'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'b'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 09): NAME(NAME) 'input'
[01](01, 09)-(01, 10): LPAR(OP) '('
[01](01, 10)-(01, 41): STRING(STRING) '"Amount of 2 eurocent coins = "'
[01](01, 41)-(01, 42): RPAR(OP) ')'
[01](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'c'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 09): NAME(NAME) 'input'
[02](01, 09)-(01, 10): LPAR(OP) '('
[02](01, 10)-(01, 41): STRING(STRING) '"Amount of 5 eurocent coins = "'
[02](01, 41)-(01, 42): RPAR(OP) ')'
[02](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'd'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 04)-(01, 09): NAME(NAME) 'input'
[03](01, 09)-(01, 10): LPAR(OP) '('
[03](01, 10)-(01, 42): STRING(STRING) '"Amount of 10 eurocent coins = "'
[03](01, 42)-(01, 43): RPAR(OP) ')'
[03](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NAME(NAME) 'e'
[04](01, 02)-(01, 03): EQUAL(OP) '='
[04](01, 04)-(01, 09): NAME(NAME) 'input'
[04](01, 09)-(01, 10): LPAR(OP) '('
[04](01, 10)-(01, 42): STRING(STRING) '"Amount of 20 eurocent coins = "'
[04](01, 42)-(01, 43): RPAR(OP) ')'
[04](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NAME(NAME) 'a'
[06](01, 02)-(01, 03): EQUAL(OP) '='
[06](01, 04)-(01, 07): NAME(NAME) 'int'
[06](01, 07)-(01, 08): LPAR(OP) '('
[06](01, 08)-(01, 09): NAME(NAME) 'a'
[06](01, 09)-(01, 10): RPAR(OP) ')'
[06](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NAME(NAME) 'b'
[07](01, 02)-(01, 03): EQUAL(OP) '='
[07](01, 04)-(01, 07): NAME(NAME) 'int'
[07](01, 07)-(01, 08): LPAR(OP) '('
[07](01, 08)-(01, 09): NAME(NAME) 'b'
[07](01, 09)-(01, 10): RPAR(OP) ')'
[07](01, 11)-(01, 12): STAR(OP) '*'
[07](01, 13)-(01, 14): NUMBER(NUMBER) '2'
[07](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NAME(NAME) 'c'
[08](01, 02)-(01, 03): EQUAL(OP) '='
[08](01, 04)-(01, 07): NAME(NAME) 'int'
[08](01, 07)-(01, 08): LPAR(OP) '('
[08](01, 08)-(01, 09): NAME(NAME) 'c'
[08](01, 09)-(01, 10): RPAR(OP) ')'
[08](01, 11)-(01, 12): STAR(OP) '*'
[08](01, 13)-(01, 14): NUMBER(NUMBER) '5'
[08](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NAME(NAME) 'd'
[09](01, 02)-(01, 03): EQUAL(OP) '='
[09](01, 04)-(01, 07): NAME(NAME) 'int'
[09](01, 07)-(01, 08): LPAR(OP) '('
[09](01, 08)-(01, 09): NAME(NAME) 'd'
[09](01, 09)-(01, 10): RPAR(OP) ')'
[09](01, 11)-(01, 12): STAR(OP) '*'
[09](01, 13)-(01, 15): NUMBER(NUMBER) '10'
[09](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NAME(NAME) 'e'
[10](01, 02)-(01, 03): EQUAL(OP) '='
[10](01, 04)-(01, 07): NAME(NAME) 'int'
[10](01, 07)-(01, 08): LPAR(OP) '('
[10](01, 08)-(01, 09): NAME(NAME) 'e'
[10](01, 09)-(01, 10): RPAR(OP) ')'
[10](01, 11)-(01, 12): STAR(OP) '*'
[10](01, 13)-(01, 15): NUMBER(NUMBER) '20'
[10](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 05): NAME(NAME) 'total'
[12](01, 06)-(01, 07): EQUAL(OP) '='
[12](01, 08)-(01, 09): LPAR(OP) '('
[12](01, 09)-(01, 10): NAME(NAME) 'a'
[12](01, 11)-(01, 12): PLUS(OP) '+'
[12](01, 13)-(01, 14): NAME(NAME) 'b'
[12](01, 15)-(01, 16): PLUS(OP) '+'
[12](01, 17)-(01, 18): NAME(NAME) 'c'
[12](01, 19)-(01, 20): PLUS(OP) '+'
[12](01, 21)-(01, 22): NAME(NAME) 'd'
[12](01, 23)-(01, 24): PLUS(OP) '+'
[12](01, 25)-(01, 26): NAME(NAME) 'e'
[12](01, 26)-(01, 27): RPAR(OP) ')'
[12](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 05): NAME(NAME) 'total'
[13](01, 06)-(01, 07): EQUAL(OP) '='
[13](01, 08)-(01, 11): NAME(NAME) 'str'
[13](01, 11)-(01, 12): LPAR(OP) '('
[13](01, 12)-(01, 17): NAME(NAME) 'total'
[13](01, 17)-(01, 18): RPAR(OP) ')'
[13](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 05): NAME(NAME) 'print'
[14](01, 05)-(01, 06): LPAR(OP) '('
[14](01, 06)-(01, 17): STRING(STRING) '"You have "'
[14](01, 17)-(01, 18): COMMA(OP) ','
[14](01, 19)-(01, 24): NAME(NAME) 'total'
[14](01, 24)-(01, 25): LSQB(OP) '['
[14](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[14](01, 26)-(01, 27): RSQB(OP) ']'
[14](01, 27)-(01, 28): COMMA(OP) ','
[14](01, 29)-(01, 32): STRING(STRING) '"."'
[14](01, 32)-(01, 33): COMMA(OP) ','
[14](01, 34)-(01, 39): NAME(NAME) 'total'
[14](01, 39)-(01, 40): LSQB(OP) '['
[14](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[14](01, 41)-(01, 42): RSQB(OP) ']'
[14](01, 42)-(01, 43): COMMA(OP) ','
[14](01, 44)-(01, 49): NAME(NAME) 'total'
[14](01, 49)-(01, 50): LSQB(OP) '['
[14](01, 50)-(01, 51): NUMBER(NUMBER) '2'
[14](01, 51)-(01, 52): RSQB(OP) ']'
[14](01, 52)-(01, 53): COMMA(OP) ','
[14](01, 54)-(01, 62): STRING(STRING) '" euro!"'
[14](01, 62)-(01, 63): COMMA(OP) ','
[14](01, 64)-(01, 67): NAME(NAME) 'sep'
[14](01, 67)-(01, 68): EQUAL(OP) '='
[14](01, 68)-(01, 70): STRING(STRING) '""'
[14](01, 70)-(01, 71): RPAR(OP) ')'
[14](01, 71)-(01, 72): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

