[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'for'
[00](01, 04)-(01, 06): NAME(NAME) 'el'
[00](01, 07)-(01, 09): NAME(NAME) 'in'
[00](01, 10)-(01, 17): NAME(NAME) 'alfabet'
[00](01, 17)-(01, 18): COLON(OP) ':'
[00](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'teller'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[01](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 14): NAME(NAME) 'waarde'
[02](01, 15)-(01, 17): NAME(NAME) 'in'
[02](01, 18)-(01, 30): NAME(NAME) 'string_lijst'
[02](01, 30)-(01, 31): COLON(OP) ':'
[02](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 13): NAME(NAME) 'el'
[03](01, 14)-(01, 16): EQEQUAL(OP) '=='
[03](01, 17)-(01, 23): NAME(NAME) 'waarde'
[03](01, 23)-(01, 24): COLON(OP) ':'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 18): NAME(NAME) 'teller'
[04](01, 19)-(01, 20): EQUAL(OP) '='
[04](01, 20)-(01, 21): PLUS(OP) '+'
[04](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[04](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'print'
[05](01, 09)-(01, 10): LPAR(OP) '('
[05](01, 10)-(01, 12): NAME(NAME) 'el'
[05](01, 12)-(01, 13): COMMA(OP) ','
[05](01, 14)-(01, 20): NAME(NAME) 'teller'
[05](01, 20)-(01, 21): COMMA(OP) ','
[05](01, 22)-(01, 25): NAME(NAME) 'sep'
[05](01, 25)-(01, 26): EQUAL(OP) '='
[05](01, 26)-(01, 30): STRING(STRING) '": "'
[05](01, 30)-(01, 31): RPAR(OP) ')'
[05](01, 31)-(01, 32): NEWLINE(NEWLINE)
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

