[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'input1'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 49): STRING(STRING) "'How many coins of 1 do you have?'"
[00](01, 49)-(01, 50): RPAR(OP) ')'
[00](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'input2'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 14): NAME(NAME) 'input'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 49): STRING(STRING) "'How many coins of 2 do you have?'"
[01](01, 49)-(01, 50): RPAR(OP) ')'
[01](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 06): NAME(NAME) 'input3'
[02](01, 07)-(01, 08): EQUAL(OP) '='
[02](01, 09)-(01, 14): NAME(NAME) 'input'
[02](01, 14)-(01, 15): LPAR(OP) '('
[02](01, 15)-(01, 49): STRING(STRING) "'How many coins of 5 do you have?'"
[02](01, 49)-(01, 50): RPAR(OP) ')'
[02](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 06): NAME(NAME) 'input4'
[03](01, 07)-(01, 08): EQUAL(OP) '='
[03](01, 09)-(01, 14): NAME(NAME) 'input'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 50): STRING(STRING) "'How many coins of 10 do you have?'"
[03](01, 50)-(01, 51): RPAR(OP) ')'
[03](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 06): NAME(NAME) 'input5'
[04](01, 07)-(01, 08): EQUAL(OP) '='
[04](01, 09)-(01, 14): NAME(NAME) 'input'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 50): STRING(STRING) "'How many coins of 20 do you have?'"
[04](01, 50)-(01, 51): RPAR(OP) ')'
[04](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 10): NAME(NAME) 'totalcoins'
[07](01, 11)-(01, 12): EQUAL(OP) '='
[07](01, 13)-(01, 14): LPAR(OP) '('
[07](01, 14)-(01, 17): NAME(NAME) 'int'
[07](01, 17)-(01, 18): LPAR(OP) '('
[07](01, 18)-(01, 24): NAME(NAME) 'input1'
[07](01, 24)-(01, 25): RPAR(OP) ')'
[07](01, 25)-(01, 26): STAR(OP) '*'
[07](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[07](01, 27)-(01, 28): RPAR(OP) ')'
[07](01, 28)-(01, 29): PLUS(OP) '+'
[07](01, 29)-(01, 30): LPAR(OP) '('
[07](01, 30)-(01, 33): NAME(NAME) 'int'
[07](01, 33)-(01, 34): LPAR(OP) '('
[07](01, 34)-(01, 40): NAME(NAME) 'input2'
[07](01, 40)-(01, 41): RPAR(OP) ')'
[07](01, 41)-(01, 42): STAR(OP) '*'
[07](01, 42)-(01, 43): NUMBER(NUMBER) '2'
[07](01, 43)-(01, 44): RPAR(OP) ')'
[07](01, 44)-(01, 45): PLUS(OP) '+'
[07](01, 45)-(01, 46): LPAR(OP) '('
[07](01, 46)-(01, 49): NAME(NAME) 'int'
[07](01, 49)-(01, 50): LPAR(OP) '('
[07](01, 50)-(01, 56): NAME(NAME) 'input3'
[07](01, 56)-(01, 57): RPAR(OP) ')'
[07](01, 57)-(01, 58): STAR(OP) '*'
[07](01, 58)-(01, 59): NUMBER(NUMBER) '5'
[07](01, 59)-(01, 60): RPAR(OP) ')'
[07](01, 60)-(01, 61): PLUS(OP) '+'
[07](01, 61)-(01, 62): LPAR(OP) '('
[07](01, 62)-(01, 65): NAME(NAME) 'int'
[07](01, 65)-(01, 66): LPAR(OP) '('
[07](01, 66)-(01, 72): NAME(NAME) 'input4'
[07](01, 72)-(01, 73): RPAR(OP) ')'
[07](01, 73)-(01, 74): STAR(OP) '*'
[07](01, 74)-(01, 76): NUMBER(NUMBER) '10'
[07](01, 76)-(01, 77): RPAR(OP) ')'
[07](01, 77)-(01, 78): PLUS(OP) '+'
[07](01, 78)-(01, 79): LPAR(OP) '('
[07](01, 79)-(01, 82): NAME(NAME) 'int'
[07](01, 82)-(01, 83): LPAR(OP) '('
[07](01, 83)-(01, 89): NAME(NAME) 'input5'
[07](01, 89)-(01, 90): RPAR(OP) ')'
[07](01, 90)-(01, 91): STAR(OP) '*'
[07](01, 91)-(01, 93): NUMBER(NUMBER) '20'
[07](01, 93)-(01, 94): RPAR(OP) ')'
[07](01, 95)-(01, 99): COMMENT(COMMENT) '#123'
[07](01, 99)-(01, 100): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 09): NAME(NAME) 'totaleuro'
[08](01, 10)-(01, 11): EQUAL(OP) '='
[08](01, 12)-(01, 15): NAME(NAME) 'int'
[08](01, 15)-(01, 16): LPAR(OP) '('
[08](01, 16)-(01, 26): NAME(NAME) 'totalcoins'
[08](01, 26)-(01, 27): RPAR(OP) ')'
[08](01, 27)-(01, 29): DOUBLESLASH(OP) '//'
[08](01, 29)-(01, 32): NUMBER(NUMBER) '100'
[08](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 10): NAME(NAME) 'totalcents'
[09](01, 11)-(01, 12): EQUAL(OP) '='
[09](01, 13)-(01, 23): NAME(NAME) 'totalcoins'
[09](01, 24)-(01, 25): MINUS(OP) '-'
[09](01, 26)-(01, 27): LPAR(OP) '('
[09](01, 27)-(01, 36): NAME(NAME) 'totaleuro'
[09](01, 36)-(01, 37): STAR(OP) '*'
[09](01, 37)-(01, 40): NUMBER(NUMBER) '100'
[09](01, 40)-(01, 41): RPAR(OP) ')'
[09](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 02): NAME(NAME) 'if'
[10](01, 03)-(01, 13): NAME(NAME) 'totalcoins'
[10](01, 14)-(01, 16): EQEQUAL(OP) '=='
[10](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[10](01, 18)-(01, 19): COLON(OP) ':'
[10](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 09): NAME(NAME) 'print'
[11](01, 09)-(01, 10): LPAR(OP) '('
[11](01, 10)-(01, 30): STRING(STRING) "'You have 0.0 euro!'"
[11](01, 30)-(01, 31): RPAR(OP) ')'
[11](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 05): NAME(NAME) 'print'
[12](01, 05)-(01, 06): LPAR(OP) '('
[12](01, 06)-(01, 17): STRING(STRING) '"You have "'
[12](01, 17)-(01, 18): COMMA(OP) ','
[12](01, 19)-(01, 28): NAME(NAME) 'totaleuro'
[12](01, 28)-(01, 29): COMMA(OP) ','
[12](01, 30)-(01, 33): STRING(STRING) '"."'
[12](01, 33)-(01, 34): COMMA(OP) ','
[12](01, 35)-(01, 45): NAME(NAME) 'totalcents'
[12](01, 45)-(01, 46): COMMA(OP) ','
[12](01, 47)-(01, 55): STRING(STRING) '" euro!"'
[12](01, 55)-(01, 56): COMMA(OP) ','
[12](01, 57)-(01, 60): NAME(NAME) 'sep'
[12](01, 60)-(01, 61): EQUAL(OP) '='
[12](01, 61)-(01, 63): STRING(STRING) '""'
[12](01, 63)-(01, 64): RPAR(OP) ')'
[12](01, 64)-(01, 65): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

