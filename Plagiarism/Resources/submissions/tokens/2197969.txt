[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'import'
[00](01, 07)-(01, 13): NAME(NAME) 'string'
[00](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 10): NAME(NAME) 'encode'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 12): NAME(NAME) 's'
[03](01, 12)-(01, 13): COMMA(OP) ','
[03](01, 14)-(01, 15): NAME(NAME) 'n'
[03](01, 15)-(01, 16): RPAR(OP) ')'
[03](01, 16)-(01, 17): COLON(OP) ':'
[03](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 08): NAME(NAME) 'code'
[04](01, 09)-(01, 10): EQUAL(OP) '='
[04](01, 11)-(01, 13): STRING(STRING) '""'
[04](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 14): NAME(NAME) 'letter'
[05](01, 15)-(01, 17): NAME(NAME) 'in'
[05](01, 18)-(01, 19): NAME(NAME) 's'
[05](01, 19)-(01, 20): COLON(OP) ':'
[05](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 17): NAME(NAME) 'letter'
[06](01, 18)-(01, 20): NAME(NAME) 'in'
[06](01, 21)-(01, 27): NAME(NAME) 'string'
[06](01, 27)-(01, 28): DOT(OP) '.'
[06](01, 28)-(01, 41): NAME(NAME) 'ascii_letters'
[06](01, 41)-(01, 42): COLON(OP) ':'
[06](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'if'
[07](01, 15)-(01, 18): NAME(NAME) 'ord'
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 22): STRING(STRING) '"a"'
[07](01, 22)-(01, 23): RPAR(OP) ')'
[07](01, 24)-(01, 26): LESSEQUAL(OP) '<='
[07](01, 27)-(01, 30): NAME(NAME) 'ord'
[07](01, 30)-(01, 31): LPAR(OP) '('
[07](01, 31)-(01, 37): NAME(NAME) 'letter'
[07](01, 37)-(01, 38): RPAR(OP) ')'
[07](01, 39)-(01, 40): PLUS(OP) '+'
[07](01, 41)-(01, 42): NAME(NAME) 'n'
[07](01, 43)-(01, 45): LESSEQUAL(OP) '<='
[07](01, 46)-(01, 49): NAME(NAME) 'ord'
[07](01, 49)-(01, 50): LPAR(OP) '('
[07](01, 50)-(01, 53): STRING(STRING) '"z"'
[07](01, 53)-(01, 54): RPAR(OP) ')'
[07](01, 54)-(01, 55): COLON(OP) ':'
[07](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 20): NAME(NAME) 'code'
[08](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[08](01, 24)-(01, 27): NAME(NAME) 'chr'
[08](01, 27)-(01, 28): LPAR(OP) '('
[08](01, 28)-(01, 31): NAME(NAME) 'ord'
[08](01, 31)-(01, 32): LPAR(OP) '('
[08](01, 32)-(01, 38): NAME(NAME) 'letter'
[08](01, 38)-(01, 39): RPAR(OP) ')'
[08](01, 40)-(01, 41): PLUS(OP) '+'
[08](01, 42)-(01, 43): NAME(NAME) 'n'
[08](01, 43)-(01, 44): RPAR(OP) ')'
[08](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 16): NAME(NAME) 'elif'
[09](01, 17)-(01, 20): NAME(NAME) 'ord'
[09](01, 20)-(01, 21): LPAR(OP) '('
[09](01, 21)-(01, 24): STRING(STRING) '"z"'
[09](01, 24)-(01, 25): RPAR(OP) ')'
[09](01, 26)-(01, 27): LESS(OP) '<'
[09](01, 28)-(01, 31): NAME(NAME) 'ord'
[09](01, 31)-(01, 32): LPAR(OP) '('
[09](01, 32)-(01, 38): NAME(NAME) 'letter'
[09](01, 38)-(01, 39): RPAR(OP) ')'
[09](01, 40)-(01, 41): PLUS(OP) '+'
[09](01, 42)-(01, 43): NAME(NAME) 'n'
[09](01, 43)-(01, 44): COLON(OP) ':'
[09](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 20): NAME(NAME) 'code'
[10](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[10](01, 24)-(01, 27): NAME(NAME) 'chr'
[10](01, 27)-(01, 28): LPAR(OP) '('
[10](01, 28)-(01, 31): NAME(NAME) 'ord'
[10](01, 31)-(01, 32): LPAR(OP) '('
[10](01, 32)-(01, 38): NAME(NAME) 'letter'
[10](01, 38)-(01, 39): RPAR(OP) ')'
[10](01, 40)-(01, 41): MINUS(OP) '-'
[10](01, 42)-(01, 44): NUMBER(NUMBER) '26'
[10](01, 45)-(01, 46): PLUS(OP) '+'
[10](01, 47)-(01, 48): NAME(NAME) 'n'
[10](01, 48)-(01, 49): RPAR(OP) ')'
[10](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 16): NAME(NAME) 'else'
[11](01, 16)-(01, 17): COLON(OP) ':'
[11](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 20): NAME(NAME) 'code'
[12](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[12](01, 24)-(01, 27): NAME(NAME) 'chr'
[12](01, 27)-(01, 28): LPAR(OP) '('
[12](01, 28)-(01, 31): NAME(NAME) 'ord'
[12](01, 31)-(01, 32): LPAR(OP) '('
[12](01, 32)-(01, 38): NAME(NAME) 'letter'
[12](01, 38)-(01, 39): RPAR(OP) ')'
[12](01, 40)-(01, 41): PLUS(OP) '+'
[12](01, 42)-(01, 44): NUMBER(NUMBER) '26'
[12](01, 45)-(01, 46): PLUS(OP) '+'
[12](01, 47)-(01, 48): NAME(NAME) 'n'
[12](01, 48)-(01, 49): RPAR(OP) ')'
[12](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 12): NAME(NAME) 'else'
[13](01, 12)-(01, 13): COLON(OP) ':'
[13](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 16): NAME(NAME) 'code'
[14](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[14](01, 20)-(01, 26): NAME(NAME) 'letter'
[14](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 10): NAME(NAME) 'return'
[15](01, 11)-(01, 15): NAME(NAME) 'code'
[15](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 03): NAME(NAME) 'def'
[18](01, 04)-(01, 10): NAME(NAME) 'decode'
[18](01, 10)-(01, 11): LPAR(OP) '('
[18](01, 11)-(01, 12): NAME(NAME) 's'
[18](01, 12)-(01, 13): COMMA(OP) ','
[18](01, 14)-(01, 15): NAME(NAME) 'n'
[18](01, 15)-(01, 16): RPAR(OP) ')'
[18](01, 16)-(01, 17): COLON(OP) ':'
[18](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 08): NAME(NAME) 'pass'
[19](01, 08)-(01, 09): NEWLINE(NEWLINE)
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

