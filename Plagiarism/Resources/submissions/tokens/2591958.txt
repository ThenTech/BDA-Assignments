[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 08): NAME(NAME) 'alphabet'
[00](01, 09)-(01, 10): EQUAL(OP) '='
[00](01, 11)-(01, 65): STRING(STRING) '"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"'
[00](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'string'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 14): NAME(NAME) 'input'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 36): STRING(STRING) '"Enter some shit plz"'
[01](01, 36)-(01, 37): RPAR(OP) ')'
[01](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 17): NAME(NAME) 'string_and_length'
[02](01, 18)-(01, 19): EQUAL(OP) '='
[02](01, 20)-(01, 22): STRING(STRING) '""'
[02](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'count'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'for'
[04](01, 04)-(01, 05): NAME(NAME) 'i'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 14): NAME(NAME) 'range'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 18): NAME(NAME) 'len'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 25): NAME(NAME) 'string'
[04](01, 25)-(01, 26): RPAR(OP) ')'
[04](01, 27)-(01, 28): MINUS(OP) '-'
[04](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[04](01, 30)-(01, 31): RPAR(OP) ')'
[04](01, 31)-(01, 32): COLON(OP) ':'
[04](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 13): NAME(NAME) 'string'
[05](01, 13)-(01, 14): LSQB(OP) '['
[05](01, 14)-(01, 15): NAME(NAME) 'i'
[05](01, 15)-(01, 16): RSQB(OP) ']'
[05](01, 17)-(01, 19): NAME(NAME) 'in'
[05](01, 20)-(01, 28): NAME(NAME) 'alphabet'
[05](01, 28)-(01, 29): COLON(OP) ':'
[05](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 12): LPAR(OP) '('
[06](01, 12)-(01, 13): NAME(NAME) 'i'
[06](01, 14)-(01, 15): PLUS(OP) '+'
[06](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[06](01, 17)-(01, 18): RPAR(OP) ')'
[06](01, 19)-(01, 21): EQEQUAL(OP) '=='
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 26): NAME(NAME) 'len'
[06](01, 26)-(01, 27): LPAR(OP) '('
[06](01, 27)-(01, 33): NAME(NAME) 'string'
[06](01, 33)-(01, 34): RPAR(OP) ')'
[06](01, 35)-(01, 36): MINUS(OP) '-'
[06](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[06](01, 38)-(01, 39): RPAR(OP) ')'
[06](01, 39)-(01, 40): COLON(OP) ':'
[06](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'if'
[07](01, 15)-(01, 21): NAME(NAME) 'string'
[07](01, 21)-(01, 22): LSQB(OP) '['
[07](01, 22)-(01, 23): NAME(NAME) 'i'
[07](01, 24)-(01, 25): PLUS(OP) '+'
[07](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[07](01, 27)-(01, 28): RSQB(OP) ']'
[07](01, 29)-(01, 31): NAME(NAME) 'in'
[07](01, 32)-(01, 40): NAME(NAME) 'alphabet'
[07](01, 40)-(01, 41): COLON(OP) ':'
[07](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 33): NAME(NAME) 'string_and_length'
[08](01, 34)-(01, 36): PLUSEQUAL(OP) '+='
[08](01, 37)-(01, 43): NAME(NAME) 'string'
[08](01, 43)-(01, 44): LSQB(OP) '['
[08](01, 44)-(01, 45): NAME(NAME) 'i'
[08](01, 45)-(01, 46): PLUS(OP) '+'
[08](01, 46)-(01, 47): NUMBER(NUMBER) '1'
[08](01, 47)-(01, 48): RSQB(OP) ']'
[08](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 21): NAME(NAME) 'count'
[09](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[09](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 17): NAME(NAME) 'count'
[10](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[10](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[10](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 29): NAME(NAME) 'string_and_length'
[11](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[11](01, 33)-(01, 39): NAME(NAME) 'string'
[11](01, 39)-(01, 40): LSQB(OP) '['
[11](01, 40)-(01, 41): NAME(NAME) 'i'
[11](01, 41)-(01, 42): RSQB(OP) ']'
[11](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 17): NAME(NAME) 'print'
[12](01, 17)-(01, 18): LPAR(OP) '('
[12](01, 18)-(01, 35): NAME(NAME) 'string_and_length'
[12](01, 36)-(01, 37): PLUS(OP) '+'
[12](01, 38)-(01, 41): STRING(STRING) '" "'
[12](01, 42)-(01, 43): PLUS(OP) '+'
[12](01, 44)-(01, 47): NAME(NAME) 'str'
[12](01, 47)-(01, 48): LPAR(OP) '('
[12](01, 48)-(01, 53): NAME(NAME) 'count'
[12](01, 53)-(01, 54): RPAR(OP) ')'
[12](01, 54)-(01, 55): RPAR(OP) ')'
[12](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 12): NAME(NAME) 'else'
[13](01, 12)-(01, 13): COLON(OP) ':'
[13](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 14): NAME(NAME) 'if'
[14](01, 15)-(01, 21): NAME(NAME) 'string'
[14](01, 21)-(01, 22): LSQB(OP) '['
[14](01, 22)-(01, 23): NAME(NAME) 'i'
[14](01, 24)-(01, 25): PLUS(OP) '+'
[14](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[14](01, 27)-(01, 28): RSQB(OP) ']'
[14](01, 29)-(01, 31): NAME(NAME) 'in'
[14](01, 32)-(01, 40): NAME(NAME) 'alphabet'
[14](01, 40)-(01, 41): COLON(OP) ':'
[14](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 33): NAME(NAME) 'string_and_length'
[15](01, 34)-(01, 36): PLUSEQUAL(OP) '+='
[15](01, 37)-(01, 43): NAME(NAME) 'string'
[15](01, 43)-(01, 44): LSQB(OP) '['
[15](01, 44)-(01, 45): NAME(NAME) 'i'
[15](01, 45)-(01, 46): RSQB(OP) ']'
[15](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 21): NAME(NAME) 'count'
[16](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[16](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[16](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 14): NAME(NAME) 'if'
[17](01, 15)-(01, 21): NAME(NAME) 'string'
[17](01, 21)-(01, 22): LSQB(OP) '['
[17](01, 22)-(01, 23): NAME(NAME) 'i'
[17](01, 24)-(01, 25): PLUS(OP) '+'
[17](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[17](01, 27)-(01, 28): RSQB(OP) ']'
[17](01, 29)-(01, 32): NAME(NAME) 'not'
[17](01, 33)-(01, 35): NAME(NAME) 'in'
[17](01, 36)-(01, 44): NAME(NAME) 'alphabet'
[17](01, 44)-(01, 45): COLON(OP) ':'
[17](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 21): NAME(NAME) 'count'
[18](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[18](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[18](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 16): INDENT(INDENT) '                '
[19](01, 16)-(01, 33): NAME(NAME) 'string_and_length'
[19](01, 34)-(01, 36): PLUSEQUAL(OP) '+='
[19](01, 37)-(01, 38): LPAR(OP) '('
[19](01, 38)-(01, 44): NAME(NAME) 'string'
[19](01, 44)-(01, 45): LSQB(OP) '['
[19](01, 45)-(01, 46): NAME(NAME) 'i'
[19](01, 46)-(01, 47): RSQB(OP) ']'
[19](01, 48)-(01, 49): PLUS(OP) '+'
[19](01, 50)-(01, 53): STRING(STRING) '" "'
[19](01, 54)-(01, 55): PLUS(OP) '+'
[19](01, 56)-(01, 59): NAME(NAME) 'str'
[19](01, 59)-(01, 60): LPAR(OP) '('
[19](01, 60)-(01, 65): NAME(NAME) 'count'
[19](01, 65)-(01, 66): RPAR(OP) ')'
[19](01, 66)-(01, 67): RPAR(OP) ')'
[19](01, 67)-(01, 68): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 16): INDENT(INDENT) '                '
[20](01, 16)-(01, 21): NAME(NAME) 'print'
[20](01, 21)-(01, 22): LPAR(OP) '('
[20](01, 22)-(01, 39): NAME(NAME) 'string_and_length'
[20](01, 39)-(01, 40): RPAR(OP) ')'
[20](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 21): NAME(NAME) 'count'
[21](01, 22)-(01, 23): EQUAL(OP) '='
[21](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[21](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 16): INDENT(INDENT) '                '
[22](01, 16)-(01, 33): NAME(NAME) 'string_and_length'
[22](01, 34)-(01, 35): EQUAL(OP) '='
[22](01, 36)-(01, 38): STRING(STRING) '""'
[22](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

