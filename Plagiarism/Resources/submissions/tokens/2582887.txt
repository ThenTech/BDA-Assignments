[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): COMMA(OP) ','
[00](01, 14)-(01, 15): NAME(NAME) 'n'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'encoded'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 13)-(01, 15): STRING(STRING) '""'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 14): NAME(NAME) 's'
[02](01, 14)-(01, 15): COLON(OP) ':'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 13): NUMBER(NUMBER) '97'
[03](01, 14)-(01, 16): LESSEQUAL(OP) '<='
[03](01, 17)-(01, 20): NAME(NAME) 'ord'
[03](01, 20)-(01, 21): LPAR(OP) '('
[03](01, 21)-(01, 22): NAME(NAME) 'i'
[03](01, 22)-(01, 23): RPAR(OP) ')'
[03](01, 24)-(01, 26): LESSEQUAL(OP) '<='
[03](01, 27)-(01, 30): NUMBER(NUMBER) '122'
[03](01, 30)-(01, 31): COLON(OP) ':'
[03](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 24): NAME(NAME) 'ascii_number'
[04](01, 25)-(01, 26): EQUAL(OP) '='
[04](01, 27)-(01, 28): LPAR(OP) '('
[04](01, 28)-(01, 31): NAME(NAME) 'ord'
[04](01, 31)-(01, 32): LPAR(OP) '('
[04](01, 32)-(01, 33): NAME(NAME) 'i'
[04](01, 33)-(01, 34): RPAR(OP) ')'
[04](01, 35)-(01, 36): PLUS(OP) '+'
[04](01, 37)-(01, 38): NAME(NAME) 'n'
[04](01, 38)-(01, 39): RPAR(OP) ')'
[04](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 17): NAME(NAME) 'while'
[05](01, 18)-(01, 30): NAME(NAME) 'ascii_number'
[05](01, 31)-(01, 32): GREATER(OP) '>'
[05](01, 33)-(01, 36): NUMBER(NUMBER) '122'
[05](01, 36)-(01, 37): COLON(OP) ':'
[05](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 28): NAME(NAME) 'ascii_number'
[06](01, 29)-(01, 30): EQUAL(OP) '='
[06](01, 31)-(01, 43): NAME(NAME) 'ascii_number'
[06](01, 44)-(01, 45): MINUS(OP) '-'
[06](01, 46)-(01, 48): NUMBER(NUMBER) '26'
[06](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 19): NAME(NAME) 'encoded'
[07](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[07](01, 23)-(01, 26): NAME(NAME) 'chr'
[07](01, 26)-(01, 27): LPAR(OP) '('
[07](01, 27)-(01, 39): NAME(NAME) 'ascii_number'
[07](01, 39)-(01, 40): RPAR(OP) ')'
[07](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'else'
[08](01, 12)-(01, 13): COLON(OP) ':'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 19): NAME(NAME) 'encoded'
[09](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[09](01, 23)-(01, 24): NAME(NAME) 'i'
[09](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'return'
[10](01, 11)-(01, 18): NAME(NAME) 'encoded'
[10](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 03): NAME(NAME) 'def'
[12](01, 04)-(01, 10): NAME(NAME) 'decode'
[12](01, 10)-(01, 11): LPAR(OP) '('
[12](01, 11)-(01, 12): NAME(NAME) 's'
[12](01, 12)-(01, 13): COMMA(OP) ','
[12](01, 14)-(01, 15): NAME(NAME) 'n'
[12](01, 15)-(01, 16): RPAR(OP) ')'
[12](01, 16)-(01, 17): COLON(OP) ':'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 11): NAME(NAME) 'encoded'
[13](01, 12)-(01, 13): EQUAL(OP) '='
[13](01, 14)-(01, 16): STRING(STRING) '""'
[13](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 07): NAME(NAME) 'for'
[14](01, 08)-(01, 09): NAME(NAME) 'i'
[14](01, 10)-(01, 12): NAME(NAME) 'in'
[14](01, 13)-(01, 14): NAME(NAME) 's'
[14](01, 14)-(01, 15): COLON(OP) ':'
[14](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 10): NAME(NAME) 'if'
[15](01, 11)-(01, 13): NUMBER(NUMBER) '97'
[15](01, 14)-(01, 16): LESSEQUAL(OP) '<='
[15](01, 17)-(01, 20): NAME(NAME) 'ord'
[15](01, 20)-(01, 21): LPAR(OP) '('
[15](01, 21)-(01, 22): NAME(NAME) 'i'
[15](01, 22)-(01, 23): RPAR(OP) ')'
[15](01, 24)-(01, 26): LESSEQUAL(OP) '<='
[15](01, 27)-(01, 30): NUMBER(NUMBER) '122'
[15](01, 30)-(01, 31): COLON(OP) ':'
[15](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 24): NAME(NAME) 'ascii_number'
[16](01, 25)-(01, 26): EQUAL(OP) '='
[16](01, 27)-(01, 28): LPAR(OP) '('
[16](01, 28)-(01, 31): NAME(NAME) 'ord'
[16](01, 31)-(01, 32): LPAR(OP) '('
[16](01, 32)-(01, 33): NAME(NAME) 'i'
[16](01, 33)-(01, 34): RPAR(OP) ')'
[16](01, 35)-(01, 36): MINUS(OP) '-'
[16](01, 37)-(01, 38): NAME(NAME) 'n'
[16](01, 38)-(01, 39): RPAR(OP) ')'
[16](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 17): NAME(NAME) 'while'
[17](01, 18)-(01, 30): NAME(NAME) 'ascii_number'
[17](01, 31)-(01, 32): LESS(OP) '<'
[17](01, 33)-(01, 35): NUMBER(NUMBER) '97'
[17](01, 35)-(01, 36): COLON(OP) ':'
[17](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 28): NAME(NAME) 'ascii_number'
[18](01, 29)-(01, 30): EQUAL(OP) '='
[18](01, 31)-(01, 43): NAME(NAME) 'ascii_number'
[18](01, 44)-(01, 45): PLUS(OP) '+'
[18](01, 46)-(01, 48): NUMBER(NUMBER) '26'
[18](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 19): NAME(NAME) 'encoded'
[19](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[19](01, 23)-(01, 26): NAME(NAME) 'chr'
[19](01, 26)-(01, 27): LPAR(OP) '('
[19](01, 27)-(01, 39): NAME(NAME) 'ascii_number'
[19](01, 39)-(01, 40): RPAR(OP) ')'
[19](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 12): NAME(NAME) 'else'
[20](01, 12)-(01, 13): COLON(OP) ':'
[20](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 19): NAME(NAME) 'encoded'
[21](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[21](01, 23)-(01, 24): NAME(NAME) 'i'
[21](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 10): NAME(NAME) 'return'
[22](01, 11)-(01, 18): NAME(NAME) 'encoded'
[22](01, 18)-(01, 19): NEWLINE(NEWLINE)
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

