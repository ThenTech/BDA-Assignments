[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 14): NAME(NAME) 'findLetter'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 17): NAME(NAME) 's'
[00](01, 17)-(01, 18): COMMA(OP) ','
[00](01, 19)-(01, 20): NAME(NAME) 'l'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): COLON(OP) ':'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'teller'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[01](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'while'
[02](01, 10)-(01, 16): NAME(NAME) 'teller'
[02](01, 17)-(01, 18): LESS(OP) '<'
[02](01, 19)-(01, 22): NAME(NAME) 'len'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 24): NAME(NAME) 's'
[02](01, 24)-(01, 25): RPAR(OP) ')'
[02](01, 25)-(01, 26): COLON(OP) ':'
[02](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 12): NAME(NAME) 's'
[03](01, 12)-(01, 13): LSQB(OP) '['
[03](01, 13)-(01, 19): NAME(NAME) 'teller'
[03](01, 19)-(01, 20): RSQB(OP) ']'
[03](01, 21)-(01, 23): EQEQUAL(OP) '=='
[03](01, 24)-(01, 25): NAME(NAME) 'l'
[03](01, 25)-(01, 26): COLON(OP) ':'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 18): NAME(NAME) 'return'
[04](01, 19)-(01, 25): NAME(NAME) 'teller'
[04](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 14): NAME(NAME) 'teller'
[05](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[05](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[05](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 10): NAME(NAME) 'return'
[06](01, 11)-(01, 17): NAME(NAME) 'teller'
[06](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 03): NAME(NAME) 'def'
[08](01, 04)-(01, 40): NAME(NAME) 'removeCapitalAndPunctuationAndSpaces'
[08](01, 41)-(01, 42): LPAR(OP) '('
[08](01, 42)-(01, 48): NAME(NAME) 'string'
[08](01, 48)-(01, 49): RPAR(OP) ')'
[08](01, 49)-(01, 50): COLON(OP) ':'
[08](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 15): NAME(NAME) 'punctuation'
[09](01, 16)-(01, 17): EQUAL(OP) '='
[09](01, 18)-(01, 61): STRING(STRING) '\'\'\'!\\"#$%&“”\'’()*+,-./:;<=>?@[\\\\]^_`{|}~\'\'\''
[09](01, 61)-(01, 62): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'spatie'
[10](01, 11)-(01, 12): EQUAL(OP) '='
[10](01, 13)-(01, 16): STRING(STRING) '" "'
[10](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 11): NAME(NAME) 'alfabet'
[11](01, 12)-(01, 13): EQUAL(OP) '='
[11](01, 14)-(01, 42): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[11](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 18): NAME(NAME) 'capitalAlfabet'
[12](01, 19)-(01, 20): EQUAL(OP) '='
[12](01, 21)-(01, 49): STRING(STRING) '"ABCDEFGHIJKLMNOPQRSTUVWXYZ"'
[12](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 09): NAME(NAME) 'fixed'
[13](01, 10)-(01, 11): EQUAL(OP) '='
[13](01, 12)-(01, 14): STRING(STRING) "''"
[13](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'for'
[15](01, 08)-(01, 09): NAME(NAME) 'i'
[15](01, 10)-(01, 12): NAME(NAME) 'in'
[15](01, 13)-(01, 19): NAME(NAME) 'string'
[15](01, 19)-(01, 20): COLON(OP) ':'
[15](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 10): NAME(NAME) 'if'
[16](01, 11)-(01, 12): NAME(NAME) 'i'
[16](01, 13)-(01, 15): NAME(NAME) 'in'
[16](01, 16)-(01, 27): NAME(NAME) 'punctuation'
[16](01, 28)-(01, 30): NAME(NAME) 'or'
[16](01, 31)-(01, 32): NAME(NAME) 'i'
[16](01, 33)-(01, 35): NAME(NAME) 'in'
[16](01, 36)-(01, 42): NAME(NAME) 'spatie'
[16](01, 42)-(01, 43): COLON(OP) ':'
[16](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 17): NAME(NAME) 'fixed'
[17](01, 18)-(01, 19): EQUAL(OP) '='
[17](01, 20)-(01, 25): NAME(NAME) 'fixed'
[17](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 12): NAME(NAME) 'elif'
[18](01, 13)-(01, 14): NAME(NAME) 'i'
[18](01, 15)-(01, 17): NAME(NAME) 'in'
[18](01, 18)-(01, 32): NAME(NAME) 'capitalAlfabet'
[18](01, 32)-(01, 33): COLON(OP) ':'
[18](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 19): NAME(NAME) 'positie'
[19](01, 20)-(01, 21): EQUAL(OP) '='
[19](01, 22)-(01, 32): NAME(NAME) 'findLetter'
[19](01, 32)-(01, 33): LPAR(OP) '('
[19](01, 33)-(01, 47): NAME(NAME) 'capitalAlfabet'
[19](01, 47)-(01, 48): COMMA(OP) ','
[19](01, 49)-(01, 50): NAME(NAME) 'i'
[19](01, 50)-(01, 51): RPAR(OP) ')'
[19](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 17): NAME(NAME) 'fixed'
[20](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[20](01, 21)-(01, 28): NAME(NAME) 'alfabet'
[20](01, 28)-(01, 29): LSQB(OP) '['
[20](01, 29)-(01, 36): NAME(NAME) 'positie'
[20](01, 36)-(01, 37): RSQB(OP) ']'
[20](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 12): NAME(NAME) 'else'
[21](01, 12)-(01, 13): COLON(OP) ':'
[21](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 17): NAME(NAME) 'fixed'
[22](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[22](01, 21)-(01, 22): NAME(NAME) 'i'
[22](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 10): NAME(NAME) 'return'
[23](01, 11)-(01, 16): NAME(NAME) 'fixed'
[23](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 03): NAME(NAME) 'def'
[26](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[26](01, 26)-(01, 27): LPAR(OP) '('
[26](01, 27)-(01, 35): NAME(NAME) 'sentence'
[26](01, 35)-(01, 36): RPAR(OP) ')'
[26](01, 36)-(01, 37): COLON(OP) ':'
[26](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 17): NAME(NAME) 'fixedSentence'
[27](01, 18)-(01, 19): EQUAL(OP) '='
[27](01, 20)-(01, 56): NAME(NAME) 'removeCapitalAndPunctuationAndSpaces'
[27](01, 56)-(01, 57): LPAR(OP) '('
[27](01, 57)-(01, 65): NAME(NAME) 'sentence'
[27](01, 65)-(01, 66): RPAR(OP) ')'
[27](01, 66)-(01, 67): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 15): NAME(NAME) 'tellerBegin'
[28](01, 16)-(01, 17): EQUAL(OP) '='
[28](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[28](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 15): NAME(NAME) 'tellerEinde'
[29](01, 16)-(01, 17): EQUAL(OP) '='
[29](01, 18)-(01, 21): NAME(NAME) 'len'
[29](01, 21)-(01, 22): LPAR(OP) '('
[29](01, 22)-(01, 35): NAME(NAME) 'fixedSentence'
[29](01, 35)-(01, 36): RPAR(OP) ')'
[29](01, 37)-(01, 38): MINUS(OP) '-'
[29](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[29](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 01): NL(NL) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 09): NAME(NAME) 'while'
[31](01, 10)-(01, 21): NAME(NAME) 'tellerBegin'
[31](01, 22)-(01, 23): LESS(OP) '<'
[31](01, 24)-(01, 27): NAME(NAME) 'len'
[31](01, 27)-(01, 28): LPAR(OP) '('
[31](01, 28)-(01, 41): NAME(NAME) 'fixedSentence'
[31](01, 41)-(01, 42): RPAR(OP) ')'
[31](01, 42)-(01, 43): COLON(OP) ':'
[31](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 10): NAME(NAME) 'if'
[32](01, 11)-(01, 24): NAME(NAME) 'fixedSentence'
[32](01, 24)-(01, 25): LSQB(OP) '['
[32](01, 25)-(01, 36): NAME(NAME) 'tellerBegin'
[32](01, 36)-(01, 37): RSQB(OP) ']'
[32](01, 38)-(01, 40): EQEQUAL(OP) '=='
[32](01, 41)-(01, 54): NAME(NAME) 'fixedSentence'
[32](01, 54)-(01, 55): LSQB(OP) '['
[32](01, 55)-(01, 66): NAME(NAME) 'tellerEinde'
[32](01, 66)-(01, 67): RSQB(OP) ']'
[32](01, 67)-(01, 68): COLON(OP) ':'
[32](01, 68)-(01, 69): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 12): INDENT(INDENT) '            '
[33](01, 12)-(01, 23): NAME(NAME) 'tellerBegin'
[33](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[33](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[33](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 12): INDENT(INDENT) '            '
[34](01, 12)-(01, 23): NAME(NAME) 'tellerEinde'
[34](01, 24)-(01, 26): MINEQUAL(OP) '-='
[34](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[34](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 12): NAME(NAME) 'else'
[35](01, 12)-(01, 13): COLON(OP) ':'
[35](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 12): INDENT(INDENT) '            '
[36](01, 12)-(01, 18): NAME(NAME) 'return'
[36](01, 19)-(01, 24): NAME(NAME) 'False'
[36](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 04): INDENT(INDENT) '    '
[37](01, 04)-(01, 10): NAME(NAME) 'return'
[37](01, 11)-(01, 15): NAME(NAME) 'True'
[37](01, 15)-(01, 16): NEWLINE(NEWLINE)
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

