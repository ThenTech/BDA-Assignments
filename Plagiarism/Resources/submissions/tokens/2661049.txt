[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'def'
[01](01, 04)-(01, 13): NAME(NAME) 'is_unique'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 17): NAME(NAME) 'str'
[01](01, 17)-(01, 18): RPAR(OP) ')'
[01](01, 18)-(01, 19): COLON(OP) ':'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 05): NAME(NAME) 'l'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 09): LSQB(OP) '['
[02](01, 09)-(01, 10): RSQB(OP) ']'
[02](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 12): NAME(NAME) 'char'
[03](01, 13)-(01, 15): NAME(NAME) 'in'
[03](01, 16)-(01, 19): NAME(NAME) 'str'
[03](01, 19)-(01, 20): COLON(OP) ':'
[03](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 15): NAME(NAME) 'char'
[04](01, 16)-(01, 18): NAME(NAME) 'in'
[04](01, 19)-(01, 20): NAME(NAME) 'l'
[04](01, 20)-(01, 21): COLON(OP) ':'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 18): NAME(NAME) 'return'
[05](01, 19)-(01, 24): NAME(NAME) 'False'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 12): NAME(NAME) 'else'
[06](01, 12)-(01, 13): COLON(OP) ':'
[06](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 13): NAME(NAME) 'l'
[07](01, 13)-(01, 14): DOT(OP) '.'
[07](01, 14)-(01, 20): NAME(NAME) 'append'
[07](01, 20)-(01, 21): LPAR(OP) '('
[07](01, 21)-(01, 25): NAME(NAME) 'char'
[07](01, 25)-(01, 26): RPAR(OP) ')'
[07](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 10): NAME(NAME) 'return'
[08](01, 11)-(01, 15): NAME(NAME) 'True'
[08](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 03): NAME(NAME) 'def'
[10](01, 04)-(01, 21): NAME(NAME) 'collection_helper'
[10](01, 21)-(01, 22): LPAR(OP) '('
[10](01, 22)-(01, 28): NAME(NAME) 'length'
[10](01, 28)-(01, 29): COMMA(OP) ','
[10](01, 30)-(01, 39): NAME(NAME) 'possibles'
[10](01, 39)-(01, 40): COMMA(OP) ','
[10](01, 41)-(01, 47): NAME(NAME) 'prefix'
[10](01, 47)-(01, 48): RPAR(OP) ')'
[10](01, 48)-(01, 49): COLON(OP) ':'
[10](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 06): NAME(NAME) 'if'
[11](01, 07)-(01, 10): NAME(NAME) 'len'
[11](01, 10)-(01, 11): LPAR(OP) '('
[11](01, 11)-(01, 17): NAME(NAME) 'prefix'
[11](01, 17)-(01, 18): RPAR(OP) ')'
[11](01, 19)-(01, 21): EQEQUAL(OP) '=='
[11](01, 22)-(01, 28): NAME(NAME) 'length'
[11](01, 28)-(01, 29): COLON(OP) ':'
[11](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 10): NAME(NAME) 'if'
[12](01, 11)-(01, 20): NAME(NAME) 'is_unique'
[12](01, 20)-(01, 21): LPAR(OP) '('
[12](01, 21)-(01, 27): NAME(NAME) 'prefix'
[12](01, 27)-(01, 28): RPAR(OP) ')'
[12](01, 28)-(01, 29): COLON(OP) ':'
[12](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 15): NAME(NAME) 'for'
[13](01, 16)-(01, 19): NAME(NAME) 'arg'
[13](01, 20)-(01, 22): NAME(NAME) 'in'
[13](01, 23)-(01, 29): NAME(NAME) 'prefix'
[13](01, 29)-(01, 30): COLON(OP) ':'
[13](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 21): NAME(NAME) 'print'
[14](01, 21)-(01, 22): LPAR(OP) '('
[14](01, 22)-(01, 25): NAME(NAME) 'arg'
[14](01, 25)-(01, 26): COMMA(OP) ','
[14](01, 27)-(01, 30): NAME(NAME) 'end'
[14](01, 30)-(01, 31): EQUAL(OP) '='
[14](01, 31)-(01, 34): STRING(STRING) '" "'
[14](01, 34)-(01, 35): RPAR(OP) ')'
[14](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 17): NAME(NAME) 'print'
[15](01, 17)-(01, 18): LPAR(OP) '('
[15](01, 18)-(01, 19): RPAR(OP) ')'
[15](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 08): NAME(NAME) 'else'
[16](01, 08)-(01, 09): COLON(OP) ':'
[16](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 11): NAME(NAME) 'for'
[17](01, 12)-(01, 15): NAME(NAME) 'pos'
[17](01, 16)-(01, 18): NAME(NAME) 'in'
[17](01, 19)-(01, 28): NAME(NAME) 'possibles'
[17](01, 28)-(01, 29): COLON(OP) ':'
[17](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 29): NAME(NAME) 'collection_helper'
[18](01, 29)-(01, 30): LPAR(OP) '('
[18](01, 30)-(01, 36): NAME(NAME) 'length'
[18](01, 36)-(01, 37): COMMA(OP) ','
[18](01, 38)-(01, 47): NAME(NAME) 'possibles'
[18](01, 47)-(01, 48): COMMA(OP) ','
[18](01, 49)-(01, 55): NAME(NAME) 'prefix'
[18](01, 56)-(01, 57): PLUS(OP) '+'
[18](01, 58)-(01, 61): NAME(NAME) 'str'
[18](01, 61)-(01, 62): LPAR(OP) '('
[18](01, 62)-(01, 65): NAME(NAME) 'pos'
[18](01, 65)-(01, 66): RPAR(OP) ')'
[18](01, 66)-(01, 67): RPAR(OP) ')'
[18](01, 67)-(01, 68): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 03): NAME(NAME) 'def'
[20](01, 04)-(01, 11): NAME(NAME) 'collect'
[20](01, 11)-(01, 12): LPAR(OP) '('
[20](01, 12)-(01, 15): NAME(NAME) 'pos'
[20](01, 15)-(01, 16): COMMA(OP) ','
[20](01, 17)-(01, 23): NAME(NAME) 'length'
[20](01, 23)-(01, 24): RPAR(OP) ')'
[20](01, 24)-(01, 25): COLON(OP) ':'
[20](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 05): NAME(NAME) 'l'
[21](01, 06)-(01, 07): EQUAL(OP) '='
[21](01, 08)-(01, 09): LSQB(OP) '['
[21](01, 09)-(01, 10): RSQB(OP) ']'
[21](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 05): NAME(NAME) 't'
[22](01, 06)-(01, 07): EQUAL(OP) '='
[22](01, 08)-(01, 09): LSQB(OP) '['
[22](01, 09)-(01, 10): RSQB(OP) ']'
[22](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 07): NAME(NAME) 'for'
[23](01, 08)-(01, 09): NAME(NAME) 'i'
[23](01, 10)-(01, 12): NAME(NAME) 'in'
[23](01, 13)-(01, 18): NAME(NAME) 'range'
[23](01, 18)-(01, 19): LPAR(OP) '('
[23](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[23](01, 20)-(01, 21): COMMA(OP) ','
[23](01, 22)-(01, 25): NAME(NAME) 'int'
[23](01, 25)-(01, 26): LPAR(OP) '('
[23](01, 26)-(01, 29): NAME(NAME) 'pos'
[23](01, 29)-(01, 30): RPAR(OP) ')'
[23](01, 31)-(01, 32): PLUS(OP) '+'
[23](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[23](01, 34)-(01, 35): RPAR(OP) ')'
[23](01, 35)-(01, 36): COLON(OP) ':'
[23](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 09): NAME(NAME) 'l'
[24](01, 09)-(01, 10): DOT(OP) '.'
[24](01, 10)-(01, 16): NAME(NAME) 'append'
[24](01, 16)-(01, 17): LPAR(OP) '('
[24](01, 17)-(01, 18): NAME(NAME) 'i'
[24](01, 18)-(01, 19): RPAR(OP) ')'
[24](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 21): NAME(NAME) 'collection_helper'
[25](01, 21)-(01, 22): LPAR(OP) '('
[25](01, 22)-(01, 25): NAME(NAME) 'int'
[25](01, 25)-(01, 26): LPAR(OP) '('
[25](01, 26)-(01, 32): NAME(NAME) 'length'
[25](01, 32)-(01, 33): RPAR(OP) ')'
[25](01, 33)-(01, 34): COMMA(OP) ','
[25](01, 35)-(01, 36): NAME(NAME) 'l'
[25](01, 36)-(01, 37): COMMA(OP) ','
[25](01, 38)-(01, 40): STRING(STRING) '""'
[25](01, 40)-(01, 41): RPAR(OP) ')'
[25](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 07): NAME(NAME) 'collect'
[27](01, 07)-(01, 08): LPAR(OP) '('
[27](01, 08)-(01, 13): NAME(NAME) 'input'
[27](01, 13)-(01, 14): LPAR(OP) '('
[27](01, 14)-(01, 15): RPAR(OP) ')'
[27](01, 15)-(01, 16): COMMA(OP) ','
[27](01, 17)-(01, 22): NAME(NAME) 'input'
[27](01, 22)-(01, 23): LPAR(OP) '('
[27](01, 23)-(01, 24): RPAR(OP) ')'
[27](01, 24)-(01, 25): RPAR(OP) ')'
[27](01, 25)-(01, 26): NEWLINE(NEWLINE)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

