[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'count_words'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'string'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'numbers'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 26): STRING(STRING) '"0123456789"'
[01](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'index'
[02](01, 10)-(01, 11): EQUAL(OP) '='
[02](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[02](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 12): NAME(NAME) 'char'
[03](01, 13)-(01, 15): NAME(NAME) 'in'
[03](01, 16)-(01, 22): NAME(NAME) 'string'
[03](01, 22)-(01, 23): COLON(OP) ':'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 15): NAME(NAME) 'char'
[04](01, 16)-(01, 18): NAME(NAME) 'in'
[04](01, 19)-(01, 26): NAME(NAME) 'numbers'
[04](01, 26)-(01, 27): COLON(OP) ':'
[04](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 14): NAME(NAME) 'if'
[05](01, 15)-(01, 20): NAME(NAME) 'index'
[05](01, 21)-(01, 23): NOTEQUAL(OP) '!='
[05](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[05](01, 25)-(01, 26): COLON(OP) ':'
[05](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 26): NAME(NAME) 'new_string'
[06](01, 27)-(01, 28): EQUAL(OP) '='
[06](01, 29)-(01, 35): NAME(NAME) 'string'
[06](01, 35)-(01, 36): LSQB(OP) '['
[06](01, 36)-(01, 37): COLON(OP) ':'
[06](01, 37)-(01, 42): NAME(NAME) 'index'
[06](01, 42)-(01, 43): RSQB(OP) ']'
[06](01, 44)-(01, 45): PLUS(OP) '+'
[06](01, 46)-(01, 49): STRING(STRING) '" "'
[06](01, 50)-(01, 51): PLUS(OP) '+'
[06](01, 52)-(01, 58): NAME(NAME) 'string'
[06](01, 58)-(01, 59): LSQB(OP) '['
[06](01, 59)-(01, 64): NAME(NAME) 'index'
[06](01, 65)-(01, 66): PLUS(OP) '+'
[06](01, 67)-(01, 68): NUMBER(NUMBER) '1'
[06](01, 68)-(01, 69): COLON(OP) ':'
[06](01, 69)-(01, 70): RSQB(OP) ']'
[06](01, 70)-(01, 71): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 16): NAME(NAME) 'else'
[07](01, 16)-(01, 17): COLON(OP) ':'
[07](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 26): NAME(NAME) 'new_string'
[08](01, 27)-(01, 28): EQUAL(OP) '='
[08](01, 29)-(01, 35): NAME(NAME) 'string'
[08](01, 35)-(01, 36): LSQB(OP) '['
[08](01, 36)-(01, 41): NAME(NAME) 'index'
[08](01, 42)-(01, 43): PLUS(OP) '+'
[08](01, 44)-(01, 45): NUMBER(NUMBER) '1'
[08](01, 45)-(01, 46): COLON(OP) ':'
[08](01, 46)-(01, 47): RSQB(OP) ']'
[08](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 13): NAME(NAME) 'index'
[09](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[09](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[09](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 14): NAME(NAME) 'list_words'
[11](01, 15)-(01, 16): EQUAL(OP) '='
[11](01, 17)-(01, 27): NAME(NAME) 'new_string'
[11](01, 27)-(01, 28): DOT(OP) '.'
[11](01, 28)-(01, 33): NAME(NAME) 'split'
[11](01, 33)-(01, 34): LPAR(OP) '('
[11](01, 34)-(01, 35): RPAR(OP) ')'
[11](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 10): NAME(NAME) 'return'
[12](01, 11)-(01, 14): NAME(NAME) 'len'
[12](01, 14)-(01, 15): LPAR(OP) '('
[12](01, 15)-(01, 25): NAME(NAME) 'list_words'
[12](01, 25)-(01, 26): RPAR(OP) ')'
[12](01, 26)-(01, 27): NEWLINE(NEWLINE)
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

