[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'i'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[01](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'while'
[02](01, 10)-(01, 11): NAME(NAME) 'i'
[02](01, 12)-(01, 13): LESS(OP) '<'
[02](01, 14)-(01, 17): NAME(NAME) 'len'
[02](01, 17)-(01, 18): LPAR(OP) '('
[02](01, 18)-(01, 24): NAME(NAME) 'corpus'
[02](01, 24)-(01, 25): RPAR(OP) ')'
[02](01, 25)-(01, 26): COLON(OP) ':'
[02](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 17): NAME(NAME) 'wordfound'
[03](01, 18)-(01, 19): EQUAL(OP) '='
[03](01, 20)-(01, 24): NAME(NAME) 'True'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 11): NAME(NAME) 'for'
[04](01, 12)-(01, 22): NAME(NAME) 'characters'
[04](01, 23)-(01, 25): NAME(NAME) 'in'
[04](01, 26)-(01, 31): NAME(NAME) 'range'
[04](01, 31)-(01, 32): LPAR(OP) '('
[04](01, 32)-(01, 35): NAME(NAME) 'len'
[04](01, 35)-(01, 36): LPAR(OP) '('
[04](01, 36)-(01, 43): NAME(NAME) 'pattern'
[04](01, 43)-(01, 44): RPAR(OP) ')'
[04](01, 44)-(01, 45): RPAR(OP) ')'
[04](01, 45)-(01, 46): COLON(OP) ':'
[04](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 14): NAME(NAME) 'if'
[05](01, 15)-(01, 22): NAME(NAME) 'pattern'
[05](01, 22)-(01, 23): LSQB(OP) '['
[05](01, 23)-(01, 33): NAME(NAME) 'characters'
[05](01, 33)-(01, 34): RSQB(OP) ']'
[05](01, 35)-(01, 37): EQEQUAL(OP) '=='
[05](01, 38)-(01, 44): NAME(NAME) 'corpus'
[05](01, 44)-(01, 45): LSQB(OP) '['
[05](01, 45)-(01, 46): NAME(NAME) 'i'
[05](01, 46)-(01, 47): RSQB(OP) ']'
[05](01, 48)-(01, 51): NAME(NAME) 'and'
[05](01, 52)-(01, 62): NAME(NAME) 'characters'
[05](01, 63)-(01, 65): EQEQUAL(OP) '=='
[05](01, 66)-(01, 67): NUMBER(NUMBER) '0'
[05](01, 67)-(01, 68): COLON(OP) ':'
[05](01, 68)-(01, 69): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 21): NAME(NAME) 'start'
[06](01, 22)-(01, 23): EQUAL(OP) '='
[06](01, 24)-(01, 25): NAME(NAME) 'i'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'if'
[07](01, 15)-(01, 18): NAME(NAME) 'not'
[07](01, 19)-(01, 26): NAME(NAME) 'pattern'
[07](01, 26)-(01, 27): LSQB(OP) '['
[07](01, 27)-(01, 37): NAME(NAME) 'characters'
[07](01, 37)-(01, 38): RSQB(OP) ']'
[07](01, 39)-(01, 41): EQEQUAL(OP) '=='
[07](01, 42)-(01, 48): NAME(NAME) 'corpus'
[07](01, 48)-(01, 49): LSQB(OP) '['
[07](01, 49)-(01, 50): NAME(NAME) 'i'
[07](01, 50)-(01, 51): RSQB(OP) ']'
[07](01, 51)-(01, 52): COLON(OP) ':'
[07](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 25): NAME(NAME) 'wordfound'
[08](01, 26)-(01, 27): EQUAL(OP) '='
[08](01, 28)-(01, 33): NAME(NAME) 'False'
[08](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 20): NAME(NAME) 'wordfound'
[09](01, 20)-(01, 21): COLON(OP) ':'
[09](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 22): NAME(NAME) 'returnword'
[10](01, 23)-(01, 24): EQUAL(OP) '='
[10](01, 25)-(01, 27): STRING(STRING) '""'
[10](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 15): NAME(NAME) 'for'
[11](01, 16)-(01, 22): NAME(NAME) 'letter'
[11](01, 23)-(01, 25): NAME(NAME) 'in'
[11](01, 26)-(01, 31): NAME(NAME) 'range'
[11](01, 31)-(01, 32): LPAR(OP) '('
[11](01, 32)-(01, 33): NUMBER(NUMBER) '0'
[11](01, 33)-(01, 34): COMMA(OP) ','
[11](01, 35)-(01, 40): NAME(NAME) 'start'
[11](01, 40)-(01, 41): RPAR(OP) ')'
[11](01, 41)-(01, 42): COLON(OP) ':'
[11](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 26): NAME(NAME) 'returnword'
[12](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[12](01, 30)-(01, 36): NAME(NAME) 'corpus'
[12](01, 36)-(01, 37): LSQB(OP) '['
[12](01, 37)-(01, 43): NAME(NAME) 'letter'
[12](01, 43)-(01, 44): RSQB(OP) ']'
[12](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 22): NAME(NAME) 'returnword'
[13](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[13](01, 26)-(01, 37): NAME(NAME) 'replacement'
[13](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 15): NAME(NAME) 'for'
[14](01, 16)-(01, 22): NAME(NAME) 'letter'
[14](01, 23)-(01, 25): NAME(NAME) 'in'
[14](01, 26)-(01, 31): NAME(NAME) 'range'
[14](01, 31)-(01, 32): LPAR(OP) '('
[14](01, 32)-(01, 37): NAME(NAME) 'start'
[14](01, 37)-(01, 38): PLUS(OP) '+'
[14](01, 38)-(01, 41): NAME(NAME) 'len'
[14](01, 41)-(01, 42): LPAR(OP) '('
[14](01, 42)-(01, 49): NAME(NAME) 'pattern'
[14](01, 49)-(01, 50): RPAR(OP) ')'
[14](01, 50)-(01, 51): COMMA(OP) ','
[14](01, 52)-(01, 55): NAME(NAME) 'len'
[14](01, 55)-(01, 56): LPAR(OP) '('
[14](01, 56)-(01, 62): NAME(NAME) 'corpus'
[14](01, 62)-(01, 63): RPAR(OP) ')'
[14](01, 63)-(01, 64): RPAR(OP) ')'
[14](01, 64)-(01, 65): COLON(OP) ':'
[14](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 26): NAME(NAME) 'returnword'
[15](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[15](01, 30)-(01, 36): NAME(NAME) 'corpus'
[15](01, 36)-(01, 37): LSQB(OP) '['
[15](01, 37)-(01, 43): NAME(NAME) 'letter'
[15](01, 43)-(01, 44): RSQB(OP) ']'
[15](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 14): NAME(NAME) 'corpus'
[16](01, 15)-(01, 16): EQUAL(OP) '='
[16](01, 17)-(01, 27): NAME(NAME) 'returnword'
[16](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 12)-(01, 13): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 10): NAME(NAME) 'return'
[18](01, 11)-(01, 17): NAME(NAME) 'corpus'
[18](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

