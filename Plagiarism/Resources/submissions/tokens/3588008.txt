[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 17): NAME(NAME) 'lucky_numbers'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 19): NAME(NAME) 'n'
[00](01, 19)-(01, 20): RPAR(OP) ')'
[00](01, 20)-(01, 21): COLON(OP) ':'
[00](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 16): NAME(NAME) 'luckyNumbers'
[01](01, 17)-(01, 18): EQUAL(OP) '='
[01](01, 19)-(01, 20): LSQB(OP) '['
[01](01, 20)-(01, 21): NAME(NAME) 'i'
[01](01, 21)-(01, 22): PLUS(OP) '+'
[01](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[01](01, 24)-(01, 27): NAME(NAME) 'for'
[01](01, 28)-(01, 29): NAME(NAME) 'i'
[01](01, 30)-(01, 32): NAME(NAME) 'in'
[01](01, 33)-(01, 38): NAME(NAME) 'range'
[01](01, 38)-(01, 39): LPAR(OP) '('
[01](01, 39)-(01, 40): NAME(NAME) 'n'
[01](01, 40)-(01, 41): RPAR(OP) ')'
[01](01, 41)-(01, 42): RSQB(OP) ']'
[01](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 04)-(01, 05): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 17): NAME(NAME) 'removeElement'
[03](01, 18)-(01, 19): EQUAL(OP) '='
[03](01, 20)-(01, 21): NUMBER(NUMBER) '2'
[03](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 12): NAME(NAME) 'position'
[04](01, 13)-(01, 14): EQUAL(OP) '='
[04](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[04](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 04)-(01, 05): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'while'
[06](01, 10)-(01, 23): NAME(NAME) 'removeElement'
[06](01, 24)-(01, 25): LESS(OP) '<'
[06](01, 26)-(01, 29): NAME(NAME) 'len'
[06](01, 29)-(01, 30): LPAR(OP) '('
[06](01, 30)-(01, 42): NAME(NAME) 'luckyNumbers'
[06](01, 42)-(01, 43): RPAR(OP) ')'
[06](01, 43)-(01, 44): COLON(OP) ':'
[06](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 11): NAME(NAME) 'for'
[07](01, 12)-(01, 13): NAME(NAME) 'i'
[07](01, 14)-(01, 16): NAME(NAME) 'in'
[07](01, 17)-(01, 29): NAME(NAME) 'luckyNumbers'
[07](01, 29)-(01, 30): LSQB(OP) '['
[07](01, 30)-(01, 31): COLON(OP) ':'
[07](01, 31)-(01, 32): RSQB(OP) ']'
[07](01, 32)-(01, 33): COLON(OP) ':'
[07](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 14): NAME(NAME) 'if'
[08](01, 15)-(01, 16): LPAR(OP) '('
[08](01, 16)-(01, 24): NAME(NAME) 'position'
[08](01, 24)-(01, 25): PLUS(OP) '+'
[08](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[08](01, 26)-(01, 27): RPAR(OP) ')'
[08](01, 28)-(01, 29): PERCENT(OP) '%'
[08](01, 30)-(01, 43): NAME(NAME) 'removeElement'
[08](01, 44)-(01, 46): EQEQUAL(OP) '=='
[08](01, 47)-(01, 48): NUMBER(NUMBER) '0'
[08](01, 49)-(01, 52): NAME(NAME) 'and'
[08](01, 53)-(01, 61): NAME(NAME) 'position'
[08](01, 62)-(01, 64): NOTEQUAL(OP) '!='
[08](01, 65)-(01, 66): NUMBER(NUMBER) '0'
[08](01, 66)-(01, 67): COLON(OP) ':'
[08](01, 67)-(01, 68): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 28): NAME(NAME) 'luckyNumbers'
[09](01, 28)-(01, 29): DOT(OP) '.'
[09](01, 29)-(01, 35): NAME(NAME) 'remove'
[09](01, 35)-(01, 36): LPAR(OP) '('
[09](01, 36)-(01, 37): NAME(NAME) 'i'
[09](01, 37)-(01, 38): RPAR(OP) ')'
[09](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 20): NAME(NAME) 'position'
[10](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[10](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[10](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 21): NAME(NAME) 'removeElement'
[11](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[11](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[11](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 16): NAME(NAME) 'position'
[12](01, 17)-(01, 18): EQUAL(OP) '='
[12](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[12](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

