[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 12): NAME(NAME) 'is_prime'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 14): NAME(NAME) 'x'
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): COLON(OP) ':'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): NAME(NAME) 'x'
[01](01, 09)-(01, 10): GREATER(OP) '>'
[01](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[01](01, 12)-(01, 13): COLON(OP) ':'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 17): NAME(NAME) 'dividable'
[02](01, 18)-(01, 19): EQUAL(OP) '='
[02](01, 20)-(01, 25): NAME(NAME) 'False'
[02](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 11): NAME(NAME) 'for'
[03](01, 12)-(01, 13): NAME(NAME) 'i'
[03](01, 14)-(01, 16): NAME(NAME) 'in'
[03](01, 17)-(01, 22): NAME(NAME) 'range'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 24): NUMBER(NUMBER) '2'
[03](01, 24)-(01, 25): COMMA(OP) ','
[03](01, 26)-(01, 27): NAME(NAME) 'x'
[03](01, 27)-(01, 28): RPAR(OP) ')'
[03](01, 28)-(01, 29): COLON(OP) ':'
[03](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 14): NAME(NAME) 'if'
[04](01, 15)-(01, 16): NAME(NAME) 'x'
[04](01, 16)-(01, 17): PERCENT(OP) '%'
[04](01, 17)-(01, 18): NAME(NAME) 'i'
[04](01, 19)-(01, 21): EQEQUAL(OP) '=='
[04](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[04](01, 23)-(01, 24): COLON(OP) ':'
[04](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 16): INDENT(INDENT) '                '
[05](01, 16)-(01, 25): NAME(NAME) 'dividable'
[05](01, 26)-(01, 27): EQUAL(OP) '='
[05](01, 28)-(01, 32): NAME(NAME) 'True'
[05](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 14): NAME(NAME) 'not'
[06](01, 15)-(01, 24): NAME(NAME) 'dividable'
[06](01, 24)-(01, 25): COLON(OP) ':'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'return'
[07](01, 19)-(01, 23): NAME(NAME) 'True'
[07](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 10): NAME(NAME) 'return'
[08](01, 11)-(01, 16): NAME(NAME) 'False'
[08](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 03): NAME(NAME) 'def'
[11](01, 04)-(01, 19): NAME(NAME) 'all_primes_upto'
[11](01, 19)-(01, 20): LPAR(OP) '('
[11](01, 20)-(01, 21): NAME(NAME) 'x'
[11](01, 21)-(01, 22): RPAR(OP) ')'
[11](01, 22)-(01, 23): COLON(OP) ':'
[11](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 07): NAME(NAME) 'for'
[12](01, 08)-(01, 09): NAME(NAME) 'i'
[12](01, 10)-(01, 12): NAME(NAME) 'in'
[12](01, 13)-(01, 18): NAME(NAME) 'range'
[12](01, 18)-(01, 19): LPAR(OP) '('
[12](01, 19)-(01, 20): NUMBER(NUMBER) '2'
[12](01, 20)-(01, 21): COMMA(OP) ','
[12](01, 22)-(01, 23): NAME(NAME) 'x'
[12](01, 23)-(01, 24): PLUS(OP) '+'
[12](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[12](01, 25)-(01, 26): RPAR(OP) ')'
[12](01, 26)-(01, 27): COLON(OP) ':'
[12](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 19): NAME(NAME) 'is_prime'
[13](01, 19)-(01, 20): LPAR(OP) '('
[13](01, 20)-(01, 21): NAME(NAME) 'i'
[13](01, 21)-(01, 22): RPAR(OP) ')'
[13](01, 22)-(01, 23): COLON(OP) ':'
[13](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 17): NAME(NAME) 'print'
[14](01, 17)-(01, 18): LPAR(OP) '('
[14](01, 18)-(01, 19): NAME(NAME) 'i'
[14](01, 19)-(01, 20): RPAR(OP) ')'
[14](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 03): NAME(NAME) 'def'
[17](01, 04)-(01, 13): NAME(NAME) 'factorize'
[17](01, 13)-(01, 14): LPAR(OP) '('
[17](01, 14)-(01, 15): NAME(NAME) 'x'
[17](01, 15)-(01, 16): RPAR(OP) ')'
[17](01, 16)-(01, 17): COLON(OP) ':'
[17](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 09): NAME(NAME) 'while'
[18](01, 10)-(01, 11): NAME(NAME) 'x'
[18](01, 11)-(01, 12): GREATER(OP) '>'
[18](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[18](01, 13)-(01, 14): COLON(OP) ':'
[18](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 11): NAME(NAME) 'for'
[19](01, 12)-(01, 13): NAME(NAME) 'i'
[19](01, 14)-(01, 16): NAME(NAME) 'in'
[19](01, 17)-(01, 22): NAME(NAME) 'range'
[19](01, 22)-(01, 23): LPAR(OP) '('
[19](01, 23)-(01, 24): NUMBER(NUMBER) '2'
[19](01, 24)-(01, 25): COMMA(OP) ','
[19](01, 26)-(01, 27): NAME(NAME) 'x'
[19](01, 28)-(01, 29): PLUS(OP) '+'
[19](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[19](01, 31)-(01, 32): RPAR(OP) ')'
[19](01, 32)-(01, 33): COLON(OP) ':'
[19](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 14): NAME(NAME) 'if'
[20](01, 15)-(01, 23): NAME(NAME) 'is_prime'
[20](01, 23)-(01, 24): LPAR(OP) '('
[20](01, 24)-(01, 25): NAME(NAME) 'i'
[20](01, 25)-(01, 26): RPAR(OP) ')'
[20](01, 27)-(01, 30): NAME(NAME) 'and'
[20](01, 31)-(01, 32): NAME(NAME) 'x'
[20](01, 33)-(01, 34): PERCENT(OP) '%'
[20](01, 35)-(01, 36): NAME(NAME) 'i'
[20](01, 37)-(01, 39): EQEQUAL(OP) '=='
[20](01, 40)-(01, 41): NUMBER(NUMBER) '0'
[20](01, 41)-(01, 42): COLON(OP) ':'
[20](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 21): NAME(NAME) 'print'
[21](01, 21)-(01, 22): LPAR(OP) '('
[21](01, 22)-(01, 23): NAME(NAME) 'i'
[21](01, 23)-(01, 24): RPAR(OP) ')'
[21](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 16): INDENT(INDENT) '                '
[22](01, 16)-(01, 17): NAME(NAME) 'x'
[22](01, 18)-(01, 19): EQUAL(OP) '='
[22](01, 20)-(01, 23): NAME(NAME) 'int'
[22](01, 23)-(01, 24): LPAR(OP) '('
[22](01, 24)-(01, 25): NAME(NAME) 'x'
[22](01, 26)-(01, 27): SLASH(OP) '/'
[22](01, 28)-(01, 29): NAME(NAME) 'i'
[22](01, 29)-(01, 30): RPAR(OP) ')'
[22](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 16): INDENT(INDENT) '                '
[23](01, 16)-(01, 21): NAME(NAME) 'break'
[23](01, 21)-(01, 22): NEWLINE(NEWLINE)
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

