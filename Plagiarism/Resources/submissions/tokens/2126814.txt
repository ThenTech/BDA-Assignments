[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'one'
[00](01, 04)-(01, 05): EQUAL(OP) '='
[00](01, 06)-(01, 11): NAME(NAME) 'input'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 48): STRING(STRING) '"How many 1 eurocents do you have? "'
[00](01, 48)-(01, 49): RPAR(OP) ')'
[00](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'two'
[01](01, 04)-(01, 05): EQUAL(OP) '='
[01](01, 06)-(01, 11): NAME(NAME) 'input'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 48): STRING(STRING) '"How many 2 eurocents do you have? "'
[01](01, 48)-(01, 49): RPAR(OP) ')'
[01](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): NAME(NAME) 'five'
[02](01, 05)-(01, 06): EQUAL(OP) '='
[02](01, 07)-(01, 12): NAME(NAME) 'input'
[02](01, 12)-(01, 13): LPAR(OP) '('
[02](01, 13)-(01, 49): STRING(STRING) '"How many 5 eurocents do you have? "'
[02](01, 49)-(01, 50): RPAR(OP) ')'
[02](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'ten'
[03](01, 04)-(01, 05): EQUAL(OP) '='
[03](01, 06)-(01, 11): NAME(NAME) 'input'
[03](01, 11)-(01, 12): LPAR(OP) '('
[03](01, 12)-(01, 49): STRING(STRING) '"How many 10 eurocents do you have? "'
[03](01, 49)-(01, 50): RPAR(OP) ')'
[03](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 06): NAME(NAME) 'twenty'
[04](01, 07)-(01, 08): EQUAL(OP) '='
[04](01, 09)-(01, 14): NAME(NAME) 'input'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 52): STRING(STRING) '"How many 20 eurocents do you have? "'
[04](01, 52)-(01, 53): RPAR(OP) ')'
[04](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 05): NAME(NAME) 'total'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 08)-(01, 13): NAME(NAME) 'float'
[05](01, 13)-(01, 14): LPAR(OP) '('
[05](01, 14)-(01, 17): NAME(NAME) 'one'
[05](01, 18)-(01, 19): STAR(OP) '*'
[05](01, 20)-(01, 24): NUMBER(NUMBER) '0.01'
[05](01, 25)-(01, 26): PLUS(OP) '+'
[05](01, 27)-(01, 30): NAME(NAME) 'two'
[05](01, 31)-(01, 32): STAR(OP) '*'
[05](01, 33)-(01, 37): NUMBER(NUMBER) '0.02'
[05](01, 38)-(01, 39): PLUS(OP) '+'
[05](01, 40)-(01, 44): NAME(NAME) 'five'
[05](01, 45)-(01, 46): STAR(OP) '*'
[05](01, 47)-(01, 51): NUMBER(NUMBER) '0.05'
[05](01, 52)-(01, 53): PLUS(OP) '+'
[05](01, 54)-(01, 57): NAME(NAME) 'ten'
[05](01, 58)-(01, 59): STAR(OP) '*'
[05](01, 60)-(01, 64): NUMBER(NUMBER) '0.10'
[05](01, 65)-(01, 66): PLUS(OP) '+'
[05](01, 67)-(01, 73): NAME(NAME) 'twenty'
[05](01, 74)-(01, 75): STAR(OP) '*'
[05](01, 76)-(01, 80): NUMBER(NUMBER) '0.20'
[05](01, 80)-(01, 81): RPAR(OP) ')'
[05](01, 81)-(01, 82): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 05): NAME(NAME) 'print'
[06](01, 05)-(01, 06): LPAR(OP) '('
[06](01, 06)-(01, 17): STRING(STRING) '"You have "'
[06](01, 17)-(01, 18): COMMA(OP) ','
[06](01, 19)-(01, 24): NAME(NAME) 'total'
[06](01, 24)-(01, 25): COMMA(OP) ','
[06](01, 26)-(01, 33): STRING(STRING) '"euro!"'
[06](01, 33)-(01, 34): RPAR(OP) ')'
[06](01, 34)-(01, 35): NEWLINE(NEWLINE)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

