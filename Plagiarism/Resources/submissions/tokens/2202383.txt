[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 18): NAME(NAME) 'cleanup_spaces'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 20): NAME(NAME) 's'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): COLON(OP) ':'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'result'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 15): STRING(STRING) '""'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 05): NAME(NAME) 'i'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[02](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'while'
[04](01, 10)-(01, 11): LPAR(OP) '('
[04](01, 11)-(01, 12): NAME(NAME) 'i'
[04](01, 13)-(01, 14): LESS(OP) '<'
[04](01, 15)-(01, 18): NAME(NAME) 'len'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 20): NAME(NAME) 's'
[04](01, 20)-(01, 21): RPAR(OP) ')'
[04](01, 22)-(01, 25): NAME(NAME) 'and'
[04](01, 26)-(01, 27): NAME(NAME) 's'
[04](01, 27)-(01, 28): LSQB(OP) '['
[04](01, 28)-(01, 29): NAME(NAME) 'i'
[04](01, 29)-(01, 30): RSQB(OP) ']'
[04](01, 31)-(01, 33): EQEQUAL(OP) '=='
[04](01, 34)-(01, 37): STRING(STRING) '" "'
[04](01, 37)-(01, 38): RPAR(OP) ')'
[04](01, 38)-(01, 39): COLON(OP) ':'
[04](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[05](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[05](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 09): NAME(NAME) 'while'
[07](01, 09)-(01, 10): LPAR(OP) '('
[07](01, 10)-(01, 11): NAME(NAME) 'i'
[07](01, 11)-(01, 12): LESS(OP) '<'
[07](01, 12)-(01, 15): NAME(NAME) 'len'
[07](01, 15)-(01, 16): LPAR(OP) '('
[07](01, 16)-(01, 17): NAME(NAME) 's'
[07](01, 17)-(01, 18): RPAR(OP) ')'
[07](01, 18)-(01, 19): RPAR(OP) ')'
[07](01, 19)-(01, 20): COLON(OP) ':'
[07](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 13): NAME(NAME) 'while'
[09](01, 13)-(01, 14): LPAR(OP) '('
[09](01, 14)-(01, 15): NAME(NAME) 'i'
[09](01, 15)-(01, 16): LESS(OP) '<'
[09](01, 16)-(01, 19): NAME(NAME) 'len'
[09](01, 19)-(01, 20): LPAR(OP) '('
[09](01, 20)-(01, 21): NAME(NAME) 's'
[09](01, 21)-(01, 22): RPAR(OP) ')'
[09](01, 23)-(01, 26): NAME(NAME) 'and'
[09](01, 27)-(01, 28): NAME(NAME) 's'
[09](01, 28)-(01, 29): LSQB(OP) '['
[09](01, 29)-(01, 30): NAME(NAME) 'i'
[09](01, 30)-(01, 31): RSQB(OP) ']'
[09](01, 32)-(01, 34): NOTEQUAL(OP) '!='
[09](01, 35)-(01, 38): STRING(STRING) '" "'
[09](01, 38)-(01, 39): RPAR(OP) ')'
[09](01, 39)-(01, 40): COLON(OP) ':'
[09](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 18): NAME(NAME) 'result'
[10](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[10](01, 22)-(01, 23): NAME(NAME) 's'
[10](01, 23)-(01, 24): LSQB(OP) '['
[10](01, 24)-(01, 25): NAME(NAME) 'i'
[10](01, 25)-(01, 26): RSQB(OP) ']'
[10](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 13): NAME(NAME) 'i'
[11](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[11](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[11](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 13): NAME(NAME) 'while'
[13](01, 14)-(01, 15): LPAR(OP) '('
[13](01, 15)-(01, 16): NAME(NAME) 'i'
[13](01, 17)-(01, 18): LESS(OP) '<'
[13](01, 19)-(01, 22): NAME(NAME) 'len'
[13](01, 22)-(01, 23): LPAR(OP) '('
[13](01, 23)-(01, 24): NAME(NAME) 's'
[13](01, 24)-(01, 25): RPAR(OP) ')'
[13](01, 26)-(01, 29): NAME(NAME) 'and'
[13](01, 30)-(01, 31): NAME(NAME) 's'
[13](01, 31)-(01, 32): LSQB(OP) '['
[13](01, 32)-(01, 33): NAME(NAME) 'i'
[13](01, 33)-(01, 34): RSQB(OP) ']'
[13](01, 35)-(01, 37): EQEQUAL(OP) '=='
[13](01, 38)-(01, 41): STRING(STRING) '" "'
[13](01, 41)-(01, 42): RPAR(OP) ')'
[13](01, 42)-(01, 43): COLON(OP) ':'
[13](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 13): NAME(NAME) 'i'
[14](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[14](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[14](01, 18)-(01, 19): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

