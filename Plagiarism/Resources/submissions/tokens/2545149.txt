[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'types'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 14): STRING(STRING) '"ACGT"'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 13): NAME(NAME) 'print_dna'
[03](01, 13)-(01, 14): LPAR(OP) '('
[03](01, 14)-(01, 15): NAME(NAME) 'n'
[03](01, 15)-(01, 16): COMMA(OP) ','
[03](01, 17)-(01, 23): NAME(NAME) 'output'
[03](01, 23)-(01, 24): RPAR(OP) ')'
[03](01, 24)-(01, 25): COLON(OP) ':'
[03](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 10): NAME(NAME) 'len'
[04](01, 10)-(01, 11): LPAR(OP) '('
[04](01, 11)-(01, 17): NAME(NAME) 'output'
[04](01, 17)-(01, 18): RPAR(OP) ')'
[04](01, 19)-(01, 21): EQEQUAL(OP) '=='
[04](01, 22)-(01, 23): NAME(NAME) 'n'
[04](01, 23)-(01, 24): COLON(OP) ':'
[04](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 13): NAME(NAME) 'print'
[05](01, 13)-(01, 14): LPAR(OP) '('
[05](01, 14)-(01, 20): NAME(NAME) 'output'
[05](01, 20)-(01, 21): RPAR(OP) ')'
[05](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 08): NAME(NAME) 'else'
[06](01, 08)-(01, 09): COLON(OP) ':'
[06](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 11): NAME(NAME) 'for'
[07](01, 12)-(01, 13): NAME(NAME) 'i'
[07](01, 14)-(01, 16): NAME(NAME) 'in'
[07](01, 17)-(01, 22): NAME(NAME) 'types'
[07](01, 22)-(01, 23): COLON(OP) ':'
[07](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 21): NAME(NAME) 'print_dna'
[08](01, 21)-(01, 22): LPAR(OP) '('
[08](01, 22)-(01, 23): NAME(NAME) 'n'
[08](01, 23)-(01, 24): COMMA(OP) ','
[08](01, 25)-(01, 31): NAME(NAME) 'output'
[08](01, 32)-(01, 33): PLUS(OP) '+'
[08](01, 34)-(01, 35): NAME(NAME) 'i'
[08](01, 35)-(01, 36): RPAR(OP) ')'
[08](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 09): NAME(NAME) 'print_dna'
[11](01, 09)-(01, 10): LPAR(OP) '('
[11](01, 10)-(01, 13): NAME(NAME) 'int'
[11](01, 13)-(01, 14): LPAR(OP) '('
[11](01, 14)-(01, 19): NAME(NAME) 'input'
[11](01, 19)-(01, 20): LPAR(OP) '('
[11](01, 20)-(01, 29): STRING(STRING) '"n = ?\\n"'
[11](01, 29)-(01, 30): RPAR(OP) ')'
[11](01, 30)-(01, 31): RPAR(OP) ')'
[11](01, 31)-(01, 32): COMMA(OP) ','
[11](01, 33)-(01, 35): STRING(STRING) '""'
[11](01, 35)-(01, 36): RPAR(OP) ')'
[11](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

