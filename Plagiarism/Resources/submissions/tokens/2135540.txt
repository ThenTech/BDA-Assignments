[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): NAME(NAME) 'string1'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 15): NAME(NAME) 'input'
[02](01, 15)-(01, 16): LPAR(OP) '('
[02](01, 16)-(01, 27): STRING(STRING) '"string1: "'
[02](01, 27)-(01, 28): RPAR(OP) ')'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 07): NAME(NAME) 'string2'
[03](01, 08)-(01, 09): EQUAL(OP) '='
[03](01, 10)-(01, 15): NAME(NAME) 'input'
[03](01, 15)-(01, 16): LPAR(OP) '('
[03](01, 16)-(01, 27): STRING(STRING) '"string2: "'
[03](01, 27)-(01, 28): RPAR(OP) ')'
[03](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NAME(NAME) 'i'
[05](01, 02)-(01, 03): EQUAL(OP) '='
[05](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[05](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NAME(NAME) 'y'
[06](01, 02)-(01, 03): EQUAL(OP) '='
[06](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[06](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 05): NAME(NAME) 'while'
[09](01, 06)-(01, 07): NAME(NAME) 'i'
[09](01, 07)-(01, 08): PLUS(OP) '+'
[09](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[09](01, 10)-(01, 12): LESSEQUAL(OP) '<='
[09](01, 13)-(01, 16): NAME(NAME) 'len'
[09](01, 16)-(01, 17): LPAR(OP) '('
[09](01, 17)-(01, 24): NAME(NAME) 'string1'
[09](01, 24)-(01, 25): RPAR(OP) ')'
[09](01, 25)-(01, 26): COLON(OP) ':'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 05): NAME(NAME) 'y'
[10](01, 06)-(01, 07): EQUAL(OP) '='
[10](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[10](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 16): NAME(NAME) 'Char_string1'
[11](01, 17)-(01, 18): EQUAL(OP) '='
[11](01, 19)-(01, 26): NAME(NAME) 'string1'
[11](01, 26)-(01, 27): LSQB(OP) '['
[11](01, 27)-(01, 28): NAME(NAME) 'i'
[11](01, 28)-(01, 29): RSQB(OP) ']'
[11](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 09): NAME(NAME) 'while'
[12](01, 10)-(01, 11): NAME(NAME) 'y'
[12](01, 11)-(01, 12): PLUS(OP) '+'
[12](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[12](01, 14)-(01, 16): LESSEQUAL(OP) '<='
[12](01, 17)-(01, 20): NAME(NAME) 'len'
[12](01, 20)-(01, 21): LPAR(OP) '('
[12](01, 21)-(01, 28): NAME(NAME) 'string2'
[12](01, 28)-(01, 29): RPAR(OP) ')'
[12](01, 29)-(01, 30): COLON(OP) ':'
[12](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 12): NAME(NAME) 'y'
[13](01, 12)-(01, 13): PLUS(OP) '+'
[13](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[13](01, 15)-(01, 17): EQEQUAL(OP) '=='
[13](01, 18)-(01, 21): NAME(NAME) 'len'
[13](01, 21)-(01, 22): LPAR(OP) '('
[13](01, 22)-(01, 29): NAME(NAME) 'string1'
[13](01, 29)-(01, 30): RPAR(OP) ')'
[13](01, 31)-(01, 34): NAME(NAME) 'and'
[13](01, 35)-(01, 47): NAME(NAME) 'Char_string1'
[13](01, 48)-(01, 50): NOTEQUAL(OP) '!='
[13](01, 51)-(01, 58): NAME(NAME) 'string2'
[13](01, 58)-(01, 59): LSQB(OP) '['
[13](01, 59)-(01, 60): NAME(NAME) 'y'
[13](01, 60)-(01, 61): RSQB(OP) ']'
[13](01, 61)-(01, 62): COLON(OP) ':'
[13](01, 62)-(01, 63): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 17): NAME(NAME) 'print'
[14](01, 17)-(01, 18): LPAR(OP) '('
[14](01, 18)-(01, 25): NAME(NAME) 'string1'
[14](01, 25)-(01, 26): COMMA(OP) ','
[14](01, 26)-(01, 31): STRING(STRING) '"and"'
[14](01, 31)-(01, 32): COMMA(OP) ','
[14](01, 33)-(01, 40): NAME(NAME) 'string2'
[14](01, 40)-(01, 41): COMMA(OP) ','
[14](01, 42)-(01, 60): STRING(STRING) '"are not anagrams"'
[14](01, 60)-(01, 61): RPAR(OP) ')'
[14](01, 61)-(01, 62): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 16): NAME(NAME) 'exit'
[15](01, 16)-(01, 17): LPAR(OP) '('
[15](01, 17)-(01, 18): RPAR(OP) ')'
[15](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 12): NAME(NAME) 'elif'
[16](01, 13)-(01, 25): NAME(NAME) 'Char_string1'
[16](01, 26)-(01, 28): EQEQUAL(OP) '=='
[16](01, 29)-(01, 36): NAME(NAME) 'string2'
[16](01, 36)-(01, 37): LSQB(OP) '['
[16](01, 37)-(01, 38): NAME(NAME) 'y'
[16](01, 38)-(01, 39): RSQB(OP) ']'
[16](01, 39)-(01, 40): COLON(OP) ':'
[16](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 17): NAME(NAME) 'break'
[17](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 09): NAME(NAME) 'y'
[18](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[18](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[18](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 05): NAME(NAME) 'i'
[19](01, 06)-(01, 08): PLUSEQUAL(OP) '+='
[19](01, 09)-(01, 10): NUMBER(NUMBER) '1'
[19](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 04)-(01, 05): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 02): NAME(NAME) 'if'
[21](01, 03)-(01, 04): LPAR(OP) '('
[21](01, 04)-(01, 05): NAME(NAME) 'i'
[21](01, 05)-(01, 06): PLUS(OP) '+'
[21](01, 06)-(01, 07): NUMBER(NUMBER) '1'
[21](01, 07)-(01, 08): RPAR(OP) ')'
[21](01, 09)-(01, 10): GREATER(OP) '>'
[21](01, 11)-(01, 14): NAME(NAME) 'len'
[21](01, 14)-(01, 15): LPAR(OP) '('
[21](01, 15)-(01, 22): NAME(NAME) 'string1'
[21](01, 22)-(01, 23): RPAR(OP) ')'
[21](01, 23)-(01, 24): COLON(OP) ':'
[21](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 09): NAME(NAME) 'print'
[22](01, 09)-(01, 10): LPAR(OP) '('
[22](01, 10)-(01, 17): NAME(NAME) 'string1'
[22](01, 17)-(01, 18): COMMA(OP) ','
[22](01, 18)-(01, 23): STRING(STRING) '"and"'
[22](01, 23)-(01, 24): COMMA(OP) ','
[22](01, 25)-(01, 32): NAME(NAME) 'string2'
[22](01, 32)-(01, 33): COMMA(OP) ','
[22](01, 34)-(01, 48): STRING(STRING) '"are anagrams"'
[22](01, 48)-(01, 49): RPAR(OP) ')'
[22](01, 49)-(01, 50): NEWLINE(NEWLINE)
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

