[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'varalf'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 37): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[00](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'def'
[02](01, 04)-(01, 16): NAME(NAME) 'encodeletter'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 18): NAME(NAME) 's'
[02](01, 18)-(01, 19): COMMA(OP) ','
[02](01, 19)-(01, 20): NAME(NAME) 'n'
[02](01, 20)-(01, 21): COMMA(OP) ','
[02](01, 21)-(01, 22): NAME(NAME) 'd'
[02](01, 22)-(01, 23): RPAR(OP) ')'
[02](01, 23)-(01, 24): COLON(OP) ':'
[02](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 05): NAME(NAME) 'k'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 18): NAME(NAME) 'range'
[04](01, 19)-(01, 20): LPAR(OP) '('
[04](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[04](01, 21)-(01, 22): COMMA(OP) ','
[04](01, 22)-(01, 24): NUMBER(NUMBER) '26'
[04](01, 24)-(01, 25): RPAR(OP) ')'
[04](01, 25)-(01, 26): COLON(OP) ':'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 12): NAME(NAME) 'i'
[05](01, 12)-(01, 13): GREATER(OP) '>'
[05](01, 13)-(01, 15): NUMBER(NUMBER) '25'
[05](01, 15)-(01, 16): COLON(OP) ':'
[05](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 18): NAME(NAME) 'return'
[06](01, 19)-(01, 24): NAME(NAME) 'False'
[06](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 17): NAME(NAME) 'varalf'
[07](01, 17)-(01, 18): LSQB(OP) '['
[07](01, 18)-(01, 19): NAME(NAME) 'i'
[07](01, 19)-(01, 20): RSQB(OP) ']'
[07](01, 20)-(01, 22): EQEQUAL(OP) '=='
[07](01, 22)-(01, 23): NAME(NAME) 's'
[07](01, 23)-(01, 24): COLON(OP) ':'
[07](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 14): NAME(NAME) 'if'
[08](01, 15)-(01, 16): NAME(NAME) 'd'
[08](01, 16)-(01, 18): EQEQUAL(OP) '=='
[08](01, 18)-(01, 21): STRING(STRING) '"e"'
[08](01, 21)-(01, 22): COLON(OP) ':'
[08](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 17): NAME(NAME) 'k'
[09](01, 17)-(01, 18): EQUAL(OP) '='
[09](01, 18)-(01, 19): NAME(NAME) 'i'
[09](01, 19)-(01, 20): PLUS(OP) '+'
[09](01, 20)-(01, 23): NAME(NAME) 'int'
[09](01, 23)-(01, 24): LPAR(OP) '('
[09](01, 24)-(01, 25): NAME(NAME) 'n'
[09](01, 25)-(01, 26): RPAR(OP) ')'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 14): NAME(NAME) 'if'
[10](01, 15)-(01, 16): NAME(NAME) 'd'
[10](01, 16)-(01, 18): EQEQUAL(OP) '=='
[10](01, 18)-(01, 21): STRING(STRING) '"d"'
[10](01, 21)-(01, 22): COLON(OP) ':'
[10](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 17): NAME(NAME) 'k'
[11](01, 17)-(01, 18): EQUAL(OP) '='
[11](01, 18)-(01, 19): NAME(NAME) 'i'
[11](01, 19)-(01, 20): MINUS(OP) '-'
[11](01, 20)-(01, 23): NAME(NAME) 'int'
[11](01, 23)-(01, 24): LPAR(OP) '('
[11](01, 24)-(01, 25): NAME(NAME) 'n'
[11](01, 25)-(01, 26): RPAR(OP) ')'
[11](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 16)-(01, 17): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 17): NAME(NAME) 'while'
[13](01, 18)-(01, 19): NAME(NAME) 'k'
[13](01, 19)-(01, 20): GREATER(OP) '>'
[13](01, 20)-(01, 22): NUMBER(NUMBER) '25'
[13](01, 23)-(01, 25): NAME(NAME) 'or'
[13](01, 26)-(01, 27): NAME(NAME) 'k'
[13](01, 27)-(01, 28): LESS(OP) '<'
[13](01, 28)-(01, 29): NUMBER(NUMBER) '0'
[13](01, 29)-(01, 30): COLON(OP) ':'
[13](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 18): NAME(NAME) 'if'
[14](01, 19)-(01, 20): NAME(NAME) 'k'
[14](01, 20)-(01, 21): GREATER(OP) '>'
[14](01, 21)-(01, 23): NUMBER(NUMBER) '25'
[14](01, 23)-(01, 24): COLON(OP) ':'
[14](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 20): INDENT(INDENT) '                    '
[15](01, 20)-(01, 21): NAME(NAME) 'k'
[15](01, 21)-(01, 23): MINEQUAL(OP) '-='
[15](01, 23)-(01, 25): NUMBER(NUMBER) '26'
[15](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 20): NAME(NAME) 'elif'
[16](01, 21)-(01, 22): NAME(NAME) 'k'
[16](01, 22)-(01, 23): LESS(OP) '<'
[16](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[16](01, 24)-(01, 25): COLON(OP) ':'
[16](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 20): INDENT(INDENT) '                    '
[17](01, 20)-(01, 21): NAME(NAME) 'k'
[17](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[17](01, 23)-(01, 25): NUMBER(NUMBER) '26'
[17](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 18): NAME(NAME) 'return'
[18](01, 19)-(01, 25): NAME(NAME) 'varalf'
[18](01, 25)-(01, 26): LSQB(OP) '['
[18](01, 26)-(01, 27): NAME(NAME) 'k'
[18](01, 27)-(01, 28): RSQB(OP) ']'
[18](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 03): NAME(NAME) 'def'
[21](01, 04)-(01, 10): NAME(NAME) 'encode'
[21](01, 10)-(01, 11): LPAR(OP) '('
[21](01, 11)-(01, 12): NAME(NAME) 's'
[21](01, 12)-(01, 13): COMMA(OP) ','
[21](01, 14)-(01, 15): NAME(NAME) 'n'
[21](01, 15)-(01, 16): RPAR(OP) ')'
[21](01, 16)-(01, 17): COLON(OP) ':'
[21](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 07): NAME(NAME) 'for'
[22](01, 08)-(01, 09): NAME(NAME) 'j'
[22](01, 10)-(01, 12): NAME(NAME) 'in'
[22](01, 13)-(01, 18): NAME(NAME) 'range'
[22](01, 19)-(01, 20): LPAR(OP) '('
[22](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[22](01, 21)-(01, 22): COMMA(OP) ','
[22](01, 22)-(01, 25): NAME(NAME) 'len'
[22](01, 25)-(01, 26): LPAR(OP) '('
[22](01, 26)-(01, 27): NAME(NAME) 's'
[22](01, 27)-(01, 28): RPAR(OP) ')'
[22](01, 28)-(01, 29): RPAR(OP) ')'
[22](01, 29)-(01, 30): COLON(OP) ':'
[22](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 10): NAME(NAME) 'if'
[23](01, 11)-(01, 23): NAME(NAME) 'encodeletter'
[23](01, 23)-(01, 24): LPAR(OP) '('
[23](01, 24)-(01, 25): NAME(NAME) 's'
[23](01, 25)-(01, 26): LSQB(OP) '['
[23](01, 26)-(01, 27): NAME(NAME) 'j'
[23](01, 27)-(01, 28): RSQB(OP) ']'
[23](01, 28)-(01, 29): COMMA(OP) ','
[23](01, 29)-(01, 30): NAME(NAME) 'n'
[23](01, 30)-(01, 31): COMMA(OP) ','
[23](01, 31)-(01, 34): STRING(STRING) '"e"'
[23](01, 34)-(01, 35): RPAR(OP) ')'
[23](01, 35)-(01, 37): NOTEQUAL(OP) '!='
[23](01, 37)-(01, 42): NAME(NAME) 'False'
[23](01, 42)-(01, 43): COLON(OP) ':'
[23](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): INDENT(INDENT) '            '
[24](01, 12)-(01, 13): NAME(NAME) 's'
[24](01, 13)-(01, 14): EQUAL(OP) '='
[24](01, 15)-(01, 16): NAME(NAME) 's'
[24](01, 16)-(01, 17): LSQB(OP) '['
[24](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[24](01, 18)-(01, 19): COLON(OP) ':'
[24](01, 19)-(01, 20): NAME(NAME) 'j'
[24](01, 20)-(01, 21): RSQB(OP) ']'
[24](01, 21)-(01, 22): PLUS(OP) '+'
[24](01, 22)-(01, 34): NAME(NAME) 'encodeletter'
[24](01, 34)-(01, 35): LPAR(OP) '('
[24](01, 35)-(01, 36): NAME(NAME) 's'
[24](01, 36)-(01, 37): LSQB(OP) '['
[24](01, 37)-(01, 38): NAME(NAME) 'j'
[24](01, 38)-(01, 39): RSQB(OP) ']'
[24](01, 39)-(01, 40): COMMA(OP) ','
[24](01, 40)-(01, 41): NAME(NAME) 'n'
[24](01, 41)-(01, 42): COMMA(OP) ','
[24](01, 42)-(01, 45): STRING(STRING) '"e"'
[24](01, 45)-(01, 46): RPAR(OP) ')'
[24](01, 46)-(01, 47): PLUS(OP) '+'
[24](01, 47)-(01, 48): NAME(NAME) 's'
[24](01, 48)-(01, 49): LSQB(OP) '['
[24](01, 49)-(01, 50): NAME(NAME) 'j'
[24](01, 50)-(01, 51): PLUS(OP) '+'
[24](01, 51)-(01, 52): NUMBER(NUMBER) '1'
[24](01, 52)-(01, 53): COLON(OP) ':'
[24](01, 53)-(01, 56): NAME(NAME) 'len'
[24](01, 56)-(01, 57): LPAR(OP) '('
[24](01, 57)-(01, 58): NAME(NAME) 's'
[24](01, 58)-(01, 59): RPAR(OP) ')'
[24](01, 59)-(01, 60): RSQB(OP) ']'
[24](01, 60)-(01, 61): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 10): NAME(NAME) 'return'
[25](01, 11)-(01, 12): NAME(NAME) 's'
[25](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 01): NL(NL) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 03): NAME(NAME) 'def'
[28](01, 04)-(01, 10): NAME(NAME) 'decode'
[28](01, 10)-(01, 11): LPAR(OP) '('
[28](01, 11)-(01, 12): NAME(NAME) 's'
[28](01, 12)-(01, 13): COMMA(OP) ','
[28](01, 14)-(01, 15): NAME(NAME) 'n'
[28](01, 15)-(01, 16): RPAR(OP) ')'
[28](01, 16)-(01, 17): COLON(OP) ':'
[28](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 07): NAME(NAME) 'for'
[29](01, 08)-(01, 09): NAME(NAME) 'j'
[29](01, 10)-(01, 12): NAME(NAME) 'in'
[29](01, 13)-(01, 18): NAME(NAME) 'range'
[29](01, 19)-(01, 20): LPAR(OP) '('
[29](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[29](01, 21)-(01, 22): COMMA(OP) ','
[29](01, 22)-(01, 25): NAME(NAME) 'len'
[29](01, 25)-(01, 26): LPAR(OP) '('
[29](01, 26)-(01, 27): NAME(NAME) 's'
[29](01, 27)-(01, 28): RPAR(OP) ')'
[29](01, 28)-(01, 29): RPAR(OP) ')'
[29](01, 29)-(01, 30): COLON(OP) ':'
[29](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 10): NAME(NAME) 'if'
[30](01, 11)-(01, 23): NAME(NAME) 'encodeletter'
[30](01, 23)-(01, 24): LPAR(OP) '('
[30](01, 24)-(01, 25): NAME(NAME) 's'
[30](01, 25)-(01, 26): LSQB(OP) '['
[30](01, 26)-(01, 27): NAME(NAME) 'j'
[30](01, 27)-(01, 28): RSQB(OP) ']'
[30](01, 28)-(01, 29): COMMA(OP) ','
[30](01, 29)-(01, 30): NAME(NAME) 'n'
[30](01, 30)-(01, 31): COMMA(OP) ','
[30](01, 31)-(01, 34): STRING(STRING) '"d"'
[30](01, 34)-(01, 35): RPAR(OP) ')'
[30](01, 35)-(01, 37): NOTEQUAL(OP) '!='
[30](01, 37)-(01, 42): NAME(NAME) 'False'
[30](01, 42)-(01, 43): COLON(OP) ':'
[30](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 13): NAME(NAME) 's'
[31](01, 13)-(01, 14): EQUAL(OP) '='
[31](01, 15)-(01, 16): NAME(NAME) 's'
[31](01, 16)-(01, 17): LSQB(OP) '['
[31](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[31](01, 18)-(01, 19): COLON(OP) ':'
[31](01, 19)-(01, 20): NAME(NAME) 'j'
[31](01, 20)-(01, 21): RSQB(OP) ']'
[31](01, 21)-(01, 22): PLUS(OP) '+'
[31](01, 22)-(01, 34): NAME(NAME) 'encodeletter'
[31](01, 34)-(01, 35): LPAR(OP) '('
[31](01, 35)-(01, 36): NAME(NAME) 's'
[31](01, 36)-(01, 37): LSQB(OP) '['
[31](01, 37)-(01, 38): NAME(NAME) 'j'
[31](01, 38)-(01, 39): RSQB(OP) ']'
[31](01, 39)-(01, 40): COMMA(OP) ','
[31](01, 40)-(01, 41): NAME(NAME) 'n'
[31](01, 41)-(01, 42): COMMA(OP) ','
[31](01, 42)-(01, 45): STRING(STRING) '"d"'
[31](01, 45)-(01, 46): RPAR(OP) ')'
[31](01, 46)-(01, 47): PLUS(OP) '+'
[31](01, 47)-(01, 48): NAME(NAME) 's'
[31](01, 48)-(01, 49): LSQB(OP) '['
[31](01, 49)-(01, 50): NAME(NAME) 'j'
[31](01, 50)-(01, 51): PLUS(OP) '+'
[31](01, 51)-(01, 52): NUMBER(NUMBER) '1'
[31](01, 52)-(01, 53): COLON(OP) ':'
[31](01, 53)-(01, 56): NAME(NAME) 'len'
[31](01, 56)-(01, 57): LPAR(OP) '('
[31](01, 57)-(01, 58): NAME(NAME) 's'
[31](01, 58)-(01, 59): RPAR(OP) ')'
[31](01, 59)-(01, 60): RSQB(OP) ']'
[31](01, 60)-(01, 61): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 10): NAME(NAME) 'return'
[32](01, 11)-(01, 12): NAME(NAME) 's'
[32](01, 12)-(01, 13): NEWLINE(NEWLINE)
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

