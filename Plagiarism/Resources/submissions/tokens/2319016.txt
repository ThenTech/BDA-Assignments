[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'a'
[01](01, 01)-(01, 02): EQUAL(OP) '='
[01](01, 02)-(01, 05): NAME(NAME) 'int'
[01](01, 05)-(01, 06): LPAR(OP) '('
[01](01, 06)-(01, 11): NAME(NAME) 'input'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 32): STRING(STRING) '"stukken van 1 cent"'
[01](01, 32)-(01, 33): RPAR(OP) ')'
[01](01, 33)-(01, 34): RPAR(OP) ')'
[01](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'b'
[02](01, 01)-(01, 02): EQUAL(OP) '='
[02](01, 02)-(01, 05): NAME(NAME) 'int'
[02](01, 05)-(01, 06): LPAR(OP) '('
[02](01, 06)-(01, 11): NAME(NAME) 'input'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 32): STRING(STRING) '"stukken van 2 cent"'
[02](01, 32)-(01, 33): RPAR(OP) ')'
[02](01, 33)-(01, 34): RPAR(OP) ')'
[02](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'c'
[03](01, 01)-(01, 02): EQUAL(OP) '='
[03](01, 02)-(01, 05): NAME(NAME) 'int'
[03](01, 05)-(01, 06): LPAR(OP) '('
[03](01, 06)-(01, 11): NAME(NAME) 'input'
[03](01, 11)-(01, 12): LPAR(OP) '('
[03](01, 12)-(01, 32): STRING(STRING) '"stukken van 5 cent"'
[03](01, 32)-(01, 33): RPAR(OP) ')'
[03](01, 33)-(01, 34): RPAR(OP) ')'
[03](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NAME(NAME) 'd'
[04](01, 01)-(01, 02): EQUAL(OP) '='
[04](01, 02)-(01, 05): NAME(NAME) 'int'
[04](01, 05)-(01, 06): LPAR(OP) '('
[04](01, 06)-(01, 11): NAME(NAME) 'input'
[04](01, 11)-(01, 12): LPAR(OP) '('
[04](01, 12)-(01, 33): STRING(STRING) '"stukken van 10 cent"'
[04](01, 33)-(01, 34): RPAR(OP) ')'
[04](01, 34)-(01, 35): RPAR(OP) ')'
[04](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NAME(NAME) 'e'
[05](01, 01)-(01, 02): EQUAL(OP) '='
[05](01, 02)-(01, 05): NAME(NAME) 'int'
[05](01, 05)-(01, 06): LPAR(OP) '('
[05](01, 06)-(01, 11): NAME(NAME) 'input'
[05](01, 11)-(01, 12): LPAR(OP) '('
[05](01, 12)-(01, 33): STRING(STRING) '"stukken van 20 cent"'
[05](01, 33)-(01, 34): RPAR(OP) ')'
[05](01, 34)-(01, 35): RPAR(OP) ')'
[05](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NAME(NAME) 'a'
[07](01, 01)-(01, 02): EQUAL(OP) '='
[07](01, 02)-(01, 03): LPAR(OP) '('
[07](01, 03)-(01, 04): NAME(NAME) 'a'
[07](01, 04)-(01, 05): STAR(OP) '*'
[07](01, 05)-(01, 09): NUMBER(NUMBER) '0.01'
[07](01, 09)-(01, 10): RPAR(OP) ')'
[07](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NAME(NAME) 'b'
[08](01, 01)-(01, 02): EQUAL(OP) '='
[08](01, 02)-(01, 03): LPAR(OP) '('
[08](01, 03)-(01, 04): NAME(NAME) 'b'
[08](01, 04)-(01, 05): STAR(OP) '*'
[08](01, 05)-(01, 09): NUMBER(NUMBER) '0.02'
[08](01, 09)-(01, 10): RPAR(OP) ')'
[08](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NAME(NAME) 'c'
[09](01, 01)-(01, 02): EQUAL(OP) '='
[09](01, 02)-(01, 03): LPAR(OP) '('
[09](01, 03)-(01, 04): NAME(NAME) 'c'
[09](01, 04)-(01, 05): STAR(OP) '*'
[09](01, 05)-(01, 09): NUMBER(NUMBER) '0.05'
[09](01, 09)-(01, 10): RPAR(OP) ')'
[09](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NAME(NAME) 'd'
[10](01, 01)-(01, 02): EQUAL(OP) '='
[10](01, 02)-(01, 03): LPAR(OP) '('
[10](01, 03)-(01, 04): NAME(NAME) 'd'
[10](01, 04)-(01, 05): STAR(OP) '*'
[10](01, 05)-(01, 08): NUMBER(NUMBER) '0.1'
[10](01, 08)-(01, 09): RPAR(OP) ')'
[10](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NAME(NAME) 'e'
[11](01, 01)-(01, 02): EQUAL(OP) '='
[11](01, 02)-(01, 03): LPAR(OP) '('
[11](01, 03)-(01, 04): NAME(NAME) 'e'
[11](01, 04)-(01, 05): STAR(OP) '*'
[11](01, 05)-(01, 08): NUMBER(NUMBER) '0.2'
[11](01, 08)-(01, 09): RPAR(OP) ')'
[11](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 05): NAME(NAME) 'euros'
[13](01, 05)-(01, 06): EQUAL(OP) '='
[13](01, 07)-(01, 10): NAME(NAME) 'int'
[13](01, 10)-(01, 11): LPAR(OP) '('
[13](01, 11)-(01, 12): NAME(NAME) 'a'
[13](01, 12)-(01, 13): PLUS(OP) '+'
[13](01, 13)-(01, 14): NAME(NAME) 'b'
[13](01, 14)-(01, 15): PLUS(OP) '+'
[13](01, 15)-(01, 16): NAME(NAME) 'c'
[13](01, 16)-(01, 17): PLUS(OP) '+'
[13](01, 17)-(01, 18): NAME(NAME) 'd'
[13](01, 18)-(01, 19): PLUS(OP) '+'
[13](01, 19)-(01, 20): NAME(NAME) 'e'
[13](01, 20)-(01, 21): RPAR(OP) ')'
[13](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 05): NAME(NAME) 'cents'
[14](01, 05)-(01, 06): EQUAL(OP) '='
[14](01, 07)-(01, 12): NAME(NAME) 'float'
[14](01, 12)-(01, 13): LPAR(OP) '('
[14](01, 13)-(01, 14): NAME(NAME) 'a'
[14](01, 14)-(01, 15): PLUS(OP) '+'
[14](01, 15)-(01, 16): NAME(NAME) 'b'
[14](01, 16)-(01, 17): PLUS(OP) '+'
[14](01, 17)-(01, 18): NAME(NAME) 'c'
[14](01, 18)-(01, 19): PLUS(OP) '+'
[14](01, 19)-(01, 20): NAME(NAME) 'd'
[14](01, 20)-(01, 21): PLUS(OP) '+'
[14](01, 21)-(01, 22): NAME(NAME) 'e'
[14](01, 22)-(01, 23): RPAR(OP) ')'
[14](01, 24)-(01, 25): MINUS(OP) '-'
[14](01, 26)-(01, 31): NAME(NAME) 'euros'
[14](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 05): NAME(NAME) 'print'
[16](01, 05)-(01, 06): LPAR(OP) '('
[16](01, 06)-(01, 17): STRING(STRING) '"You have "'
[16](01, 18)-(01, 19): PLUS(OP) '+'
[16](01, 20)-(01, 23): NAME(NAME) 'str'
[16](01, 23)-(01, 24): LPAR(OP) '('
[16](01, 24)-(01, 29): NAME(NAME) 'euros'
[16](01, 29)-(01, 30): RPAR(OP) ')'
[16](01, 31)-(01, 32): PLUS(OP) '+'
[16](01, 33)-(01, 36): STRING(STRING) '"."'
[16](01, 37)-(01, 38): PLUS(OP) '+'
[16](01, 39)-(01, 42): NAME(NAME) 'str'
[16](01, 42)-(01, 43): LPAR(OP) '('
[16](01, 43)-(01, 48): NAME(NAME) 'cents'
[16](01, 48)-(01, 49): RPAR(OP) ')'
[16](01, 50)-(01, 51): PLUS(OP) '+'
[16](01, 51)-(01, 59): STRING(STRING) '" euro!"'
[16](01, 59)-(01, 60): RPAR(OP) ')'
[16](01, 60)-(01, 61): NEWLINE(NEWLINE)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

