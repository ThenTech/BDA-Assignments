[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 12): NAME(NAME) 'is_prime'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 14): NAME(NAME) 'x'
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): COLON(OP) ':'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): NAME(NAME) 'x'
[01](01, 09)-(01, 10): PERCENT(OP) '%'
[01](01, 11)-(01, 12): NUMBER(NUMBER) '2'
[01](01, 13)-(01, 15): NOTEQUAL(OP) '!='
[01](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[01](01, 18)-(01, 21): NAME(NAME) 'and'
[01](01, 22)-(01, 23): NAME(NAME) 'x'
[01](01, 24)-(01, 25): PERCENT(OP) '%'
[01](01, 26)-(01, 27): NUMBER(NUMBER) '3'
[01](01, 28)-(01, 30): NOTEQUAL(OP) '!='
[01](01, 31)-(01, 32): NUMBER(NUMBER) '0'
[01](01, 33)-(01, 36): NAME(NAME) 'and'
[01](01, 37)-(01, 38): NAME(NAME) 'x'
[01](01, 39)-(01, 40): GREATER(OP) '>'
[01](01, 41)-(01, 42): NUMBER(NUMBER) '0'
[01](01, 43)-(01, 46): NAME(NAME) 'and'
[01](01, 47)-(01, 48): NAME(NAME) 'x'
[01](01, 49)-(01, 51): NOTEQUAL(OP) '!='
[01](01, 52)-(01, 53): NUMBER(NUMBER) '1'
[01](01, 54)-(01, 57): NAME(NAME) 'and'
[01](01, 58)-(01, 59): NAME(NAME) 'x'
[01](01, 60)-(01, 61): PERCENT(OP) '%'
[01](01, 62)-(01, 63): NUMBER(NUMBER) '5'
[01](01, 64)-(01, 66): NOTEQUAL(OP) '!='
[01](01, 67)-(01, 68): NUMBER(NUMBER) '0'
[01](01, 69)-(01, 72): NAME(NAME) 'and'
[01](01, 73)-(01, 74): NAME(NAME) 'x'
[01](01, 75)-(01, 76): PERCENT(OP) '%'
[01](01, 77)-(01, 78): NUMBER(NUMBER) '7'
[01](01, 79)-(01, 81): NOTEQUAL(OP) '!='
[01](01, 82)-(01, 83): NUMBER(NUMBER) '0'
[01](01, 83)-(01, 84): COLON(OP) ':'
[01](01, 84)-(01, 85): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 19): NAME(NAME) 'True'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'elif'
[03](01, 09)-(01, 10): NAME(NAME) 'x'
[03](01, 11)-(01, 13): EQEQUAL(OP) '=='
[03](01, 14)-(01, 15): NUMBER(NUMBER) '3'
[03](01, 16)-(01, 18): NAME(NAME) 'or'
[03](01, 19)-(01, 20): NAME(NAME) 'x'
[03](01, 21)-(01, 23): EQEQUAL(OP) '=='
[03](01, 24)-(01, 25): NUMBER(NUMBER) '2'
[03](01, 26)-(01, 28): NAME(NAME) 'or'
[03](01, 29)-(01, 30): NAME(NAME) 'x'
[03](01, 31)-(01, 33): EQEQUAL(OP) '=='
[03](01, 34)-(01, 35): NUMBER(NUMBER) '5'
[03](01, 36)-(01, 38): NAME(NAME) 'or'
[03](01, 39)-(01, 40): NAME(NAME) 'x'
[03](01, 41)-(01, 43): EQEQUAL(OP) '=='
[03](01, 44)-(01, 45): NUMBER(NUMBER) '7'
[03](01, 45)-(01, 46): COLON(OP) ':'
[03](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 19): NAME(NAME) 'True'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'else'
[05](01, 08)-(01, 09): COLON(OP) ':'
[05](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 14): NAME(NAME) 'return'
[06](01, 15)-(01, 20): NAME(NAME) 'False'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 05): NAME(NAME) 'print'
[07](01, 05)-(01, 06): LPAR(OP) '('
[07](01, 06)-(01, 14): NAME(NAME) 'is_prime'
[07](01, 14)-(01, 15): LPAR(OP) '('
[07](01, 15)-(01, 16): NUMBER(NUMBER) '3'
[07](01, 16)-(01, 17): RPAR(OP) ')'
[07](01, 17)-(01, 18): RPAR(OP) ')'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'def'
[09](01, 04)-(01, 19): NAME(NAME) 'all_primes_upto'
[09](01, 19)-(01, 20): LPAR(OP) '('
[09](01, 20)-(01, 21): NAME(NAME) 'x'
[09](01, 21)-(01, 22): RPAR(OP) ')'
[09](01, 22)-(01, 23): COLON(OP) ':'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 07): NAME(NAME) 'for'
[10](01, 08)-(01, 09): NAME(NAME) 'i'
[10](01, 10)-(01, 12): NAME(NAME) 'in'
[10](01, 13)-(01, 18): NAME(NAME) 'range'
[10](01, 18)-(01, 19): LPAR(OP) '('
[10](01, 19)-(01, 20): NAME(NAME) 'x'
[10](01, 20)-(01, 21): PLUS(OP) '+'
[10](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[10](01, 22)-(01, 23): RPAR(OP) ')'
[10](01, 23)-(01, 24): COLON(OP) ':'
[10](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 19): NAME(NAME) 'is_prime'
[11](01, 19)-(01, 20): LPAR(OP) '('
[11](01, 20)-(01, 21): NAME(NAME) 'i'
[11](01, 21)-(01, 22): RPAR(OP) ')'
[11](01, 22)-(01, 23): COLON(OP) ':'
[11](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 17): NAME(NAME) 'print'
[12](01, 17)-(01, 18): LPAR(OP) '('
[12](01, 18)-(01, 19): NAME(NAME) 'i'
[12](01, 19)-(01, 20): RPAR(OP) ')'
[12](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 10): NAME(NAME) 'return'
[13](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 05): NAME(NAME) 'print'
[14](01, 05)-(01, 06): LPAR(OP) '('
[14](01, 06)-(01, 21): NAME(NAME) 'all_primes_upto'
[14](01, 21)-(01, 22): LPAR(OP) '('
[14](01, 22)-(01, 24): NUMBER(NUMBER) '13'
[14](01, 24)-(01, 25): RPAR(OP) ')'
[14](01, 25)-(01, 26): RPAR(OP) ')'
[14](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 03): NAME(NAME) 'def'
[16](01, 04)-(01, 13): NAME(NAME) 'factorize'
[16](01, 13)-(01, 14): LPAR(OP) '('
[16](01, 14)-(01, 15): NAME(NAME) 'x'
[16](01, 15)-(01, 16): RPAR(OP) ')'
[16](01, 16)-(01, 17): COLON(OP) ':'
[16](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 07): NAME(NAME) 'for'
[17](01, 08)-(01, 09): NAME(NAME) 'x'
[17](01, 10)-(01, 12): NAME(NAME) 'in'
[17](01, 13)-(01, 18): NAME(NAME) 'range'
[17](01, 18)-(01, 19): LPAR(OP) '('
[17](01, 19)-(01, 23): NUMBER(NUMBER) '9999'
[17](01, 23)-(01, 24): RPAR(OP) ')'
[17](01, 24)-(01, 25): COLON(OP) ':'
[17](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 10): NAME(NAME) 'if'
[18](01, 11)-(01, 12): NAME(NAME) 'x'
[18](01, 13)-(01, 14): PERCENT(OP) '%'
[18](01, 15)-(01, 16): NUMBER(NUMBER) '2'
[18](01, 17)-(01, 19): EQEQUAL(OP) '=='
[18](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[18](01, 21)-(01, 22): COLON(OP) ':'
[18](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 13): NAME(NAME) 'x'
[19](01, 14)-(01, 15): EQUAL(OP) '='
[19](01, 17)-(01, 18): NAME(NAME) 'x'
[19](01, 19)-(01, 20): SLASH(OP) '/'
[19](01, 21)-(01, 22): NUMBER(NUMBER) '2'
[19](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 17): NAME(NAME) 'print'
[20](01, 17)-(01, 18): LPAR(OP) '('
[20](01, 18)-(01, 19): NUMBER(NUMBER) '2'
[20](01, 19)-(01, 20): RPAR(OP) ')'
[20](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 12): NAME(NAME) 'elif'
[21](01, 13)-(01, 14): NAME(NAME) 'x'
[21](01, 15)-(01, 16): PERCENT(OP) '%'
[21](01, 17)-(01, 18): NUMBER(NUMBER) '3'
[21](01, 19)-(01, 21): EQEQUAL(OP) '=='
[21](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[21](01, 23)-(01, 24): COLON(OP) ':'
[21](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 13): NAME(NAME) 'x'
[22](01, 14)-(01, 15): EQUAL(OP) '='
[22](01, 17)-(01, 18): NAME(NAME) 'x'
[22](01, 19)-(01, 20): SLASH(OP) '/'
[22](01, 21)-(01, 22): NUMBER(NUMBER) '3'
[22](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 17): NAME(NAME) 'print'
[23](01, 17)-(01, 18): LPAR(OP) '('
[23](01, 18)-(01, 19): NUMBER(NUMBER) '3'
[23](01, 19)-(01, 20): RPAR(OP) ')'
[23](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 12): NAME(NAME) 'elif'
[24](01, 13)-(01, 14): NAME(NAME) 'x'
[24](01, 15)-(01, 16): PERCENT(OP) '%'
[24](01, 17)-(01, 18): NUMBER(NUMBER) '5'
[24](01, 19)-(01, 21): EQEQUAL(OP) '=='
[24](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[24](01, 23)-(01, 24): COLON(OP) ':'
[24](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 13): NAME(NAME) 'x'
[25](01, 14)-(01, 15): EQUAL(OP) '='
[25](01, 17)-(01, 18): NAME(NAME) 'x'
[25](01, 19)-(01, 20): SLASH(OP) '/'
[25](01, 21)-(01, 22): NUMBER(NUMBER) '5'
[25](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 12): INDENT(INDENT) '            '
[26](01, 12)-(01, 17): NAME(NAME) 'print'
[26](01, 17)-(01, 18): LPAR(OP) '('
[26](01, 18)-(01, 19): NUMBER(NUMBER) '5'
[26](01, 19)-(01, 20): RPAR(OP) ')'
[26](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 12): NAME(NAME) 'elif'
[27](01, 13)-(01, 14): NAME(NAME) 'x'
[27](01, 15)-(01, 16): PERCENT(OP) '%'
[27](01, 17)-(01, 18): NUMBER(NUMBER) '7'
[27](01, 19)-(01, 21): EQEQUAL(OP) '=='
[27](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[27](01, 23)-(01, 24): COLON(OP) ':'
[27](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 13): NAME(NAME) 'x'
[28](01, 14)-(01, 15): EQUAL(OP) '='
[28](01, 17)-(01, 18): NAME(NAME) 'x'
[28](01, 19)-(01, 20): SLASH(OP) '/'
[28](01, 21)-(01, 22): NUMBER(NUMBER) '7'
[28](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 12): INDENT(INDENT) '            '
[29](01, 12)-(01, 17): NAME(NAME) 'print'
[29](01, 17)-(01, 18): LPAR(OP) '('
[29](01, 18)-(01, 19): NUMBER(NUMBER) '7'
[29](01, 19)-(01, 20): RPAR(OP) ')'
[29](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 12): NAME(NAME) 'elif'
[30](01, 13)-(01, 14): NAME(NAME) 'x'
[30](01, 15)-(01, 16): PERCENT(OP) '%'
[30](01, 17)-(01, 19): NUMBER(NUMBER) '11'
[30](01, 20)-(01, 22): EQEQUAL(OP) '=='
[30](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[30](01, 24)-(01, 25): COLON(OP) ':'
[30](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 13): NAME(NAME) 'x'
[31](01, 14)-(01, 15): EQUAL(OP) '='
[31](01, 17)-(01, 18): NAME(NAME) 'x'
[31](01, 19)-(01, 20): SLASH(OP) '/'
[31](01, 21)-(01, 23): NUMBER(NUMBER) '11'
[31](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 17): NAME(NAME) 'print'
[32](01, 17)-(01, 18): LPAR(OP) '('
[32](01, 18)-(01, 20): NUMBER(NUMBER) '11'
[32](01, 20)-(01, 21): RPAR(OP) ')'
[32](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 12): NAME(NAME) 'elif'
[33](01, 13)-(01, 14): NAME(NAME) 'x'
[33](01, 15)-(01, 16): PERCENT(OP) '%'
[33](01, 17)-(01, 19): NUMBER(NUMBER) '13'
[33](01, 20)-(01, 22): EQEQUAL(OP) '=='
[33](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[33](01, 24)-(01, 25): COLON(OP) ':'
[33](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 12): INDENT(INDENT) '            '
[34](01, 12)-(01, 13): NAME(NAME) 'x'
[34](01, 14)-(01, 15): EQUAL(OP) '='
[34](01, 17)-(01, 18): NAME(NAME) 'x'
[34](01, 19)-(01, 20): SLASH(OP) '/'
[34](01, 21)-(01, 23): NUMBER(NUMBER) '13'
[34](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 12): INDENT(INDENT) '            '
[35](01, 12)-(01, 17): NAME(NAME) 'print'
[35](01, 17)-(01, 18): LPAR(OP) '('
[35](01, 18)-(01, 20): NUMBER(NUMBER) '13'
[35](01, 20)-(01, 21): RPAR(OP) ')'
[35](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 08): INDENT(INDENT) '        '
[36](01, 08)-(01, 12): NAME(NAME) 'elif'
[36](01, 13)-(01, 14): NAME(NAME) 'x'
[36](01, 15)-(01, 16): PERCENT(OP) '%'
[36](01, 17)-(01, 19): NUMBER(NUMBER) '17'
[36](01, 20)-(01, 22): EQEQUAL(OP) '=='
[36](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[36](01, 24)-(01, 25): COLON(OP) ':'
[36](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 12): INDENT(INDENT) '            '
[37](01, 12)-(01, 13): NAME(NAME) 'x'
[37](01, 14)-(01, 15): EQUAL(OP) '='
[37](01, 17)-(01, 18): NAME(NAME) 'x'
[37](01, 19)-(01, 20): SLASH(OP) '/'
[37](01, 21)-(01, 23): NUMBER(NUMBER) '17'
[37](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 12): INDENT(INDENT) '            '
[38](01, 12)-(01, 17): NAME(NAME) 'print'
[38](01, 17)-(01, 18): LPAR(OP) '('
[38](01, 18)-(01, 20): NUMBER(NUMBER) '17'
[38](01, 20)-(01, 21): RPAR(OP) ')'
[38](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 08): INDENT(INDENT) '        '
[39](01, 08)-(01, 12): NAME(NAME) 'elif'
[39](01, 13)-(01, 14): NAME(NAME) 'x'
[39](01, 15)-(01, 16): PERCENT(OP) '%'
[39](01, 17)-(01, 19): NUMBER(NUMBER) '19'
[39](01, 20)-(01, 22): EQEQUAL(OP) '=='
[39](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[39](01, 24)-(01, 25): COLON(OP) ':'
[39](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 12): INDENT(INDENT) '            '
[40](01, 12)-(01, 13): NAME(NAME) 'x'
[40](01, 14)-(01, 15): EQUAL(OP) '='
[40](01, 17)-(01, 18): NAME(NAME) 'x'
[40](01, 19)-(01, 20): SLASH(OP) '/'
[40](01, 21)-(01, 23): NUMBER(NUMBER) '19'
[40](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 12): INDENT(INDENT) '            '
[41](01, 12)-(01, 17): NAME(NAME) 'print'
[41](01, 17)-(01, 18): LPAR(OP) '('
[41](01, 18)-(01, 20): NUMBER(NUMBER) '19'
[41](01, 20)-(01, 21): RPAR(OP) ')'
[41](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 08): INDENT(INDENT) '        '
[42](01, 08)-(01, 12): NAME(NAME) 'elif'
[42](01, 13)-(01, 14): NAME(NAME) 'x'
[42](01, 15)-(01, 16): PERCENT(OP) '%'
[42](01, 17)-(01, 19): NUMBER(NUMBER) '23'
[42](01, 20)-(01, 22): EQEQUAL(OP) '=='
[42](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[42](01, 24)-(01, 25): COLON(OP) ':'
[42](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 12): INDENT(INDENT) '            '
[43](01, 12)-(01, 13): NAME(NAME) 'x'
[43](01, 14)-(01, 15): EQUAL(OP) '='
[43](01, 17)-(01, 18): NAME(NAME) 'x'
[43](01, 19)-(01, 20): SLASH(OP) '/'
[43](01, 21)-(01, 23): NUMBER(NUMBER) '23'
[43](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 12): INDENT(INDENT) '            '
[44](01, 12)-(01, 17): NAME(NAME) 'print'
[44](01, 17)-(01, 18): LPAR(OP) '('
[44](01, 18)-(01, 20): NUMBER(NUMBER) '23'
[44](01, 20)-(01, 21): RPAR(OP) ')'
[44](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 08): INDENT(INDENT) '        '
[45](01, 08)-(01, 12): NAME(NAME) 'else'
[45](01, 12)-(01, 13): COLON(OP) ':'
[45](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 12): INDENT(INDENT) '            '
[46](01, 12)-(01, 20): NAME(NAME) 'continue'
[46](01, 20)-(01, 21): NEWLINE(NEWLINE)
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

