[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'n'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[00](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 12): NAME(NAME) 'whole_cipher'
[01](01, 13)-(01, 14): EQUAL(OP) '='
[01](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[01](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'def'
[02](01, 04)-(01, 11): NAME(NAME) 'convert'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 18): NAME(NAME) 'number'
[02](01, 18)-(01, 19): RPAR(OP) ')'
[02](01, 19)-(01, 20): COLON(OP) ':'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 10): NAME(NAME) 'global'
[03](01, 11)-(01, 23): NAME(NAME) 'whole_cipher'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 13): NAME(NAME) 'number'
[04](01, 14)-(01, 16): EQEQUAL(OP) '=='
[04](01, 17)-(01, 19): STRING(STRING) '""'
[04](01, 19)-(01, 20): COLON(OP) ':'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 14): NAME(NAME) 'return'
[05](01, 15)-(01, 27): NAME(NAME) 'whole_cipher'
[05](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 16): NAME(NAME) 'whole_cipher'
[06](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[06](01, 20)-(01, 23): NAME(NAME) 'int'
[06](01, 23)-(01, 24): LPAR(OP) '('
[06](01, 24)-(01, 30): NAME(NAME) 'number'
[06](01, 30)-(01, 31): LSQB(OP) '['
[06](01, 31)-(01, 32): NAME(NAME) 'n'
[06](01, 32)-(01, 33): RSQB(OP) ']'
[06](01, 33)-(01, 34): RPAR(OP) ')'
[06](01, 35)-(01, 36): STAR(OP) '*'
[06](01, 37)-(01, 38): LPAR(OP) '('
[06](01, 38)-(01, 40): NUMBER(NUMBER) '10'
[06](01, 41)-(01, 43): DOUBLESTAR(OP) '**'
[06](01, 44)-(01, 47): NAME(NAME) 'len'
[06](01, 47)-(01, 48): LPAR(OP) '('
[06](01, 48)-(01, 54): NAME(NAME) 'number'
[06](01, 54)-(01, 55): RPAR(OP) ')'
[06](01, 55)-(01, 56): RPAR(OP) ')'
[06](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 11): NAME(NAME) 'convert'
[07](01, 11)-(01, 12): LPAR(OP) '('
[07](01, 12)-(01, 18): NAME(NAME) 'number'
[07](01, 18)-(01, 19): LSQB(OP) '['
[07](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[07](01, 20)-(01, 21): COLON(OP) ':'
[07](01, 21)-(01, 22): RSQB(OP) ']'
[07](01, 22)-(01, 23): RPAR(OP) ')'
[07](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 10): NAME(NAME) 'return'
[08](01, 11)-(01, 23): NAME(NAME) 'whole_cipher'
[08](01, 23)-(01, 25): DOUBLESLASH(OP) '//'
[08](01, 25)-(01, 27): NUMBER(NUMBER) '10'
[08](01, 27)-(01, 28): NEWLINE(NEWLINE)
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

