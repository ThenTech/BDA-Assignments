[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 15): NAME(NAME) 'mine'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'word'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 13): STRING(STRING) '""'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'i'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 18): NAME(NAME) 'range'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[03](01, 20)-(01, 21): COMMA(OP) ','
[03](01, 22)-(01, 25): NAME(NAME) 'len'
[03](01, 25)-(01, 26): LPAR(OP) '('
[03](01, 26)-(01, 30): NAME(NAME) 'mine'
[03](01, 30)-(01, 31): RPAR(OP) ')'
[03](01, 31)-(01, 32): RPAR(OP) ')'
[03](01, 32)-(01, 33): COLON(OP) ':'
[03](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): NAME(NAME) 'i'
[04](01, 13)-(01, 15): EQEQUAL(OP) '=='
[04](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[04](01, 18)-(01, 21): NAME(NAME) 'and'
[04](01, 22)-(01, 25): NAME(NAME) 'len'
[04](01, 25)-(01, 26): LPAR(OP) '('
[04](01, 26)-(01, 30): NAME(NAME) 'mine'
[04](01, 30)-(01, 31): RPAR(OP) ')'
[04](01, 32)-(01, 34): LESSEQUAL(OP) '<='
[04](01, 35)-(01, 36): NUMBER(NUMBER) '1'
[04](01, 36)-(01, 37): COLON(OP) ':'
[04](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 13): INDENT(INDENT) '             '
[05](01, 13)-(01, 17): NAME(NAME) 'word'
[05](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[05](01, 21)-(01, 24): STRING(STRING) '"0"'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 12): NAME(NAME) 'elif'
[06](01, 13)-(01, 14): NAME(NAME) 'i'
[06](01, 15)-(01, 17): EQEQUAL(OP) '=='
[06](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[06](01, 20)-(01, 23): NAME(NAME) 'and'
[06](01, 24)-(01, 27): NAME(NAME) 'len'
[06](01, 27)-(01, 28): LPAR(OP) '('
[06](01, 28)-(01, 32): NAME(NAME) 'mine'
[06](01, 32)-(01, 33): RPAR(OP) ')'
[06](01, 34)-(01, 35): GREATER(OP) '>'
[06](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[06](01, 37)-(01, 38): COLON(OP) ':'
[06](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'if'
[07](01, 15)-(01, 19): NAME(NAME) 'mine'
[07](01, 19)-(01, 20): LSQB(OP) '['
[07](01, 20)-(01, 21): NAME(NAME) 'i'
[07](01, 21)-(01, 22): PLUS(OP) '+'
[07](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[07](01, 23)-(01, 24): RSQB(OP) ']'
[07](01, 25)-(01, 27): EQEQUAL(OP) '=='
[07](01, 28)-(01, 31): STRING(STRING) '"X"'
[07](01, 31)-(01, 32): COLON(OP) ':'
[07](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 20): NAME(NAME) 'word'
[08](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[08](01, 24)-(01, 27): STRING(STRING) '"1"'
[08](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 16): NAME(NAME) 'else'
[09](01, 16)-(01, 17): COLON(OP) ':'
[09](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 20): NAME(NAME) 'word'
[10](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[10](01, 24)-(01, 27): STRING(STRING) '"0"'
[10](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 12): NAME(NAME) 'elif'
[11](01, 13)-(01, 14): NAME(NAME) 'i'
[11](01, 15)-(01, 16): GREATER(OP) '>'
[11](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[11](01, 19)-(01, 22): NAME(NAME) 'and'
[11](01, 23)-(01, 24): NAME(NAME) 'i'
[11](01, 25)-(01, 26): LESS(OP) '<'
[11](01, 27)-(01, 30): NAME(NAME) 'len'
[11](01, 30)-(01, 31): LPAR(OP) '('
[11](01, 31)-(01, 35): NAME(NAME) 'mine'
[11](01, 35)-(01, 36): RPAR(OP) ')'
[11](01, 36)-(01, 37): MINUS(OP) '-'
[11](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[11](01, 38)-(01, 39): COLON(OP) ':'
[11](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 14): NAME(NAME) 'if'
[12](01, 15)-(01, 19): NAME(NAME) 'mine'
[12](01, 19)-(01, 20): LSQB(OP) '['
[12](01, 20)-(01, 21): NAME(NAME) 'i'
[12](01, 21)-(01, 22): PLUS(OP) '+'
[12](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[12](01, 23)-(01, 24): RSQB(OP) ']'
[12](01, 25)-(01, 27): EQEQUAL(OP) '=='
[12](01, 28)-(01, 31): STRING(STRING) '"X"'
[12](01, 32)-(01, 35): NAME(NAME) 'and'
[12](01, 36)-(01, 40): NAME(NAME) 'mine'
[12](01, 40)-(01, 41): LSQB(OP) '['
[12](01, 41)-(01, 42): NAME(NAME) 'i'
[12](01, 42)-(01, 43): MINUS(OP) '-'
[12](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[12](01, 44)-(01, 45): RSQB(OP) ']'
[12](01, 46)-(01, 48): EQEQUAL(OP) '=='
[12](01, 49)-(01, 52): STRING(STRING) '"X"'
[12](01, 52)-(01, 53): COLON(OP) ':'
[12](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 20): NAME(NAME) 'word'
[13](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[13](01, 24)-(01, 27): STRING(STRING) '"2"'
[13](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 16): NAME(NAME) 'elif'
[14](01, 17)-(01, 21): NAME(NAME) 'mine'
[14](01, 21)-(01, 22): LSQB(OP) '['
[14](01, 22)-(01, 23): NAME(NAME) 'i'
[14](01, 23)-(01, 24): PLUS(OP) '+'
[14](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[14](01, 25)-(01, 26): RSQB(OP) ']'
[14](01, 27)-(01, 29): EQEQUAL(OP) '=='
[14](01, 30)-(01, 33): STRING(STRING) '"X"'
[14](01, 34)-(01, 36): NAME(NAME) 'or'
[14](01, 37)-(01, 41): NAME(NAME) 'mine'
[14](01, 41)-(01, 42): LSQB(OP) '['
[14](01, 42)-(01, 43): NAME(NAME) 'i'
[14](01, 43)-(01, 44): MINUS(OP) '-'
[14](01, 44)-(01, 45): NUMBER(NUMBER) '1'
[14](01, 45)-(01, 46): RSQB(OP) ']'
[14](01, 47)-(01, 49): EQEQUAL(OP) '=='
[14](01, 50)-(01, 53): STRING(STRING) '"X"'
[14](01, 53)-(01, 54): COLON(OP) ':'
[14](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 20): NAME(NAME) 'word'
[15](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[15](01, 24)-(01, 27): STRING(STRING) '"1"'
[15](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 16): NAME(NAME) 'else'
[16](01, 16)-(01, 17): COLON(OP) ':'
[16](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 20): NAME(NAME) 'word'
[17](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[17](01, 24)-(01, 27): STRING(STRING) '"0"'
[17](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 12): NAME(NAME) 'else'
[19](01, 12)-(01, 13): COLON(OP) ':'
[19](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 14): NAME(NAME) 'if'
[20](01, 15)-(01, 19): NAME(NAME) 'mine'
[20](01, 19)-(01, 20): LSQB(OP) '['
[20](01, 20)-(01, 21): NAME(NAME) 'i'
[20](01, 21)-(01, 22): MINUS(OP) '-'
[20](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[20](01, 23)-(01, 24): RSQB(OP) ']'
[20](01, 25)-(01, 27): EQEQUAL(OP) '=='
[20](01, 28)-(01, 31): STRING(STRING) '"X"'
[20](01, 31)-(01, 32): COLON(OP) ':'
[20](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 20): NAME(NAME) 'word'
[21](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[21](01, 24)-(01, 27): STRING(STRING) '"1"'
[21](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 16): NAME(NAME) 'else'
[22](01, 16)-(01, 17): COLON(OP) ':'
[22](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 16): INDENT(INDENT) '                '
[23](01, 16)-(01, 20): NAME(NAME) 'word'
[23](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[23](01, 24)-(01, 27): STRING(STRING) '"0"'
[23](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 10): NAME(NAME) 'return'
[24](01, 11)-(01, 15): NAME(NAME) 'word'
[24](01, 15)-(01, 16): NEWLINE(NEWLINE)
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

