[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 13): NAME(NAME) 'is_unique'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 15): NAME(NAME) 'l'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 07): NAME(NAME) 'for'
[01](01, 08)-(01, 09): NAME(NAME) 'i'
[01](01, 10)-(01, 12): NAME(NAME) 'in'
[01](01, 13)-(01, 14): NAME(NAME) 'l'
[01](01, 14)-(01, 15): COLON(OP) ':'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 13): NAME(NAME) 'print'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 15): NAME(NAME) 'i'
[02](01, 15)-(01, 16): RPAR(OP) ')'
[02](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 11): NAME(NAME) 'for'
[03](01, 12)-(01, 13): NAME(NAME) 'j'
[03](01, 14)-(01, 16): NAME(NAME) 'in'
[03](01, 17)-(01, 18): NAME(NAME) 'l'
[03](01, 18)-(01, 19): COLON(OP) ':'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 14): NAME(NAME) 'if'
[04](01, 15)-(01, 16): NAME(NAME) 'i'
[04](01, 17)-(01, 19): NOTEQUAL(OP) '!='
[04](01, 20)-(01, 21): NAME(NAME) 'j'
[04](01, 21)-(01, 22): COLON(OP) ':'
[04](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 16): INDENT(INDENT) '                '
[05](01, 16)-(01, 18): NAME(NAME) 'if'
[05](01, 19)-(01, 20): NAME(NAME) 'l'
[05](01, 20)-(01, 21): LSQB(OP) '['
[05](01, 21)-(01, 22): NAME(NAME) 'i'
[05](01, 22)-(01, 23): MINUS(OP) '-'
[05](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[05](01, 24)-(01, 25): RSQB(OP) ']'
[05](01, 26)-(01, 28): EQEQUAL(OP) '=='
[05](01, 29)-(01, 30): NAME(NAME) 'l'
[05](01, 30)-(01, 31): LSQB(OP) '['
[05](01, 31)-(01, 32): NAME(NAME) 'j'
[05](01, 32)-(01, 33): MINUS(OP) '-'
[05](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[05](01, 34)-(01, 35): RSQB(OP) ']'
[05](01, 35)-(01, 36): COLON(OP) ':'
[05](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 20): INDENT(INDENT) '                    '
[06](01, 20)-(01, 26): NAME(NAME) 'return'
[06](01, 27)-(01, 32): NAME(NAME) 'False'
[06](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 17): NAME(NAME) 'print'
[07](01, 17)-(01, 18): LPAR(OP) '('
[07](01, 18)-(01, 19): NAME(NAME) 'j'
[07](01, 19)-(01, 20): RPAR(OP) ')'
[07](01, 20)-(01, 21): NEWLINE(NEWLINE)
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

