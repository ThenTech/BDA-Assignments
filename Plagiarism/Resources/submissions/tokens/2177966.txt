[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'cents'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 11): NAME(NAME) 'int'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 17): NAME(NAME) 'input'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 31): STRING(STRING) '"one-cents? "'
[00](01, 31)-(01, 32): RPAR(OP) ')'
[00](01, 32)-(01, 33): RPAR(OP) ')'
[00](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'cents'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 13): NAME(NAME) 'cents'
[01](01, 14)-(01, 15): PLUS(OP) '+'
[01](01, 16)-(01, 17): NUMBER(NUMBER) '2'
[01](01, 18)-(01, 19): STAR(OP) '*'
[01](01, 20)-(01, 23): NAME(NAME) 'int'
[01](01, 23)-(01, 24): LPAR(OP) '('
[01](01, 24)-(01, 29): NAME(NAME) 'input'
[01](01, 29)-(01, 30): LPAR(OP) '('
[01](01, 30)-(01, 43): STRING(STRING) '"two-cents? "'
[01](01, 43)-(01, 44): RPAR(OP) ')'
[01](01, 44)-(01, 45): RPAR(OP) ')'
[01](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 05): NAME(NAME) 'cents'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 13): NAME(NAME) 'cents'
[02](01, 14)-(01, 15): PLUS(OP) '+'
[02](01, 16)-(01, 17): NUMBER(NUMBER) '5'
[02](01, 18)-(01, 19): STAR(OP) '*'
[02](01, 20)-(01, 23): NAME(NAME) 'int'
[02](01, 23)-(01, 24): LPAR(OP) '('
[02](01, 24)-(01, 29): NAME(NAME) 'input'
[02](01, 29)-(01, 30): LPAR(OP) '('
[02](01, 30)-(01, 44): STRING(STRING) '"five-cents? "'
[02](01, 44)-(01, 45): RPAR(OP) ')'
[02](01, 45)-(01, 46): RPAR(OP) ')'
[02](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'cents'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 13): NAME(NAME) 'cents'
[03](01, 14)-(01, 15): PLUS(OP) '+'
[03](01, 16)-(01, 18): NUMBER(NUMBER) '10'
[03](01, 19)-(01, 20): STAR(OP) '*'
[03](01, 21)-(01, 24): NAME(NAME) 'int'
[03](01, 24)-(01, 25): LPAR(OP) '('
[03](01, 25)-(01, 30): NAME(NAME) 'input'
[03](01, 30)-(01, 31): LPAR(OP) '('
[03](01, 31)-(01, 44): STRING(STRING) '"ten-cents? "'
[03](01, 44)-(01, 45): RPAR(OP) ')'
[03](01, 45)-(01, 46): RPAR(OP) ')'
[03](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 05): NAME(NAME) 'cents'
[04](01, 06)-(01, 07): EQUAL(OP) '='
[04](01, 08)-(01, 13): NAME(NAME) 'cents'
[04](01, 14)-(01, 15): PLUS(OP) '+'
[04](01, 16)-(01, 18): NUMBER(NUMBER) '20'
[04](01, 19)-(01, 20): STAR(OP) '*'
[04](01, 21)-(01, 24): NAME(NAME) 'int'
[04](01, 24)-(01, 25): LPAR(OP) '('
[04](01, 25)-(01, 30): NAME(NAME) 'input'
[04](01, 30)-(01, 31): LPAR(OP) '('
[04](01, 31)-(01, 47): STRING(STRING) '"twenty-cents? "'
[04](01, 47)-(01, 48): RPAR(OP) ')'
[04](01, 48)-(01, 49): RPAR(OP) ')'
[04](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 05): NAME(NAME) 'euros'
[06](01, 06)-(01, 07): EQUAL(OP) '='
[06](01, 08)-(01, 13): NAME(NAME) 'cents'
[06](01, 14)-(01, 16): DOUBLESLASH(OP) '//'
[06](01, 17)-(01, 20): NUMBER(NUMBER) '100'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): NAME(NAME) 'tencents'
[08](01, 09)-(01, 10): EQUAL(OP) '='
[08](01, 11)-(01, 12): LPAR(OP) '('
[08](01, 12)-(01, 17): NAME(NAME) 'cents'
[08](01, 18)-(01, 19): PERCENT(OP) '%'
[08](01, 20)-(01, 23): NUMBER(NUMBER) '100'
[08](01, 23)-(01, 24): RPAR(OP) ')'
[08](01, 25)-(01, 27): DOUBLESLASH(OP) '//'
[08](01, 28)-(01, 30): NUMBER(NUMBER) '10'
[08](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): NAME(NAME) 'onecents'
[09](01, 09)-(01, 10): EQUAL(OP) '='
[09](01, 11)-(01, 12): LPAR(OP) '('
[09](01, 12)-(01, 17): NAME(NAME) 'cents'
[09](01, 18)-(01, 19): PERCENT(OP) '%'
[09](01, 20)-(01, 22): NUMBER(NUMBER) '10'
[09](01, 22)-(01, 23): RPAR(OP) ')'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 05): NAME(NAME) 'print'
[11](01, 05)-(01, 06): LPAR(OP) '('
[11](01, 06)-(01, 16): STRING(STRING) '"You have"'
[11](01, 16)-(01, 17): COMMA(OP) ','
[11](01, 18)-(01, 23): NAME(NAME) 'euros'
[11](01, 23)-(01, 24): COMMA(OP) ','
[11](01, 25)-(01, 28): STRING(STRING) '"."'
[11](01, 28)-(01, 29): COMMA(OP) ','
[11](01, 30)-(01, 38): NAME(NAME) 'tencents'
[11](01, 38)-(01, 39): COMMA(OP) ','
[11](01, 40)-(01, 48): NAME(NAME) 'onecents'
[11](01, 48)-(01, 49): COMMA(OP) ','
[11](01, 50)-(01, 57): STRING(STRING) '"euro!"'
[11](01, 57)-(01, 58): RPAR(OP) ')'
[11](01, 58)-(01, 59): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

