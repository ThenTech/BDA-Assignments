[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): COLON(OP) ':'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'lengthe'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 17): NAME(NAME) 'len'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 19): NAME(NAME) 's'
[01](01, 19)-(01, 20): RPAR(OP) ')'
[01](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 10): NAME(NAME) 'teller'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[02](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'i'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 18): NAME(NAME) 'range'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 26): NAME(NAME) 'lengthe'
[03](01, 26)-(01, 27): RPAR(OP) ')'
[03](01, 27)-(01, 28): COLON(OP) ':'
[03](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'teller'
[04](01, 15)-(01, 16): EQUAL(OP) '='
[04](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 12): NAME(NAME) 'i'
[05](01, 13)-(01, 15): EQEQUAL(OP) '=='
[05](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[05](01, 17)-(01, 18): COLON(OP) ':'
[05](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 14): NAME(NAME) 'if'
[06](01, 15)-(01, 16): NAME(NAME) 's'
[06](01, 16)-(01, 17): LSQB(OP) '['
[06](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[06](01, 18)-(01, 19): RSQB(OP) ']'
[06](01, 19)-(01, 21): EQEQUAL(OP) '=='
[06](01, 21)-(01, 24): STRING(STRING) '"X"'
[06](01, 24)-(01, 25): COLON(OP) ':'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 16): INDENT(INDENT) '                '
[07](01, 16)-(01, 22): NAME(NAME) 'teller'
[07](01, 23)-(01, 24): EQUAL(OP) '='
[07](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[07](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 21): NAME(NAME) 'print'
[08](01, 21)-(01, 22): LPAR(OP) '('
[08](01, 22)-(01, 28): NAME(NAME) 'teller'
[08](01, 28)-(01, 29): COMMA(OP) ','
[08](01, 30)-(01, 33): NAME(NAME) 'end'
[08](01, 33)-(01, 34): EQUAL(OP) '='
[08](01, 34)-(01, 36): STRING(STRING) '""'
[08](01, 36)-(01, 37): RPAR(OP) ')'
[08](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 16): NAME(NAME) 'else'
[09](01, 16)-(01, 17): COLON(OP) ':'
[09](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 22): NAME(NAME) 'teller'
[10](01, 23)-(01, 24): EQUAL(OP) '='
[10](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[10](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 21): NAME(NAME) 'print'
[11](01, 21)-(01, 22): LPAR(OP) '('
[11](01, 22)-(01, 28): NAME(NAME) 'teller'
[11](01, 28)-(01, 29): COMMA(OP) ','
[11](01, 29)-(01, 32): NAME(NAME) 'end'
[11](01, 32)-(01, 33): EQUAL(OP) '='
[11](01, 33)-(01, 35): STRING(STRING) '""'
[11](01, 35)-(01, 36): RPAR(OP) ')'
[11](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 12): NAME(NAME) 'elif'
[12](01, 13)-(01, 14): NAME(NAME) 'i'
[12](01, 15)-(01, 17): EQEQUAL(OP) '=='
[12](01, 18)-(01, 25): NAME(NAME) 'lengthe'
[12](01, 25)-(01, 26): MINUS(OP) '-'
[12](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[12](01, 27)-(01, 28): COLON(OP) ':'
[12](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 14): NAME(NAME) 'if'
[13](01, 15)-(01, 16): NAME(NAME) 's'
[13](01, 16)-(01, 17): LSQB(OP) '['
[13](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[13](01, 18)-(01, 19): RSQB(OP) ']'
[13](01, 19)-(01, 21): EQEQUAL(OP) '=='
[13](01, 21)-(01, 24): STRING(STRING) '"X"'
[13](01, 24)-(01, 25): COLON(OP) ':'
[13](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 22): NAME(NAME) 'teller'
[14](01, 23)-(01, 24): EQUAL(OP) '='
[14](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[14](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 21): NAME(NAME) 'print'
[15](01, 21)-(01, 22): LPAR(OP) '('
[15](01, 22)-(01, 28): NAME(NAME) 'teller'
[15](01, 28)-(01, 29): COMMA(OP) ','
[15](01, 29)-(01, 32): NAME(NAME) 'end'
[15](01, 32)-(01, 33): EQUAL(OP) '='
[15](01, 33)-(01, 35): STRING(STRING) '""'
[15](01, 35)-(01, 36): RPAR(OP) ')'
[15](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 16): NAME(NAME) 'else'
[16](01, 16)-(01, 17): COLON(OP) ':'
[16](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 22): NAME(NAME) 'teller'
[17](01, 23)-(01, 24): EQUAL(OP) '='
[17](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[17](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 21): NAME(NAME) 'print'
[18](01, 21)-(01, 22): LPAR(OP) '('
[18](01, 22)-(01, 28): NAME(NAME) 'teller'
[18](01, 28)-(01, 29): COMMA(OP) ','
[18](01, 29)-(01, 32): NAME(NAME) 'end'
[18](01, 32)-(01, 33): EQUAL(OP) '='
[18](01, 33)-(01, 35): STRING(STRING) '""'
[18](01, 35)-(01, 36): RPAR(OP) ')'
[18](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 12): NAME(NAME) 'else'
[19](01, 12)-(01, 13): COLON(OP) ':'
[19](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 14): NAME(NAME) 'if'
[20](01, 15)-(01, 16): NAME(NAME) 's'
[20](01, 16)-(01, 17): LSQB(OP) '['
[20](01, 17)-(01, 18): NAME(NAME) 'i'
[20](01, 18)-(01, 19): MINUS(OP) '-'
[20](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[20](01, 20)-(01, 21): RSQB(OP) ']'
[20](01, 22)-(01, 24): EQEQUAL(OP) '=='
[20](01, 25)-(01, 28): STRING(STRING) '"X"'
[20](01, 28)-(01, 29): COLON(OP) ':'
[20](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 22): NAME(NAME) 'teller'
[21](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[21](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[21](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 14): NAME(NAME) 'if'
[22](01, 15)-(01, 16): NAME(NAME) 's'
[22](01, 16)-(01, 17): LSQB(OP) '['
[22](01, 17)-(01, 18): NAME(NAME) 'i'
[22](01, 18)-(01, 19): PLUS(OP) '+'
[22](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[22](01, 20)-(01, 21): RSQB(OP) ']'
[22](01, 22)-(01, 24): EQEQUAL(OP) '=='
[22](01, 25)-(01, 28): STRING(STRING) '"X"'
[22](01, 28)-(01, 29): COLON(OP) ':'
[22](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 16): INDENT(INDENT) '                '
[23](01, 16)-(01, 22): NAME(NAME) 'teller'
[23](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[23](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[23](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): INDENT(INDENT) '            '
[24](01, 12)-(01, 17): NAME(NAME) 'print'
[24](01, 17)-(01, 18): LPAR(OP) '('
[24](01, 18)-(01, 24): NAME(NAME) 'teller'
[24](01, 24)-(01, 25): COMMA(OP) ','
[24](01, 25)-(01, 28): NAME(NAME) 'end'
[24](01, 28)-(01, 29): EQUAL(OP) '='
[24](01, 29)-(01, 31): STRING(STRING) '""'
[24](01, 31)-(01, 32): RPAR(OP) ')'
[24](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 08): INDENT(INDENT) '        '
[25](01, 08)-(01, 11): NAME(NAME) 'new'
[25](01, 12)-(01, 13): EQUAL(OP) '='
[25](01, 13)-(01, 15): STRING(STRING) '""'
[25](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 08): INDENT(INDENT) '        '
[26](01, 08)-(01, 11): NAME(NAME) 'new'
[26](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[26](01, 15)-(01, 18): NAME(NAME) 'str'
[26](01, 18)-(01, 19): LPAR(OP) '('
[26](01, 19)-(01, 25): NAME(NAME) 'teller'
[26](01, 25)-(01, 26): RPAR(OP) ')'
[26](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 10): NAME(NAME) 'if'
[27](01, 11)-(01, 12): NAME(NAME) 'i'
[27](01, 13)-(01, 15): EQEQUAL(OP) '=='
[27](01, 16)-(01, 23): NAME(NAME) 'lengthe'
[27](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 08): INDENT(INDENT) '        '
[28](01, 08)-(01, 14): NAME(NAME) 'return'
[28](01, 15)-(01, 18): NAME(NAME) 'new'
[28](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 03): NAME(NAME) 'def'
[29](01, 04)-(01, 10): NAME(NAME) 'decode'
[29](01, 10)-(01, 11): LPAR(OP) '('
[29](01, 11)-(01, 12): NAME(NAME) 's'
[29](01, 12)-(01, 13): RPAR(OP) ')'
[29](01, 13)-(01, 14): COLON(OP) ':'
[29](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 08): NAME(NAME) 'pass'
[30](01, 08)-(01, 09): NEWLINE(NEWLINE)
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

