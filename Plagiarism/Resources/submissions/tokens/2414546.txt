[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 18): NAME(NAME) 'functie_voornu'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 21): NAME(NAME) 'n'
[00](01, 21)-(01, 22): COMMA(OP) ','
[00](01, 22)-(01, 23): NAME(NAME) 'm'
[00](01, 23)-(01, 24): RPAR(OP) ')'
[00](01, 24)-(01, 25): COLON(OP) ':'
[00](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 07): NAME(NAME) 'for'
[01](01, 08)-(01, 09): NAME(NAME) 'i'
[01](01, 10)-(01, 12): NAME(NAME) 'in'
[01](01, 13)-(01, 18): NAME(NAME) 'range'
[01](01, 19)-(01, 20): LPAR(OP) '('
[01](01, 20)-(01, 21): NAME(NAME) 'm'
[01](01, 21)-(01, 22): COMMA(OP) ','
[01](01, 22)-(01, 23): NAME(NAME) 'n'
[01](01, 23)-(01, 24): PLUS(OP) '+'
[01](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[01](01, 25)-(01, 26): RPAR(OP) ')'
[01](01, 26)-(01, 27): COLON(OP) ':'
[01](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 10): NAME(NAME) 'if'
[02](01, 11)-(01, 12): NAME(NAME) 'm'
[02](01, 12)-(01, 13): GREATER(OP) '>'
[02](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[02](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 12): INDENT(INDENT) '            '
[03](01, 12)-(01, 21): NAME(NAME) 'teprinten'
[03](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[03](01, 25)-(01, 26): NAME(NAME) 'i'
[03](01, 27)-(01, 28): PLUS(OP) '+'
[03](01, 29)-(01, 32): STRING(STRING) '" "'
[03](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 13): NAME(NAME) 'm'
[04](01, 13)-(01, 15): MINEQUAL(OP) '-='
[04](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[04](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 15): NAME(NAME) 'def'
[05](01, 16)-(01, 23): NAME(NAME) 'functie'
[05](01, 24)-(01, 25): LPAR(OP) '('
[05](01, 25)-(01, 26): NAME(NAME) 'n'
[05](01, 26)-(01, 27): MINUS(OP) '-'
[05](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[05](01, 28)-(01, 29): COMMA(OP) ','
[05](01, 29)-(01, 30): NAME(NAME) 'm'
[05](01, 30)-(01, 31): RPAR(OP) ')'
[05](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'print'
[06](01, 14)-(01, 15): LPAR(OP) '('
[06](01, 15)-(01, 24): NAME(NAME) 'teprinten'
[06](01, 24)-(01, 25): RPAR(OP) ')'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 17): NAME(NAME) 'teprinten'
[07](01, 18)-(01, 19): EQUAL(OP) '='
[07](01, 20)-(01, 22): STRING(STRING) '""'
[07](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

