[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): COMMA(OP) ','
[00](01, 14)-(01, 15): NAME(NAME) 'n'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'output'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 15): STRING(STRING) '""'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 08): NAME(NAME) 'n'
[02](01, 09)-(01, 10): LESS(OP) '<'
[02](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[02](01, 12)-(01, 13): COLON(OP) ':'
[02](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 09): NAME(NAME) 'n'
[03](01, 10)-(01, 11): EQUAL(OP) '='
[03](01, 12)-(01, 14): NUMBER(NUMBER) '26'
[03](01, 15)-(01, 16): PLUS(OP) '+'
[03](01, 17)-(01, 18): NAME(NAME) 'n'
[03](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 08): NAME(NAME) 'elif'
[04](01, 09)-(01, 10): NAME(NAME) 'n'
[04](01, 10)-(01, 12): DOUBLESLASH(OP) '//'
[04](01, 12)-(01, 14): NUMBER(NUMBER) '26'
[04](01, 15)-(01, 16): GREATER(OP) '>'
[04](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[04](01, 18)-(01, 19): COLON(OP) ':'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 09): NAME(NAME) 'a'
[05](01, 10)-(01, 11): EQUAL(OP) '='
[05](01, 12)-(01, 13): NAME(NAME) 'n'
[05](01, 13)-(01, 15): DOUBLESLASH(OP) '//'
[05](01, 15)-(01, 17): NUMBER(NUMBER) '26'
[05](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 09): NAME(NAME) 'n'
[06](01, 10)-(01, 11): EQUAL(OP) '='
[06](01, 12)-(01, 13): NAME(NAME) 'n'
[06](01, 14)-(01, 15): MINUS(OP) '-'
[06](01, 16)-(01, 17): NAME(NAME) 'a'
[06](01, 17)-(01, 18): STAR(OP) '*'
[06](01, 18)-(01, 20): NUMBER(NUMBER) '26'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 07): NAME(NAME) 'for'
[07](01, 08)-(01, 09): NAME(NAME) 'i'
[07](01, 10)-(01, 12): NAME(NAME) 'in'
[07](01, 13)-(01, 18): NAME(NAME) 'range'
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 22): NAME(NAME) 'len'
[07](01, 22)-(01, 23): LPAR(OP) '('
[07](01, 23)-(01, 24): NAME(NAME) 's'
[07](01, 24)-(01, 25): RPAR(OP) ')'
[07](01, 25)-(01, 26): RPAR(OP) ')'
[07](01, 26)-(01, 27): COLON(OP) ':'
[07](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 12): NAME(NAME) 's'
[08](01, 12)-(01, 13): LSQB(OP) '['
[08](01, 13)-(01, 14): NAME(NAME) 'i'
[08](01, 14)-(01, 15): RSQB(OP) ']'
[08](01, 16)-(01, 18): LESSEQUAL(OP) '<='
[08](01, 19)-(01, 22): NAME(NAME) 'chr'
[08](01, 22)-(01, 23): LPAR(OP) '('
[08](01, 23)-(01, 25): NUMBER(NUMBER) '64'
[08](01, 25)-(01, 26): RPAR(OP) ')'
[08](01, 26)-(01, 27): COLON(OP) ':'
[08](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 18): NAME(NAME) 'output'
[09](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[09](01, 22)-(01, 23): NAME(NAME) 's'
[09](01, 23)-(01, 24): LSQB(OP) '['
[09](01, 24)-(01, 25): NAME(NAME) 'i'
[09](01, 25)-(01, 26): RSQB(OP) ']'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 12): NAME(NAME) 'elif'
[10](01, 13)-(01, 16): NAME(NAME) 'chr'
[10](01, 16)-(01, 17): LPAR(OP) '('
[10](01, 17)-(01, 20): NAME(NAME) 'ord'
[10](01, 20)-(01, 21): LPAR(OP) '('
[10](01, 21)-(01, 22): NAME(NAME) 's'
[10](01, 22)-(01, 23): LSQB(OP) '['
[10](01, 23)-(01, 24): NAME(NAME) 'i'
[10](01, 24)-(01, 25): RSQB(OP) ']'
[10](01, 25)-(01, 26): RPAR(OP) ')'
[10](01, 27)-(01, 28): PLUS(OP) '+'
[10](01, 29)-(01, 30): NAME(NAME) 'n'
[10](01, 30)-(01, 31): RPAR(OP) ')'
[10](01, 32)-(01, 34): GREATEREQUAL(OP) '>='
[10](01, 35)-(01, 38): NAME(NAME) 'chr'
[10](01, 38)-(01, 39): LPAR(OP) '('
[10](01, 39)-(01, 41): NUMBER(NUMBER) '91'
[10](01, 41)-(01, 42): RPAR(OP) ')'
[10](01, 43)-(01, 46): NAME(NAME) 'and'
[10](01, 47)-(01, 50): NAME(NAME) 'chr'
[10](01, 50)-(01, 51): LPAR(OP) '('
[10](01, 51)-(01, 54): NAME(NAME) 'ord'
[10](01, 54)-(01, 55): LPAR(OP) '('
[10](01, 55)-(01, 56): NAME(NAME) 's'
[10](01, 56)-(01, 57): LSQB(OP) '['
[10](01, 57)-(01, 58): NAME(NAME) 'i'
[10](01, 58)-(01, 59): RSQB(OP) ']'
[10](01, 59)-(01, 60): RPAR(OP) ')'
[10](01, 61)-(01, 62): PLUS(OP) '+'
[10](01, 63)-(01, 64): NAME(NAME) 'n'
[10](01, 64)-(01, 65): RPAR(OP) ')'
[10](01, 66)-(01, 68): LESSEQUAL(OP) '<='
[10](01, 69)-(01, 72): NAME(NAME) 'chr'
[10](01, 72)-(01, 73): LPAR(OP) '('
[10](01, 73)-(01, 75): NUMBER(NUMBER) '96'
[10](01, 75)-(01, 76): RPAR(OP) ')'
[10](01, 77)-(01, 79): NAME(NAME) 'or'
[10](01, 80)-(01, 83): NAME(NAME) 'chr'
[10](01, 83)-(01, 84): LPAR(OP) '('
[10](01, 84)-(01, 87): NAME(NAME) 'ord'
[10](01, 87)-(01, 88): LPAR(OP) '('
[10](01, 88)-(01, 89): NAME(NAME) 's'
[10](01, 89)-(01, 90): LSQB(OP) '['
[10](01, 90)-(01, 91): NAME(NAME) 'i'
[10](01, 91)-(01, 92): RSQB(OP) ']'
[10](01, 92)-(01, 93): RPAR(OP) ')'
[10](01, 94)-(01, 95): PLUS(OP) '+'
[10](01, 96)-(01, 97): NAME(NAME) 'n'
[10](01, 97)-(01, 98): RPAR(OP) ')'
[10](01, 99)-(01, 101): GREATEREQUAL(OP) '>='
[10](01, 102)-(01, 105): NAME(NAME) 'chr'
[10](01, 105)-(01, 106): LPAR(OP) '('
[10](01, 106)-(01, 109): NUMBER(NUMBER) '123'
[10](01, 109)-(01, 110): RPAR(OP) ')'
[10](01, 111)-(01, 112): COLON(OP) ':'
[10](01, 112)-(01, 113): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 18): NAME(NAME) 'output'
[11](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[11](01, 22)-(01, 25): NAME(NAME) 'chr'
[11](01, 25)-(01, 26): LPAR(OP) '('
[11](01, 26)-(01, 29): NAME(NAME) 'ord'
[11](01, 29)-(01, 30): LPAR(OP) '('
[11](01, 30)-(01, 31): NAME(NAME) 's'
[11](01, 31)-(01, 32): LSQB(OP) '['
[11](01, 32)-(01, 33): NAME(NAME) 'i'
[11](01, 33)-(01, 34): RSQB(OP) ']'
[11](01, 34)-(01, 35): RPAR(OP) ')'
[11](01, 36)-(01, 37): MINUS(OP) '-'
[11](01, 38)-(01, 40): NUMBER(NUMBER) '26'
[11](01, 41)-(01, 42): PLUS(OP) '+'
[11](01, 43)-(01, 44): NAME(NAME) 'n'
[11](01, 44)-(01, 45): RPAR(OP) ')'
[11](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 12): NAME(NAME) 'else'
[12](01, 12)-(01, 13): COLON(OP) ':'
[12](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 18): NAME(NAME) 'output'
[13](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[13](01, 22)-(01, 25): NAME(NAME) 'chr'
[13](01, 25)-(01, 26): LPAR(OP) '('
[13](01, 26)-(01, 29): NAME(NAME) 'ord'
[13](01, 29)-(01, 30): LPAR(OP) '('
[13](01, 30)-(01, 31): NAME(NAME) 's'
[13](01, 31)-(01, 32): LSQB(OP) '['
[13](01, 32)-(01, 33): NAME(NAME) 'i'
[13](01, 33)-(01, 34): RSQB(OP) ']'
[13](01, 34)-(01, 35): RPAR(OP) ')'
[13](01, 36)-(01, 37): PLUS(OP) '+'
[13](01, 38)-(01, 39): NAME(NAME) 'n'
[13](01, 39)-(01, 40): RPAR(OP) ')'
[13](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 10): NAME(NAME) 'return'
[15](01, 11)-(01, 17): NAME(NAME) 'output'
[15](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 03): NAME(NAME) 'def'
[18](01, 04)-(01, 10): NAME(NAME) 'decode'
[18](01, 10)-(01, 11): LPAR(OP) '('
[18](01, 11)-(01, 12): NAME(NAME) 's'
[18](01, 12)-(01, 13): COMMA(OP) ','
[18](01, 14)-(01, 15): NAME(NAME) 'n'
[18](01, 15)-(01, 16): RPAR(OP) ')'
[18](01, 16)-(01, 17): COLON(OP) ':'
[18](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 10): NAME(NAME) 'output'
[19](01, 11)-(01, 12): EQUAL(OP) '='
[19](01, 13)-(01, 15): STRING(STRING) '""'
[19](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 06): NAME(NAME) 'if'
[20](01, 07)-(01, 08): NAME(NAME) 'n'
[20](01, 09)-(01, 10): LESS(OP) '<'
[20](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[20](01, 12)-(01, 13): COLON(OP) ':'
[20](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 09): NAME(NAME) 'n'
[21](01, 10)-(01, 11): EQUAL(OP) '='
[21](01, 12)-(01, 14): NUMBER(NUMBER) '26'
[21](01, 15)-(01, 16): PLUS(OP) '+'
[21](01, 17)-(01, 18): NAME(NAME) 'n'
[21](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 08): NAME(NAME) 'elif'
[22](01, 09)-(01, 10): NAME(NAME) 'n'
[22](01, 11)-(01, 13): DOUBLESLASH(OP) '//'
[22](01, 14)-(01, 16): NUMBER(NUMBER) '26'
[22](01, 17)-(01, 18): GREATER(OP) '>'
[22](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[22](01, 20)-(01, 21): COLON(OP) ':'
[22](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 09): NAME(NAME) 'a'
[23](01, 10)-(01, 11): EQUAL(OP) '='
[23](01, 12)-(01, 13): NAME(NAME) 'n'
[23](01, 14)-(01, 16): DOUBLESLASH(OP) '//'
[23](01, 17)-(01, 19): NUMBER(NUMBER) '26'
[23](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 09): NAME(NAME) 'n'
[24](01, 10)-(01, 11): EQUAL(OP) '='
[24](01, 12)-(01, 13): NAME(NAME) 'n'
[24](01, 14)-(01, 15): MINUS(OP) '-'
[24](01, 16)-(01, 17): NAME(NAME) 'a'
[24](01, 18)-(01, 19): STAR(OP) '*'
[24](01, 20)-(01, 22): NUMBER(NUMBER) '26'
[24](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 05): NAME(NAME) 'n'
[25](01, 06)-(01, 07): EQUAL(OP) '='
[25](01, 08)-(01, 10): NUMBER(NUMBER) '26'
[25](01, 11)-(01, 12): MINUS(OP) '-'
[25](01, 13)-(01, 14): NAME(NAME) 'n'
[25](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 07): NAME(NAME) 'for'
[26](01, 08)-(01, 09): NAME(NAME) 'i'
[26](01, 10)-(01, 12): NAME(NAME) 'in'
[26](01, 13)-(01, 18): NAME(NAME) 'range'
[26](01, 18)-(01, 19): LPAR(OP) '('
[26](01, 19)-(01, 22): NAME(NAME) 'len'
[26](01, 22)-(01, 23): LPAR(OP) '('
[26](01, 23)-(01, 24): NAME(NAME) 's'
[26](01, 24)-(01, 25): RPAR(OP) ')'
[26](01, 25)-(01, 26): RPAR(OP) ')'
[26](01, 26)-(01, 27): COLON(OP) ':'
[26](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 10): NAME(NAME) 'if'
[27](01, 11)-(01, 12): NAME(NAME) 's'
[27](01, 12)-(01, 13): LSQB(OP) '['
[27](01, 13)-(01, 14): NAME(NAME) 'i'
[27](01, 14)-(01, 15): RSQB(OP) ']'
[27](01, 16)-(01, 18): LESSEQUAL(OP) '<='
[27](01, 19)-(01, 22): NAME(NAME) 'chr'
[27](01, 22)-(01, 23): LPAR(OP) '('
[27](01, 23)-(01, 25): NUMBER(NUMBER) '64'
[27](01, 25)-(01, 26): RPAR(OP) ')'
[27](01, 26)-(01, 27): COLON(OP) ':'
[27](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 18): NAME(NAME) 'output'
[28](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[28](01, 22)-(01, 23): NAME(NAME) 's'
[28](01, 23)-(01, 24): LSQB(OP) '['
[28](01, 24)-(01, 25): NAME(NAME) 'i'
[28](01, 25)-(01, 26): RSQB(OP) ']'
[28](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 12): NAME(NAME) 'elif'
[29](01, 13)-(01, 16): NAME(NAME) 'chr'
[29](01, 16)-(01, 17): LPAR(OP) '('
[29](01, 17)-(01, 20): NAME(NAME) 'ord'
[29](01, 20)-(01, 21): LPAR(OP) '('
[29](01, 21)-(01, 22): NAME(NAME) 's'
[29](01, 22)-(01, 23): LSQB(OP) '['
[29](01, 23)-(01, 24): NAME(NAME) 'i'
[29](01, 24)-(01, 25): RSQB(OP) ']'
[29](01, 25)-(01, 26): RPAR(OP) ')'
[29](01, 27)-(01, 28): PLUS(OP) '+'
[29](01, 29)-(01, 30): NAME(NAME) 'n'
[29](01, 30)-(01, 31): RPAR(OP) ')'
[29](01, 32)-(01, 34): GREATEREQUAL(OP) '>='
[29](01, 35)-(01, 38): NAME(NAME) 'chr'
[29](01, 38)-(01, 39): LPAR(OP) '('
[29](01, 39)-(01, 41): NUMBER(NUMBER) '91'
[29](01, 41)-(01, 42): RPAR(OP) ')'
[29](01, 43)-(01, 46): NAME(NAME) 'and'
[29](01, 47)-(01, 50): NAME(NAME) 'chr'
[29](01, 50)-(01, 51): LPAR(OP) '('
[29](01, 51)-(01, 54): NAME(NAME) 'ord'
[29](01, 54)-(01, 55): LPAR(OP) '('
[29](01, 55)-(01, 56): NAME(NAME) 's'
[29](01, 56)-(01, 57): LSQB(OP) '['
[29](01, 57)-(01, 58): NAME(NAME) 'i'
[29](01, 58)-(01, 59): RSQB(OP) ']'
[29](01, 59)-(01, 60): RPAR(OP) ')'
[29](01, 61)-(01, 62): PLUS(OP) '+'
[29](01, 63)-(01, 64): NAME(NAME) 'n'
[29](01, 64)-(01, 65): RPAR(OP) ')'
[29](01, 66)-(01, 68): LESSEQUAL(OP) '<='
[29](01, 69)-(01, 72): NAME(NAME) 'chr'
[29](01, 72)-(01, 73): LPAR(OP) '('
[29](01, 73)-(01, 75): NUMBER(NUMBER) '96'
[29](01, 75)-(01, 76): RPAR(OP) ')'
[29](01, 77)-(01, 79): NAME(NAME) 'or'
[29](01, 80)-(01, 83): NAME(NAME) 'chr'
[29](01, 83)-(01, 84): LPAR(OP) '('
[29](01, 84)-(01, 87): NAME(NAME) 'ord'
[29](01, 87)-(01, 88): LPAR(OP) '('
[29](01, 88)-(01, 89): NAME(NAME) 's'
[29](01, 89)-(01, 90): LSQB(OP) '['
[29](01, 90)-(01, 91): NAME(NAME) 'i'
[29](01, 91)-(01, 92): RSQB(OP) ']'
[29](01, 92)-(01, 93): RPAR(OP) ')'
[29](01, 94)-(01, 95): PLUS(OP) '+'
[29](01, 96)-(01, 97): NAME(NAME) 'n'
[29](01, 97)-(01, 98): RPAR(OP) ')'
[29](01, 99)-(01, 101): GREATEREQUAL(OP) '>='
[29](01, 102)-(01, 105): NAME(NAME) 'chr'
[29](01, 105)-(01, 106): LPAR(OP) '('
[29](01, 106)-(01, 109): NUMBER(NUMBER) '123'
[29](01, 109)-(01, 110): RPAR(OP) ')'
[29](01, 110)-(01, 111): COLON(OP) ':'
[29](01, 111)-(01, 112): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 18): NAME(NAME) 'output'
[30](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[30](01, 22)-(01, 25): NAME(NAME) 'chr'
[30](01, 25)-(01, 26): LPAR(OP) '('
[30](01, 26)-(01, 29): NAME(NAME) 'ord'
[30](01, 29)-(01, 30): LPAR(OP) '('
[30](01, 30)-(01, 31): NAME(NAME) 's'
[30](01, 31)-(01, 32): LSQB(OP) '['
[30](01, 32)-(01, 33): NAME(NAME) 'i'
[30](01, 33)-(01, 34): RSQB(OP) ']'
[30](01, 34)-(01, 35): RPAR(OP) ')'
[30](01, 36)-(01, 37): MINUS(OP) '-'
[30](01, 38)-(01, 40): NUMBER(NUMBER) '26'
[30](01, 41)-(01, 42): PLUS(OP) '+'
[30](01, 43)-(01, 44): NAME(NAME) 'n'
[30](01, 44)-(01, 45): RPAR(OP) ')'
[30](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 12): NAME(NAME) 'else'
[31](01, 12)-(01, 13): COLON(OP) ':'
[31](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 18): NAME(NAME) 'output'
[32](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[32](01, 22)-(01, 25): NAME(NAME) 'chr'
[32](01, 25)-(01, 26): LPAR(OP) '('
[32](01, 26)-(01, 29): NAME(NAME) 'ord'
[32](01, 29)-(01, 30): LPAR(OP) '('
[32](01, 30)-(01, 31): NAME(NAME) 's'
[32](01, 31)-(01, 32): LSQB(OP) '['
[32](01, 32)-(01, 33): NAME(NAME) 'i'
[32](01, 33)-(01, 34): RSQB(OP) ']'
[32](01, 34)-(01, 35): RPAR(OP) ')'
[32](01, 36)-(01, 37): PLUS(OP) '+'
[32](01, 38)-(01, 39): NAME(NAME) 'n'
[32](01, 39)-(01, 40): RPAR(OP) ')'
[32](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 01): NL(NL) '\n'
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 10): NAME(NAME) 'return'
[34](01, 11)-(01, 17): NAME(NAME) 'output'
[34](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 01): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 05): NAME(NAME) 'print'
[36](01, 05)-(01, 06): LPAR(OP) '('
[36](01, 06)-(01, 12): NAME(NAME) 'decode'
[36](01, 12)-(01, 13): LPAR(OP) '('
[36](01, 13)-(01, 36): STRING(STRING) '"hswohila: myvt h av g"'
[36](01, 36)-(01, 37): COMMA(OP) ','
[36](01, 38)-(01, 40): NUMBER(NUMBER) '33'
[36](01, 40)-(01, 41): RPAR(OP) ')'
[36](01, 41)-(01, 42): RPAR(OP) ')'
[36](01, 42)-(01, 43): NEWLINE(NEWLINE)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

