[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[00](01, 26)-(01, 27): LPAR(OP) '('
[00](01, 27)-(01, 35): NAME(NAME) 'sentence'
[00](01, 35)-(01, 36): RPAR(OP) ')'
[00](01, 36)-(01, 37): COLON(OP) ':'
[00](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 12): NAME(NAME) 'sentence'
[01](01, 13)-(01, 14): EQUAL(OP) '='
[01](01, 15)-(01, 22): NAME(NAME) 'make_up'
[01](01, 22)-(01, 23): LPAR(OP) '('
[01](01, 23)-(01, 31): NAME(NAME) 'sentence'
[01](01, 31)-(01, 32): RPAR(OP) ')'
[01](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 04)-(01, 05): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 12): NAME(NAME) 'char'
[03](01, 13)-(01, 15): NAME(NAME) 'in'
[03](01, 16)-(01, 21): NAME(NAME) 'range'
[03](01, 21)-(01, 22): LPAR(OP) '('
[03](01, 22)-(01, 25): NAME(NAME) 'len'
[03](01, 25)-(01, 26): LPAR(OP) '('
[03](01, 26)-(01, 34): NAME(NAME) 'sentence'
[03](01, 34)-(01, 35): RPAR(OP) ')'
[03](01, 35)-(01, 37): DOUBLESLASH(OP) '//'
[03](01, 37)-(01, 38): NUMBER(NUMBER) '2'
[03](01, 38)-(01, 39): RPAR(OP) ')'
[03](01, 39)-(01, 40): COLON(OP) ':'
[03](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 14): NAME(NAME) 'not'
[04](01, 15)-(01, 23): NAME(NAME) 'sentence'
[04](01, 23)-(01, 24): LSQB(OP) '['
[04](01, 24)-(01, 28): NAME(NAME) 'char'
[04](01, 28)-(01, 29): RSQB(OP) ']'
[04](01, 30)-(01, 32): EQEQUAL(OP) '=='
[04](01, 33)-(01, 41): NAME(NAME) 'sentence'
[04](01, 41)-(01, 42): LSQB(OP) '['
[04](01, 42)-(01, 45): NAME(NAME) 'len'
[04](01, 45)-(01, 46): LPAR(OP) '('
[04](01, 46)-(01, 54): NAME(NAME) 'sentence'
[04](01, 54)-(01, 55): RPAR(OP) ')'
[04](01, 55)-(01, 56): MINUS(OP) '-'
[04](01, 56)-(01, 60): NAME(NAME) 'char'
[04](01, 60)-(01, 61): MINUS(OP) '-'
[04](01, 61)-(01, 62): NUMBER(NUMBER) '1'
[04](01, 62)-(01, 63): RSQB(OP) ']'
[04](01, 63)-(01, 64): COLON(OP) ':'
[04](01, 64)-(01, 65): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 18): NAME(NAME) 'return'
[05](01, 19)-(01, 24): NAME(NAME) 'False'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 04)-(01, 05): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'return'
[07](01, 11)-(01, 15): NAME(NAME) 'True'
[07](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 04)-(01, 05): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 04)-(01, 05): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 04)-(01, 05): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 03): NAME(NAME) 'def'
[11](01, 04)-(01, 11): NAME(NAME) 'make_up'
[11](01, 11)-(01, 12): LPAR(OP) '('
[11](01, 12)-(01, 20): NAME(NAME) 'sentence'
[11](01, 20)-(01, 21): RPAR(OP) ')'
[11](01, 21)-(01, 22): COLON(OP) ':'
[11](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 18): NAME(NAME) 'returnsentence'
[12](01, 19)-(01, 20): EQUAL(OP) '='
[12](01, 21)-(01, 23): STRING(STRING) "''"
[12](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 07): NAME(NAME) 'for'
[13](01, 08)-(01, 12): NAME(NAME) 'char'
[13](01, 13)-(01, 15): NAME(NAME) 'in'
[13](01, 16)-(01, 24): NAME(NAME) 'sentence'
[13](01, 24)-(01, 25): COLON(OP) ':'
[13](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 10): NAME(NAME) 'if'
[14](01, 11)-(01, 14): NAME(NAME) 'ord'
[14](01, 14)-(01, 15): LPAR(OP) '('
[14](01, 15)-(01, 18): STRING(STRING) "'a'"
[14](01, 18)-(01, 19): RPAR(OP) ')'
[14](01, 20)-(01, 22): LESSEQUAL(OP) '<='
[14](01, 23)-(01, 26): NAME(NAME) 'ord'
[14](01, 26)-(01, 27): LPAR(OP) '('
[14](01, 27)-(01, 31): NAME(NAME) 'char'
[14](01, 31)-(01, 32): RPAR(OP) ')'
[14](01, 33)-(01, 35): LESSEQUAL(OP) '<='
[14](01, 36)-(01, 39): NAME(NAME) 'ord'
[14](01, 39)-(01, 40): LPAR(OP) '('
[14](01, 40)-(01, 43): STRING(STRING) "'z'"
[14](01, 43)-(01, 44): RPAR(OP) ')'
[14](01, 44)-(01, 45): COLON(OP) ':'
[14](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 26): NAME(NAME) 'returnsentence'
[15](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[15](01, 30)-(01, 34): NAME(NAME) 'char'
[15](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 08)-(01, 09): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 10): NAME(NAME) 'if'
[17](01, 11)-(01, 14): NAME(NAME) 'ord'
[17](01, 14)-(01, 15): LPAR(OP) '('
[17](01, 15)-(01, 18): STRING(STRING) "'A'"
[17](01, 18)-(01, 19): RPAR(OP) ')'
[17](01, 20)-(01, 22): LESSEQUAL(OP) '<='
[17](01, 23)-(01, 26): NAME(NAME) 'ord'
[17](01, 26)-(01, 27): LPAR(OP) '('
[17](01, 27)-(01, 31): NAME(NAME) 'char'
[17](01, 31)-(01, 32): RPAR(OP) ')'
[17](01, 33)-(01, 35): LESSEQUAL(OP) '<='
[17](01, 36)-(01, 39): NAME(NAME) 'ord'
[17](01, 39)-(01, 40): LPAR(OP) '('
[17](01, 40)-(01, 43): STRING(STRING) "'Z'"
[17](01, 43)-(01, 44): RPAR(OP) ')'
[17](01, 44)-(01, 45): COLON(OP) ':'
[17](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 26): NAME(NAME) 'returnsentence'
[18](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[18](01, 30)-(01, 33): NAME(NAME) 'chr'
[18](01, 33)-(01, 34): LPAR(OP) '('
[18](01, 34)-(01, 37): NAME(NAME) 'ord'
[18](01, 37)-(01, 38): LPAR(OP) '('
[18](01, 38)-(01, 42): NAME(NAME) 'char'
[18](01, 42)-(01, 43): RPAR(OP) ')'
[18](01, 44)-(01, 45): PLUS(OP) '+'
[18](01, 46)-(01, 47): LPAR(OP) '('
[18](01, 47)-(01, 50): NAME(NAME) 'ord'
[18](01, 50)-(01, 51): LPAR(OP) '('
[18](01, 51)-(01, 54): STRING(STRING) "'a'"
[18](01, 54)-(01, 55): RPAR(OP) ')'
[18](01, 56)-(01, 57): MINUS(OP) '-'
[18](01, 58)-(01, 61): NAME(NAME) 'ord'
[18](01, 61)-(01, 62): LPAR(OP) '('
[18](01, 62)-(01, 65): STRING(STRING) "'A'"
[18](01, 65)-(01, 66): RPAR(OP) ')'
[18](01, 66)-(01, 67): RPAR(OP) ')'
[18](01, 67)-(01, 68): RPAR(OP) ')'
[18](01, 68)-(01, 69): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 04)-(01, 05): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 10): NAME(NAME) 'return'
[20](01, 11)-(01, 25): NAME(NAME) 'returnsentence'
[20](01, 25)-(01, 26): NEWLINE(NEWLINE)
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

