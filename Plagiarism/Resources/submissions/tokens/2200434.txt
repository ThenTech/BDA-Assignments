[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'count_words'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 23): NAME(NAME) 'strWord'
[00](01, 23)-(01, 24): RPAR(OP) ')'
[00](01, 24)-(01, 25): COLON(OP) ':'
[00](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'Punc'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 19): STRING(STRING) '" .,:!?"'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'Num'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 22): STRING(STRING) '"0123456789"'
[02](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 13): NAME(NAME) 'blnNumber'
[04](01, 14)-(01, 15): EQUAL(OP) '='
[04](01, 16)-(01, 21): NAME(NAME) 'False'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 11): NAME(NAME) 'Counter'
[05](01, 12)-(01, 13): EQUAL(OP) '='
[05](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[05](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 07): NAME(NAME) 'for'
[07](01, 08)-(01, 12): NAME(NAME) 'intC'
[07](01, 13)-(01, 15): NAME(NAME) 'in'
[07](01, 16)-(01, 21): NAME(NAME) 'range'
[07](01, 21)-(01, 22): LPAR(OP) '('
[07](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[07](01, 23)-(01, 24): COMMA(OP) ','
[07](01, 25)-(01, 28): NAME(NAME) 'len'
[07](01, 28)-(01, 29): LPAR(OP) '('
[07](01, 29)-(01, 36): NAME(NAME) 'strWord'
[07](01, 36)-(01, 37): RPAR(OP) ')'
[07](01, 37)-(01, 38): RPAR(OP) ')'
[07](01, 38)-(01, 39): COLON(OP) ':'
[07](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'Char'
[08](01, 13)-(01, 14): EQUAL(OP) '='
[08](01, 15)-(01, 22): NAME(NAME) 'strWord'
[08](01, 22)-(01, 23): LSQB(OP) '['
[08](01, 23)-(01, 27): NAME(NAME) 'intC'
[08](01, 27)-(01, 28): RSQB(OP) ']'
[08](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 10): NAME(NAME) 'if'
[10](01, 11)-(01, 15): NAME(NAME) 'Char'
[10](01, 16)-(01, 18): NAME(NAME) 'in'
[10](01, 19)-(01, 22): NAME(NAME) 'Num'
[10](01, 22)-(01, 23): COLON(OP) ':'
[10](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 21): NAME(NAME) 'blnNumber'
[11](01, 22)-(01, 23): EQUAL(OP) '='
[11](01, 24)-(01, 28): NAME(NAME) 'True'
[11](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 12): NAME(NAME) 'elif'
[12](01, 13)-(01, 17): NAME(NAME) 'Char'
[12](01, 18)-(01, 20): NAME(NAME) 'in'
[12](01, 21)-(01, 25): NAME(NAME) 'Punc'
[12](01, 25)-(01, 26): COLON(OP) ':'
[12](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 14): NAME(NAME) 'if'
[13](01, 15)-(01, 24): NAME(NAME) 'blnNumber'
[13](01, 24)-(01, 25): COLON(OP) ':'
[13](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 25): NAME(NAME) 'blnNumber'
[14](01, 26)-(01, 27): EQUAL(OP) '='
[14](01, 28)-(01, 33): NAME(NAME) 'False'
[14](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 16): NAME(NAME) 'else'
[15](01, 16)-(01, 17): COLON(OP) ':'
[15](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 23): NAME(NAME) 'Counter'
[16](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[16](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[16](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 10): NAME(NAME) 'return'
[18](01, 11)-(01, 18): NAME(NAME) 'Counter'
[18](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

