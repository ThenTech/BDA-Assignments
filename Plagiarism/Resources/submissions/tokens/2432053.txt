[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 04): NAME(NAME) 'list'
[00](01, 05)-(01, 06): EQUAL(OP) '='
[00](01, 07)-(01, 08): LSQB(OP) '['
[00](01, 08)-(01, 09): RSQB(OP) ']'
[00](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 13): NAME(NAME) 'recursion'
[03](01, 13)-(01, 14): LPAR(OP) '('
[03](01, 14)-(01, 19): NAME(NAME) 'first'
[03](01, 19)-(01, 20): COMMA(OP) ','
[03](01, 21)-(01, 27): NAME(NAME) 'second'
[03](01, 27)-(01, 28): RPAR(OP) ')'
[03](01, 28)-(01, 29): COLON(OP) ':'
[03](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 08): NAME(NAME) 'last'
[04](01, 09)-(01, 10): EQUAL(OP) '='
[04](01, 11)-(01, 14): NAME(NAME) 'len'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 20): NAME(NAME) 'first'
[04](01, 20)-(01, 21): RPAR(OP) ')'
[04](01, 22)-(01, 24): EQEQUAL(OP) '=='
[04](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 05): NAME(NAME) 'n'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 08)-(01, 11): NAME(NAME) 'len'
[05](01, 11)-(01, 12): LPAR(OP) '('
[05](01, 12)-(01, 17): NAME(NAME) 'first'
[05](01, 17)-(01, 18): LSQB(OP) '['
[05](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[05](01, 19)-(01, 20): RSQB(OP) ']'
[05](01, 20)-(01, 21): RPAR(OP) ')'
[05](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'i'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 20): NAME(NAME) 'n'
[06](01, 20)-(01, 21): RPAR(OP) ')'
[06](01, 21)-(01, 22): COLON(OP) ':'
[06](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 12): NAME(NAME) 'item'
[07](01, 13)-(01, 14): EQUAL(OP) '='
[07](01, 15)-(01, 21): NAME(NAME) 'second'
[07](01, 22)-(01, 23): PLUS(OP) '+'
[07](01, 24)-(01, 29): NAME(NAME) 'first'
[07](01, 29)-(01, 30): LSQB(OP) '['
[07](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[07](01, 31)-(01, 32): RSQB(OP) ']'
[07](01, 32)-(01, 33): LSQB(OP) '['
[07](01, 33)-(01, 34): NAME(NAME) 'i'
[07](01, 34)-(01, 35): RSQB(OP) ']'
[07](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 15): NAME(NAME) 'last'
[08](01, 15)-(01, 16): COLON(OP) ':'
[08](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 16): NAME(NAME) 'list'
[09](01, 16)-(01, 17): DOT(OP) '.'
[09](01, 17)-(01, 23): NAME(NAME) 'append'
[09](01, 23)-(01, 24): LPAR(OP) '('
[09](01, 24)-(01, 28): NAME(NAME) 'item'
[09](01, 28)-(01, 29): RPAR(OP) ')'
[09](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 12): NAME(NAME) 'else'
[10](01, 12)-(01, 13): COLON(OP) ':'
[10](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 21): NAME(NAME) 'recursion'
[11](01, 21)-(01, 22): LPAR(OP) '('
[11](01, 22)-(01, 27): NAME(NAME) 'first'
[11](01, 27)-(01, 28): LSQB(OP) '['
[11](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[11](01, 29)-(01, 30): COLON(OP) ':'
[11](01, 30)-(01, 31): RSQB(OP) ']'
[11](01, 31)-(01, 32): COMMA(OP) ','
[11](01, 33)-(01, 37): NAME(NAME) 'item'
[11](01, 37)-(01, 38): RPAR(OP) ')'
[11](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 03): NAME(NAME) 'dna'
[14](01, 04)-(01, 05): EQUAL(OP) '='
[14](01, 06)-(01, 07): LSQB(OP) '['
[14](01, 07)-(01, 08): LSQB(OP) '['
[14](01, 08)-(01, 11): STRING(STRING) '"A"'
[14](01, 11)-(01, 12): COMMA(OP) ','
[14](01, 13)-(01, 16): STRING(STRING) '"C"'
[14](01, 16)-(01, 17): COMMA(OP) ','
[14](01, 18)-(01, 21): STRING(STRING) '"G"'
[14](01, 21)-(01, 22): COMMA(OP) ','
[14](01, 23)-(01, 26): STRING(STRING) '"T"'
[14](01, 26)-(01, 27): RSQB(OP) ']'
[14](01, 27)-(01, 28): COMMA(OP) ','
[14](01, 29)-(01, 30): LSQB(OP) '['
[14](01, 30)-(01, 33): STRING(STRING) '"A"'
[14](01, 33)-(01, 34): COMMA(OP) ','
[14](01, 35)-(01, 38): STRING(STRING) '"C"'
[14](01, 38)-(01, 39): COMMA(OP) ','
[14](01, 40)-(01, 43): STRING(STRING) '"G"'
[14](01, 43)-(01, 44): COMMA(OP) ','
[14](01, 45)-(01, 48): STRING(STRING) '"T"'
[14](01, 48)-(01, 49): RSQB(OP) ']'
[14](01, 49)-(01, 50): RSQB(OP) ']'
[14](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 09): NAME(NAME) 'recursion'
[15](01, 09)-(01, 10): LPAR(OP) '('
[15](01, 10)-(01, 13): NAME(NAME) 'dna'
[15](01, 13)-(01, 14): COMMA(OP) ','
[15](01, 15)-(01, 17): STRING(STRING) '""'
[15](01, 17)-(01, 18): RPAR(OP) ')'
[15](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 03): NAME(NAME) 'for'
[16](01, 04)-(01, 05): NAME(NAME) 'i'
[16](01, 06)-(01, 08): NAME(NAME) 'in'
[16](01, 09)-(01, 13): NAME(NAME) 'list'
[16](01, 13)-(01, 14): COLON(OP) ':'
[16](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 09): NAME(NAME) 'print'
[17](01, 09)-(01, 10): LPAR(OP) '('
[17](01, 10)-(01, 11): NAME(NAME) 'i'
[17](01, 11)-(01, 12): RPAR(OP) ')'
[17](01, 12)-(01, 13): NEWLINE(NEWLINE)
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

