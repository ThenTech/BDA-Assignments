[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 24): NAME(NAME) 'convert_to_uppercase'
[00](01, 24)-(01, 25): LPAR(OP) '('
[00](01, 25)-(01, 26): NAME(NAME) 's'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 21): NAME(NAME) 'uppercased_string'
[01](01, 22)-(01, 23): EQUAL(OP) '='
[01](01, 24)-(01, 26): STRING(STRING) '""'
[01](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 22): NAME(NAME) 'len'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 29): NAME(NAME) 'string'
[02](01, 29)-(01, 30): RPAR(OP) ')'
[02](01, 30)-(01, 31): RPAR(OP) ')'
[02](01, 31)-(01, 32): COLON(OP) ':'
[02](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 14): STRING(STRING) '"a"'
[03](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[03](01, 18)-(01, 19): NAME(NAME) 's'
[03](01, 19)-(01, 20): LSQB(OP) '['
[03](01, 20)-(01, 21): NAME(NAME) 'i'
[03](01, 21)-(01, 22): RSQB(OP) ']'
[03](01, 23)-(01, 25): LESSEQUAL(OP) '<='
[03](01, 26)-(01, 29): STRING(STRING) '"z"'
[03](01, 29)-(01, 30): COLON(OP) ':'
[03](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 29): NAME(NAME) 'uppercased_string'
[04](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[04](01, 33)-(01, 36): NAME(NAME) 'chr'
[04](01, 36)-(01, 37): LPAR(OP) '('
[04](01, 37)-(01, 40): NAME(NAME) 'ord'
[04](01, 40)-(01, 41): LPAR(OP) '('
[04](01, 41)-(01, 44): STRING(STRING) '"A"'
[04](01, 44)-(01, 45): RPAR(OP) ')'
[04](01, 46)-(01, 47): PLUS(OP) '+'
[04](01, 48)-(01, 51): NAME(NAME) 'ord'
[04](01, 51)-(01, 52): LPAR(OP) '('
[04](01, 52)-(01, 53): NAME(NAME) 's'
[04](01, 53)-(01, 54): LSQB(OP) '['
[04](01, 54)-(01, 55): NAME(NAME) 'i'
[04](01, 55)-(01, 56): RSQB(OP) ']'
[04](01, 56)-(01, 57): RPAR(OP) ')'
[04](01, 58)-(01, 59): MINUS(OP) '-'
[04](01, 60)-(01, 63): NAME(NAME) 'ord'
[04](01, 63)-(01, 64): LPAR(OP) '('
[04](01, 64)-(01, 67): STRING(STRING) '"a"'
[04](01, 67)-(01, 68): RPAR(OP) ')'
[04](01, 68)-(01, 69): RPAR(OP) ')'
[04](01, 69)-(01, 70): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 12): NAME(NAME) 'else'
[05](01, 12)-(01, 13): COLON(OP) ':'
[05](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 29): NAME(NAME) 'uppercased_string'
[06](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[06](01, 33)-(01, 34): NAME(NAME) 's'
[06](01, 34)-(01, 35): LSQB(OP) '['
[06](01, 35)-(01, 36): NAME(NAME) 'i'
[06](01, 36)-(01, 37): RSQB(OP) ']'
[06](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'return'
[07](01, 11)-(01, 28): NAME(NAME) 'uppercased_string'
[07](01, 28)-(01, 29): NEWLINE(NEWLINE)
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

