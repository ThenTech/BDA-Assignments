[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'in_alphabet'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'letter'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 12): NAME(NAME) 'alphabet'
[01](01, 13)-(01, 14): EQUAL(OP) '='
[01](01, 15)-(01, 69): STRING(STRING) '"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWZYZ"'
[01](01, 69)-(01, 70): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 15): NAME(NAME) 'letters'
[02](01, 16)-(01, 18): NAME(NAME) 'in'
[02](01, 19)-(01, 27): NAME(NAME) 'alphabet'
[02](01, 27)-(01, 28): COLON(OP) ':'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 12): INDENT(INDENT) '            '
[03](01, 12)-(01, 14): NAME(NAME) 'if'
[03](01, 15)-(01, 22): NAME(NAME) 'letters'
[03](01, 23)-(01, 25): EQEQUAL(OP) '=='
[03](01, 26)-(01, 32): NAME(NAME) 'letter'
[03](01, 32)-(01, 33): COLON(OP) ':'
[03](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 16): INDENT(INDENT) '                '
[04](01, 16)-(01, 22): NAME(NAME) 'return'
[04](01, 23)-(01, 27): NAME(NAME) 'True'
[04](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'return'
[05](01, 11)-(01, 16): NAME(NAME) 'False'
[05](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'def'
[09](01, 04)-(01, 15): NAME(NAME) 'count_words'
[09](01, 15)-(01, 16): LPAR(OP) '('
[09](01, 16)-(01, 22): NAME(NAME) 'string'
[09](01, 22)-(01, 23): RPAR(OP) ')'
[09](01, 23)-(01, 24): COLON(OP) ':'
[09](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 12): NAME(NAME) 'alphabet'
[10](01, 13)-(01, 14): EQUAL(OP) '='
[10](01, 15)-(01, 69): STRING(STRING) '"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWZYZ"'
[10](01, 69)-(01, 70): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 16): NAME(NAME) 'word_counter'
[11](01, 17)-(01, 18): EQUAL(OP) '='
[11](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[11](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 07): NAME(NAME) 'for'
[12](01, 08)-(01, 18): NAME(NAME) 'characters'
[12](01, 19)-(01, 21): NAME(NAME) 'in'
[12](01, 22)-(01, 27): NAME(NAME) 'range'
[12](01, 27)-(01, 28): LPAR(OP) '('
[12](01, 28)-(01, 31): NAME(NAME) 'len'
[12](01, 31)-(01, 32): LPAR(OP) '('
[12](01, 32)-(01, 38): NAME(NAME) 'string'
[12](01, 38)-(01, 39): RPAR(OP) ')'
[12](01, 39)-(01, 40): MINUS(OP) '-'
[12](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[12](01, 41)-(01, 42): RPAR(OP) ')'
[12](01, 42)-(01, 43): COLON(OP) ':'
[12](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 12): LPAR(OP) '('
[13](01, 12)-(01, 15): NAME(NAME) 'not'
[13](01, 16)-(01, 27): NAME(NAME) 'in_alphabet'
[13](01, 27)-(01, 28): LPAR(OP) '('
[13](01, 28)-(01, 34): NAME(NAME) 'string'
[13](01, 34)-(01, 35): LSQB(OP) '['
[13](01, 35)-(01, 45): NAME(NAME) 'characters'
[13](01, 45)-(01, 46): RSQB(OP) ']'
[13](01, 46)-(01, 47): RPAR(OP) ')'
[13](01, 48)-(01, 50): NAME(NAME) 'or'
[13](01, 51)-(01, 61): NAME(NAME) 'characters'
[13](01, 62)-(01, 63): EQUAL(OP) '='
[13](01, 64)-(01, 65): NUMBER(NUMBER) '0'
[13](01, 65)-(01, 66): RPAR(OP) ')'
[13](01, 67)-(01, 70): NAME(NAME) 'and'
[13](01, 71)-(01, 82): NAME(NAME) 'in_alphabet'
[13](01, 82)-(01, 83): LPAR(OP) '('
[13](01, 83)-(01, 89): NAME(NAME) 'string'
[13](01, 89)-(01, 90): LSQB(OP) '['
[13](01, 90)-(01, 100): NAME(NAME) 'characters'
[13](01, 100)-(01, 101): PLUS(OP) '+'
[13](01, 101)-(01, 102): NUMBER(NUMBER) '1'
[13](01, 102)-(01, 103): RSQB(OP) ']'
[13](01, 103)-(01, 104): RPAR(OP) ')'
[13](01, 104)-(01, 105): COLON(OP) ':'
[13](01, 105)-(01, 106): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 24): NAME(NAME) 'word_counter'
[14](01, 25)-(01, 27): PLUSEQUAL(OP) '+='
[14](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[14](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 12)-(01, 13): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 10): NAME(NAME) 'return'
[16](01, 10)-(01, 11): LPAR(OP) '('
[16](01, 11)-(01, 23): NAME(NAME) 'word_counter'
[16](01, 23)-(01, 24): RPAR(OP) ')'
[16](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 08)-(01, 09): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 16)-(01, 17): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 08)-(01, 09): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

