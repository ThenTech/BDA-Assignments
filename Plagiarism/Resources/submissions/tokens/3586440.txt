[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'string'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'for'
[02](01, 04)-(01, 05): NAME(NAME) 'i'
[02](01, 06)-(01, 08): NAME(NAME) 'in'
[02](01, 09)-(01, 14): NAME(NAME) 'range'
[02](01, 14)-(01, 15): LPAR(OP) '('
[02](01, 15)-(01, 18): NAME(NAME) 'len'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 25): NAME(NAME) 'string'
[02](01, 25)-(01, 26): RPAR(OP) ')'
[02](01, 26)-(01, 27): RPAR(OP) ')'
[02](01, 27)-(01, 28): COLON(OP) ':'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 08): LPAR(OP) '('
[03](01, 08)-(01, 14): NAME(NAME) 'string'
[03](01, 14)-(01, 15): LSQB(OP) '['
[03](01, 15)-(01, 16): NAME(NAME) 'i'
[03](01, 16)-(01, 17): RSQB(OP) ']'
[03](01, 18)-(01, 20): NOTEQUAL(OP) '!='
[03](01, 21)-(01, 27): NAME(NAME) 'string'
[03](01, 27)-(01, 28): LSQB(OP) '['
[03](01, 28)-(01, 31): NAME(NAME) 'len'
[03](01, 31)-(01, 32): LPAR(OP) '('
[03](01, 32)-(01, 38): NAME(NAME) 'string'
[03](01, 38)-(01, 39): RPAR(OP) ')'
[03](01, 40)-(01, 41): MINUS(OP) '-'
[03](01, 42)-(01, 43): NUMBER(NUMBER) '1'
[03](01, 44)-(01, 45): MINUS(OP) '-'
[03](01, 46)-(01, 47): NAME(NAME) 'i'
[03](01, 47)-(01, 48): RSQB(OP) ']'
[03](01, 48)-(01, 49): RPAR(OP) ')'
[03](01, 49)-(01, 50): COLON(OP) ':'
[03](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'print'
[04](01, 13)-(01, 14): LPAR(OP) '('
[04](01, 14)-(01, 20): NAME(NAME) 'string'
[04](01, 20)-(01, 21): COMMA(OP) ','
[04](01, 22)-(01, 43): STRING(STRING) '"is not a palindrome"'
[04](01, 43)-(01, 44): RPAR(OP) ')'
[04](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 13): NAME(NAME) 'break'
[05](01, 13)-(01, 14): NEWLINE(NEWLINE)
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

