[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'count_words'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'string'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'l'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 14): NAME(NAME) 'string'
[01](01, 14)-(01, 15): DOT(OP) '.'
[01](01, 15)-(01, 20): NAME(NAME) 'split'
[01](01, 20)-(01, 21): LPAR(OP) '('
[01](01, 21)-(01, 22): RPAR(OP) ')'
[01](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 05): NAME(NAME) 'n'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 20): STRING(STRING) '"0123456789"'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 05): NAME(NAME) 'z'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 44): STRING(STRING) '"!\\"#$%&\'()*+,-./:;<=>?@[\\\\]^_`{|}~"'
[03](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'i'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[06](01, 20)-(01, 21): COMMA(OP) ','
[06](01, 22)-(01, 25): NAME(NAME) 'len'
[06](01, 25)-(01, 26): LPAR(OP) '('
[06](01, 26)-(01, 27): NAME(NAME) 'l'
[06](01, 27)-(01, 28): RPAR(OP) ')'
[06](01, 28)-(01, 29): MINUS(OP) '-'
[06](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[06](01, 30)-(01, 31): RPAR(OP) ')'
[06](01, 31)-(01, 32): COLON(OP) ':'
[06](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 12): NAME(NAME) 'word'
[07](01, 13)-(01, 14): EQUAL(OP) '='
[07](01, 15)-(01, 16): NAME(NAME) 'l'
[07](01, 16)-(01, 17): LSQB(OP) '['
[07](01, 17)-(01, 18): NAME(NAME) 'i'
[07](01, 18)-(01, 19): RSQB(OP) ']'
[07](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 08)-(01, 09): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 12): NAME(NAME) 'n'
[09](01, 13)-(01, 16): NAME(NAME) 'not'
[09](01, 17)-(01, 19): NAME(NAME) 'in'
[09](01, 20)-(01, 24): NAME(NAME) 'word'
[09](01, 25)-(01, 28): NAME(NAME) 'and'
[09](01, 29)-(01, 32): NAME(NAME) 'not'
[09](01, 33)-(01, 36): NAME(NAME) 'len'
[09](01, 36)-(01, 37): LPAR(OP) '('
[09](01, 37)-(01, 41): NAME(NAME) 'word'
[09](01, 41)-(01, 42): RPAR(OP) ')'
[09](01, 43)-(01, 45): LESSEQUAL(OP) '<='
[09](01, 46)-(01, 47): NUMBER(NUMBER) '1'
[09](01, 48)-(01, 51): NAME(NAME) 'and'
[09](01, 52)-(01, 53): NAME(NAME) 'z'
[09](01, 54)-(01, 57): NAME(NAME) 'not'
[09](01, 58)-(01, 60): NAME(NAME) 'in'
[09](01, 61)-(01, 65): NAME(NAME) 'word'
[09](01, 65)-(01, 66): COLON(OP) ':'
[09](01, 66)-(01, 67): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 17): NAME(NAME) 'count'
[10](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[10](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[10](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'return'
[11](01, 11)-(01, 16): NAME(NAME) 'count'
[11](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

