[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'def'
[01](01, 04)-(01, 15): NAME(NAME) 'brute_force'
[01](01, 15)-(01, 16): LPAR(OP) '('
[01](01, 16)-(01, 21): NAME(NAME) 'chars'
[01](01, 21)-(01, 22): COMMA(OP) ','
[01](01, 23)-(01, 29): NAME(NAME) 'length'
[01](01, 29)-(01, 30): RPAR(OP) ')'
[01](01, 30)-(01, 31): COLON(OP) ':'
[01](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 15): NAME(NAME) 'forced_list'
[02](01, 16)-(01, 17): EQUAL(OP) '='
[02](01, 18)-(01, 19): LSQB(OP) '['
[02](01, 19)-(01, 20): LPAR(OP) '('
[02](01, 20)-(01, 25): NAME(NAME) 'chars'
[02](01, 25)-(01, 26): LSQB(OP) '['
[02](01, 26)-(01, 27): NUMBER(NUMBER) '0'
[02](01, 27)-(01, 28): RSQB(OP) ']'
[02](01, 28)-(01, 29): RPAR(OP) ')'
[02](01, 30)-(01, 31): STAR(OP) '*'
[02](01, 32)-(01, 38): NAME(NAME) 'length'
[02](01, 38)-(01, 39): RSQB(OP) ']'
[02](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 12): NAME(NAME) 'new_list'
[03](01, 13)-(01, 14): EQUAL(OP) '='
[03](01, 15)-(01, 16): LSQB(OP) '['
[03](01, 16)-(01, 17): RSQB(OP) ']'
[03](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 04)-(01, 54): COMMENT(COMMENT) '# Gaat over de lengte van de te bruteforcen string'
[05](01, 54)-(01, 55): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 04)-(01, 100): COMMENT(COMMENT) '# Voeg de nieuwe lijst tijd aan de oude en maak de nieuwe leeg zodat je het process kan herhalen'
[06](01, 100)-(01, 101): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 07): NAME(NAME) 'for'
[07](01, 08)-(01, 15): NAME(NAME) 'current'
[07](01, 16)-(01, 18): NAME(NAME) 'in'
[07](01, 19)-(01, 24): NAME(NAME) 'range'
[07](01, 24)-(01, 25): LPAR(OP) '('
[07](01, 25)-(01, 31): NAME(NAME) 'length'
[07](01, 31)-(01, 32): RPAR(OP) ')'
[07](01, 32)-(01, 33): COLON(OP) ':'
[07](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 08)-(01, 60): COMMENT(COMMENT) '# Ga voor elk te gebruiken character alle stappen af'
[09](01, 60)-(01, 61): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 11): NAME(NAME) 'for'
[10](01, 12)-(01, 17): NAME(NAME) 'index'
[10](01, 18)-(01, 20): NAME(NAME) 'in'
[10](01, 21)-(01, 26): NAME(NAME) 'range'
[10](01, 26)-(01, 27): LPAR(OP) '('
[10](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[10](01, 28)-(01, 29): COMMA(OP) ','
[10](01, 30)-(01, 33): NAME(NAME) 'len'
[10](01, 33)-(01, 34): LPAR(OP) '('
[10](01, 34)-(01, 39): NAME(NAME) 'chars'
[10](01, 39)-(01, 40): RPAR(OP) ')'
[10](01, 40)-(01, 41): RPAR(OP) ')'
[10](01, 41)-(01, 42): COLON(OP) ':'
[10](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 12)-(01, 136): COMMENT(COMMENT) '# Per element in de lijst, maak een nieuw element aan en pas het i(de) of current character aan en voeg dit toe aan de lijst'
[12](01, 136)-(01, 137): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 15): NAME(NAME) 'for'
[13](01, 16)-(01, 23): NAME(NAME) 'element'
[13](01, 24)-(01, 26): NAME(NAME) 'in'
[13](01, 27)-(01, 38): NAME(NAME) 'forced_list'
[13](01, 38)-(01, 39): COLON(OP) ':'
[13](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 25): NAME(NAME) 'new_force'
[14](01, 26)-(01, 27): EQUAL(OP) '='
[14](01, 28)-(01, 30): STRING(STRING) '""'
[14](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 16)-(01, 113): COMMENT(COMMENT) '# Pas het character op huidige positie aan naar het huidige character van het element in de lijst'
[15](01, 113)-(01, 114): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 19): NAME(NAME) 'for'
[16](01, 20)-(01, 28): NAME(NAME) 'el_index'
[16](01, 29)-(01, 31): NAME(NAME) 'in'
[16](01, 32)-(01, 37): NAME(NAME) 'range'
[16](01, 37)-(01, 38): LPAR(OP) '('
[16](01, 38)-(01, 41): NAME(NAME) 'len'
[16](01, 41)-(01, 42): LPAR(OP) '('
[16](01, 42)-(01, 49): NAME(NAME) 'element'
[16](01, 49)-(01, 50): RPAR(OP) ')'
[16](01, 50)-(01, 51): RPAR(OP) ')'
[16](01, 51)-(01, 52): COLON(OP) ':'
[16](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 20): INDENT(INDENT) '                    '
[17](01, 20)-(01, 22): NAME(NAME) 'if'
[17](01, 23)-(01, 31): NAME(NAME) 'el_index'
[17](01, 32)-(01, 34): EQEQUAL(OP) '=='
[17](01, 35)-(01, 42): NAME(NAME) 'current'
[17](01, 42)-(01, 43): COLON(OP) ':'
[17](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 24): INDENT(INDENT) '                        '
[18](01, 24)-(01, 33): NAME(NAME) 'new_force'
[18](01, 34)-(01, 36): PLUSEQUAL(OP) '+='
[18](01, 37)-(01, 42): NAME(NAME) 'chars'
[18](01, 42)-(01, 43): LSQB(OP) '['
[18](01, 43)-(01, 48): NAME(NAME) 'index'
[18](01, 48)-(01, 49): RSQB(OP) ']'
[18](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 20): INDENT(INDENT) '                    '
[19](01, 20)-(01, 24): NAME(NAME) 'else'
[19](01, 24)-(01, 25): COLON(OP) ':'
[19](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 24): INDENT(INDENT) '                        '
[20](01, 24)-(01, 33): NAME(NAME) 'new_force'
[20](01, 34)-(01, 36): PLUSEQUAL(OP) '+='
[20](01, 37)-(01, 44): NAME(NAME) 'element'
[20](01, 44)-(01, 45): LSQB(OP) '['
[20](01, 45)-(01, 53): NAME(NAME) 'el_index'
[20](01, 53)-(01, 54): RSQB(OP) ']'
[20](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 24): NAME(NAME) 'new_list'
[21](01, 24)-(01, 25): DOT(OP) '.'
[21](01, 25)-(01, 31): NAME(NAME) 'append'
[21](01, 31)-(01, 32): LPAR(OP) '('
[21](01, 32)-(01, 41): NAME(NAME) 'new_force'
[21](01, 41)-(01, 42): RPAR(OP) ')'
[21](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 19): NAME(NAME) 'forced_list'
[22](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[22](01, 23)-(01, 31): NAME(NAME) 'new_list'
[22](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 16): NAME(NAME) 'new_list'
[23](01, 17)-(01, 18): EQUAL(OP) '='
[23](01, 19)-(01, 20): LSQB(OP) '['
[23](01, 20)-(01, 21): RSQB(OP) ']'
[23](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 10): NAME(NAME) 'return'
[25](01, 11)-(01, 22): NAME(NAME) 'forced_list'
[25](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 04)-(01, 05): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 07): NAME(NAME) 'for'
[27](01, 08)-(01, 10): NAME(NAME) 'el'
[27](01, 11)-(01, 13): NAME(NAME) 'in'
[27](01, 14)-(01, 25): NAME(NAME) 'brute_force'
[27](01, 25)-(01, 26): LPAR(OP) '('
[27](01, 26)-(01, 32): STRING(STRING) '"ACGT"'
[27](01, 32)-(01, 33): COMMA(OP) ','
[27](01, 34)-(01, 35): NUMBER(NUMBER) '2'
[27](01, 35)-(01, 36): RPAR(OP) ')'
[27](01, 36)-(01, 37): COLON(OP) ':'
[27](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 08): INDENT(INDENT) '        '
[28](01, 08)-(01, 13): NAME(NAME) 'print'
[28](01, 13)-(01, 14): LPAR(OP) '('
[28](01, 14)-(01, 16): NAME(NAME) 'el'
[28](01, 16)-(01, 17): RPAR(OP) ')'
[28](01, 17)-(01, 18): NEWLINE(NEWLINE)
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

