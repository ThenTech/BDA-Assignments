[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'convert'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 18): NAME(NAME) 'number'
[00](01, 18)-(01, 19): RPAR(OP) ')'
[00](01, 19)-(01, 20): COLON(OP) ':'
[00](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 16): NAME(NAME) 'whole_cipher'
[01](01, 17)-(01, 18): EQUAL(OP) '='
[01](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[01](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 13): NAME(NAME) 'number'
[02](01, 14)-(01, 16): EQEQUAL(OP) '=='
[02](01, 17)-(01, 19): STRING(STRING) '""'
[02](01, 19)-(01, 20): COLON(OP) ':'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 14): NAME(NAME) 'return'
[03](01, 15)-(01, 27): NAME(NAME) 'whole_cipher'
[03](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 16): NAME(NAME) 'whole_cipher'
[04](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[04](01, 20)-(01, 23): NAME(NAME) 'int'
[04](01, 23)-(01, 24): LPAR(OP) '('
[04](01, 24)-(01, 30): NAME(NAME) 'number'
[04](01, 30)-(01, 31): LSQB(OP) '['
[04](01, 31)-(01, 32): NUMBER(NUMBER) '0'
[04](01, 32)-(01, 33): RSQB(OP) ']'
[04](01, 33)-(01, 34): RPAR(OP) ')'
[04](01, 35)-(01, 36): STAR(OP) '*'
[04](01, 37)-(01, 38): LPAR(OP) '('
[04](01, 38)-(01, 40): NUMBER(NUMBER) '10'
[04](01, 41)-(01, 43): DOUBLESTAR(OP) '**'
[04](01, 44)-(01, 47): NAME(NAME) 'len'
[04](01, 47)-(01, 48): LPAR(OP) '('
[04](01, 48)-(01, 54): NAME(NAME) 'number'
[04](01, 54)-(01, 55): RPAR(OP) ')'
[04](01, 55)-(01, 56): MINUS(OP) '-'
[04](01, 56)-(01, 57): NUMBER(NUMBER) '1'
[04](01, 57)-(01, 58): RPAR(OP) ')'
[04](01, 59)-(01, 60): PLUS(OP) '+'
[04](01, 61)-(01, 68): NAME(NAME) 'convert'
[04](01, 68)-(01, 69): LPAR(OP) '('
[04](01, 69)-(01, 75): NAME(NAME) 'number'
[04](01, 75)-(01, 76): LSQB(OP) '['
[04](01, 76)-(01, 77): NUMBER(NUMBER) '1'
[04](01, 77)-(01, 78): COLON(OP) ':'
[04](01, 78)-(01, 79): RSQB(OP) ']'
[04](01, 79)-(01, 80): RPAR(OP) ')'
[04](01, 80)-(01, 81): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

