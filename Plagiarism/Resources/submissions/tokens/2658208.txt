[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'count_words'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'string'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'alfabet'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 68): STRING(STRING) '"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"'
[01](01, 68)-(01, 69): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 08): NAME(NAME) 'word'
[02](01, 09)-(01, 10): EQUAL(OP) '='
[02](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[02](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'i'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 18): NAME(NAME) 'range'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 22): NAME(NAME) 'len'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 29): NAME(NAME) 'string'
[03](01, 29)-(01, 30): RPAR(OP) ')'
[03](01, 31)-(01, 32): MINUS(OP) '-'
[03](01, 33)-(01, 34): NUMBER(NUMBER) '2'
[03](01, 34)-(01, 35): RPAR(OP) ')'
[03](01, 35)-(01, 36): COLON(OP) ':'
[03](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): NAME(NAME) 'i'
[04](01, 13)-(01, 15): EQEQUAL(OP) '=='
[04](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[04](01, 17)-(01, 18): COLON(OP) ':'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 14): NAME(NAME) 'if'
[05](01, 15)-(01, 21): NAME(NAME) 'string'
[05](01, 21)-(01, 22): LSQB(OP) '['
[05](01, 22)-(01, 23): NAME(NAME) 'i'
[05](01, 23)-(01, 24): RSQB(OP) ']'
[05](01, 25)-(01, 27): NAME(NAME) 'in'
[05](01, 28)-(01, 35): NAME(NAME) 'alfabet'
[05](01, 36)-(01, 39): NAME(NAME) 'and'
[05](01, 40)-(01, 46): NAME(NAME) 'string'
[05](01, 46)-(01, 47): LSQB(OP) '['
[05](01, 47)-(01, 48): NAME(NAME) 'i'
[05](01, 49)-(01, 50): PLUS(OP) '+'
[05](01, 51)-(01, 52): NUMBER(NUMBER) '1'
[05](01, 52)-(01, 53): RSQB(OP) ']'
[05](01, 54)-(01, 56): NAME(NAME) 'in'
[05](01, 57)-(01, 64): NAME(NAME) 'alfabet'
[05](01, 64)-(01, 65): COLON(OP) ':'
[05](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 20): NAME(NAME) 'word'
[06](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[06](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 12): NAME(NAME) 'else'
[07](01, 12)-(01, 13): COLON(OP) ':'
[07](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 14): NAME(NAME) 'if'
[08](01, 15)-(01, 21): NAME(NAME) 'string'
[08](01, 21)-(01, 22): LSQB(OP) '['
[08](01, 22)-(01, 23): NAME(NAME) 'i'
[08](01, 23)-(01, 24): RSQB(OP) ']'
[08](01, 25)-(01, 27): NAME(NAME) 'in'
[08](01, 28)-(01, 35): NAME(NAME) 'alfabet'
[08](01, 36)-(01, 39): NAME(NAME) 'and'
[08](01, 40)-(01, 46): NAME(NAME) 'string'
[08](01, 46)-(01, 47): LSQB(OP) '['
[08](01, 47)-(01, 48): NAME(NAME) 'i'
[08](01, 49)-(01, 50): PLUS(OP) '+'
[08](01, 51)-(01, 52): NUMBER(NUMBER) '1'
[08](01, 52)-(01, 53): RSQB(OP) ']'
[08](01, 54)-(01, 56): NAME(NAME) 'in'
[08](01, 57)-(01, 64): NAME(NAME) 'alfabet'
[08](01, 65)-(01, 68): NAME(NAME) 'and'
[08](01, 69)-(01, 75): NAME(NAME) 'string'
[08](01, 75)-(01, 76): LSQB(OP) '['
[08](01, 76)-(01, 77): NAME(NAME) 'i'
[08](01, 78)-(01, 79): MINUS(OP) '-'
[08](01, 80)-(01, 81): NUMBER(NUMBER) '1'
[08](01, 81)-(01, 82): RSQB(OP) ']'
[08](01, 83)-(01, 86): NAME(NAME) 'not'
[08](01, 87)-(01, 89): NAME(NAME) 'in'
[08](01, 90)-(01, 97): NAME(NAME) 'alfabet'
[08](01, 97)-(01, 98): COLON(OP) ':'
[08](01, 98)-(01, 99): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 20): NAME(NAME) 'word'
[09](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[09](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[09](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'return'
[10](01, 11)-(01, 15): NAME(NAME) 'word'
[10](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 08)-(01, 09): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 08)-(01, 09): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

