[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): COLON(OP) ':'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 07): NAME(NAME) 'seq'
[01](01, 08)-(01, 09): EQUAL(OP) '='
[01](01, 10)-(01, 12): STRING(STRING) '""'
[01](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 08): NAME(NAME) 's'
[02](01, 09)-(01, 11): EQEQUAL(OP) '=='
[02](01, 12)-(01, 15): STRING(STRING) '"X"'
[02](01, 16)-(01, 18): NAME(NAME) 'or'
[02](01, 19)-(01, 20): NAME(NAME) 's'
[02](01, 21)-(01, 23): EQEQUAL(OP) '=='
[02](01, 24)-(01, 27): STRING(STRING) '" "'
[02](01, 27)-(01, 28): COLON(OP) ':'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 14): NAME(NAME) 'return'
[03](01, 15)-(01, 18): STRING(STRING) '"0"'
[03](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 08): NAME(NAME) 's'
[04](01, 09)-(01, 11): EQEQUAL(OP) '=='
[04](01, 12)-(01, 14): STRING(STRING) '""'
[04](01, 14)-(01, 15): COLON(OP) ':'
[04](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 14): NAME(NAME) 'return'
[05](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 04)-(01, 05): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 06): NAME(NAME) 'if'
[07](01, 07)-(01, 08): NAME(NAME) 's'
[07](01, 08)-(01, 09): LSQB(OP) '['
[07](01, 09)-(01, 10): NUMBER(NUMBER) '1'
[07](01, 10)-(01, 11): RSQB(OP) ']'
[07](01, 12)-(01, 14): EQEQUAL(OP) '=='
[07](01, 15)-(01, 18): STRING(STRING) '"X"'
[07](01, 18)-(01, 19): COLON(OP) ':'
[07](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 11): NAME(NAME) 'seq'
[08](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[08](01, 15)-(01, 18): STRING(STRING) '"1"'
[08](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 08): NAME(NAME) 'elif'
[09](01, 09)-(01, 10): NAME(NAME) 's'
[09](01, 10)-(01, 11): LSQB(OP) '['
[09](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[09](01, 12)-(01, 13): RSQB(OP) ']'
[09](01, 14)-(01, 16): EQEQUAL(OP) '=='
[09](01, 17)-(01, 20): STRING(STRING) '" "'
[09](01, 20)-(01, 21): COLON(OP) ':'
[09](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 11): NAME(NAME) 'seq'
[10](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[10](01, 15)-(01, 18): STRING(STRING) '"0"'
[10](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 04)-(01, 05): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 07): NAME(NAME) 'for'
[12](01, 08)-(01, 09): NAME(NAME) 'i'
[12](01, 10)-(01, 12): NAME(NAME) 'in'
[12](01, 13)-(01, 18): NAME(NAME) 'range'
[12](01, 18)-(01, 19): LPAR(OP) '('
[12](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[12](01, 20)-(01, 21): COMMA(OP) ','
[12](01, 22)-(01, 25): NAME(NAME) 'len'
[12](01, 25)-(01, 26): LPAR(OP) '('
[12](01, 26)-(01, 27): NAME(NAME) 's'
[12](01, 27)-(01, 28): RPAR(OP) ')'
[12](01, 29)-(01, 30): MINUS(OP) '-'
[12](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[12](01, 32)-(01, 33): RPAR(OP) ')'
[12](01, 33)-(01, 34): COLON(OP) ':'
[12](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 12): NAME(NAME) 's'
[13](01, 12)-(01, 13): LSQB(OP) '['
[13](01, 13)-(01, 14): NAME(NAME) 'i'
[13](01, 15)-(01, 16): MINUS(OP) '-'
[13](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[13](01, 18)-(01, 19): RSQB(OP) ']'
[13](01, 20)-(01, 22): EQEQUAL(OP) '=='
[13](01, 23)-(01, 26): STRING(STRING) '" "'
[13](01, 27)-(01, 30): NAME(NAME) 'and'
[13](01, 31)-(01, 32): NAME(NAME) 's'
[13](01, 32)-(01, 33): LSQB(OP) '['
[13](01, 33)-(01, 34): NAME(NAME) 'i'
[13](01, 35)-(01, 36): PLUS(OP) '+'
[13](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[13](01, 38)-(01, 39): RSQB(OP) ']'
[13](01, 40)-(01, 42): EQEQUAL(OP) '=='
[13](01, 43)-(01, 46): STRING(STRING) '" "'
[13](01, 46)-(01, 47): COLON(OP) ':'
[13](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 15): NAME(NAME) 'seq'
[14](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[14](01, 19)-(01, 22): STRING(STRING) '"0"'
[14](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 12): NAME(NAME) 'elif'
[15](01, 13)-(01, 14): LPAR(OP) '('
[15](01, 14)-(01, 15): NAME(NAME) 's'
[15](01, 15)-(01, 16): LSQB(OP) '['
[15](01, 16)-(01, 17): NAME(NAME) 'i'
[15](01, 18)-(01, 19): MINUS(OP) '-'
[15](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[15](01, 21)-(01, 22): RSQB(OP) ']'
[15](01, 23)-(01, 25): EQEQUAL(OP) '=='
[15](01, 26)-(01, 29): STRING(STRING) '" "'
[15](01, 30)-(01, 33): NAME(NAME) 'and'
[15](01, 34)-(01, 35): NAME(NAME) 's'
[15](01, 35)-(01, 36): LSQB(OP) '['
[15](01, 36)-(01, 37): NAME(NAME) 'i'
[15](01, 38)-(01, 39): PLUS(OP) '+'
[15](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[15](01, 41)-(01, 42): RSQB(OP) ']'
[15](01, 43)-(01, 45): EQEQUAL(OP) '=='
[15](01, 46)-(01, 49): STRING(STRING) '"X"'
[15](01, 49)-(01, 50): RPAR(OP) ')'
[15](01, 51)-(01, 53): NAME(NAME) 'or'
[15](01, 54)-(01, 55): LPAR(OP) '('
[15](01, 55)-(01, 56): NAME(NAME) 's'
[15](01, 56)-(01, 57): LSQB(OP) '['
[15](01, 57)-(01, 58): NAME(NAME) 'i'
[15](01, 59)-(01, 60): PLUS(OP) '+'
[15](01, 61)-(01, 62): NUMBER(NUMBER) '1'
[15](01, 62)-(01, 63): RSQB(OP) ']'
[15](01, 64)-(01, 66): EQEQUAL(OP) '=='
[15](01, 67)-(01, 70): STRING(STRING) '" "'
[15](01, 71)-(01, 74): NAME(NAME) 'and'
[15](01, 75)-(01, 76): NAME(NAME) 's'
[15](01, 76)-(01, 77): LSQB(OP) '['
[15](01, 77)-(01, 78): NAME(NAME) 'i'
[15](01, 79)-(01, 80): MINUS(OP) '-'
[15](01, 81)-(01, 82): NUMBER(NUMBER) '1'
[15](01, 82)-(01, 83): RSQB(OP) ']'
[15](01, 84)-(01, 86): EQEQUAL(OP) '=='
[15](01, 87)-(01, 90): STRING(STRING) '"X"'
[15](01, 90)-(01, 91): RPAR(OP) ')'
[15](01, 91)-(01, 92): COLON(OP) ':'
[15](01, 92)-(01, 93): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 15): NAME(NAME) 'seq'
[16](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[16](01, 19)-(01, 22): STRING(STRING) '"1"'
[16](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 12): NAME(NAME) 'else'
[17](01, 12)-(01, 13): COLON(OP) ':'
[17](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 15): NAME(NAME) 'seq'
[18](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[18](01, 19)-(01, 22): STRING(STRING) '"2"'
[18](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 04)-(01, 05): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 06): NAME(NAME) 'if'
[20](01, 07)-(01, 08): NAME(NAME) 's'
[20](01, 08)-(01, 09): LSQB(OP) '['
[20](01, 09)-(01, 10): MINUS(OP) '-'
[20](01, 10)-(01, 11): NUMBER(NUMBER) '2'
[20](01, 11)-(01, 12): RSQB(OP) ']'
[20](01, 13)-(01, 15): EQEQUAL(OP) '=='
[20](01, 16)-(01, 19): STRING(STRING) '"X"'
[20](01, 19)-(01, 20): COLON(OP) ':'
[20](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 11): NAME(NAME) 'seq'
[21](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[21](01, 15)-(01, 18): STRING(STRING) '"1"'
[21](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 08): NAME(NAME) 'elif'
[22](01, 09)-(01, 10): NAME(NAME) 's'
[22](01, 10)-(01, 11): LSQB(OP) '['
[22](01, 11)-(01, 12): MINUS(OP) '-'
[22](01, 12)-(01, 13): NUMBER(NUMBER) '2'
[22](01, 13)-(01, 14): RSQB(OP) ']'
[22](01, 15)-(01, 17): EQEQUAL(OP) '=='
[22](01, 18)-(01, 21): STRING(STRING) '" "'
[22](01, 21)-(01, 22): COLON(OP) ':'
[22](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 11): NAME(NAME) 'seq'
[23](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[23](01, 15)-(01, 18): STRING(STRING) '"0"'
[23](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 04)-(01, 05): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 10): NAME(NAME) 'return'
[25](01, 11)-(01, 14): NAME(NAME) 'seq'
[25](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 03): NAME(NAME) 'def'
[27](01, 04)-(01, 10): NAME(NAME) 'decode'
[27](01, 10)-(01, 11): LPAR(OP) '('
[27](01, 11)-(01, 12): NAME(NAME) 's'
[27](01, 12)-(01, 13): RPAR(OP) ')'
[27](01, 13)-(01, 14): COLON(OP) ':'
[27](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 08): NAME(NAME) 'pass'
[28](01, 08)-(01, 09): NEWLINE(NEWLINE)
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

