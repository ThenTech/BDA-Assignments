[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'a'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 41): STRING(STRING) '"Amount of 1 eurocent coins = "'
[00](01, 41)-(01, 42): RPAR(OP) ')'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'b'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 09): NAME(NAME) 'input'
[01](01, 09)-(01, 10): LPAR(OP) '('
[01](01, 10)-(01, 41): STRING(STRING) '"Amount of 2 eurocent coins = "'
[01](01, 41)-(01, 42): RPAR(OP) ')'
[01](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'c'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 09): NAME(NAME) 'input'
[02](01, 09)-(01, 10): LPAR(OP) '('
[02](01, 10)-(01, 41): STRING(STRING) '"Amount of 5 eurocent coins = "'
[02](01, 41)-(01, 42): RPAR(OP) ')'
[02](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'd'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 04)-(01, 09): NAME(NAME) 'input'
[03](01, 09)-(01, 10): LPAR(OP) '('
[03](01, 10)-(01, 42): STRING(STRING) '"Amount of 10 eurocent coins = "'
[03](01, 42)-(01, 43): RPAR(OP) ')'
[03](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NAME(NAME) 'e'
[04](01, 02)-(01, 03): EQUAL(OP) '='
[04](01, 04)-(01, 09): NAME(NAME) 'input'
[04](01, 09)-(01, 10): LPAR(OP) '('
[04](01, 10)-(01, 42): STRING(STRING) '"Amount of 20 eurocent coins = "'
[04](01, 42)-(01, 43): RPAR(OP) ')'
[04](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NAME(NAME) 'a'
[06](01, 02)-(01, 03): EQUAL(OP) '='
[06](01, 04)-(01, 07): NAME(NAME) 'int'
[06](01, 07)-(01, 08): LPAR(OP) '('
[06](01, 08)-(01, 09): NAME(NAME) 'a'
[06](01, 09)-(01, 10): RPAR(OP) ')'
[06](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NAME(NAME) 'b'
[07](01, 02)-(01, 03): EQUAL(OP) '='
[07](01, 04)-(01, 07): NAME(NAME) 'int'
[07](01, 07)-(01, 08): LPAR(OP) '('
[07](01, 08)-(01, 09): NAME(NAME) 'b'
[07](01, 09)-(01, 10): RPAR(OP) ')'
[07](01, 11)-(01, 12): STAR(OP) '*'
[07](01, 13)-(01, 14): NUMBER(NUMBER) '2'
[07](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NAME(NAME) 'c'
[08](01, 02)-(01, 03): EQUAL(OP) '='
[08](01, 04)-(01, 07): NAME(NAME) 'int'
[08](01, 07)-(01, 08): LPAR(OP) '('
[08](01, 08)-(01, 09): NAME(NAME) 'c'
[08](01, 09)-(01, 10): RPAR(OP) ')'
[08](01, 11)-(01, 12): STAR(OP) '*'
[08](01, 13)-(01, 14): NUMBER(NUMBER) '5'
[08](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NAME(NAME) 'd'
[09](01, 02)-(01, 03): EQUAL(OP) '='
[09](01, 04)-(01, 07): NAME(NAME) 'int'
[09](01, 07)-(01, 08): LPAR(OP) '('
[09](01, 08)-(01, 09): NAME(NAME) 'd'
[09](01, 09)-(01, 10): RPAR(OP) ')'
[09](01, 11)-(01, 12): STAR(OP) '*'
[09](01, 13)-(01, 15): NUMBER(NUMBER) '10'
[09](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NAME(NAME) 'e'
[10](01, 02)-(01, 03): EQUAL(OP) '='
[10](01, 04)-(01, 07): NAME(NAME) 'int'
[10](01, 07)-(01, 08): LPAR(OP) '('
[10](01, 08)-(01, 09): NAME(NAME) 'e'
[10](01, 09)-(01, 10): RPAR(OP) ')'
[10](01, 11)-(01, 12): STAR(OP) '*'
[10](01, 13)-(01, 15): NUMBER(NUMBER) '20'
[10](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 05): NAME(NAME) 'total'
[12](01, 06)-(01, 07): EQUAL(OP) '='
[12](01, 08)-(01, 09): LPAR(OP) '('
[12](01, 09)-(01, 10): NAME(NAME) 'a'
[12](01, 11)-(01, 12): PLUS(OP) '+'
[12](01, 13)-(01, 14): NAME(NAME) 'b'
[12](01, 15)-(01, 16): PLUS(OP) '+'
[12](01, 17)-(01, 18): NAME(NAME) 'c'
[12](01, 19)-(01, 20): PLUS(OP) '+'
[12](01, 21)-(01, 22): NAME(NAME) 'd'
[12](01, 23)-(01, 24): PLUS(OP) '+'
[12](01, 25)-(01, 26): NAME(NAME) 'e'
[12](01, 26)-(01, 27): RPAR(OP) ')'
[12](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 05): NAME(NAME) 'total'
[13](01, 06)-(01, 07): EQUAL(OP) '='
[13](01, 08)-(01, 11): NAME(NAME) 'str'
[13](01, 11)-(01, 12): LPAR(OP) '('
[13](01, 12)-(01, 17): NAME(NAME) 'total'
[13](01, 17)-(01, 18): RPAR(OP) ')'
[13](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 02): NAME(NAME) 'if'
[15](01, 03)-(01, 06): NAME(NAME) 'len'
[15](01, 06)-(01, 07): LPAR(OP) '('
[15](01, 07)-(01, 12): NAME(NAME) 'total'
[15](01, 12)-(01, 13): RPAR(OP) ')'
[15](01, 14)-(01, 16): EQEQUAL(OP) '=='
[15](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[15](01, 18)-(01, 19): COLON(OP) ':'
[15](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 09): NAME(NAME) 'print'
[16](01, 09)-(01, 10): LPAR(OP) '('
[16](01, 10)-(01, 21): STRING(STRING) '"You have "'
[16](01, 21)-(01, 22): COMMA(OP) ','
[16](01, 23)-(01, 26): STRING(STRING) '"0"'
[16](01, 26)-(01, 27): COMMA(OP) ','
[16](01, 28)-(01, 31): STRING(STRING) '"."'
[16](01, 31)-(01, 32): COMMA(OP) ','
[16](01, 33)-(01, 36): STRING(STRING) '"0"'
[16](01, 36)-(01, 37): COMMA(OP) ','
[16](01, 38)-(01, 43): NAME(NAME) 'total'
[16](01, 43)-(01, 44): COMMA(OP) ','
[16](01, 45)-(01, 53): STRING(STRING) '" euro!"'
[16](01, 53)-(01, 54): COMMA(OP) ','
[16](01, 55)-(01, 58): NAME(NAME) 'sep'
[16](01, 58)-(01, 59): EQUAL(OP) '='
[16](01, 59)-(01, 61): STRING(STRING) '""'
[16](01, 61)-(01, 62): RPAR(OP) ')'
[16](01, 62)-(01, 63): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 04)-(01, 05): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 02): NAME(NAME) 'if'
[18](01, 03)-(01, 06): NAME(NAME) 'len'
[18](01, 06)-(01, 07): LPAR(OP) '('
[18](01, 07)-(01, 12): NAME(NAME) 'total'
[18](01, 12)-(01, 13): RPAR(OP) ')'
[18](01, 14)-(01, 16): EQEQUAL(OP) '=='
[18](01, 17)-(01, 18): NUMBER(NUMBER) '2'
[18](01, 18)-(01, 19): COLON(OP) ':'
[18](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 09): NAME(NAME) 'print'
[19](01, 09)-(01, 10): LPAR(OP) '('
[19](01, 10)-(01, 21): STRING(STRING) '"You have "'
[19](01, 21)-(01, 22): COMMA(OP) ','
[19](01, 23)-(01, 26): STRING(STRING) '"0"'
[19](01, 26)-(01, 27): COMMA(OP) ','
[19](01, 28)-(01, 31): STRING(STRING) '"."'
[19](01, 31)-(01, 32): COMMA(OP) ','
[19](01, 33)-(01, 38): NAME(NAME) 'total'
[19](01, 38)-(01, 39): LSQB(OP) '['
[19](01, 39)-(01, 40): NUMBER(NUMBER) '0'
[19](01, 40)-(01, 41): RSQB(OP) ']'
[19](01, 41)-(01, 42): COMMA(OP) ','
[19](01, 43)-(01, 48): NAME(NAME) 'total'
[19](01, 48)-(01, 49): LSQB(OP) '['
[19](01, 49)-(01, 50): NUMBER(NUMBER) '1'
[19](01, 50)-(01, 51): RSQB(OP) ']'
[19](01, 51)-(01, 52): COMMA(OP) ','
[19](01, 53)-(01, 61): STRING(STRING) '" euro!"'
[19](01, 61)-(01, 62): COMMA(OP) ','
[19](01, 63)-(01, 66): NAME(NAME) 'sep'
[19](01, 66)-(01, 67): EQUAL(OP) '='
[19](01, 67)-(01, 69): STRING(STRING) '""'
[19](01, 69)-(01, 70): RPAR(OP) ')'
[19](01, 70)-(01, 71): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 02): NAME(NAME) 'if'
[21](01, 03)-(01, 06): NAME(NAME) 'len'
[21](01, 06)-(01, 07): LPAR(OP) '('
[21](01, 07)-(01, 12): NAME(NAME) 'total'
[21](01, 12)-(01, 13): RPAR(OP) ')'
[21](01, 14)-(01, 16): EQEQUAL(OP) '=='
[21](01, 17)-(01, 18): NUMBER(NUMBER) '3'
[21](01, 18)-(01, 19): COLON(OP) ':'
[21](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 09): NAME(NAME) 'print'
[22](01, 09)-(01, 10): LPAR(OP) '('
[22](01, 10)-(01, 21): STRING(STRING) '"You have "'
[22](01, 21)-(01, 22): COMMA(OP) ','
[22](01, 23)-(01, 28): NAME(NAME) 'total'
[22](01, 28)-(01, 29): LSQB(OP) '['
[22](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[22](01, 30)-(01, 31): RSQB(OP) ']'
[22](01, 31)-(01, 32): COMMA(OP) ','
[22](01, 33)-(01, 36): STRING(STRING) '"."'
[22](01, 36)-(01, 37): COMMA(OP) ','
[22](01, 38)-(01, 43): NAME(NAME) 'total'
[22](01, 43)-(01, 44): LSQB(OP) '['
[22](01, 44)-(01, 45): NUMBER(NUMBER) '1'
[22](01, 45)-(01, 46): RSQB(OP) ']'
[22](01, 46)-(01, 47): COMMA(OP) ','
[22](01, 48)-(01, 53): NAME(NAME) 'total'
[22](01, 53)-(01, 54): LSQB(OP) '['
[22](01, 54)-(01, 55): NUMBER(NUMBER) '2'
[22](01, 55)-(01, 56): RSQB(OP) ']'
[22](01, 56)-(01, 57): COMMA(OP) ','
[22](01, 58)-(01, 66): STRING(STRING) '" euro!"'
[22](01, 66)-(01, 67): COMMA(OP) ','
[22](01, 68)-(01, 71): NAME(NAME) 'sep'
[22](01, 71)-(01, 72): EQUAL(OP) '='
[22](01, 72)-(01, 74): STRING(STRING) '""'
[22](01, 74)-(01, 75): RPAR(OP) ')'
[22](01, 75)-(01, 76): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 04)-(01, 05): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 02): NAME(NAME) 'if'
[24](01, 03)-(01, 06): NAME(NAME) 'len'
[24](01, 06)-(01, 07): LPAR(OP) '('
[24](01, 07)-(01, 12): NAME(NAME) 'total'
[24](01, 12)-(01, 13): RPAR(OP) ')'
[24](01, 14)-(01, 16): EQEQUAL(OP) '=='
[24](01, 17)-(01, 18): NUMBER(NUMBER) '4'
[24](01, 18)-(01, 19): COLON(OP) ':'
[24](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 09): NAME(NAME) 'print'
[25](01, 09)-(01, 10): LPAR(OP) '('
[25](01, 10)-(01, 21): STRING(STRING) '"You have "'
[25](01, 21)-(01, 22): COMMA(OP) ','
[25](01, 23)-(01, 28): NAME(NAME) 'total'
[25](01, 28)-(01, 29): LSQB(OP) '['
[25](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[25](01, 30)-(01, 31): RSQB(OP) ']'
[25](01, 31)-(01, 32): COMMA(OP) ','
[25](01, 33)-(01, 38): NAME(NAME) 'total'
[25](01, 38)-(01, 39): LSQB(OP) '['
[25](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[25](01, 40)-(01, 41): RSQB(OP) ']'
[25](01, 41)-(01, 42): COMMA(OP) ','
[25](01, 43)-(01, 46): STRING(STRING) '"."'
[25](01, 46)-(01, 47): COMMA(OP) ','
[25](01, 48)-(01, 53): NAME(NAME) 'total'
[25](01, 53)-(01, 54): LSQB(OP) '['
[25](01, 54)-(01, 55): NUMBER(NUMBER) '2'
[25](01, 55)-(01, 56): RSQB(OP) ']'
[25](01, 56)-(01, 57): COMMA(OP) ','
[25](01, 58)-(01, 63): NAME(NAME) 'total'
[25](01, 63)-(01, 64): LSQB(OP) '['
[25](01, 64)-(01, 65): NUMBER(NUMBER) '3'
[25](01, 65)-(01, 66): RSQB(OP) ']'
[25](01, 66)-(01, 67): COMMA(OP) ','
[25](01, 68)-(01, 76): STRING(STRING) '" euro!"'
[25](01, 76)-(01, 77): COMMA(OP) ','
[25](01, 78)-(01, 81): NAME(NAME) 'sep'
[25](01, 81)-(01, 82): EQUAL(OP) '='
[25](01, 82)-(01, 84): STRING(STRING) '""'
[25](01, 84)-(01, 85): RPAR(OP) ')'
[25](01, 85)-(01, 86): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

