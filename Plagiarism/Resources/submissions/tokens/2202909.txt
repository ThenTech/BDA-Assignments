[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 18): NAME(NAME) 'cleanup_spaces'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 20): NAME(NAME) 's'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): COLON(OP) ':'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 24): NAME(NAME) 'string_without_punct'
[01](01, 25)-(01, 26): EQUAL(OP) '='
[01](01, 27)-(01, 29): STRING(STRING) '""'
[01](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'end'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[02](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'start'
[03](01, 10)-(01, 11): EQUAL(OP) '='
[03](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[03](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 11): NAME(NAME) 'counter'
[04](01, 12)-(01, 13): EQUAL(OP) '='
[04](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[04](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'ln_s'
[05](01, 09)-(01, 10): EQUAL(OP) '='
[05](01, 11)-(01, 14): NAME(NAME) 'len'
[05](01, 14)-(01, 15): LPAR(OP) '('
[05](01, 15)-(01, 16): NAME(NAME) 's'
[05](01, 16)-(01, 17): RPAR(OP) ')'
[05](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 14): NAME(NAME) 'letter'
[06](01, 15)-(01, 17): NAME(NAME) 'in'
[06](01, 18)-(01, 19): NAME(NAME) 's'
[06](01, 19)-(01, 20): COLON(OP) ':'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 17): NAME(NAME) 'letter'
[07](01, 18)-(01, 20): NOTEQUAL(OP) '!='
[07](01, 21)-(01, 24): STRING(STRING) '" "'
[07](01, 24)-(01, 25): COLON(OP) ':'
[07](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 32): NAME(NAME) 'string_without_punct'
[08](01, 33)-(01, 34): EQUAL(OP) '='
[08](01, 35)-(01, 55): NAME(NAME) 'string_without_punct'
[08](01, 56)-(01, 57): PLUS(OP) '+'
[08](01, 58)-(01, 64): NAME(NAME) 'letter'
[08](01, 64)-(01, 65): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 15): NAME(NAME) 'end'
[09](01, 16)-(01, 17): EQUAL(OP) '='
[09](01, 18)-(01, 21): NAME(NAME) 'end'
[09](01, 22)-(01, 23): PLUS(OP) '+'
[09](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[09](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 19): NAME(NAME) 'counter'
[10](01, 20)-(01, 21): EQUAL(OP) '='
[10](01, 22)-(01, 29): NAME(NAME) 'counter'
[10](01, 30)-(01, 31): PLUS(OP) '+'
[10](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[10](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 12): NAME(NAME) 'else'
[11](01, 12)-(01, 13): COLON(OP) ':'
[11](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 14): NAME(NAME) 'if'
[12](01, 15)-(01, 20): NAME(NAME) 'start'
[12](01, 21)-(01, 23): NOTEQUAL(OP) '!='
[12](01, 24)-(01, 27): NAME(NAME) 'end'
[12](01, 27)-(01, 28): COLON(OP) ':'
[12](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 36): NAME(NAME) 'string_without_punct'
[13](01, 37)-(01, 38): EQUAL(OP) '='
[13](01, 39)-(01, 59): NAME(NAME) 'string_without_punct'
[13](01, 60)-(01, 61): PLUS(OP) '+'
[13](01, 62)-(01, 65): STRING(STRING) '" "'
[13](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 21): NAME(NAME) 'start'
[14](01, 22)-(01, 23): EQUAL(OP) '='
[14](01, 24)-(01, 27): NAME(NAME) 'end'
[14](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 16): NAME(NAME) 'else'
[15](01, 16)-(01, 17): COLON(OP) ':'
[15](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 21): NAME(NAME) 'while'
[16](01, 22)-(01, 23): NAME(NAME) 's'
[16](01, 23)-(01, 24): LSQB(OP) '['
[16](01, 24)-(01, 31): NAME(NAME) 'counter'
[16](01, 31)-(01, 32): RSQB(OP) ']'
[16](01, 33)-(01, 35): EQEQUAL(OP) '=='
[16](01, 36)-(01, 39): STRING(STRING) '" "'
[16](01, 39)-(01, 40): COLON(OP) ':'
[16](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 20): INDENT(INDENT) '                    '
[17](01, 20)-(01, 40): NAME(NAME) 'string_without_punct'
[17](01, 41)-(01, 42): EQUAL(OP) '='
[17](01, 43)-(01, 63): NAME(NAME) 'string_without_punct'
[17](01, 64)-(01, 65): PLUS(OP) '+'
[17](01, 66)-(01, 68): STRING(STRING) '""'
[17](01, 68)-(01, 69): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 20): INDENT(INDENT) '                    '
[18](01, 20)-(01, 27): NAME(NAME) 'counter'
[18](01, 28)-(01, 29): EQUAL(OP) '='
[18](01, 30)-(01, 37): NAME(NAME) 'counter'
[18](01, 38)-(01, 39): PLUS(OP) '+'
[18](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[18](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 20): INDENT(INDENT) '                    '
[19](01, 20)-(01, 22): NAME(NAME) 'if'
[19](01, 23)-(01, 30): NAME(NAME) 'counter'
[19](01, 31)-(01, 33): EQEQUAL(OP) '=='
[19](01, 34)-(01, 37): NAME(NAME) 'len'
[19](01, 37)-(01, 38): LPAR(OP) '('
[19](01, 38)-(01, 39): NAME(NAME) 's'
[19](01, 39)-(01, 40): RPAR(OP) ')'
[19](01, 40)-(01, 41): COLON(OP) ':'
[19](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 24): INDENT(INDENT) '                        '
[20](01, 24)-(01, 30): NAME(NAME) 'return'
[20](01, 31)-(01, 33): STRING(STRING) '""'
[20](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 06): NAME(NAME) 'if'
[21](01, 07)-(01, 27): NAME(NAME) 'string_without_punct'
[21](01, 27)-(01, 28): LSQB(OP) '['
[21](01, 28)-(01, 31): NAME(NAME) 'len'
[21](01, 31)-(01, 32): LPAR(OP) '('
[21](01, 32)-(01, 52): NAME(NAME) 'string_without_punct'
[21](01, 52)-(01, 53): RPAR(OP) ')'
[21](01, 54)-(01, 55): MINUS(OP) '-'
[21](01, 56)-(01, 57): NUMBER(NUMBER) '1'
[21](01, 57)-(01, 58): RSQB(OP) ']'
[21](01, 59)-(01, 61): EQEQUAL(OP) '=='
[21](01, 62)-(01, 65): STRING(STRING) '" "'
[21](01, 65)-(01, 66): COLON(OP) ':'
[21](01, 66)-(01, 67): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 28): NAME(NAME) 'string_without_punct'
[22](01, 29)-(01, 30): EQUAL(OP) '='
[22](01, 31)-(01, 51): NAME(NAME) 'string_without_punct'
[22](01, 51)-(01, 52): LSQB(OP) '['
[22](01, 52)-(01, 53): COLON(OP) ':'
[22](01, 53)-(01, 56): NAME(NAME) 'len'
[22](01, 56)-(01, 57): LPAR(OP) '('
[22](01, 57)-(01, 77): NAME(NAME) 'string_without_punct'
[22](01, 77)-(01, 78): RPAR(OP) ')'
[22](01, 78)-(01, 79): MINUS(OP) '-'
[22](01, 79)-(01, 80): NUMBER(NUMBER) '1'
[22](01, 80)-(01, 81): RSQB(OP) ']'
[22](01, 81)-(01, 82): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 10): NAME(NAME) 'return'
[23](01, 10)-(01, 11): LPAR(OP) '('
[23](01, 11)-(01, 31): NAME(NAME) 'string_without_punct'
[23](01, 31)-(01, 32): RPAR(OP) ')'
[23](01, 32)-(01, 33): NEWLINE(NEWLINE)
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

