[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 46): COMMENT(COMMENT) '#maak een lijst met de te verwijderen getallen'
[00](01, 46)-(01, 47): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 30): COMMENT(COMMENT) '#verwijderen deze uit de kopie'
[01](01, 30)-(01, 31): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): COMMENT(COMMENT) '#repeat'
[02](01, 07)-(01, 08): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'def'
[04](01, 04)-(01, 17): NAME(NAME) 'lucky_numbers'
[04](01, 17)-(01, 18): LPAR(OP) '('
[04](01, 18)-(01, 19): NAME(NAME) 'n'
[04](01, 19)-(01, 20): RPAR(OP) ')'
[04](01, 20)-(01, 21): COLON(OP) ':'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 12): NAME(NAME) 'getallen'
[05](01, 13)-(01, 14): EQUAL(OP) '='
[05](01, 15)-(01, 16): LSQB(OP) '['
[05](01, 16)-(01, 17): NAME(NAME) 'x'
[05](01, 18)-(01, 21): NAME(NAME) 'for'
[05](01, 22)-(01, 23): NAME(NAME) 'x'
[05](01, 24)-(01, 26): NAME(NAME) 'in'
[05](01, 27)-(01, 32): NAME(NAME) 'range'
[05](01, 32)-(01, 33): LPAR(OP) '('
[05](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[05](01, 34)-(01, 35): COMMA(OP) ','
[05](01, 35)-(01, 36): NAME(NAME) 'n'
[05](01, 36)-(01, 37): PLUS(OP) '+'
[05](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[05](01, 38)-(01, 39): RPAR(OP) ')'
[05](01, 39)-(01, 40): RSQB(OP) ']'
[05](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'kopie'
[06](01, 10)-(01, 11): EQUAL(OP) '='
[06](01, 12)-(01, 20): NAME(NAME) 'getallen'
[06](01, 20)-(01, 21): LSQB(OP) '['
[06](01, 21)-(01, 22): COLON(OP) ':'
[06](01, 22)-(01, 23): RSQB(OP) ']'
[06](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 15): NAME(NAME) 'verwijderen'
[07](01, 16)-(01, 17): EQUAL(OP) '='
[07](01, 18)-(01, 20): STRING(STRING) '""'
[07](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 10): NAME(NAME) 'teller'
[08](01, 11)-(01, 12): EQUAL(OP) '='
[08](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[08](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'while'
[09](01, 10)-(01, 16): NAME(NAME) 'teller'
[09](01, 17)-(01, 18): LESS(OP) '<'
[09](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[09](01, 21)-(01, 22): COLON(OP) ':'
[09](01, 22)-(01, 33): COMMENT(COMMENT) '#len(kopie)'
[09](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 11): NAME(NAME) 'for'
[10](01, 12)-(01, 17): NAME(NAME) 'index'
[10](01, 18)-(01, 20): NAME(NAME) 'in'
[10](01, 21)-(01, 26): NAME(NAME) 'range'
[10](01, 26)-(01, 27): LPAR(OP) '('
[10](01, 27)-(01, 30): NAME(NAME) 'len'
[10](01, 30)-(01, 31): LPAR(OP) '('
[10](01, 31)-(01, 39): NAME(NAME) 'getallen'
[10](01, 39)-(01, 40): RPAR(OP) ')'
[10](01, 40)-(01, 42): DOUBLESLASH(OP) '//'
[10](01, 42)-(01, 43): NUMBER(NUMBER) '2'
[10](01, 43)-(01, 44): RPAR(OP) ')'
[10](01, 44)-(01, 45): COLON(OP) ':'
[10](01, 46)-(01, 71): COMMENT(COMMENT) '# teller, die start met 2'
[10](01, 71)-(01, 72): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 23): NAME(NAME) 'verwijderen'
[11](01, 24)-(01, 25): EQUAL(OP) '='
[11](01, 26)-(01, 27): LPAR(OP) '('
[11](01, 27)-(01, 35): NAME(NAME) 'getallen'
[11](01, 35)-(01, 36): LSQB(OP) '['
[11](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[11](01, 38)-(01, 39): PLUS(OP) '+'
[11](01, 39)-(01, 40): LPAR(OP) '('
[11](01, 40)-(01, 45): NAME(NAME) 'index'
[11](01, 45)-(01, 46): STAR(OP) '*'
[11](01, 46)-(01, 47): NUMBER(NUMBER) '2'
[11](01, 47)-(01, 48): RPAR(OP) ')'
[11](01, 48)-(01, 49): RSQB(OP) ']'
[11](01, 49)-(01, 50): RPAR(OP) ')'
[11](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 17): NAME(NAME) 'print'
[12](01, 18)-(01, 19): LPAR(OP) '('
[12](01, 19)-(01, 30): NAME(NAME) 'verwijderen'
[12](01, 30)-(01, 31): RPAR(OP) ')'
[12](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 15): NAME(NAME) 'for'
[13](01, 16)-(01, 17): NAME(NAME) 'x'
[13](01, 18)-(01, 20): NAME(NAME) 'in'
[13](01, 21)-(01, 26): NAME(NAME) 'range'
[13](01, 26)-(01, 27): LPAR(OP) '('
[13](01, 27)-(01, 30): NAME(NAME) 'len'
[13](01, 30)-(01, 31): LPAR(OP) '('
[13](01, 31)-(01, 36): NAME(NAME) 'kopie'
[13](01, 36)-(01, 37): RPAR(OP) ')'
[13](01, 37)-(01, 38): RPAR(OP) ')'
[13](01, 38)-(01, 39): COLON(OP) ':'
[13](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 18): NAME(NAME) 'if'
[14](01, 19)-(01, 24): NAME(NAME) 'kopie'
[14](01, 24)-(01, 25): LSQB(OP) '['
[14](01, 25)-(01, 26): NAME(NAME) 'x'
[14](01, 26)-(01, 27): RSQB(OP) ']'
[14](01, 28)-(01, 30): EQEQUAL(OP) '=='
[14](01, 31)-(01, 42): NAME(NAME) 'verwijderen'
[14](01, 42)-(01, 43): COLON(OP) ':'
[14](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 20): INDENT(INDENT) '                    '
[15](01, 20)-(01, 23): NAME(NAME) 'del'
[15](01, 24)-(01, 29): NAME(NAME) 'kopie'
[15](01, 29)-(01, 30): LSQB(OP) '['
[15](01, 30)-(01, 31): NAME(NAME) 'x'
[15](01, 31)-(01, 32): RSQB(OP) ']'
[15](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 20): INDENT(INDENT) '                    '
[16](01, 20)-(01, 25): NAME(NAME) 'print'
[16](01, 25)-(01, 26): LPAR(OP) '('
[16](01, 26)-(01, 31): NAME(NAME) 'kopie'
[16](01, 31)-(01, 32): RPAR(OP) ')'
[16](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 20): INDENT(INDENT) '                    '
[17](01, 20)-(01, 25): NAME(NAME) 'break'
[17](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 14): NAME(NAME) 'teller'
[18](01, 15)-(01, 16): EQUAL(OP) '='
[18](01, 17)-(01, 23): NAME(NAME) 'teller'
[18](01, 24)-(01, 25): PLUS(OP) '+'
[18](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[18](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 10): NAME(NAME) 'return'
[21](01, 11)-(01, 22): NAME(NAME) 'verwijderen'
[21](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 05): NAME(NAME) 'print'
[24](01, 05)-(01, 06): LPAR(OP) '('
[24](01, 06)-(01, 19): NAME(NAME) 'lucky_numbers'
[24](01, 19)-(01, 20): LPAR(OP) '('
[24](01, 20)-(01, 22): NUMBER(NUMBER) '22'
[24](01, 22)-(01, 23): RPAR(OP) ')'
[24](01, 23)-(01, 24): RPAR(OP) ')'
[24](01, 24)-(01, 25): NEWLINE(NEWLINE)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

