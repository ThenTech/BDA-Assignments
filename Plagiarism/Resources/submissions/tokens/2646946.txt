[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 14): NAME(NAME) 'print_help'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 21): NAME(NAME) 'length'
[00](01, 21)-(01, 22): COMMA(OP) ','
[00](01, 23)-(01, 30): NAME(NAME) 'alfabet'
[00](01, 30)-(01, 31): COMMA(OP) ','
[00](01, 32)-(01, 38): NAME(NAME) 'prefix'
[00](01, 38)-(01, 39): RPAR(OP) ')'
[00](01, 39)-(01, 40): COLON(OP) ':'
[00](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 10): NAME(NAME) 'len'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 17): NAME(NAME) 'prefix'
[01](01, 17)-(01, 18): RPAR(OP) ')'
[01](01, 19)-(01, 21): EQEQUAL(OP) '=='
[01](01, 22)-(01, 28): NAME(NAME) 'length'
[01](01, 28)-(01, 29): COLON(OP) ':'
[01](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 13): NAME(NAME) 'print'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 20): NAME(NAME) 'prefix'
[02](01, 20)-(01, 21): RPAR(OP) ')'
[02](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'else'
[03](01, 08)-(01, 09): COLON(OP) ':'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 11): NAME(NAME) 'for'
[04](01, 12)-(01, 13): NAME(NAME) 'i'
[04](01, 14)-(01, 16): NAME(NAME) 'in'
[04](01, 17)-(01, 24): NAME(NAME) 'alfabet'
[04](01, 24)-(01, 25): COLON(OP) ':'
[04](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 18): NAME(NAME) 'prefix'
[05](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[05](01, 22)-(01, 23): NAME(NAME) 'i'
[05](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 22): NAME(NAME) 'print_help'
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 29): NAME(NAME) 'length'
[06](01, 29)-(01, 30): COMMA(OP) ','
[06](01, 31)-(01, 38): NAME(NAME) 'alfabet'
[06](01, 38)-(01, 39): COMMA(OP) ','
[06](01, 40)-(01, 46): NAME(NAME) 'prefix'
[06](01, 46)-(01, 47): RPAR(OP) ')'
[06](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'def'
[09](01, 04)-(01, 07): NAME(NAME) 'dna'
[09](01, 07)-(01, 08): LPAR(OP) '('
[09](01, 08)-(01, 14): NAME(NAME) 'length'
[09](01, 14)-(01, 15): RPAR(OP) ')'
[09](01, 15)-(01, 16): COLON(OP) ':'
[09](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 09): NAME(NAME) 'bases'
[10](01, 10)-(01, 11): EQUAL(OP) '='
[10](01, 12)-(01, 18): STRING(STRING) '"ACGT"'
[10](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 14): NAME(NAME) 'print_help'
[11](01, 14)-(01, 15): LPAR(OP) '('
[11](01, 15)-(01, 21): NAME(NAME) 'length'
[11](01, 21)-(01, 22): COMMA(OP) ','
[11](01, 23)-(01, 28): NAME(NAME) 'bases'
[11](01, 28)-(01, 29): COMMA(OP) ','
[11](01, 30)-(01, 32): STRING(STRING) '""'
[11](01, 32)-(01, 33): RPAR(OP) ')'
[11](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 04)-(01, 05): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 03): NAME(NAME) 'dna'
[13](01, 03)-(01, 04): LPAR(OP) '('
[13](01, 04)-(01, 07): NAME(NAME) 'int'
[13](01, 07)-(01, 08): LPAR(OP) '('
[13](01, 08)-(01, 13): NAME(NAME) 'input'
[13](01, 13)-(01, 14): LPAR(OP) '('
[13](01, 14)-(01, 15): RPAR(OP) ')'
[13](01, 15)-(01, 16): RPAR(OP) ')'
[13](01, 16)-(01, 17): RPAR(OP) ')'
[13](01, 17)-(01, 18): NEWLINE(NEWLINE)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

