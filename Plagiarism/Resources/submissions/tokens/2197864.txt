[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'niet'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 35): STRING(STRING) '\'\'\',?;.:/"<>[]^!\'“”’ \'\'\''
[01](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 10): NAME(NAME) 'teller'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[02](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'i'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 19): NAME(NAME) 'corpus'
[03](01, 19)-(01, 20): COLON(OP) ':'
[03](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): NAME(NAME) 'i'
[04](01, 13)-(01, 15): EQEQUAL(OP) '=='
[04](01, 16)-(01, 23): NAME(NAME) 'pattern'
[04](01, 23)-(01, 24): LSQB(OP) '['
[04](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[04](01, 25)-(01, 26): RSQB(OP) ']'
[04](01, 26)-(01, 27): COLON(OP) ':'
[04](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 14): NAME(NAME) 'if'
[05](01, 15)-(01, 21): NAME(NAME) 'corpus'
[05](01, 21)-(01, 22): LSQB(OP) '['
[05](01, 22)-(01, 28): NAME(NAME) 'teller'
[05](01, 28)-(01, 29): PLUS(OP) '+'
[05](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[05](01, 30)-(01, 31): RSQB(OP) ']'
[05](01, 32)-(01, 34): EQEQUAL(OP) '=='
[05](01, 35)-(01, 42): NAME(NAME) 'pattern'
[05](01, 42)-(01, 43): LSQB(OP) '['
[05](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[05](01, 44)-(01, 45): RSQB(OP) ']'
[05](01, 45)-(01, 46): COLON(OP) ':'
[05](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 18): NAME(NAME) 'if'
[06](01, 19)-(01, 25): NAME(NAME) 'corpus'
[06](01, 25)-(01, 26): LSQB(OP) '['
[06](01, 26)-(01, 32): NAME(NAME) 'teller'
[06](01, 32)-(01, 33): PLUS(OP) '+'
[06](01, 33)-(01, 34): NUMBER(NUMBER) '2'
[06](01, 34)-(01, 35): RSQB(OP) ']'
[06](01, 36)-(01, 38): EQEQUAL(OP) '=='
[06](01, 39)-(01, 46): NAME(NAME) 'pattern'
[06](01, 46)-(01, 47): LSQB(OP) '['
[06](01, 47)-(01, 48): NUMBER(NUMBER) '2'
[06](01, 48)-(01, 49): RSQB(OP) ']'
[06](01, 49)-(01, 50): COLON(OP) ':'
[06](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 20): INDENT(INDENT) '                    '
[07](01, 20)-(01, 26): NAME(NAME) 'nieuwe'
[07](01, 27)-(01, 28): EQUAL(OP) '='
[07](01, 29)-(01, 35): NAME(NAME) 'corpus'
[07](01, 35)-(01, 36): LSQB(OP) '['
[07](01, 36)-(01, 37): COLON(OP) ':'
[07](01, 37)-(01, 43): NAME(NAME) 'teller'
[07](01, 43)-(01, 44): RSQB(OP) ']'
[07](01, 45)-(01, 46): PLUS(OP) '+'
[07](01, 47)-(01, 58): NAME(NAME) 'replacement'
[07](01, 59)-(01, 60): PLUS(OP) '+'
[07](01, 61)-(01, 67): NAME(NAME) 'corpus'
[07](01, 67)-(01, 68): LSQB(OP) '['
[07](01, 68)-(01, 74): NAME(NAME) 'teller'
[07](01, 74)-(01, 75): PLUS(OP) '+'
[07](01, 75)-(01, 78): NAME(NAME) 'len'
[07](01, 78)-(01, 79): LPAR(OP) '('
[07](01, 79)-(01, 86): NAME(NAME) 'pattern'
[07](01, 86)-(01, 87): RPAR(OP) ')'
[07](01, 87)-(01, 88): COLON(OP) ':'
[07](01, 88)-(01, 89): RSQB(OP) ']'
[07](01, 89)-(01, 90): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 20): INDENT(INDENT) '                    '
[08](01, 20)-(01, 26): NAME(NAME) 'return'
[08](01, 27)-(01, 33): NAME(NAME) 'nieuwe'
[08](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 12): NAME(NAME) 'else'
[09](01, 12)-(01, 13): COLON(OP) ':'
[09](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 18): NAME(NAME) 'teller'
[10](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[10](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[10](01, 23)-(01, 24): NEWLINE(NEWLINE)
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

