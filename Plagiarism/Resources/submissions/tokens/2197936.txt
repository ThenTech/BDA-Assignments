[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'corpus'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 19): NAME(NAME) 'corpus'
[01](01, 19)-(01, 20): DOT(OP) '.'
[01](01, 20)-(01, 25): NAME(NAME) 'split'
[01](01, 25)-(01, 26): LPAR(OP) '('
[01](01, 26)-(01, 27): RPAR(OP) ')'
[01](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 's_a'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 12): STRING(STRING) "''"
[02](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'i'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 19): NAME(NAME) 'corpus'
[03](01, 19)-(01, 20): COLON(OP) ':'
[03](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 18): NAME(NAME) 'pattern'
[04](01, 19)-(01, 22): NAME(NAME) 'not'
[04](01, 23)-(01, 25): NAME(NAME) 'in'
[04](01, 26)-(01, 27): NAME(NAME) 'i'
[04](01, 27)-(01, 28): COLON(OP) ':'
[04](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 15): NAME(NAME) 's_a'
[05](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[05](01, 19)-(01, 20): NAME(NAME) 'i'
[05](01, 21)-(01, 22): PLUS(OP) '+'
[05](01, 23)-(01, 26): STRING(STRING) "' '"
[05](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 12): NAME(NAME) 'else'
[06](01, 12)-(01, 13): COLON(OP) ':'
[06](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 15): NAME(NAME) 's_a'
[07](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[07](01, 19)-(01, 20): LPAR(OP) '('
[07](01, 20)-(01, 31): NAME(NAME) 'replacement'
[07](01, 32)-(01, 33): PLUS(OP) '+'
[07](01, 34)-(01, 35): NAME(NAME) 'i'
[07](01, 35)-(01, 36): LSQB(OP) '['
[07](01, 36)-(01, 39): NAME(NAME) 'len'
[07](01, 39)-(01, 40): LPAR(OP) '('
[07](01, 40)-(01, 47): NAME(NAME) 'pattern'
[07](01, 47)-(01, 48): RPAR(OP) ')'
[07](01, 48)-(01, 49): COLON(OP) ':'
[07](01, 49)-(01, 50): RSQB(OP) ']'
[07](01, 50)-(01, 51): RPAR(OP) ')'
[07](01, 51)-(01, 52): PLUS(OP) '+'
[07](01, 52)-(01, 55): STRING(STRING) "' '"
[07](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 10): NAME(NAME) 'return'
[08](01, 11)-(01, 14): NAME(NAME) 's_a'
[08](01, 14)-(01, 15): NEWLINE(NEWLINE)
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

