[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 24): NAME(NAME) 'convert_to_lowercase'
[00](01, 24)-(01, 25): LPAR(OP) '('
[00](01, 25)-(01, 33): NAME(NAME) 'sentence'
[00](01, 33)-(01, 34): RPAR(OP) ')'
[00](01, 34)-(01, 35): COLON(OP) ':'
[00](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 14): NAME(NAME) 'new_string'
[01](01, 15)-(01, 16): EQUAL(OP) '='
[01](01, 17)-(01, 19): STRING(STRING) '""'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 14): NAME(NAME) 'letter'
[02](01, 15)-(01, 17): NAME(NAME) 'in'
[02](01, 18)-(01, 26): NAME(NAME) 'sentence'
[02](01, 26)-(01, 27): COLON(OP) ':'
[02](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 14): STRING(STRING) '"A"'
[03](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[03](01, 18)-(01, 24): NAME(NAME) 'letter'
[03](01, 25)-(01, 27): LESSEQUAL(OP) '<='
[03](01, 28)-(01, 31): STRING(STRING) '"Z"'
[03](01, 31)-(01, 32): COLON(OP) ':'
[03](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 22): NAME(NAME) 'new_number'
[04](01, 23)-(01, 24): EQUAL(OP) '='
[04](01, 25)-(01, 28): NAME(NAME) 'ord'
[04](01, 28)-(01, 29): LPAR(OP) '('
[04](01, 29)-(01, 35): NAME(NAME) 'letter'
[04](01, 35)-(01, 36): RPAR(OP) ')'
[04](01, 37)-(01, 38): MINUS(OP) '-'
[04](01, 39)-(01, 42): NAME(NAME) 'ord'
[04](01, 42)-(01, 43): LPAR(OP) '('
[04](01, 43)-(01, 46): STRING(STRING) '"A"'
[04](01, 46)-(01, 47): RPAR(OP) ')'
[04](01, 48)-(01, 49): PLUS(OP) '+'
[04](01, 50)-(01, 53): NAME(NAME) 'ord'
[04](01, 53)-(01, 54): LPAR(OP) '('
[04](01, 54)-(01, 57): STRING(STRING) '"a"'
[04](01, 57)-(01, 58): RPAR(OP) ')'
[04](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 21): NAME(NAME) 'lowercase'
[05](01, 22)-(01, 23): EQUAL(OP) '='
[05](01, 24)-(01, 27): NAME(NAME) 'chr'
[05](01, 27)-(01, 28): LPAR(OP) '('
[05](01, 28)-(01, 38): NAME(NAME) 'new_number'
[05](01, 38)-(01, 39): RPAR(OP) ')'
[05](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 24): NAME(NAME) 'new_sentence'
[06](01, 25)-(01, 26): EQUAL(OP) '='
[06](01, 27)-(01, 39): NAME(NAME) 'new_sentence'
[06](01, 40)-(01, 41): PLUS(OP) '+'
[06](01, 42)-(01, 51): NAME(NAME) 'lowercase'
[06](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 12): NAME(NAME) 'else'
[07](01, 12)-(01, 13): COLON(OP) ':'
[07](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 24): NAME(NAME) 'new_sentence'
[08](01, 25)-(01, 26): EQUAL(OP) '='
[08](01, 27)-(01, 39): NAME(NAME) 'new_sentence'
[08](01, 40)-(01, 41): PLUS(OP) '+'
[08](01, 42)-(01, 48): NAME(NAME) 'letter'
[08](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 10): NAME(NAME) 'return'
[09](01, 11)-(01, 23): NAME(NAME) 'new_sentence'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 03): NAME(NAME) 'def'
[11](01, 04)-(01, 18): NAME(NAME) 'clean_sentence'
[11](01, 18)-(01, 19): LPAR(OP) '('
[11](01, 19)-(01, 27): NAME(NAME) 'sentence'
[11](01, 27)-(01, 28): RPAR(OP) ')'
[11](01, 28)-(01, 29): COLON(OP) ':'
[11](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 16): NAME(NAME) 'new_sentence'
[12](01, 17)-(01, 18): EQUAL(OP) '='
[12](01, 19)-(01, 21): STRING(STRING) '""'
[12](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 07): NAME(NAME) 'for'
[13](01, 08)-(01, 14): NAME(NAME) 'letter'
[13](01, 15)-(01, 17): NAME(NAME) 'in'
[13](01, 18)-(01, 26): NAME(NAME) 'sentence'
[13](01, 26)-(01, 27): COLON(OP) ':'
[13](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 10): NAME(NAME) 'if'
[14](01, 11)-(01, 14): STRING(STRING) '"a"'
[14](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[14](01, 18)-(01, 24): NAME(NAME) 'letter'
[14](01, 25)-(01, 27): LESSEQUAL(OP) '<='
[14](01, 28)-(01, 31): STRING(STRING) '"z"'
[14](01, 31)-(01, 32): COLON(OP) ':'
[14](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 24): NAME(NAME) 'new_sentence'
[15](01, 25)-(01, 26): EQUAL(OP) '='
[15](01, 27)-(01, 39): NAME(NAME) 'new_sentence'
[15](01, 40)-(01, 41): PLUS(OP) '+'
[15](01, 42)-(01, 48): NAME(NAME) 'letter'
[15](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 10): NAME(NAME) 'return'
[16](01, 11)-(01, 23): NAME(NAME) 'new_sentence'
[16](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 03): NAME(NAME) 'def'
[18](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[18](01, 26)-(01, 27): LPAR(OP) '('
[18](01, 27)-(01, 35): NAME(NAME) 'sentence'
[18](01, 35)-(01, 36): RPAR(OP) ')'
[18](01, 36)-(01, 37): COLON(OP) ':'
[18](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 12): NAME(NAME) 'sentence'
[19](01, 13)-(01, 14): EQUAL(OP) '='
[19](01, 15)-(01, 35): NAME(NAME) 'convert_to_lowercase'
[19](01, 35)-(01, 36): LPAR(OP) '('
[19](01, 36)-(01, 44): NAME(NAME) 'sentence'
[19](01, 44)-(01, 45): RPAR(OP) ')'
[19](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 12): NAME(NAME) 'sentence'
[20](01, 13)-(01, 14): EQUAL(OP) '='
[20](01, 15)-(01, 29): NAME(NAME) 'clean_sentence'
[20](01, 29)-(01, 30): LPAR(OP) '('
[20](01, 30)-(01, 38): NAME(NAME) 'sentence'
[20](01, 38)-(01, 39): RPAR(OP) ')'
[20](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 10): NAME(NAME) 'length'
[21](01, 11)-(01, 12): EQUAL(OP) '='
[21](01, 13)-(01, 16): NAME(NAME) 'len'
[21](01, 16)-(01, 17): LPAR(OP) '('
[21](01, 17)-(01, 25): NAME(NAME) 'sentence'
[21](01, 25)-(01, 26): RPAR(OP) ')'
[21](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 15): NAME(NAME) 'length_half'
[22](01, 16)-(01, 17): EQUAL(OP) '='
[22](01, 18)-(01, 24): NAME(NAME) 'length'
[22](01, 25)-(01, 27): DOUBLESLASH(OP) '//'
[22](01, 28)-(01, 29): NUMBER(NUMBER) '2'
[22](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 05): NAME(NAME) 'i'
[23](01, 06)-(01, 07): EQUAL(OP) '='
[23](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[23](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 05): NAME(NAME) 'a'
[24](01, 06)-(01, 07): EQUAL(OP) '='
[24](01, 08)-(01, 12): NAME(NAME) 'True'
[24](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 09): NAME(NAME) 'while'
[26](01, 10)-(01, 11): NAME(NAME) 'i'
[26](01, 12)-(01, 13): LESS(OP) '<'
[26](01, 14)-(01, 25): NAME(NAME) 'length_half'
[26](01, 25)-(01, 26): COLON(OP) ':'
[26](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 10): NAME(NAME) 'if'
[27](01, 11)-(01, 19): NAME(NAME) 'sentence'
[27](01, 19)-(01, 20): LSQB(OP) '['
[27](01, 20)-(01, 21): NAME(NAME) 'i'
[27](01, 21)-(01, 22): RSQB(OP) ']'
[27](01, 23)-(01, 25): NAME(NAME) 'in'
[27](01, 26)-(01, 27): LSQB(OP) '['
[27](01, 27)-(01, 35): NAME(NAME) 'sentence'
[27](01, 35)-(01, 36): LSQB(OP) '['
[27](01, 36)-(01, 42): NAME(NAME) 'length'
[27](01, 43)-(01, 44): MINUS(OP) '-'
[27](01, 45)-(01, 46): NUMBER(NUMBER) '1'
[27](01, 47)-(01, 48): MINUS(OP) '-'
[27](01, 49)-(01, 50): NAME(NAME) 'i'
[27](01, 50)-(01, 51): RSQB(OP) ']'
[27](01, 51)-(01, 52): RSQB(OP) ']'
[27](01, 52)-(01, 53): COLON(OP) ':'
[27](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 13): NAME(NAME) 'a'
[28](01, 14)-(01, 15): EQUAL(OP) '='
[28](01, 16)-(01, 20): NAME(NAME) 'True'
[28](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 12): INDENT(INDENT) '            '
[29](01, 12)-(01, 13): NAME(NAME) 'i'
[29](01, 14)-(01, 15): EQUAL(OP) '='
[29](01, 16)-(01, 17): NAME(NAME) 'i'
[29](01, 18)-(01, 19): PLUS(OP) '+'
[29](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[29](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 12): NAME(NAME) 'else'
[30](01, 12)-(01, 13): COLON(OP) ':'
[30](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 13): NAME(NAME) 'a'
[31](01, 14)-(01, 15): EQUAL(OP) '='
[31](01, 16)-(01, 21): NAME(NAME) 'False'
[31](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 13): NAME(NAME) 'i'
[32](01, 14)-(01, 15): EQUAL(OP) '='
[32](01, 16)-(01, 27): NAME(NAME) 'length_half'
[32](01, 28)-(01, 29): PLUS(OP) '+'
[32](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[32](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 12): INDENT(INDENT) '            '
[33](01, 12)-(01, 18): NAME(NAME) 'return'
[33](01, 19)-(01, 24): NAME(NAME) 'False'
[33](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 06): NAME(NAME) 'if'
[34](01, 07)-(01, 08): NAME(NAME) 'a'
[34](01, 08)-(01, 09): COLON(OP) ':'
[34](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 14): NAME(NAME) 'return'
[35](01, 15)-(01, 19): NAME(NAME) 'True'
[35](01, 19)-(01, 20): NEWLINE(NEWLINE)
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

