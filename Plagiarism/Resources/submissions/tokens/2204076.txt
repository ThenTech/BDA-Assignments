[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'Inword'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'False'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 07): NAME(NAME) 'counter'
[01](01, 08)-(01, 09): EQUAL(OP) '='
[01](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[01](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 's'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 06): STRING(STRING) '""'
[02](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'x'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[03](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'For'
[04](01, 04)-(01, 05): NAME(NAME) 'x'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 10): NAME(NAME) 's'
[04](01, 10)-(01, 11): COLON(OP) ':'
[04](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): INDENT(INDENT) '\t'
[05](01, 01)-(01, 03): NAME(NAME) 'if'
[05](01, 03)-(01, 04): ERRORTOKEN(ERRORTOKEN) ' '
[05](01, 04)-(01, 05): ERRORTOKEN(ERRORTOKEN) '“'
[05](01, 05)-(01, 06): NAME(NAME) 'a'
[05](01, 06)-(01, 07): ERRORTOKEN(ERRORTOKEN) '”'
[05](01, 08)-(01, 10): LESSEQUAL(OP) '<='
[05](01, 11)-(01, 12): NAME(NAME) 'x'
[05](01, 13)-(01, 15): LESSEQUAL(OP) '<='
[05](01, 15)-(01, 16): ERRORTOKEN(ERRORTOKEN) ' '
[05](01, 16)-(01, 17): ERRORTOKEN(ERRORTOKEN) '“'
[05](01, 17)-(01, 18): NAME(NAME) 'z'
[05](01, 18)-(01, 19): ERRORTOKEN(ERRORTOKEN) '”'
[05](01, 20)-(01, 22): NAME(NAME) 'or'
[05](01, 22)-(01, 23): ERRORTOKEN(ERRORTOKEN) ' '
[05](01, 23)-(01, 24): ERRORTOKEN(ERRORTOKEN) '“'
[05](01, 24)-(01, 25): NAME(NAME) 'A'
[05](01, 25)-(01, 26): ERRORTOKEN(ERRORTOKEN) '”'
[05](01, 27)-(01, 29): LESSEQUAL(OP) '<='
[05](01, 30)-(01, 31): NAME(NAME) 'x'
[05](01, 32)-(01, 34): LESSEQUAL(OP) '<='
[05](01, 34)-(01, 35): ERRORTOKEN(ERRORTOKEN) ' '
[05](01, 35)-(01, 36): ERRORTOKEN(ERRORTOKEN) '“'
[05](01, 36)-(01, 37): NAME(NAME) 'Z'
[05](01, 37)-(01, 38): ERRORTOKEN(ERRORTOKEN) '”'
[05](01, 38)-(01, 39): COLON(OP) ':'
[05](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[06](01, 02)-(01, 08): NAME(NAME) 'inword'
[06](01, 09)-(01, 10): EQUAL(OP) '='
[06](01, 11)-(01, 15): NAME(NAME) 'True'
[06](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): INDENT(INDENT) '\t'
[07](01, 01)-(01, 05): NAME(NAME) 'else'
[07](01, 05)-(01, 06): COLON(OP) ':'
[07](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[08](01, 02)-(01, 04): NAME(NAME) 'if'
[08](01, 05)-(01, 11): NAME(NAME) 'inword'
[08](01, 11)-(01, 12): COLON(OP) ':'
[08](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 06): INDENT(INDENT) '\t\t    '
[09](01, 06)-(01, 13): NAME(NAME) 'counter'
[09](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[09](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[09](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'inword'
[10](01, 15)-(01, 16): EQUAL(OP) '='
[10](01, 17)-(01, 22): NAME(NAME) 'False'
[10](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 02): NAME(NAME) 'if'
[11](01, 03)-(01, 09): NAME(NAME) 'inword'
[11](01, 09)-(01, 10): COLON(OP) ':'
[11](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 11): NAME(NAME) 'counter'
[12](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[12](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[12](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 04)-(01, 05): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 06): NAME(NAME) 'return'
[14](01, 07)-(01, 14): NAME(NAME) 'counter'
[14](01, 14)-(01, 15): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

