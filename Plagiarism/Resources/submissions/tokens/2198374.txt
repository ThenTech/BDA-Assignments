[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[00](01, 26)-(01, 27): LPAR(OP) '('
[00](01, 27)-(01, 28): NAME(NAME) 's'
[00](01, 28)-(01, 29): RPAR(OP) ')'
[00](01, 29)-(01, 30): COLON(OP) ':'
[00](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'output'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 15): STRING(STRING) '""'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 15): NAME(NAME) 'punctuation'
[02](01, 16)-(01, 17): EQUAL(OP) '='
[02](01, 18)-(01, 57): STRING(STRING) '"!\\"#$%&\'()*+,-./:;<=>?@[\\\\]^_`{|}~“”’"'
[02](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 11): NAME(NAME) 'numbers'
[03](01, 12)-(01, 13): EQUAL(OP) '='
[03](01, 14)-(01, 26): STRING(STRING) '"1234567890"'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 14): NAME(NAME) 'letter'
[04](01, 15)-(01, 17): NAME(NAME) 'in'
[04](01, 18)-(01, 19): NAME(NAME) 's'
[04](01, 19)-(01, 20): COLON(OP) ':'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 17): NAME(NAME) 'letter'
[05](01, 18)-(01, 20): NAME(NAME) 'in'
[05](01, 21)-(01, 32): NAME(NAME) 'punctuation'
[05](01, 32)-(01, 33): COLON(OP) ':'
[05](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 13): NAME(NAME) 's'
[06](01, 14)-(01, 15): EQUAL(OP) '='
[06](01, 16)-(01, 17): NAME(NAME) 's'
[06](01, 17)-(01, 18): DOT(OP) '.'
[06](01, 18)-(01, 25): NAME(NAME) 'replace'
[06](01, 25)-(01, 26): LPAR(OP) '('
[06](01, 26)-(01, 32): NAME(NAME) 'letter'
[06](01, 32)-(01, 33): COMMA(OP) ','
[06](01, 34)-(01, 36): STRING(STRING) '""'
[06](01, 36)-(01, 37): RPAR(OP) ')'
[06](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 07): NAME(NAME) 'for'
[07](01, 08)-(01, 14): NAME(NAME) 'letter'
[07](01, 15)-(01, 17): NAME(NAME) 'in'
[07](01, 18)-(01, 19): NAME(NAME) 's'
[07](01, 19)-(01, 20): COLON(OP) ':'
[07](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 17): NAME(NAME) 'letter'
[08](01, 18)-(01, 20): NAME(NAME) 'in'
[08](01, 21)-(01, 28): NAME(NAME) 'numbers'
[08](01, 28)-(01, 29): COLON(OP) ':'
[08](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 13): NAME(NAME) 's'
[09](01, 14)-(01, 15): EQUAL(OP) '='
[09](01, 16)-(01, 17): NAME(NAME) 's'
[09](01, 17)-(01, 18): DOT(OP) '.'
[09](01, 18)-(01, 25): NAME(NAME) 'replace'
[09](01, 25)-(01, 26): LPAR(OP) '('
[09](01, 26)-(01, 32): NAME(NAME) 'letter'
[09](01, 32)-(01, 33): COMMA(OP) ','
[09](01, 34)-(01, 36): STRING(STRING) '""'
[09](01, 36)-(01, 37): RPAR(OP) ')'
[09](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 05): NAME(NAME) 's'
[10](01, 06)-(01, 07): EQUAL(OP) '='
[10](01, 08)-(01, 09): NAME(NAME) 's'
[10](01, 09)-(01, 10): DOT(OP) '.'
[10](01, 10)-(01, 15): NAME(NAME) 'lower'
[10](01, 15)-(01, 16): LPAR(OP) '('
[10](01, 16)-(01, 17): RPAR(OP) ')'
[10](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 05): NAME(NAME) 's'
[11](01, 06)-(01, 07): EQUAL(OP) '='
[11](01, 08)-(01, 09): NAME(NAME) 's'
[11](01, 09)-(01, 10): DOT(OP) '.'
[11](01, 10)-(01, 17): NAME(NAME) 'replace'
[11](01, 17)-(01, 18): LPAR(OP) '('
[11](01, 18)-(01, 21): STRING(STRING) '" "'
[11](01, 21)-(01, 22): COMMA(OP) ','
[11](01, 23)-(01, 25): STRING(STRING) '""'
[11](01, 25)-(01, 26): RPAR(OP) ')'
[11](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 07): NAME(NAME) 'for'
[12](01, 08)-(01, 09): NAME(NAME) 'i'
[12](01, 10)-(01, 12): NAME(NAME) 'in'
[12](01, 13)-(01, 18): NAME(NAME) 'range'
[12](01, 18)-(01, 19): LPAR(OP) '('
[12](01, 19)-(01, 22): NAME(NAME) 'len'
[12](01, 22)-(01, 23): LPAR(OP) '('
[12](01, 23)-(01, 24): NAME(NAME) 's'
[12](01, 24)-(01, 25): RPAR(OP) ')'
[12](01, 25)-(01, 26): RPAR(OP) ')'
[12](01, 26)-(01, 27): COLON(OP) ':'
[12](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 17): NAME(NAME) 'backwards'
[13](01, 18)-(01, 19): EQUAL(OP) '='
[13](01, 20)-(01, 21): NAME(NAME) 's'
[13](01, 21)-(01, 22): LSQB(OP) '['
[13](01, 22)-(01, 25): NAME(NAME) 'len'
[13](01, 25)-(01, 26): LPAR(OP) '('
[13](01, 26)-(01, 27): NAME(NAME) 's'
[13](01, 27)-(01, 28): RPAR(OP) ')'
[13](01, 29)-(01, 30): MINUS(OP) '-'
[13](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[13](01, 33)-(01, 34): MINUS(OP) '-'
[13](01, 35)-(01, 36): NAME(NAME) 'i'
[13](01, 36)-(01, 37): RSQB(OP) ']'
[13](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 14): NAME(NAME) 'output'
[14](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[14](01, 18)-(01, 27): NAME(NAME) 'backwards'
[14](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 10): NAME(NAME) 'return'
[15](01, 11)-(01, 15): NAME(NAME) 'bool'
[15](01, 15)-(01, 16): LPAR(OP) '('
[15](01, 16)-(01, 22): NAME(NAME) 'output'
[15](01, 23)-(01, 25): EQEQUAL(OP) '=='
[15](01, 26)-(01, 27): NAME(NAME) 's'
[15](01, 27)-(01, 28): RPAR(OP) ')'
[15](01, 28)-(01, 29): NEWLINE(NEWLINE)
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

