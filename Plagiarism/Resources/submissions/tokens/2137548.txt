[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'x'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 09): NAME(NAME) 'input'
[01](01, 09)-(01, 10): LPAR(OP) '('
[01](01, 10)-(01, 17): STRING(STRING) '"word?"'
[01](01, 17)-(01, 18): RPAR(OP) ')'
[01](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): NAME(NAME) 'counter'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[02](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'for'
[04](01, 04)-(01, 05): NAME(NAME) 'i'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 14): NAME(NAME) 'range'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 18): NAME(NAME) 'len'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 20): NAME(NAME) 'x'
[04](01, 20)-(01, 21): RPAR(OP) ')'
[04](01, 21)-(01, 22): RPAR(OP) ')'
[04](01, 22)-(01, 23): COLON(OP) ':'
[04](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 08): NAME(NAME) 'x'
[05](01, 08)-(01, 09): LSQB(OP) '['
[05](01, 09)-(01, 10): NAME(NAME) 'i'
[05](01, 10)-(01, 11): RSQB(OP) ']'
[05](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[05](01, 14)-(01, 17): STRING(STRING) '"a"'
[05](01, 17)-(01, 18): COLON(OP) ':'
[05](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 16): NAME(NAME) 'continue'
[06](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 08): NAME(NAME) 'else'
[07](01, 08)-(01, 09): COLON(OP) ':'
[07](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 15): NAME(NAME) 'counter'
[08](01, 16)-(01, 17): EQUAL(OP) '='
[08](01, 18)-(01, 25): NAME(NAME) 'counter'
[08](01, 25)-(01, 26): PLUS(OP) '+'
[08](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[08](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 05): NAME(NAME) 'print'
[09](01, 06)-(01, 07): LPAR(OP) '('
[09](01, 07)-(01, 11): STRING(STRING) '"a:"'
[09](01, 11)-(01, 12): COMMA(OP) ','
[09](01, 13)-(01, 20): NAME(NAME) 'counter'
[09](01, 20)-(01, 21): RPAR(OP) ')'
[09](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 07): NAME(NAME) 'counter'
[11](01, 08)-(01, 09): EQUAL(OP) '='
[11](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[11](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 03): NAME(NAME) 'for'
[12](01, 04)-(01, 05): NAME(NAME) 'i'
[12](01, 06)-(01, 08): NAME(NAME) 'in'
[12](01, 09)-(01, 14): NAME(NAME) 'range'
[12](01, 14)-(01, 15): LPAR(OP) '('
[12](01, 15)-(01, 18): NAME(NAME) 'len'
[12](01, 18)-(01, 19): LPAR(OP) '('
[12](01, 19)-(01, 20): NAME(NAME) 'x'
[12](01, 20)-(01, 21): RPAR(OP) ')'
[12](01, 21)-(01, 22): RPAR(OP) ')'
[12](01, 22)-(01, 23): COLON(OP) ':'
[12](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 06): NAME(NAME) 'if'
[13](01, 07)-(01, 08): NAME(NAME) 'x'
[13](01, 08)-(01, 09): LSQB(OP) '['
[13](01, 09)-(01, 10): NAME(NAME) 'i'
[13](01, 10)-(01, 11): RSQB(OP) ']'
[13](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[13](01, 14)-(01, 17): STRING(STRING) '"b"'
[13](01, 17)-(01, 18): COLON(OP) ':'
[13](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 16): NAME(NAME) 'continue'
[14](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 08): NAME(NAME) 'else'
[15](01, 08)-(01, 09): COLON(OP) ':'
[15](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 15): NAME(NAME) 'counter'
[16](01, 16)-(01, 17): EQUAL(OP) '='
[16](01, 18)-(01, 25): NAME(NAME) 'counter'
[16](01, 25)-(01, 26): PLUS(OP) '+'
[16](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[16](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 05): NAME(NAME) 'print'
[17](01, 06)-(01, 07): LPAR(OP) '('
[17](01, 07)-(01, 11): STRING(STRING) '"b:"'
[17](01, 11)-(01, 12): COMMA(OP) ','
[17](01, 13)-(01, 20): NAME(NAME) 'counter'
[17](01, 20)-(01, 21): RPAR(OP) ')'
[17](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 07): NAME(NAME) 'counter'
[19](01, 08)-(01, 09): EQUAL(OP) '='
[19](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[19](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 03): NAME(NAME) 'for'
[20](01, 04)-(01, 05): NAME(NAME) 'i'
[20](01, 06)-(01, 08): NAME(NAME) 'in'
[20](01, 09)-(01, 14): NAME(NAME) 'range'
[20](01, 14)-(01, 15): LPAR(OP) '('
[20](01, 15)-(01, 18): NAME(NAME) 'len'
[20](01, 18)-(01, 19): LPAR(OP) '('
[20](01, 19)-(01, 20): NAME(NAME) 'x'
[20](01, 20)-(01, 21): RPAR(OP) ')'
[20](01, 21)-(01, 22): RPAR(OP) ')'
[20](01, 22)-(01, 23): COLON(OP) ':'
[20](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 06): NAME(NAME) 'if'
[21](01, 07)-(01, 08): NAME(NAME) 'x'
[21](01, 08)-(01, 09): LSQB(OP) '['
[21](01, 09)-(01, 10): NAME(NAME) 'i'
[21](01, 10)-(01, 11): RSQB(OP) ']'
[21](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[21](01, 14)-(01, 17): STRING(STRING) '"c"'
[21](01, 17)-(01, 18): COLON(OP) ':'
[21](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 16): NAME(NAME) 'continue'
[22](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 08): NAME(NAME) 'else'
[23](01, 08)-(01, 09): COLON(OP) ':'
[23](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 15): NAME(NAME) 'counter'
[24](01, 16)-(01, 17): EQUAL(OP) '='
[24](01, 18)-(01, 25): NAME(NAME) 'counter'
[24](01, 25)-(01, 26): PLUS(OP) '+'
[24](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[24](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 05): NAME(NAME) 'print'
[25](01, 06)-(01, 07): LPAR(OP) '('
[25](01, 07)-(01, 11): STRING(STRING) '"c:"'
[25](01, 11)-(01, 12): COMMA(OP) ','
[25](01, 13)-(01, 20): NAME(NAME) 'counter'
[25](01, 20)-(01, 21): RPAR(OP) ')'
[25](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 07): NAME(NAME) 'counter'
[27](01, 08)-(01, 09): EQUAL(OP) '='
[27](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[27](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 03): NAME(NAME) 'for'
[28](01, 04)-(01, 05): NAME(NAME) 'i'
[28](01, 06)-(01, 08): NAME(NAME) 'in'
[28](01, 09)-(01, 14): NAME(NAME) 'range'
[28](01, 14)-(01, 15): LPAR(OP) '('
[28](01, 15)-(01, 18): NAME(NAME) 'len'
[28](01, 18)-(01, 19): LPAR(OP) '('
[28](01, 19)-(01, 20): NAME(NAME) 'x'
[28](01, 20)-(01, 21): RPAR(OP) ')'
[28](01, 21)-(01, 22): RPAR(OP) ')'
[28](01, 22)-(01, 23): COLON(OP) ':'
[28](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 06): NAME(NAME) 'if'
[29](01, 07)-(01, 08): NAME(NAME) 'x'
[29](01, 08)-(01, 09): LSQB(OP) '['
[29](01, 09)-(01, 10): NAME(NAME) 'i'
[29](01, 10)-(01, 11): RSQB(OP) ']'
[29](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[29](01, 14)-(01, 17): STRING(STRING) '"e"'
[29](01, 17)-(01, 18): COLON(OP) ':'
[29](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 16): NAME(NAME) 'continue'
[30](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 08): NAME(NAME) 'else'
[31](01, 08)-(01, 09): COLON(OP) ':'
[31](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 15): NAME(NAME) 'counter'
[32](01, 16)-(01, 17): EQUAL(OP) '='
[32](01, 18)-(01, 25): NAME(NAME) 'counter'
[32](01, 25)-(01, 26): PLUS(OP) '+'
[32](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[32](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 05): NAME(NAME) 'print'
[33](01, 06)-(01, 07): LPAR(OP) '('
[33](01, 07)-(01, 11): STRING(STRING) '"e:"'
[33](01, 11)-(01, 12): COMMA(OP) ','
[33](01, 13)-(01, 20): NAME(NAME) 'counter'
[33](01, 20)-(01, 21): RPAR(OP) ')'
[33](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 01): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 07): NAME(NAME) 'counter'
[35](01, 08)-(01, 09): EQUAL(OP) '='
[35](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[35](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 03): NAME(NAME) 'for'
[36](01, 04)-(01, 05): NAME(NAME) 'i'
[36](01, 06)-(01, 08): NAME(NAME) 'in'
[36](01, 09)-(01, 14): NAME(NAME) 'range'
[36](01, 14)-(01, 15): LPAR(OP) '('
[36](01, 15)-(01, 18): NAME(NAME) 'len'
[36](01, 18)-(01, 19): LPAR(OP) '('
[36](01, 19)-(01, 20): NAME(NAME) 'x'
[36](01, 20)-(01, 21): RPAR(OP) ')'
[36](01, 21)-(01, 22): RPAR(OP) ')'
[36](01, 22)-(01, 23): COLON(OP) ':'
[36](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 04): INDENT(INDENT) '    '
[37](01, 04)-(01, 06): NAME(NAME) 'if'
[37](01, 07)-(01, 08): NAME(NAME) 'x'
[37](01, 08)-(01, 09): LSQB(OP) '['
[37](01, 09)-(01, 10): NAME(NAME) 'i'
[37](01, 10)-(01, 11): RSQB(OP) ']'
[37](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[37](01, 14)-(01, 17): STRING(STRING) '"f"'
[37](01, 17)-(01, 18): COLON(OP) ':'
[37](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 08): INDENT(INDENT) '        '
[38](01, 08)-(01, 16): NAME(NAME) 'continue'
[38](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 04): INDENT(INDENT) '    '
[39](01, 04)-(01, 08): NAME(NAME) 'else'
[39](01, 08)-(01, 09): COLON(OP) ':'
[39](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 08): INDENT(INDENT) '        '
[40](01, 08)-(01, 15): NAME(NAME) 'counter'
[40](01, 16)-(01, 17): EQUAL(OP) '='
[40](01, 18)-(01, 25): NAME(NAME) 'counter'
[40](01, 25)-(01, 26): PLUS(OP) '+'
[40](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[40](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 05): NAME(NAME) 'print'
[41](01, 06)-(01, 07): LPAR(OP) '('
[41](01, 07)-(01, 11): STRING(STRING) '"f:"'
[41](01, 11)-(01, 12): COMMA(OP) ','
[41](01, 13)-(01, 20): NAME(NAME) 'counter'
[41](01, 20)-(01, 21): RPAR(OP) ')'
[41](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 01): NL(NL) '\n'
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 07): NAME(NAME) 'counter'
[43](01, 08)-(01, 09): EQUAL(OP) '='
[43](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[43](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 03): NAME(NAME) 'for'
[44](01, 04)-(01, 05): NAME(NAME) 'i'
[44](01, 06)-(01, 08): NAME(NAME) 'in'
[44](01, 09)-(01, 14): NAME(NAME) 'range'
[44](01, 14)-(01, 15): LPAR(OP) '('
[44](01, 15)-(01, 18): NAME(NAME) 'len'
[44](01, 18)-(01, 19): LPAR(OP) '('
[44](01, 19)-(01, 20): NAME(NAME) 'x'
[44](01, 20)-(01, 21): RPAR(OP) ')'
[44](01, 21)-(01, 22): RPAR(OP) ')'
[44](01, 22)-(01, 23): COLON(OP) ':'
[44](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 04): INDENT(INDENT) '    '
[45](01, 04)-(01, 06): NAME(NAME) 'if'
[45](01, 07)-(01, 08): NAME(NAME) 'x'
[45](01, 08)-(01, 09): LSQB(OP) '['
[45](01, 09)-(01, 10): NAME(NAME) 'i'
[45](01, 10)-(01, 11): RSQB(OP) ']'
[45](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[45](01, 14)-(01, 17): STRING(STRING) '"g"'
[45](01, 17)-(01, 18): COLON(OP) ':'
[45](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 08): INDENT(INDENT) '        '
[46](01, 08)-(01, 16): NAME(NAME) 'continue'
[46](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 04): INDENT(INDENT) '    '
[47](01, 04)-(01, 08): NAME(NAME) 'else'
[47](01, 08)-(01, 09): COLON(OP) ':'
[47](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 08): INDENT(INDENT) '        '
[48](01, 08)-(01, 15): NAME(NAME) 'counter'
[48](01, 16)-(01, 17): EQUAL(OP) '='
[48](01, 18)-(01, 25): NAME(NAME) 'counter'
[48](01, 25)-(01, 26): PLUS(OP) '+'
[48](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[48](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 05): NAME(NAME) 'print'
[49](01, 06)-(01, 07): LPAR(OP) '('
[49](01, 07)-(01, 11): STRING(STRING) '"g:"'
[49](01, 11)-(01, 12): COMMA(OP) ','
[49](01, 13)-(01, 20): NAME(NAME) 'counter'
[49](01, 20)-(01, 21): RPAR(OP) ')'
[49](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 01): NL(NL) '\n'
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 07): NAME(NAME) 'counter'
[51](01, 08)-(01, 09): EQUAL(OP) '='
[51](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[51](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 03): NAME(NAME) 'for'
[52](01, 04)-(01, 05): NAME(NAME) 'i'
[52](01, 06)-(01, 08): NAME(NAME) 'in'
[52](01, 09)-(01, 14): NAME(NAME) 'range'
[52](01, 14)-(01, 15): LPAR(OP) '('
[52](01, 15)-(01, 18): NAME(NAME) 'len'
[52](01, 18)-(01, 19): LPAR(OP) '('
[52](01, 19)-(01, 20): NAME(NAME) 'x'
[52](01, 20)-(01, 21): RPAR(OP) ')'
[52](01, 21)-(01, 22): RPAR(OP) ')'
[52](01, 22)-(01, 23): COLON(OP) ':'
[52](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 04): INDENT(INDENT) '    '
[53](01, 04)-(01, 06): NAME(NAME) 'if'
[53](01, 07)-(01, 08): NAME(NAME) 'x'
[53](01, 08)-(01, 09): LSQB(OP) '['
[53](01, 09)-(01, 10): NAME(NAME) 'i'
[53](01, 10)-(01, 11): RSQB(OP) ']'
[53](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[53](01, 14)-(01, 17): STRING(STRING) '"h"'
[53](01, 17)-(01, 18): COLON(OP) ':'
[53](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[53](02, 00)-(02, 00): DEDENT(DEDENT)
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 08): INDENT(INDENT) '        '
[54](01, 08)-(01, 16): NAME(NAME) 'continue'
[54](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): DEDENT(DEDENT)
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 04): INDENT(INDENT) '    '
[55](01, 04)-(01, 08): NAME(NAME) 'else'
[55](01, 08)-(01, 09): COLON(OP) ':'
[55](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[55](02, 00)-(02, 00): DEDENT(DEDENT)
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[56](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[56](01, 00)-(01, 08): INDENT(INDENT) '        '
[56](01, 08)-(01, 15): NAME(NAME) 'counter'
[56](01, 16)-(01, 17): EQUAL(OP) '='
[56](01, 18)-(01, 25): NAME(NAME) 'counter'
[56](01, 25)-(01, 26): PLUS(OP) '+'
[56](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[56](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[56](02, 00)-(02, 00): DEDENT(DEDENT)
[56](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[57](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[57](01, 00)-(01, 05): NAME(NAME) 'print'
[57](01, 06)-(01, 07): LPAR(OP) '('
[57](01, 07)-(01, 11): STRING(STRING) '"h:"'
[57](01, 11)-(01, 12): COMMA(OP) ','
[57](01, 13)-(01, 20): NAME(NAME) 'counter'
[57](01, 20)-(01, 21): RPAR(OP) ')'
[57](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[57](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[58](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[58](01, 00)-(01, 01): NL(NL) '\n'
[58](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[59](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[59](01, 00)-(01, 07): NAME(NAME) 'counter'
[59](01, 08)-(01, 09): EQUAL(OP) '='
[59](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[59](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[59](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[60](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[60](01, 00)-(01, 03): NAME(NAME) 'for'
[60](01, 04)-(01, 05): NAME(NAME) 'i'
[60](01, 06)-(01, 08): NAME(NAME) 'in'
[60](01, 09)-(01, 14): NAME(NAME) 'range'
[60](01, 14)-(01, 15): LPAR(OP) '('
[60](01, 15)-(01, 18): NAME(NAME) 'len'
[60](01, 18)-(01, 19): LPAR(OP) '('
[60](01, 19)-(01, 20): NAME(NAME) 'x'
[60](01, 20)-(01, 21): RPAR(OP) ')'
[60](01, 21)-(01, 22): RPAR(OP) ')'
[60](01, 22)-(01, 23): COLON(OP) ':'
[60](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[60](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[61](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[61](01, 00)-(01, 04): INDENT(INDENT) '    '
[61](01, 04)-(01, 06): NAME(NAME) 'if'
[61](01, 07)-(01, 08): NAME(NAME) 'x'
[61](01, 08)-(01, 09): LSQB(OP) '['
[61](01, 09)-(01, 10): NAME(NAME) 'i'
[61](01, 10)-(01, 11): RSQB(OP) ']'
[61](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[61](01, 14)-(01, 17): STRING(STRING) '"i"'
[61](01, 17)-(01, 18): COLON(OP) ':'
[61](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[61](02, 00)-(02, 00): DEDENT(DEDENT)
[61](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[62](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[62](01, 00)-(01, 08): INDENT(INDENT) '        '
[62](01, 08)-(01, 16): NAME(NAME) 'continue'
[62](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[62](02, 00)-(02, 00): DEDENT(DEDENT)
[62](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[63](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[63](01, 00)-(01, 04): INDENT(INDENT) '    '
[63](01, 04)-(01, 08): NAME(NAME) 'else'
[63](01, 08)-(01, 09): COLON(OP) ':'
[63](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[63](02, 00)-(02, 00): DEDENT(DEDENT)
[63](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[64](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[64](01, 00)-(01, 08): INDENT(INDENT) '        '
[64](01, 08)-(01, 15): NAME(NAME) 'counter'
[64](01, 16)-(01, 17): EQUAL(OP) '='
[64](01, 18)-(01, 25): NAME(NAME) 'counter'
[64](01, 25)-(01, 26): PLUS(OP) '+'
[64](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[64](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[64](02, 00)-(02, 00): DEDENT(DEDENT)
[64](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[65](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[65](01, 00)-(01, 05): NAME(NAME) 'print'
[65](01, 06)-(01, 07): LPAR(OP) '('
[65](01, 07)-(01, 11): STRING(STRING) '"i:"'
[65](01, 11)-(01, 12): COMMA(OP) ','
[65](01, 13)-(01, 20): NAME(NAME) 'counter'
[65](01, 20)-(01, 21): RPAR(OP) ')'
[65](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[65](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[66](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[66](01, 00)-(01, 01): NL(NL) '\n'
[66](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[67](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[67](01, 00)-(01, 07): NAME(NAME) 'counter'
[67](01, 08)-(01, 09): EQUAL(OP) '='
[67](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[67](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[67](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[68](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[68](01, 00)-(01, 03): NAME(NAME) 'for'
[68](01, 04)-(01, 05): NAME(NAME) 'i'
[68](01, 06)-(01, 08): NAME(NAME) 'in'
[68](01, 09)-(01, 14): NAME(NAME) 'range'
[68](01, 14)-(01, 15): LPAR(OP) '('
[68](01, 15)-(01, 18): NAME(NAME) 'len'
[68](01, 18)-(01, 19): LPAR(OP) '('
[68](01, 19)-(01, 20): NAME(NAME) 'x'
[68](01, 20)-(01, 21): RPAR(OP) ')'
[68](01, 21)-(01, 22): RPAR(OP) ')'
[68](01, 22)-(01, 23): COLON(OP) ':'
[68](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[68](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[69](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[69](01, 00)-(01, 04): INDENT(INDENT) '    '
[69](01, 04)-(01, 06): NAME(NAME) 'if'
[69](01, 07)-(01, 08): NAME(NAME) 'x'
[69](01, 08)-(01, 09): LSQB(OP) '['
[69](01, 09)-(01, 10): NAME(NAME) 'i'
[69](01, 10)-(01, 11): RSQB(OP) ']'
[69](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[69](01, 14)-(01, 17): STRING(STRING) '"j"'
[69](01, 17)-(01, 18): COLON(OP) ':'
[69](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[69](02, 00)-(02, 00): DEDENT(DEDENT)
[69](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[70](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[70](01, 00)-(01, 08): INDENT(INDENT) '        '
[70](01, 08)-(01, 16): NAME(NAME) 'continue'
[70](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[70](02, 00)-(02, 00): DEDENT(DEDENT)
[70](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[71](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[71](01, 00)-(01, 04): INDENT(INDENT) '    '
[71](01, 04)-(01, 08): NAME(NAME) 'else'
[71](01, 08)-(01, 09): COLON(OP) ':'
[71](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[71](02, 00)-(02, 00): DEDENT(DEDENT)
[71](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[72](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[72](01, 00)-(01, 08): INDENT(INDENT) '        '
[72](01, 08)-(01, 15): NAME(NAME) 'counter'
[72](01, 16)-(01, 17): EQUAL(OP) '='
[72](01, 18)-(01, 25): NAME(NAME) 'counter'
[72](01, 25)-(01, 26): PLUS(OP) '+'
[72](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[72](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[72](02, 00)-(02, 00): DEDENT(DEDENT)
[72](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[73](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[73](01, 00)-(01, 05): NAME(NAME) 'print'
[73](01, 06)-(01, 07): LPAR(OP) '('
[73](01, 07)-(01, 11): STRING(STRING) '"j:"'
[73](01, 11)-(01, 12): COMMA(OP) ','
[73](01, 13)-(01, 20): NAME(NAME) 'counter'
[73](01, 20)-(01, 21): RPAR(OP) ')'
[73](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[73](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[74](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[74](01, 00)-(01, 01): NL(NL) '\n'
[74](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[75](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[75](01, 00)-(01, 07): NAME(NAME) 'counter'
[75](01, 08)-(01, 09): EQUAL(OP) '='
[75](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[75](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[75](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[76](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[76](01, 00)-(01, 03): NAME(NAME) 'for'
[76](01, 04)-(01, 05): NAME(NAME) 'i'
[76](01, 06)-(01, 08): NAME(NAME) 'in'
[76](01, 09)-(01, 14): NAME(NAME) 'range'
[76](01, 14)-(01, 15): LPAR(OP) '('
[76](01, 15)-(01, 18): NAME(NAME) 'len'
[76](01, 18)-(01, 19): LPAR(OP) '('
[76](01, 19)-(01, 20): NAME(NAME) 'x'
[76](01, 20)-(01, 21): RPAR(OP) ')'
[76](01, 21)-(01, 22): RPAR(OP) ')'
[76](01, 22)-(01, 23): COLON(OP) ':'
[76](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[76](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[77](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[77](01, 00)-(01, 04): INDENT(INDENT) '    '
[77](01, 04)-(01, 06): NAME(NAME) 'if'
[77](01, 07)-(01, 08): NAME(NAME) 'x'
[77](01, 08)-(01, 09): LSQB(OP) '['
[77](01, 09)-(01, 10): NAME(NAME) 'i'
[77](01, 10)-(01, 11): RSQB(OP) ']'
[77](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[77](01, 14)-(01, 17): STRING(STRING) '"k"'
[77](01, 17)-(01, 18): COLON(OP) ':'
[77](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[77](02, 00)-(02, 00): DEDENT(DEDENT)
[77](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[78](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[78](01, 00)-(01, 08): INDENT(INDENT) '        '
[78](01, 08)-(01, 16): NAME(NAME) 'continue'
[78](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[78](02, 00)-(02, 00): DEDENT(DEDENT)
[78](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[79](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[79](01, 00)-(01, 04): INDENT(INDENT) '    '
[79](01, 04)-(01, 08): NAME(NAME) 'else'
[79](01, 08)-(01, 09): COLON(OP) ':'
[79](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[79](02, 00)-(02, 00): DEDENT(DEDENT)
[79](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[80](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[80](01, 00)-(01, 08): INDENT(INDENT) '        '
[80](01, 08)-(01, 15): NAME(NAME) 'counter'
[80](01, 16)-(01, 17): EQUAL(OP) '='
[80](01, 18)-(01, 25): NAME(NAME) 'counter'
[80](01, 25)-(01, 26): PLUS(OP) '+'
[80](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[80](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[80](02, 00)-(02, 00): DEDENT(DEDENT)
[80](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[81](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[81](01, 00)-(01, 05): NAME(NAME) 'print'
[81](01, 06)-(01, 07): LPAR(OP) '('
[81](01, 07)-(01, 11): STRING(STRING) '"k:"'
[81](01, 11)-(01, 12): COMMA(OP) ','
[81](01, 13)-(01, 20): NAME(NAME) 'counter'
[81](01, 20)-(01, 21): RPAR(OP) ')'
[81](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[81](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[82](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[82](01, 00)-(01, 01): NL(NL) '\n'
[82](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[83](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[83](01, 00)-(01, 07): NAME(NAME) 'counter'
[83](01, 08)-(01, 09): EQUAL(OP) '='
[83](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[83](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[83](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[84](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[84](01, 00)-(01, 03): NAME(NAME) 'for'
[84](01, 04)-(01, 05): NAME(NAME) 'i'
[84](01, 06)-(01, 08): NAME(NAME) 'in'
[84](01, 09)-(01, 14): NAME(NAME) 'range'
[84](01, 14)-(01, 15): LPAR(OP) '('
[84](01, 15)-(01, 18): NAME(NAME) 'len'
[84](01, 18)-(01, 19): LPAR(OP) '('
[84](01, 19)-(01, 20): NAME(NAME) 'x'
[84](01, 20)-(01, 21): RPAR(OP) ')'
[84](01, 21)-(01, 22): RPAR(OP) ')'
[84](01, 22)-(01, 23): COLON(OP) ':'
[84](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[84](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[85](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[85](01, 00)-(01, 04): INDENT(INDENT) '    '
[85](01, 04)-(01, 06): NAME(NAME) 'if'
[85](01, 07)-(01, 08): NAME(NAME) 'x'
[85](01, 08)-(01, 09): LSQB(OP) '['
[85](01, 09)-(01, 10): NAME(NAME) 'i'
[85](01, 10)-(01, 11): RSQB(OP) ']'
[85](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[85](01, 14)-(01, 17): STRING(STRING) '"l"'
[85](01, 17)-(01, 18): COLON(OP) ':'
[85](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[85](02, 00)-(02, 00): DEDENT(DEDENT)
[85](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[86](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[86](01, 00)-(01, 08): INDENT(INDENT) '        '
[86](01, 08)-(01, 16): NAME(NAME) 'continue'
[86](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[86](02, 00)-(02, 00): DEDENT(DEDENT)
[86](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[87](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[87](01, 00)-(01, 04): INDENT(INDENT) '    '
[87](01, 04)-(01, 08): NAME(NAME) 'else'
[87](01, 08)-(01, 09): COLON(OP) ':'
[87](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[87](02, 00)-(02, 00): DEDENT(DEDENT)
[87](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[88](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[88](01, 00)-(01, 08): INDENT(INDENT) '        '
[88](01, 08)-(01, 15): NAME(NAME) 'counter'
[88](01, 16)-(01, 17): EQUAL(OP) '='
[88](01, 18)-(01, 25): NAME(NAME) 'counter'
[88](01, 25)-(01, 26): PLUS(OP) '+'
[88](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[88](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[88](02, 00)-(02, 00): DEDENT(DEDENT)
[88](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[89](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[89](01, 00)-(01, 05): NAME(NAME) 'print'
[89](01, 06)-(01, 07): LPAR(OP) '('
[89](01, 07)-(01, 11): STRING(STRING) '"l:"'
[89](01, 11)-(01, 12): COMMA(OP) ','
[89](01, 13)-(01, 20): NAME(NAME) 'counter'
[89](01, 20)-(01, 21): RPAR(OP) ')'
[89](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[89](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[90](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[90](01, 00)-(01, 01): NL(NL) '\n'
[90](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[91](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[91](01, 00)-(01, 07): NAME(NAME) 'counter'
[91](01, 08)-(01, 09): EQUAL(OP) '='
[91](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[91](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[91](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[92](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[92](01, 00)-(01, 03): NAME(NAME) 'for'
[92](01, 04)-(01, 05): NAME(NAME) 'i'
[92](01, 06)-(01, 08): NAME(NAME) 'in'
[92](01, 09)-(01, 14): NAME(NAME) 'range'
[92](01, 14)-(01, 15): LPAR(OP) '('
[92](01, 15)-(01, 18): NAME(NAME) 'len'
[92](01, 18)-(01, 19): LPAR(OP) '('
[92](01, 19)-(01, 20): NAME(NAME) 'x'
[92](01, 20)-(01, 21): RPAR(OP) ')'
[92](01, 21)-(01, 22): RPAR(OP) ')'
[92](01, 22)-(01, 23): COLON(OP) ':'
[92](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[92](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[93](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[93](01, 00)-(01, 04): INDENT(INDENT) '    '
[93](01, 04)-(01, 06): NAME(NAME) 'if'
[93](01, 07)-(01, 08): NAME(NAME) 'x'
[93](01, 08)-(01, 09): LSQB(OP) '['
[93](01, 09)-(01, 10): NAME(NAME) 'i'
[93](01, 10)-(01, 11): RSQB(OP) ']'
[93](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[93](01, 14)-(01, 17): STRING(STRING) '"m"'
[93](01, 17)-(01, 18): COLON(OP) ':'
[93](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[93](02, 00)-(02, 00): DEDENT(DEDENT)
[93](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[94](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[94](01, 00)-(01, 08): INDENT(INDENT) '        '
[94](01, 08)-(01, 16): NAME(NAME) 'continue'
[94](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[94](02, 00)-(02, 00): DEDENT(DEDENT)
[94](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[95](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[95](01, 00)-(01, 04): INDENT(INDENT) '    '
[95](01, 04)-(01, 08): NAME(NAME) 'else'
[95](01, 08)-(01, 09): COLON(OP) ':'
[95](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[95](02, 00)-(02, 00): DEDENT(DEDENT)
[95](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[96](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[96](01, 00)-(01, 08): INDENT(INDENT) '        '
[96](01, 08)-(01, 15): NAME(NAME) 'counter'
[96](01, 16)-(01, 17): EQUAL(OP) '='
[96](01, 18)-(01, 25): NAME(NAME) 'counter'
[96](01, 25)-(01, 26): PLUS(OP) '+'
[96](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[96](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[96](02, 00)-(02, 00): DEDENT(DEDENT)
[96](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[97](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[97](01, 00)-(01, 05): NAME(NAME) 'print'
[97](01, 06)-(01, 07): LPAR(OP) '('
[97](01, 07)-(01, 11): STRING(STRING) '"m:"'
[97](01, 11)-(01, 12): COMMA(OP) ','
[97](01, 13)-(01, 20): NAME(NAME) 'counter'
[97](01, 20)-(01, 21): RPAR(OP) ')'
[97](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[97](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[98](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[98](01, 00)-(01, 01): NL(NL) '\n'
[98](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[99](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[99](01, 00)-(01, 07): NAME(NAME) 'counter'
[99](01, 08)-(01, 09): EQUAL(OP) '='
[99](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[99](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[99](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[100](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[100](01, 00)-(01, 03): NAME(NAME) 'for'
[100](01, 04)-(01, 05): NAME(NAME) 'i'
[100](01, 06)-(01, 08): NAME(NAME) 'in'
[100](01, 09)-(01, 14): NAME(NAME) 'range'
[100](01, 14)-(01, 15): LPAR(OP) '('
[100](01, 15)-(01, 18): NAME(NAME) 'len'
[100](01, 18)-(01, 19): LPAR(OP) '('
[100](01, 19)-(01, 20): NAME(NAME) 'x'
[100](01, 20)-(01, 21): RPAR(OP) ')'
[100](01, 21)-(01, 22): RPAR(OP) ')'
[100](01, 22)-(01, 23): COLON(OP) ':'
[100](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[100](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[101](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[101](01, 00)-(01, 04): INDENT(INDENT) '    '
[101](01, 04)-(01, 06): NAME(NAME) 'if'
[101](01, 07)-(01, 08): NAME(NAME) 'x'
[101](01, 08)-(01, 09): LSQB(OP) '['
[101](01, 09)-(01, 10): NAME(NAME) 'i'
[101](01, 10)-(01, 11): RSQB(OP) ']'
[101](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[101](01, 14)-(01, 17): STRING(STRING) '"n"'
[101](01, 17)-(01, 18): COLON(OP) ':'
[101](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[101](02, 00)-(02, 00): DEDENT(DEDENT)
[101](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[102](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[102](01, 00)-(01, 08): INDENT(INDENT) '        '
[102](01, 08)-(01, 16): NAME(NAME) 'continue'
[102](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[102](02, 00)-(02, 00): DEDENT(DEDENT)
[102](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[103](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[103](01, 00)-(01, 04): INDENT(INDENT) '    '
[103](01, 04)-(01, 08): NAME(NAME) 'else'
[103](01, 08)-(01, 09): COLON(OP) ':'
[103](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[103](02, 00)-(02, 00): DEDENT(DEDENT)
[103](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[104](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[104](01, 00)-(01, 08): INDENT(INDENT) '        '
[104](01, 08)-(01, 15): NAME(NAME) 'counter'
[104](01, 16)-(01, 17): EQUAL(OP) '='
[104](01, 18)-(01, 25): NAME(NAME) 'counter'
[104](01, 25)-(01, 26): PLUS(OP) '+'
[104](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[104](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[104](02, 00)-(02, 00): DEDENT(DEDENT)
[104](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[105](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[105](01, 00)-(01, 05): NAME(NAME) 'print'
[105](01, 06)-(01, 07): LPAR(OP) '('
[105](01, 07)-(01, 11): STRING(STRING) '"n:"'
[105](01, 11)-(01, 12): COMMA(OP) ','
[105](01, 13)-(01, 20): NAME(NAME) 'counter'
[105](01, 20)-(01, 21): RPAR(OP) ')'
[105](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[105](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[106](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[106](01, 00)-(01, 01): NL(NL) '\n'
[106](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[107](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[107](01, 00)-(01, 07): NAME(NAME) 'counter'
[107](01, 08)-(01, 09): EQUAL(OP) '='
[107](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[107](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[107](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[108](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[108](01, 00)-(01, 03): NAME(NAME) 'for'
[108](01, 04)-(01, 05): NAME(NAME) 'i'
[108](01, 06)-(01, 08): NAME(NAME) 'in'
[108](01, 09)-(01, 14): NAME(NAME) 'range'
[108](01, 14)-(01, 15): LPAR(OP) '('
[108](01, 15)-(01, 18): NAME(NAME) 'len'
[108](01, 18)-(01, 19): LPAR(OP) '('
[108](01, 19)-(01, 20): NAME(NAME) 'x'
[108](01, 20)-(01, 21): RPAR(OP) ')'
[108](01, 21)-(01, 22): RPAR(OP) ')'
[108](01, 22)-(01, 23): COLON(OP) ':'
[108](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[108](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[109](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[109](01, 00)-(01, 04): INDENT(INDENT) '    '
[109](01, 04)-(01, 06): NAME(NAME) 'if'
[109](01, 07)-(01, 08): NAME(NAME) 'x'
[109](01, 08)-(01, 09): LSQB(OP) '['
[109](01, 09)-(01, 10): NAME(NAME) 'i'
[109](01, 10)-(01, 11): RSQB(OP) ']'
[109](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[109](01, 14)-(01, 17): STRING(STRING) '"o"'
[109](01, 17)-(01, 18): COLON(OP) ':'
[109](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[109](02, 00)-(02, 00): DEDENT(DEDENT)
[109](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[110](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[110](01, 00)-(01, 08): INDENT(INDENT) '        '
[110](01, 08)-(01, 16): NAME(NAME) 'continue'
[110](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[110](02, 00)-(02, 00): DEDENT(DEDENT)
[110](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[111](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[111](01, 00)-(01, 04): INDENT(INDENT) '    '
[111](01, 04)-(01, 08): NAME(NAME) 'else'
[111](01, 08)-(01, 09): COLON(OP) ':'
[111](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[111](02, 00)-(02, 00): DEDENT(DEDENT)
[111](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[112](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[112](01, 00)-(01, 08): INDENT(INDENT) '        '
[112](01, 08)-(01, 15): NAME(NAME) 'counter'
[112](01, 16)-(01, 17): EQUAL(OP) '='
[112](01, 18)-(01, 25): NAME(NAME) 'counter'
[112](01, 25)-(01, 26): PLUS(OP) '+'
[112](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[112](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[112](02, 00)-(02, 00): DEDENT(DEDENT)
[112](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[113](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[113](01, 00)-(01, 05): NAME(NAME) 'print'
[113](01, 06)-(01, 07): LPAR(OP) '('
[113](01, 07)-(01, 11): STRING(STRING) '"o:"'
[113](01, 11)-(01, 12): COMMA(OP) ','
[113](01, 13)-(01, 20): NAME(NAME) 'counter'
[113](01, 20)-(01, 21): RPAR(OP) ')'
[113](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[113](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[114](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[114](01, 00)-(01, 01): NL(NL) '\n'
[114](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[115](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[115](01, 00)-(01, 07): NAME(NAME) 'counter'
[115](01, 08)-(01, 09): EQUAL(OP) '='
[115](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[115](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[115](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[116](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[116](01, 00)-(01, 03): NAME(NAME) 'for'
[116](01, 04)-(01, 05): NAME(NAME) 'i'
[116](01, 06)-(01, 08): NAME(NAME) 'in'
[116](01, 09)-(01, 14): NAME(NAME) 'range'
[116](01, 14)-(01, 15): LPAR(OP) '('
[116](01, 15)-(01, 18): NAME(NAME) 'len'
[116](01, 18)-(01, 19): LPAR(OP) '('
[116](01, 19)-(01, 20): NAME(NAME) 'x'
[116](01, 20)-(01, 21): RPAR(OP) ')'
[116](01, 21)-(01, 22): RPAR(OP) ')'
[116](01, 22)-(01, 23): COLON(OP) ':'
[116](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[116](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[117](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[117](01, 00)-(01, 04): INDENT(INDENT) '    '
[117](01, 04)-(01, 06): NAME(NAME) 'if'
[117](01, 07)-(01, 08): NAME(NAME) 'x'
[117](01, 08)-(01, 09): LSQB(OP) '['
[117](01, 09)-(01, 10): NAME(NAME) 'i'
[117](01, 10)-(01, 11): RSQB(OP) ']'
[117](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[117](01, 14)-(01, 17): STRING(STRING) '"p"'
[117](01, 17)-(01, 18): COLON(OP) ':'
[117](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[117](02, 00)-(02, 00): DEDENT(DEDENT)
[117](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[118](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[118](01, 00)-(01, 08): INDENT(INDENT) '        '
[118](01, 08)-(01, 16): NAME(NAME) 'continue'
[118](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[118](02, 00)-(02, 00): DEDENT(DEDENT)
[118](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[119](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[119](01, 00)-(01, 04): INDENT(INDENT) '    '
[119](01, 04)-(01, 08): NAME(NAME) 'else'
[119](01, 08)-(01, 09): COLON(OP) ':'
[119](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[119](02, 00)-(02, 00): DEDENT(DEDENT)
[119](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[120](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[120](01, 00)-(01, 08): INDENT(INDENT) '        '
[120](01, 08)-(01, 15): NAME(NAME) 'counter'
[120](01, 16)-(01, 17): EQUAL(OP) '='
[120](01, 18)-(01, 25): NAME(NAME) 'counter'
[120](01, 25)-(01, 26): PLUS(OP) '+'
[120](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[120](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[120](02, 00)-(02, 00): DEDENT(DEDENT)
[120](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[121](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[121](01, 00)-(01, 05): NAME(NAME) 'print'
[121](01, 06)-(01, 07): LPAR(OP) '('
[121](01, 07)-(01, 11): STRING(STRING) '"p:"'
[121](01, 11)-(01, 12): COMMA(OP) ','
[121](01, 13)-(01, 20): NAME(NAME) 'counter'
[121](01, 20)-(01, 21): RPAR(OP) ')'
[121](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[121](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[122](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[122](01, 00)-(01, 01): NL(NL) '\n'
[122](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[123](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[123](01, 00)-(01, 07): NAME(NAME) 'counter'
[123](01, 08)-(01, 09): EQUAL(OP) '='
[123](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[123](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[123](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[124](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[124](01, 00)-(01, 03): NAME(NAME) 'for'
[124](01, 04)-(01, 05): NAME(NAME) 'i'
[124](01, 06)-(01, 08): NAME(NAME) 'in'
[124](01, 09)-(01, 14): NAME(NAME) 'range'
[124](01, 14)-(01, 15): LPAR(OP) '('
[124](01, 15)-(01, 18): NAME(NAME) 'len'
[124](01, 18)-(01, 19): LPAR(OP) '('
[124](01, 19)-(01, 20): NAME(NAME) 'x'
[124](01, 20)-(01, 21): RPAR(OP) ')'
[124](01, 21)-(01, 22): RPAR(OP) ')'
[124](01, 22)-(01, 23): COLON(OP) ':'
[124](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[124](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[125](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[125](01, 00)-(01, 04): INDENT(INDENT) '    '
[125](01, 04)-(01, 06): NAME(NAME) 'if'
[125](01, 07)-(01, 08): NAME(NAME) 'x'
[125](01, 08)-(01, 09): LSQB(OP) '['
[125](01, 09)-(01, 10): NAME(NAME) 'i'
[125](01, 10)-(01, 11): RSQB(OP) ']'
[125](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[125](01, 14)-(01, 17): STRING(STRING) '"q"'
[125](01, 17)-(01, 18): COLON(OP) ':'
[125](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[125](02, 00)-(02, 00): DEDENT(DEDENT)
[125](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[126](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[126](01, 00)-(01, 08): INDENT(INDENT) '        '
[126](01, 08)-(01, 16): NAME(NAME) 'continue'
[126](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[126](02, 00)-(02, 00): DEDENT(DEDENT)
[126](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[127](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[127](01, 00)-(01, 04): INDENT(INDENT) '    '
[127](01, 04)-(01, 08): NAME(NAME) 'else'
[127](01, 08)-(01, 09): COLON(OP) ':'
[127](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[127](02, 00)-(02, 00): DEDENT(DEDENT)
[127](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[128](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[128](01, 00)-(01, 08): INDENT(INDENT) '        '
[128](01, 08)-(01, 15): NAME(NAME) 'counter'
[128](01, 16)-(01, 17): EQUAL(OP) '='
[128](01, 18)-(01, 25): NAME(NAME) 'counter'
[128](01, 25)-(01, 26): PLUS(OP) '+'
[128](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[128](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[128](02, 00)-(02, 00): DEDENT(DEDENT)
[128](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[129](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[129](01, 00)-(01, 05): NAME(NAME) 'print'
[129](01, 06)-(01, 07): LPAR(OP) '('
[129](01, 07)-(01, 11): STRING(STRING) '"q:"'
[129](01, 11)-(01, 12): COMMA(OP) ','
[129](01, 13)-(01, 20): NAME(NAME) 'counter'
[129](01, 20)-(01, 21): RPAR(OP) ')'
[129](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[129](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[130](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[130](01, 00)-(01, 01): NL(NL) '\n'
[130](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[131](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[131](01, 00)-(01, 07): NAME(NAME) 'counter'
[131](01, 08)-(01, 09): EQUAL(OP) '='
[131](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[131](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[131](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[132](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[132](01, 00)-(01, 03): NAME(NAME) 'for'
[132](01, 04)-(01, 05): NAME(NAME) 'i'
[132](01, 06)-(01, 08): NAME(NAME) 'in'
[132](01, 09)-(01, 14): NAME(NAME) 'range'
[132](01, 14)-(01, 15): LPAR(OP) '('
[132](01, 15)-(01, 18): NAME(NAME) 'len'
[132](01, 18)-(01, 19): LPAR(OP) '('
[132](01, 19)-(01, 20): NAME(NAME) 'x'
[132](01, 20)-(01, 21): RPAR(OP) ')'
[132](01, 21)-(01, 22): RPAR(OP) ')'
[132](01, 22)-(01, 23): COLON(OP) ':'
[132](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[132](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[133](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[133](01, 00)-(01, 04): INDENT(INDENT) '    '
[133](01, 04)-(01, 06): NAME(NAME) 'if'
[133](01, 07)-(01, 08): NAME(NAME) 'x'
[133](01, 08)-(01, 09): LSQB(OP) '['
[133](01, 09)-(01, 10): NAME(NAME) 'i'
[133](01, 10)-(01, 11): RSQB(OP) ']'
[133](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[133](01, 14)-(01, 17): STRING(STRING) '"r"'
[133](01, 17)-(01, 18): COLON(OP) ':'
[133](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[133](02, 00)-(02, 00): DEDENT(DEDENT)
[133](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[134](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[134](01, 00)-(01, 08): INDENT(INDENT) '        '
[134](01, 08)-(01, 16): NAME(NAME) 'continue'
[134](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[134](02, 00)-(02, 00): DEDENT(DEDENT)
[134](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[135](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[135](01, 00)-(01, 04): INDENT(INDENT) '    '
[135](01, 04)-(01, 08): NAME(NAME) 'else'
[135](01, 08)-(01, 09): COLON(OP) ':'
[135](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[135](02, 00)-(02, 00): DEDENT(DEDENT)
[135](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[136](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[136](01, 00)-(01, 08): INDENT(INDENT) '        '
[136](01, 08)-(01, 15): NAME(NAME) 'counter'
[136](01, 16)-(01, 17): EQUAL(OP) '='
[136](01, 18)-(01, 25): NAME(NAME) 'counter'
[136](01, 25)-(01, 26): PLUS(OP) '+'
[136](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[136](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[136](02, 00)-(02, 00): DEDENT(DEDENT)
[136](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[137](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[137](01, 00)-(01, 05): NAME(NAME) 'print'
[137](01, 06)-(01, 07): LPAR(OP) '('
[137](01, 07)-(01, 11): STRING(STRING) '"r:"'
[137](01, 11)-(01, 12): COMMA(OP) ','
[137](01, 13)-(01, 20): NAME(NAME) 'counter'
[137](01, 20)-(01, 21): RPAR(OP) ')'
[137](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[137](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[138](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[138](01, 00)-(01, 01): NL(NL) '\n'
[138](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[139](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[139](01, 00)-(01, 07): NAME(NAME) 'counter'
[139](01, 08)-(01, 09): EQUAL(OP) '='
[139](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[139](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[139](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[140](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[140](01, 00)-(01, 03): NAME(NAME) 'for'
[140](01, 04)-(01, 05): NAME(NAME) 'i'
[140](01, 06)-(01, 08): NAME(NAME) 'in'
[140](01, 09)-(01, 14): NAME(NAME) 'range'
[140](01, 14)-(01, 15): LPAR(OP) '('
[140](01, 15)-(01, 18): NAME(NAME) 'len'
[140](01, 18)-(01, 19): LPAR(OP) '('
[140](01, 19)-(01, 20): NAME(NAME) 'x'
[140](01, 20)-(01, 21): RPAR(OP) ')'
[140](01, 21)-(01, 22): RPAR(OP) ')'
[140](01, 22)-(01, 23): COLON(OP) ':'
[140](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[140](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[141](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[141](01, 00)-(01, 04): INDENT(INDENT) '    '
[141](01, 04)-(01, 06): NAME(NAME) 'if'
[141](01, 07)-(01, 08): NAME(NAME) 'x'
[141](01, 08)-(01, 09): LSQB(OP) '['
[141](01, 09)-(01, 10): NAME(NAME) 'i'
[141](01, 10)-(01, 11): RSQB(OP) ']'
[141](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[141](01, 14)-(01, 17): STRING(STRING) '"s"'
[141](01, 17)-(01, 18): COLON(OP) ':'
[141](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[141](02, 00)-(02, 00): DEDENT(DEDENT)
[141](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[142](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[142](01, 00)-(01, 08): INDENT(INDENT) '        '
[142](01, 08)-(01, 16): NAME(NAME) 'continue'
[142](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[142](02, 00)-(02, 00): DEDENT(DEDENT)
[142](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[143](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[143](01, 00)-(01, 04): INDENT(INDENT) '    '
[143](01, 04)-(01, 08): NAME(NAME) 'else'
[143](01, 08)-(01, 09): COLON(OP) ':'
[143](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[143](02, 00)-(02, 00): DEDENT(DEDENT)
[143](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[144](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[144](01, 00)-(01, 08): INDENT(INDENT) '        '
[144](01, 08)-(01, 15): NAME(NAME) 'counter'
[144](01, 16)-(01, 17): EQUAL(OP) '='
[144](01, 18)-(01, 25): NAME(NAME) 'counter'
[144](01, 25)-(01, 26): PLUS(OP) '+'
[144](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[144](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[144](02, 00)-(02, 00): DEDENT(DEDENT)
[144](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[145](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[145](01, 00)-(01, 05): NAME(NAME) 'print'
[145](01, 06)-(01, 07): LPAR(OP) '('
[145](01, 07)-(01, 11): STRING(STRING) '"s:"'
[145](01, 11)-(01, 12): COMMA(OP) ','
[145](01, 13)-(01, 20): NAME(NAME) 'counter'
[145](01, 20)-(01, 21): RPAR(OP) ')'
[145](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[145](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[146](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[146](01, 00)-(01, 01): NL(NL) '\n'
[146](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[147](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[147](01, 00)-(01, 07): NAME(NAME) 'counter'
[147](01, 08)-(01, 09): EQUAL(OP) '='
[147](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[147](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[147](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[148](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[148](01, 00)-(01, 03): NAME(NAME) 'for'
[148](01, 04)-(01, 05): NAME(NAME) 'i'
[148](01, 06)-(01, 08): NAME(NAME) 'in'
[148](01, 09)-(01, 14): NAME(NAME) 'range'
[148](01, 14)-(01, 15): LPAR(OP) '('
[148](01, 15)-(01, 18): NAME(NAME) 'len'
[148](01, 18)-(01, 19): LPAR(OP) '('
[148](01, 19)-(01, 20): NAME(NAME) 'x'
[148](01, 20)-(01, 21): RPAR(OP) ')'
[148](01, 21)-(01, 22): RPAR(OP) ')'
[148](01, 22)-(01, 23): COLON(OP) ':'
[148](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[148](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[149](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[149](01, 00)-(01, 04): INDENT(INDENT) '    '
[149](01, 04)-(01, 06): NAME(NAME) 'if'
[149](01, 07)-(01, 08): NAME(NAME) 'x'
[149](01, 08)-(01, 09): LSQB(OP) '['
[149](01, 09)-(01, 10): NAME(NAME) 'i'
[149](01, 10)-(01, 11): RSQB(OP) ']'
[149](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[149](01, 14)-(01, 17): STRING(STRING) '"t"'
[149](01, 17)-(01, 18): COLON(OP) ':'
[149](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[149](02, 00)-(02, 00): DEDENT(DEDENT)
[149](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[150](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[150](01, 00)-(01, 08): INDENT(INDENT) '        '
[150](01, 08)-(01, 16): NAME(NAME) 'continue'
[150](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[150](02, 00)-(02, 00): DEDENT(DEDENT)
[150](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[151](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[151](01, 00)-(01, 04): INDENT(INDENT) '    '
[151](01, 04)-(01, 08): NAME(NAME) 'else'
[151](01, 08)-(01, 09): COLON(OP) ':'
[151](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[151](02, 00)-(02, 00): DEDENT(DEDENT)
[151](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[152](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[152](01, 00)-(01, 08): INDENT(INDENT) '        '
[152](01, 08)-(01, 15): NAME(NAME) 'counter'
[152](01, 16)-(01, 17): EQUAL(OP) '='
[152](01, 18)-(01, 25): NAME(NAME) 'counter'
[152](01, 25)-(01, 26): PLUS(OP) '+'
[152](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[152](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[152](02, 00)-(02, 00): DEDENT(DEDENT)
[152](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[153](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[153](01, 00)-(01, 05): NAME(NAME) 'print'
[153](01, 06)-(01, 07): LPAR(OP) '('
[153](01, 07)-(01, 11): STRING(STRING) '"t:"'
[153](01, 11)-(01, 12): COMMA(OP) ','
[153](01, 13)-(01, 20): NAME(NAME) 'counter'
[153](01, 20)-(01, 21): RPAR(OP) ')'
[153](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[153](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[154](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[154](01, 00)-(01, 01): NL(NL) '\n'
[154](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[155](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[155](01, 00)-(01, 07): NAME(NAME) 'counter'
[155](01, 08)-(01, 09): EQUAL(OP) '='
[155](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[155](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[155](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[156](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[156](01, 00)-(01, 03): NAME(NAME) 'for'
[156](01, 04)-(01, 05): NAME(NAME) 'i'
[156](01, 06)-(01, 08): NAME(NAME) 'in'
[156](01, 09)-(01, 14): NAME(NAME) 'range'
[156](01, 14)-(01, 15): LPAR(OP) '('
[156](01, 15)-(01, 18): NAME(NAME) 'len'
[156](01, 18)-(01, 19): LPAR(OP) '('
[156](01, 19)-(01, 20): NAME(NAME) 'x'
[156](01, 20)-(01, 21): RPAR(OP) ')'
[156](01, 21)-(01, 22): RPAR(OP) ')'
[156](01, 22)-(01, 23): COLON(OP) ':'
[156](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[156](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[157](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[157](01, 00)-(01, 04): INDENT(INDENT) '    '
[157](01, 04)-(01, 06): NAME(NAME) 'if'
[157](01, 07)-(01, 08): NAME(NAME) 'x'
[157](01, 08)-(01, 09): LSQB(OP) '['
[157](01, 09)-(01, 10): NAME(NAME) 'i'
[157](01, 10)-(01, 11): RSQB(OP) ']'
[157](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[157](01, 14)-(01, 17): STRING(STRING) '"u"'
[157](01, 17)-(01, 18): COLON(OP) ':'
[157](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[157](02, 00)-(02, 00): DEDENT(DEDENT)
[157](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[158](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[158](01, 00)-(01, 08): INDENT(INDENT) '        '
[158](01, 08)-(01, 16): NAME(NAME) 'continue'
[158](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[158](02, 00)-(02, 00): DEDENT(DEDENT)
[158](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[159](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[159](01, 00)-(01, 04): INDENT(INDENT) '    '
[159](01, 04)-(01, 08): NAME(NAME) 'else'
[159](01, 08)-(01, 09): COLON(OP) ':'
[159](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[159](02, 00)-(02, 00): DEDENT(DEDENT)
[159](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[160](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[160](01, 00)-(01, 08): INDENT(INDENT) '        '
[160](01, 08)-(01, 15): NAME(NAME) 'counter'
[160](01, 16)-(01, 17): EQUAL(OP) '='
[160](01, 18)-(01, 25): NAME(NAME) 'counter'
[160](01, 25)-(01, 26): PLUS(OP) '+'
[160](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[160](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[160](02, 00)-(02, 00): DEDENT(DEDENT)
[160](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[161](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[161](01, 00)-(01, 05): NAME(NAME) 'print'
[161](01, 06)-(01, 07): LPAR(OP) '('
[161](01, 07)-(01, 11): STRING(STRING) '"u:"'
[161](01, 11)-(01, 12): COMMA(OP) ','
[161](01, 13)-(01, 20): NAME(NAME) 'counter'
[161](01, 20)-(01, 21): RPAR(OP) ')'
[161](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[161](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[162](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[162](01, 00)-(01, 01): NL(NL) '\n'
[162](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[163](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[163](01, 00)-(01, 07): NAME(NAME) 'counter'
[163](01, 08)-(01, 09): EQUAL(OP) '='
[163](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[163](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[163](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[164](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[164](01, 00)-(01, 03): NAME(NAME) 'for'
[164](01, 04)-(01, 05): NAME(NAME) 'i'
[164](01, 06)-(01, 08): NAME(NAME) 'in'
[164](01, 09)-(01, 14): NAME(NAME) 'range'
[164](01, 14)-(01, 15): LPAR(OP) '('
[164](01, 15)-(01, 18): NAME(NAME) 'len'
[164](01, 18)-(01, 19): LPAR(OP) '('
[164](01, 19)-(01, 20): NAME(NAME) 'x'
[164](01, 20)-(01, 21): RPAR(OP) ')'
[164](01, 21)-(01, 22): RPAR(OP) ')'
[164](01, 22)-(01, 23): COLON(OP) ':'
[164](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[164](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[165](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[165](01, 00)-(01, 04): INDENT(INDENT) '    '
[165](01, 04)-(01, 06): NAME(NAME) 'if'
[165](01, 07)-(01, 08): NAME(NAME) 'x'
[165](01, 08)-(01, 09): LSQB(OP) '['
[165](01, 09)-(01, 10): NAME(NAME) 'i'
[165](01, 10)-(01, 11): RSQB(OP) ']'
[165](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[165](01, 14)-(01, 17): STRING(STRING) '"v"'
[165](01, 17)-(01, 18): COLON(OP) ':'
[165](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[165](02, 00)-(02, 00): DEDENT(DEDENT)
[165](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[166](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[166](01, 00)-(01, 08): INDENT(INDENT) '        '
[166](01, 08)-(01, 16): NAME(NAME) 'continue'
[166](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[166](02, 00)-(02, 00): DEDENT(DEDENT)
[166](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[167](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[167](01, 00)-(01, 04): INDENT(INDENT) '    '
[167](01, 04)-(01, 08): NAME(NAME) 'else'
[167](01, 08)-(01, 09): COLON(OP) ':'
[167](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[167](02, 00)-(02, 00): DEDENT(DEDENT)
[167](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[168](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[168](01, 00)-(01, 08): INDENT(INDENT) '        '
[168](01, 08)-(01, 15): NAME(NAME) 'counter'
[168](01, 16)-(01, 17): EQUAL(OP) '='
[168](01, 18)-(01, 25): NAME(NAME) 'counter'
[168](01, 25)-(01, 26): PLUS(OP) '+'
[168](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[168](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[168](02, 00)-(02, 00): DEDENT(DEDENT)
[168](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[169](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[169](01, 00)-(01, 05): NAME(NAME) 'print'
[169](01, 06)-(01, 07): LPAR(OP) '('
[169](01, 07)-(01, 11): STRING(STRING) '"v:"'
[169](01, 11)-(01, 12): COMMA(OP) ','
[169](01, 13)-(01, 20): NAME(NAME) 'counter'
[169](01, 20)-(01, 21): RPAR(OP) ')'
[169](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[169](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[170](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[170](01, 00)-(01, 01): NL(NL) '\n'
[170](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[171](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[171](01, 00)-(01, 07): NAME(NAME) 'counter'
[171](01, 08)-(01, 09): EQUAL(OP) '='
[171](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[171](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[171](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[172](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[172](01, 00)-(01, 03): NAME(NAME) 'for'
[172](01, 04)-(01, 05): NAME(NAME) 'i'
[172](01, 06)-(01, 08): NAME(NAME) 'in'
[172](01, 09)-(01, 14): NAME(NAME) 'range'
[172](01, 14)-(01, 15): LPAR(OP) '('
[172](01, 15)-(01, 18): NAME(NAME) 'len'
[172](01, 18)-(01, 19): LPAR(OP) '('
[172](01, 19)-(01, 20): NAME(NAME) 'x'
[172](01, 20)-(01, 21): RPAR(OP) ')'
[172](01, 21)-(01, 22): RPAR(OP) ')'
[172](01, 22)-(01, 23): COLON(OP) ':'
[172](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[172](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[173](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[173](01, 00)-(01, 04): INDENT(INDENT) '    '
[173](01, 04)-(01, 06): NAME(NAME) 'if'
[173](01, 07)-(01, 08): NAME(NAME) 'x'
[173](01, 08)-(01, 09): LSQB(OP) '['
[173](01, 09)-(01, 10): NAME(NAME) 'i'
[173](01, 10)-(01, 11): RSQB(OP) ']'
[173](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[173](01, 14)-(01, 17): STRING(STRING) '"w"'
[173](01, 17)-(01, 18): COLON(OP) ':'
[173](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[173](02, 00)-(02, 00): DEDENT(DEDENT)
[173](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[174](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[174](01, 00)-(01, 08): INDENT(INDENT) '        '
[174](01, 08)-(01, 16): NAME(NAME) 'continue'
[174](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[174](02, 00)-(02, 00): DEDENT(DEDENT)
[174](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[175](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[175](01, 00)-(01, 04): INDENT(INDENT) '    '
[175](01, 04)-(01, 08): NAME(NAME) 'else'
[175](01, 08)-(01, 09): COLON(OP) ':'
[175](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[175](02, 00)-(02, 00): DEDENT(DEDENT)
[175](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[176](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[176](01, 00)-(01, 08): INDENT(INDENT) '        '
[176](01, 08)-(01, 15): NAME(NAME) 'counter'
[176](01, 16)-(01, 17): EQUAL(OP) '='
[176](01, 18)-(01, 25): NAME(NAME) 'counter'
[176](01, 25)-(01, 26): PLUS(OP) '+'
[176](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[176](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[176](02, 00)-(02, 00): DEDENT(DEDENT)
[176](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[177](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[177](01, 00)-(01, 05): NAME(NAME) 'print'
[177](01, 06)-(01, 07): LPAR(OP) '('
[177](01, 07)-(01, 11): STRING(STRING) '"w:"'
[177](01, 11)-(01, 12): COMMA(OP) ','
[177](01, 13)-(01, 20): NAME(NAME) 'counter'
[177](01, 20)-(01, 21): RPAR(OP) ')'
[177](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[177](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[178](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[178](01, 00)-(01, 01): NL(NL) '\n'
[178](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[179](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[179](01, 00)-(01, 07): NAME(NAME) 'counter'
[179](01, 08)-(01, 09): EQUAL(OP) '='
[179](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[179](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[179](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[180](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[180](01, 00)-(01, 03): NAME(NAME) 'for'
[180](01, 04)-(01, 05): NAME(NAME) 'i'
[180](01, 06)-(01, 08): NAME(NAME) 'in'
[180](01, 09)-(01, 14): NAME(NAME) 'range'
[180](01, 14)-(01, 15): LPAR(OP) '('
[180](01, 15)-(01, 18): NAME(NAME) 'len'
[180](01, 18)-(01, 19): LPAR(OP) '('
[180](01, 19)-(01, 20): NAME(NAME) 'x'
[180](01, 20)-(01, 21): RPAR(OP) ')'
[180](01, 21)-(01, 22): RPAR(OP) ')'
[180](01, 22)-(01, 23): COLON(OP) ':'
[180](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[180](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[181](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[181](01, 00)-(01, 04): INDENT(INDENT) '    '
[181](01, 04)-(01, 06): NAME(NAME) 'if'
[181](01, 07)-(01, 08): NAME(NAME) 'x'
[181](01, 08)-(01, 09): LSQB(OP) '['
[181](01, 09)-(01, 10): NAME(NAME) 'i'
[181](01, 10)-(01, 11): RSQB(OP) ']'
[181](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[181](01, 14)-(01, 17): STRING(STRING) '"x"'
[181](01, 17)-(01, 18): COLON(OP) ':'
[181](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[181](02, 00)-(02, 00): DEDENT(DEDENT)
[181](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[182](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[182](01, 00)-(01, 08): INDENT(INDENT) '        '
[182](01, 08)-(01, 16): NAME(NAME) 'continue'
[182](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[182](02, 00)-(02, 00): DEDENT(DEDENT)
[182](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[183](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[183](01, 00)-(01, 04): INDENT(INDENT) '    '
[183](01, 04)-(01, 08): NAME(NAME) 'else'
[183](01, 08)-(01, 09): COLON(OP) ':'
[183](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[183](02, 00)-(02, 00): DEDENT(DEDENT)
[183](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[184](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[184](01, 00)-(01, 08): INDENT(INDENT) '        '
[184](01, 08)-(01, 15): NAME(NAME) 'counter'
[184](01, 16)-(01, 17): EQUAL(OP) '='
[184](01, 18)-(01, 25): NAME(NAME) 'counter'
[184](01, 25)-(01, 26): PLUS(OP) '+'
[184](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[184](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[184](02, 00)-(02, 00): DEDENT(DEDENT)
[184](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[185](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[185](01, 00)-(01, 05): NAME(NAME) 'print'
[185](01, 06)-(01, 07): LPAR(OP) '('
[185](01, 07)-(01, 11): STRING(STRING) '"x:"'
[185](01, 11)-(01, 12): COMMA(OP) ','
[185](01, 13)-(01, 20): NAME(NAME) 'counter'
[185](01, 20)-(01, 21): RPAR(OP) ')'
[185](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[185](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[186](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[186](01, 00)-(01, 01): NL(NL) '\n'
[186](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[187](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[187](01, 00)-(01, 07): NAME(NAME) 'counter'
[187](01, 08)-(01, 09): EQUAL(OP) '='
[187](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[187](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[187](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[188](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[188](01, 00)-(01, 03): NAME(NAME) 'for'
[188](01, 04)-(01, 05): NAME(NAME) 'i'
[188](01, 06)-(01, 08): NAME(NAME) 'in'
[188](01, 09)-(01, 14): NAME(NAME) 'range'
[188](01, 14)-(01, 15): LPAR(OP) '('
[188](01, 15)-(01, 18): NAME(NAME) 'len'
[188](01, 18)-(01, 19): LPAR(OP) '('
[188](01, 19)-(01, 20): NAME(NAME) 'x'
[188](01, 20)-(01, 21): RPAR(OP) ')'
[188](01, 21)-(01, 22): RPAR(OP) ')'
[188](01, 22)-(01, 23): COLON(OP) ':'
[188](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[188](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[189](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[189](01, 00)-(01, 04): INDENT(INDENT) '    '
[189](01, 04)-(01, 06): NAME(NAME) 'if'
[189](01, 07)-(01, 08): NAME(NAME) 'x'
[189](01, 08)-(01, 09): LSQB(OP) '['
[189](01, 09)-(01, 10): NAME(NAME) 'i'
[189](01, 10)-(01, 11): RSQB(OP) ']'
[189](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[189](01, 14)-(01, 17): STRING(STRING) '"y"'
[189](01, 17)-(01, 18): COLON(OP) ':'
[189](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[189](02, 00)-(02, 00): DEDENT(DEDENT)
[189](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[190](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[190](01, 00)-(01, 08): INDENT(INDENT) '        '
[190](01, 08)-(01, 16): NAME(NAME) 'continue'
[190](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[190](02, 00)-(02, 00): DEDENT(DEDENT)
[190](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[191](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[191](01, 00)-(01, 04): INDENT(INDENT) '    '
[191](01, 04)-(01, 08): NAME(NAME) 'else'
[191](01, 08)-(01, 09): COLON(OP) ':'
[191](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[191](02, 00)-(02, 00): DEDENT(DEDENT)
[191](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[192](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[192](01, 00)-(01, 08): INDENT(INDENT) '        '
[192](01, 08)-(01, 15): NAME(NAME) 'counter'
[192](01, 16)-(01, 17): EQUAL(OP) '='
[192](01, 18)-(01, 25): NAME(NAME) 'counter'
[192](01, 25)-(01, 26): PLUS(OP) '+'
[192](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[192](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[192](02, 00)-(02, 00): DEDENT(DEDENT)
[192](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[193](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[193](01, 00)-(01, 05): NAME(NAME) 'print'
[193](01, 06)-(01, 07): LPAR(OP) '('
[193](01, 07)-(01, 11): STRING(STRING) '"y:"'
[193](01, 11)-(01, 12): COMMA(OP) ','
[193](01, 13)-(01, 20): NAME(NAME) 'counter'
[193](01, 20)-(01, 21): RPAR(OP) ')'
[193](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[193](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[194](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[194](01, 00)-(01, 01): NL(NL) '\n'
[194](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[195](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[195](01, 00)-(01, 07): NAME(NAME) 'counter'
[195](01, 08)-(01, 09): EQUAL(OP) '='
[195](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[195](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[195](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[196](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[196](01, 00)-(01, 03): NAME(NAME) 'for'
[196](01, 04)-(01, 05): NAME(NAME) 'i'
[196](01, 06)-(01, 08): NAME(NAME) 'in'
[196](01, 09)-(01, 14): NAME(NAME) 'range'
[196](01, 14)-(01, 15): LPAR(OP) '('
[196](01, 15)-(01, 18): NAME(NAME) 'len'
[196](01, 18)-(01, 19): LPAR(OP) '('
[196](01, 19)-(01, 20): NAME(NAME) 'x'
[196](01, 20)-(01, 21): RPAR(OP) ')'
[196](01, 21)-(01, 22): RPAR(OP) ')'
[196](01, 22)-(01, 23): COLON(OP) ':'
[196](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[196](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[197](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[197](01, 00)-(01, 04): INDENT(INDENT) '    '
[197](01, 04)-(01, 06): NAME(NAME) 'if'
[197](01, 07)-(01, 08): NAME(NAME) 'x'
[197](01, 08)-(01, 09): LSQB(OP) '['
[197](01, 09)-(01, 10): NAME(NAME) 'i'
[197](01, 10)-(01, 11): RSQB(OP) ']'
[197](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[197](01, 14)-(01, 17): STRING(STRING) '"z"'
[197](01, 17)-(01, 18): COLON(OP) ':'
[197](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[197](02, 00)-(02, 00): DEDENT(DEDENT)
[197](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[198](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[198](01, 00)-(01, 08): INDENT(INDENT) '        '
[198](01, 08)-(01, 16): NAME(NAME) 'continue'
[198](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[198](02, 00)-(02, 00): DEDENT(DEDENT)
[198](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[199](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[199](01, 00)-(01, 04): INDENT(INDENT) '    '
[199](01, 04)-(01, 08): NAME(NAME) 'else'
[199](01, 08)-(01, 09): COLON(OP) ':'
[199](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[199](02, 00)-(02, 00): DEDENT(DEDENT)
[199](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[200](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[200](01, 00)-(01, 08): INDENT(INDENT) '        '
[200](01, 08)-(01, 15): NAME(NAME) 'counter'
[200](01, 16)-(01, 17): EQUAL(OP) '='
[200](01, 18)-(01, 25): NAME(NAME) 'counter'
[200](01, 25)-(01, 26): PLUS(OP) '+'
[200](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[200](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[200](02, 00)-(02, 00): DEDENT(DEDENT)
[200](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[201](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[201](01, 00)-(01, 05): NAME(NAME) 'print'
[201](01, 06)-(01, 07): LPAR(OP) '('
[201](01, 07)-(01, 11): STRING(STRING) '"z:"'
[201](01, 11)-(01, 12): COMMA(OP) ','
[201](01, 13)-(01, 20): NAME(NAME) 'counter'
[201](01, 20)-(01, 21): RPAR(OP) ')'
[201](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[201](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[202](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[202](01, 00)-(01, 01): NL(NL) '\n'
[202](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[203](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[203](01, 00)-(01, 01): NL(NL) '\n'
[203](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[204](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[204](01, 00)-(01, 01): NL(NL) '\n'
[204](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

