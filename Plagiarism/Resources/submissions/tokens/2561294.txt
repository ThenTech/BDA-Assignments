[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 13): NAME(NAME) 'is_unique'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 20): NAME(NAME) 'matrix'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): COLON(OP) ':'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 07): NAME(NAME) 'for'
[01](01, 08)-(01, 09): NAME(NAME) 'i'
[01](01, 10)-(01, 12): NAME(NAME) 'in'
[01](01, 13)-(01, 18): NAME(NAME) 'range'
[01](01, 18)-(01, 19): LPAR(OP) '('
[01](01, 19)-(01, 22): NAME(NAME) 'len'
[01](01, 22)-(01, 23): LPAR(OP) '('
[01](01, 23)-(01, 29): NAME(NAME) 'matrix'
[01](01, 29)-(01, 30): RPAR(OP) ')'
[01](01, 30)-(01, 31): RPAR(OP) ')'
[01](01, 31)-(01, 32): COLON(OP) ':'
[01](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 11): NAME(NAME) 'for'
[02](01, 12)-(01, 13): NAME(NAME) 'x'
[02](01, 14)-(01, 16): NAME(NAME) 'in'
[02](01, 17)-(01, 22): NAME(NAME) 'range'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 26): NAME(NAME) 'len'
[02](01, 26)-(01, 27): LPAR(OP) '('
[02](01, 27)-(01, 33): NAME(NAME) 'matrix'
[02](01, 33)-(01, 34): LSQB(OP) '['
[02](01, 34)-(01, 35): NAME(NAME) 'i'
[02](01, 35)-(01, 36): RSQB(OP) ']'
[02](01, 36)-(01, 37): RPAR(OP) ')'
[02](01, 37)-(01, 38): RPAR(OP) ')'
[02](01, 38)-(01, 39): COLON(OP) ':'
[02](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 12): INDENT(INDENT) '            '
[03](01, 12)-(01, 18): NAME(NAME) 'teller'
[03](01, 19)-(01, 20): EQUAL(OP) '='
[03](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[03](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 17): NAME(NAME) 'getal'
[04](01, 18)-(01, 19): EQUAL(OP) '='
[04](01, 20)-(01, 26): NAME(NAME) 'matrix'
[04](01, 26)-(01, 27): LSQB(OP) '['
[04](01, 27)-(01, 28): NAME(NAME) 'i'
[04](01, 28)-(01, 29): RSQB(OP) ']'
[04](01, 29)-(01, 30): LSQB(OP) '['
[04](01, 30)-(01, 31): NAME(NAME) 'x'
[04](01, 31)-(01, 32): RSQB(OP) ']'
[04](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 15): NAME(NAME) 'for'
[05](01, 16)-(01, 17): NAME(NAME) 'y'
[05](01, 18)-(01, 20): NAME(NAME) 'in'
[05](01, 21)-(01, 26): NAME(NAME) 'range'
[05](01, 26)-(01, 27): LPAR(OP) '('
[05](01, 27)-(01, 30): NAME(NAME) 'len'
[05](01, 30)-(01, 31): LPAR(OP) '('
[05](01, 31)-(01, 37): NAME(NAME) 'matrix'
[05](01, 37)-(01, 38): RPAR(OP) ')'
[05](01, 38)-(01, 39): RPAR(OP) ')'
[05](01, 39)-(01, 40): COLON(OP) ':'
[05](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 19): NAME(NAME) 'for'
[06](01, 20)-(01, 21): NAME(NAME) 'z'
[06](01, 22)-(01, 24): NAME(NAME) 'in'
[06](01, 25)-(01, 30): NAME(NAME) 'range'
[06](01, 30)-(01, 31): LPAR(OP) '('
[06](01, 31)-(01, 34): NAME(NAME) 'len'
[06](01, 34)-(01, 35): LPAR(OP) '('
[06](01, 35)-(01, 41): NAME(NAME) 'matrix'
[06](01, 41)-(01, 42): LSQB(OP) '['
[06](01, 42)-(01, 43): NAME(NAME) 'y'
[06](01, 43)-(01, 44): RSQB(OP) ']'
[06](01, 44)-(01, 45): RPAR(OP) ')'
[06](01, 45)-(01, 46): RPAR(OP) ')'
[06](01, 46)-(01, 47): COLON(OP) ':'
[06](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 20): INDENT(INDENT) '                    '
[07](01, 20)-(01, 22): NAME(NAME) 'if'
[07](01, 23)-(01, 29): NAME(NAME) 'matrix'
[07](01, 29)-(01, 30): LSQB(OP) '['
[07](01, 30)-(01, 31): NAME(NAME) 'y'
[07](01, 31)-(01, 32): RSQB(OP) ']'
[07](01, 32)-(01, 33): LSQB(OP) '['
[07](01, 33)-(01, 34): NAME(NAME) 'z'
[07](01, 34)-(01, 35): RSQB(OP) ']'
[07](01, 36)-(01, 38): EQEQUAL(OP) '=='
[07](01, 39)-(01, 44): NAME(NAME) 'getal'
[07](01, 44)-(01, 45): COLON(OP) ':'
[07](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 24): INDENT(INDENT) '                        '
[08](01, 24)-(01, 30): NAME(NAME) 'teller'
[08](01, 31)-(01, 33): PLUSEQUAL(OP) '+='
[08](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[08](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 20): INDENT(INDENT) '                    '
[09](01, 20)-(01, 28): NAME(NAME) 'continue'
[09](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 14): NAME(NAME) 'if'
[10](01, 15)-(01, 21): NAME(NAME) 'teller'
[10](01, 22)-(01, 23): GREATER(OP) '>'
[10](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[10](01, 25)-(01, 26): COLON(OP) ':'
[10](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 22): NAME(NAME) 'return'
[11](01, 23)-(01, 28): NAME(NAME) 'False'
[11](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 16): NAME(NAME) 'else'
[12](01, 16)-(01, 17): COLON(OP) ':'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 24): NAME(NAME) 'continue'
[13](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 10): NAME(NAME) 'return'
[14](01, 11)-(01, 15): NAME(NAME) 'True'
[14](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 03): NAME(NAME) 'def'
[16](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[16](01, 19)-(01, 20): LPAR(OP) '('
[16](01, 20)-(01, 26): NAME(NAME) 'matrix'
[16](01, 26)-(01, 27): RPAR(OP) ')'
[16](01, 27)-(01, 28): COLON(OP) ':'
[16](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 06): NAME(NAME) 'if'
[17](01, 07)-(01, 16): NAME(NAME) 'is_unique'
[17](01, 16)-(01, 17): LPAR(OP) '('
[17](01, 17)-(01, 23): NAME(NAME) 'matrix'
[17](01, 23)-(01, 24): RPAR(OP) ')'
[17](01, 25)-(01, 27): NAME(NAME) 'is'
[17](01, 28)-(01, 33): NAME(NAME) 'False'
[17](01, 33)-(01, 34): COLON(OP) ':'
[17](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 14): NAME(NAME) 'return'
[18](01, 15)-(01, 20): NAME(NAME) 'False'
[18](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 08): NAME(NAME) 'else'
[19](01, 08)-(01, 09): COLON(OP) ':'
[19](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 11): NAME(NAME) 'som'
[20](01, 12)-(01, 13): EQUAL(OP) '='
[20](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[20](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 11): NAME(NAME) 'for'
[21](01, 12)-(01, 13): NAME(NAME) 'i'
[21](01, 14)-(01, 16): NAME(NAME) 'in'
[21](01, 17)-(01, 22): NAME(NAME) 'range'
[21](01, 22)-(01, 23): LPAR(OP) '('
[21](01, 23)-(01, 26): NAME(NAME) 'len'
[21](01, 26)-(01, 27): LPAR(OP) '('
[21](01, 27)-(01, 33): NAME(NAME) 'matrix'
[21](01, 33)-(01, 34): RPAR(OP) ')'
[21](01, 34)-(01, 35): RPAR(OP) ')'
[21](01, 35)-(01, 36): COLON(OP) ':'
[21](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 15): NAME(NAME) 'som'
[22](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[22](01, 19)-(01, 25): NAME(NAME) 'matrix'
[22](01, 25)-(01, 26): LSQB(OP) '['
[22](01, 26)-(01, 27): NAME(NAME) 'i'
[22](01, 27)-(01, 28): RSQB(OP) ']'
[22](01, 28)-(01, 29): LSQB(OP) '['
[22](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[22](01, 30)-(01, 31): RSQB(OP) ']'
[22](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 08)-(01, 20): COMMENT(COMMENT) '#horizontaal'
[23](01, 20)-(01, 21): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 11): NAME(NAME) 'for'
[24](01, 12)-(01, 13): NAME(NAME) 'i'
[24](01, 14)-(01, 16): NAME(NAME) 'in'
[24](01, 17)-(01, 22): NAME(NAME) 'range'
[24](01, 22)-(01, 23): LPAR(OP) '('
[24](01, 23)-(01, 26): NAME(NAME) 'len'
[24](01, 26)-(01, 27): LPAR(OP) '('
[24](01, 27)-(01, 33): NAME(NAME) 'matrix'
[24](01, 33)-(01, 34): RPAR(OP) ')'
[24](01, 34)-(01, 35): RPAR(OP) ')'
[24](01, 35)-(01, 36): COLON(OP) ':'
[24](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 18): NAME(NAME) 'teller'
[25](01, 19)-(01, 20): EQUAL(OP) '='
[25](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[25](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 12): INDENT(INDENT) '            '
[26](01, 12)-(01, 16): NAME(NAME) 'som2'
[26](01, 17)-(01, 18): EQUAL(OP) '='
[26](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[26](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 12): INDENT(INDENT) '            '
[27](01, 12)-(01, 17): NAME(NAME) 'while'
[27](01, 18)-(01, 24): NAME(NAME) 'teller'
[27](01, 25)-(01, 26): LESS(OP) '<'
[27](01, 27)-(01, 30): NAME(NAME) 'len'
[27](01, 30)-(01, 31): LPAR(OP) '('
[27](01, 31)-(01, 37): NAME(NAME) 'matrix'
[27](01, 37)-(01, 38): LSQB(OP) '['
[27](01, 38)-(01, 39): NUMBER(NUMBER) '0'
[27](01, 39)-(01, 40): RSQB(OP) ']'
[27](01, 40)-(01, 41): RPAR(OP) ')'
[27](01, 41)-(01, 42): COLON(OP) ':'
[27](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 16): INDENT(INDENT) '                '
[28](01, 16)-(01, 20): NAME(NAME) 'som2'
[28](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[28](01, 24)-(01, 30): NAME(NAME) 'matrix'
[28](01, 30)-(01, 31): LSQB(OP) '['
[28](01, 31)-(01, 32): NAME(NAME) 'i'
[28](01, 32)-(01, 33): RSQB(OP) ']'
[28](01, 33)-(01, 34): LSQB(OP) '['
[28](01, 34)-(01, 40): NAME(NAME) 'teller'
[28](01, 40)-(01, 41): RSQB(OP) ']'
[28](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 16): INDENT(INDENT) '                '
[29](01, 16)-(01, 22): NAME(NAME) 'teller'
[29](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[29](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[29](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 14): NAME(NAME) 'if'
[30](01, 15)-(01, 18): NAME(NAME) 'som'
[30](01, 19)-(01, 21): NOTEQUAL(OP) '!='
[30](01, 22)-(01, 26): NAME(NAME) 'som2'
[30](01, 26)-(01, 27): COLON(OP) ':'
[30](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 16): INDENT(INDENT) '                '
[31](01, 16)-(01, 22): NAME(NAME) 'return'
[31](01, 23)-(01, 28): NAME(NAME) 'False'
[31](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 16): NAME(NAME) 'else'
[32](01, 16)-(01, 17): COLON(OP) ':'
[32](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 16): INDENT(INDENT) '                '
[33](01, 16)-(01, 24): NAME(NAME) 'continue'
[33](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 08)-(01, 18): COMMENT(COMMENT) '#verticaal'
[34](01, 18)-(01, 19): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 14): NAME(NAME) 'teller'
[35](01, 15)-(01, 16): EQUAL(OP) '='
[35](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[35](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 08): INDENT(INDENT) '        '
[36](01, 08)-(01, 13): NAME(NAME) 'while'
[36](01, 14)-(01, 20): NAME(NAME) 'teller'
[36](01, 21)-(01, 22): LESS(OP) '<'
[36](01, 23)-(01, 26): NAME(NAME) 'len'
[36](01, 26)-(01, 27): LPAR(OP) '('
[36](01, 27)-(01, 33): NAME(NAME) 'matrix'
[36](01, 33)-(01, 34): LSQB(OP) '['
[36](01, 34)-(01, 35): NUMBER(NUMBER) '0'
[36](01, 35)-(01, 36): RSQB(OP) ']'
[36](01, 36)-(01, 37): RPAR(OP) ')'
[36](01, 37)-(01, 38): COLON(OP) ':'
[36](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 12): INDENT(INDENT) '            '
[37](01, 12)-(01, 16): NAME(NAME) 'som2'
[37](01, 17)-(01, 18): EQUAL(OP) '='
[37](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[37](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 12): INDENT(INDENT) '            '
[38](01, 12)-(01, 15): NAME(NAME) 'for'
[38](01, 16)-(01, 17): NAME(NAME) 'i'
[38](01, 18)-(01, 20): NAME(NAME) 'in'
[38](01, 21)-(01, 26): NAME(NAME) 'range'
[38](01, 26)-(01, 27): LPAR(OP) '('
[38](01, 27)-(01, 30): NAME(NAME) 'len'
[38](01, 30)-(01, 31): LPAR(OP) '('
[38](01, 31)-(01, 37): NAME(NAME) 'matrix'
[38](01, 37)-(01, 38): RPAR(OP) ')'
[38](01, 38)-(01, 39): RPAR(OP) ')'
[38](01, 39)-(01, 40): COLON(OP) ':'
[38](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 16): INDENT(INDENT) '                '
[39](01, 16)-(01, 20): NAME(NAME) 'som2'
[39](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[39](01, 24)-(01, 30): NAME(NAME) 'matrix'
[39](01, 30)-(01, 31): LSQB(OP) '['
[39](01, 31)-(01, 32): NAME(NAME) 'i'
[39](01, 32)-(01, 33): RSQB(OP) ']'
[39](01, 33)-(01, 34): LSQB(OP) '['
[39](01, 34)-(01, 40): NAME(NAME) 'teller'
[39](01, 40)-(01, 41): RSQB(OP) ']'
[39](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 12): INDENT(INDENT) '            '
[40](01, 12)-(01, 14): NAME(NAME) 'if'
[40](01, 15)-(01, 18): NAME(NAME) 'som'
[40](01, 19)-(01, 21): NOTEQUAL(OP) '!='
[40](01, 22)-(01, 26): NAME(NAME) 'som2'
[40](01, 26)-(01, 27): COLON(OP) ':'
[40](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 16): INDENT(INDENT) '                '
[41](01, 16)-(01, 22): NAME(NAME) 'return'
[41](01, 23)-(01, 28): NAME(NAME) 'False'
[41](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 12): INDENT(INDENT) '            '
[42](01, 12)-(01, 16): NAME(NAME) 'else'
[42](01, 16)-(01, 17): COLON(OP) ':'
[42](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 16): INDENT(INDENT) '                '
[43](01, 16)-(01, 22): NAME(NAME) 'teller'
[43](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[43](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[43](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 16): INDENT(INDENT) '                '
[44](01, 16)-(01, 24): NAME(NAME) 'continue'
[44](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 08): INDENT(INDENT) '        '
[45](01, 08)-(01, 14): NAME(NAME) 'return'
[45](01, 15)-(01, 19): NAME(NAME) 'True'
[45](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

