[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 17): NAME(NAME) 'string'
[00](01, 17)-(01, 18): COMMA(OP) ','
[00](01, 19)-(01, 20): NAME(NAME) 'n'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): COLON(OP) ':'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 09): NAME(NAME) 'while'
[01](01, 10)-(01, 11): NAME(NAME) 'n'
[01](01, 12)-(01, 13): GREATER(OP) '>'
[01](01, 14)-(01, 16): NUMBER(NUMBER) '26'
[01](01, 16)-(01, 17): COLON(OP) ':'
[01](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 09): NAME(NAME) 'n'
[02](01, 10)-(01, 12): MINEQUAL(OP) '-='
[02](01, 13)-(01, 15): NUMBER(NUMBER) '26'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'while'
[03](01, 10)-(01, 11): NAME(NAME) 'n'
[03](01, 12)-(01, 13): LESS(OP) '<'
[03](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[03](01, 15)-(01, 16): COLON(OP) ':'
[03](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 09): NAME(NAME) 'n'
[04](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[04](01, 13)-(01, 15): NUMBER(NUMBER) '26'
[04](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 10): NAME(NAME) 'output'
[06](01, 11)-(01, 12): EQUAL(OP) '='
[06](01, 13)-(01, 15): STRING(STRING) '""'
[06](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 07): NAME(NAME) 'for'
[07](01, 08)-(01, 09): NAME(NAME) 'i'
[07](01, 10)-(01, 12): NAME(NAME) 'in'
[07](01, 13)-(01, 19): NAME(NAME) 'string'
[07](01, 19)-(01, 20): COLON(OP) ':'
[07](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 12): NAME(NAME) 'i'
[08](01, 12)-(01, 13): DOT(OP) '.'
[08](01, 13)-(01, 20): NAME(NAME) 'isalpha'
[08](01, 20)-(01, 21): LPAR(OP) '('
[08](01, 21)-(01, 22): RPAR(OP) ')'
[08](01, 22)-(01, 23): COLON(OP) ':'
[08](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 18): NAME(NAME) 'buffer'
[09](01, 19)-(01, 20): EQUAL(OP) '='
[09](01, 21)-(01, 24): NAME(NAME) 'ord'
[09](01, 24)-(01, 25): LPAR(OP) '('
[09](01, 25)-(01, 26): NAME(NAME) 'i'
[09](01, 26)-(01, 27): RPAR(OP) ')'
[09](01, 28)-(01, 29): PLUS(OP) '+'
[09](01, 30)-(01, 31): NAME(NAME) 'n'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 14): NAME(NAME) 'if'
[10](01, 15)-(01, 21): NAME(NAME) 'buffer'
[10](01, 22)-(01, 23): GREATER(OP) '>'
[10](01, 24)-(01, 25): LPAR(OP) '('
[10](01, 25)-(01, 28): NAME(NAME) 'ord'
[10](01, 28)-(01, 29): LPAR(OP) '('
[10](01, 29)-(01, 32): STRING(STRING) "'z'"
[10](01, 32)-(01, 33): RPAR(OP) ')'
[10](01, 33)-(01, 34): RPAR(OP) ')'
[10](01, 34)-(01, 35): COLON(OP) ':'
[10](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 22): NAME(NAME) 'buffer'
[11](01, 23)-(01, 25): MINEQUAL(OP) '-='
[11](01, 26)-(01, 28): NUMBER(NUMBER) '26'
[11](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 14): NAME(NAME) 'if'
[12](01, 15)-(01, 21): NAME(NAME) 'buffer'
[12](01, 22)-(01, 23): GREATER(OP) '>'
[12](01, 24)-(01, 27): NAME(NAME) 'ord'
[12](01, 27)-(01, 28): LPAR(OP) '('
[12](01, 28)-(01, 31): STRING(STRING) "'Z'"
[12](01, 31)-(01, 32): RPAR(OP) ')'
[12](01, 33)-(01, 36): NAME(NAME) 'and'
[12](01, 37)-(01, 43): NAME(NAME) 'buffer'
[12](01, 44)-(01, 45): LESS(OP) '<'
[12](01, 46)-(01, 49): NAME(NAME) 'ord'
[12](01, 49)-(01, 50): LPAR(OP) '('
[12](01, 50)-(01, 53): STRING(STRING) "'a'"
[12](01, 53)-(01, 54): RPAR(OP) ')'
[12](01, 54)-(01, 55): COLON(OP) ':'
[12](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 22): NAME(NAME) 'buffer'
[13](01, 23)-(01, 25): MINEQUAL(OP) '-='
[13](01, 26)-(01, 28): NUMBER(NUMBER) '26'
[13](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 18): NAME(NAME) 'output'
[14](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[14](01, 22)-(01, 25): NAME(NAME) 'chr'
[14](01, 25)-(01, 26): LPAR(OP) '('
[14](01, 26)-(01, 32): NAME(NAME) 'buffer'
[14](01, 32)-(01, 33): RPAR(OP) ')'
[14](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 12): NAME(NAME) 'else'
[15](01, 12)-(01, 13): COLON(OP) ':'
[15](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 18): NAME(NAME) 'output'
[16](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[16](01, 22)-(01, 23): NAME(NAME) 'i'
[16](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 10): NAME(NAME) 'return'
[17](01, 11)-(01, 17): NAME(NAME) 'output'
[17](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 03): NAME(NAME) 'def'
[20](01, 04)-(01, 10): NAME(NAME) 'decode'
[20](01, 10)-(01, 11): LPAR(OP) '('
[20](01, 11)-(01, 12): NAME(NAME) 's'
[20](01, 12)-(01, 13): COMMA(OP) ','
[20](01, 14)-(01, 15): NAME(NAME) 'n'
[20](01, 15)-(01, 16): RPAR(OP) ')'
[20](01, 16)-(01, 17): COLON(OP) ':'
[20](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 10): NAME(NAME) 'return'
[21](01, 11)-(01, 17): NAME(NAME) 'encode'
[21](01, 17)-(01, 18): LPAR(OP) '('
[21](01, 18)-(01, 19): NAME(NAME) 's'
[21](01, 19)-(01, 20): COMMA(OP) ','
[21](01, 21)-(01, 22): MINUS(OP) '-'
[21](01, 22)-(01, 23): NAME(NAME) 'n'
[21](01, 23)-(01, 24): RPAR(OP) ')'
[21](01, 24)-(01, 25): NEWLINE(NEWLINE)
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

