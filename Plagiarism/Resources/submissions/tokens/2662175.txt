[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'lengte'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 12): NAME(NAME) 'int'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 18): NAME(NAME) 'input'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 36): STRING(STRING) '"Geef het aantal"'
[00](01, 36)-(01, 37): RPAR(OP) ')'
[00](01, 37)-(01, 38): RPAR(OP) ')'
[00](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): NAME(NAME) 'stam'
[01](01, 05)-(01, 06): EQUAL(OP) '='
[01](01, 07)-(01, 09): STRING(STRING) '""'
[01](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): NAME(NAME) 'letters'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 16): STRING(STRING) '"ACGT"'
[02](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 17): NAME(NAME) 'nieuwe_letter'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 22): NAME(NAME) 'stam'
[03](01, 22)-(01, 23): COMMA(OP) ','
[03](01, 24)-(01, 30): NAME(NAME) 'lengte'
[03](01, 30)-(01, 31): COMMA(OP) ','
[03](01, 32)-(01, 39): NAME(NAME) 'letters'
[03](01, 39)-(01, 40): RPAR(OP) ')'
[03](01, 40)-(01, 41): COLON(OP) ':'
[03](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 13): NAME(NAME) 'lengte'
[04](01, 14)-(01, 16): EQEQUAL(OP) '=='
[04](01, 17)-(01, 20): NAME(NAME) 'len'
[04](01, 20)-(01, 21): LPAR(OP) '('
[04](01, 21)-(01, 25): NAME(NAME) 'stam'
[04](01, 25)-(01, 26): RPAR(OP) ')'
[04](01, 26)-(01, 27): COLON(OP) ':'
[04](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 13): NAME(NAME) 'print'
[05](01, 13)-(01, 14): LPAR(OP) '('
[05](01, 14)-(01, 18): NAME(NAME) 'stam'
[05](01, 18)-(01, 19): RPAR(OP) ')'
[05](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 08): NAME(NAME) 'else'
[06](01, 08)-(01, 09): COLON(OP) ':'
[06](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 11): NAME(NAME) 'for'
[07](01, 12)-(01, 18): NAME(NAME) 'letter'
[07](01, 19)-(01, 21): NAME(NAME) 'in'
[07](01, 22)-(01, 29): NAME(NAME) 'letters'
[07](01, 29)-(01, 30): COLON(OP) ':'
[07](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 25): NAME(NAME) 'nieuwe_letter'
[08](01, 25)-(01, 26): LPAR(OP) '('
[08](01, 26)-(01, 30): NAME(NAME) 'stam'
[08](01, 31)-(01, 32): PLUS(OP) '+'
[08](01, 33)-(01, 39): NAME(NAME) 'letter'
[08](01, 39)-(01, 40): COMMA(OP) ','
[08](01, 41)-(01, 47): NAME(NAME) 'lengte'
[08](01, 47)-(01, 48): COMMA(OP) ','
[08](01, 49)-(01, 56): NAME(NAME) 'letters'
[08](01, 56)-(01, 57): RPAR(OP) ')'
[08](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 13): NAME(NAME) 'nieuwe_letter'
[09](01, 13)-(01, 14): LPAR(OP) '('
[09](01, 14)-(01, 18): NAME(NAME) 'stam'
[09](01, 18)-(01, 19): COMMA(OP) ','
[09](01, 20)-(01, 26): NAME(NAME) 'lengte'
[09](01, 26)-(01, 27): COMMA(OP) ','
[09](01, 28)-(01, 35): NAME(NAME) 'letters'
[09](01, 35)-(01, 36): RPAR(OP) ')'
[09](01, 36)-(01, 37): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

