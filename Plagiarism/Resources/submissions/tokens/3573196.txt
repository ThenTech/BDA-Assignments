[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'def'
[02](01, 04)-(01, 12): NAME(NAME) 'make_sub'
[02](01, 12)-(01, 13): LPAR(OP) '('
[02](01, 13)-(01, 19): NAME(NAME) 'string'
[02](01, 19)-(01, 20): RPAR(OP) ')'
[02](01, 20)-(01, 21): COLON(OP) ':'
[02](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 10): NAME(NAME) 'len'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 17): NAME(NAME) 'string'
[03](01, 17)-(01, 18): RPAR(OP) ')'
[03](01, 19)-(01, 21): LESSEQUAL(OP) '<='
[03](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[03](01, 23)-(01, 24): COLON(OP) ':'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 21): NAME(NAME) 'string'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'print'
[05](01, 09)-(01, 10): LPAR(OP) '('
[05](01, 10)-(01, 18): NAME(NAME) 'make_sub'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 25): NAME(NAME) 'string'
[05](01, 25)-(01, 26): LSQB(OP) '['
[05](01, 26)-(01, 27): NUMBER(NUMBER) '2'
[05](01, 27)-(01, 28): COLON(OP) ':'
[05](01, 28)-(01, 29): RSQB(OP) ']'
[05](01, 29)-(01, 30): RPAR(OP) ')'
[05](01, 30)-(01, 31): RPAR(OP) ')'
[05](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'print'
[06](01, 09)-(01, 10): LPAR(OP) '('
[06](01, 10)-(01, 16): NAME(NAME) 'string'
[06](01, 16)-(01, 17): LSQB(OP) '['
[06](01, 17)-(01, 18): COLON(OP) ':'
[06](01, 18)-(01, 19): NUMBER(NUMBER) '2'
[06](01, 19)-(01, 20): RSQB(OP) ']'
[06](01, 21)-(01, 22): PLUS(OP) '+'
[06](01, 23)-(01, 31): NAME(NAME) 'make_sub'
[06](01, 31)-(01, 32): LPAR(OP) '('
[06](01, 32)-(01, 38): NAME(NAME) 'string'
[06](01, 38)-(01, 39): LSQB(OP) '['
[06](01, 39)-(01, 40): NUMBER(NUMBER) '2'
[06](01, 40)-(01, 41): COLON(OP) ':'
[06](01, 41)-(01, 42): RSQB(OP) ']'
[06](01, 42)-(01, 43): RPAR(OP) ')'
[06](01, 43)-(01, 44): RPAR(OP) ')'
[06](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NAME(NAME) 'x'
[08](01, 02)-(01, 03): EQUAL(OP) '='
[08](01, 04)-(01, 09): NAME(NAME) 'input'
[08](01, 09)-(01, 10): LPAR(OP) '('
[08](01, 10)-(01, 12): STRING(STRING) '""'
[08](01, 12)-(01, 13): RPAR(OP) ')'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): NAME(NAME) 'make_sub'
[10](01, 08)-(01, 09): LPAR(OP) '('
[10](01, 09)-(01, 10): NAME(NAME) 'x'
[10](01, 10)-(01, 11): RPAR(OP) ')'
[10](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

