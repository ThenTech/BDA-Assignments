[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'J'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 07): NAME(NAME) 'int'
[00](01, 07)-(01, 08): LPAR(OP) '('
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 25): STRING(STRING) '"Jaartal: "'
[00](01, 25)-(01, 26): RPAR(OP) ')'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 02): NAME(NAME) 'if'
[02](01, 03)-(01, 04): LPAR(OP) '('
[02](01, 04)-(01, 05): NAME(NAME) 'J'
[02](01, 06)-(01, 07): PERCENT(OP) '%'
[02](01, 08)-(01, 09): NUMBER(NUMBER) '4'
[02](01, 10)-(01, 12): EQEQUAL(OP) '=='
[02](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[02](01, 14)-(01, 15): RPAR(OP) ')'
[02](01, 16)-(01, 19): NAME(NAME) 'and'
[02](01, 20)-(01, 21): LPAR(OP) '('
[02](01, 21)-(01, 22): NAME(NAME) 'J'
[02](01, 23)-(01, 24): PERCENT(OP) '%'
[02](01, 25)-(01, 28): NUMBER(NUMBER) '100'
[02](01, 29)-(01, 31): NOTEQUAL(OP) '!='
[02](01, 32)-(01, 33): NUMBER(NUMBER) '0'
[02](01, 34)-(01, 36): NAME(NAME) 'or'
[02](01, 37)-(01, 38): NAME(NAME) 'J'
[02](01, 39)-(01, 40): PERCENT(OP) '%'
[02](01, 41)-(01, 44): NUMBER(NUMBER) '400'
[02](01, 45)-(01, 47): EQEQUAL(OP) '=='
[02](01, 48)-(01, 49): NUMBER(NUMBER) '0'
[02](01, 49)-(01, 50): RPAR(OP) ')'
[02](01, 50)-(01, 51): COLON(OP) ':'
[02](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'print'
[03](01, 09)-(01, 10): LPAR(OP) '('
[03](01, 10)-(01, 11): NAME(NAME) 'J'
[03](01, 11)-(01, 12): COMMA(OP) ','
[03](01, 13)-(01, 29): STRING(STRING) '"is a leap year"'
[03](01, 29)-(01, 30): RPAR(OP) ')'
[03](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): NAME(NAME) 'else'
[04](01, 04)-(01, 05): COLON(OP) ':'
[04](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'print'
[05](01, 09)-(01, 10): LPAR(OP) '('
[05](01, 10)-(01, 11): NAME(NAME) 'J'
[05](01, 11)-(01, 12): COMMA(OP) ','
[05](01, 13)-(01, 33): STRING(STRING) '"is not a leap year"'
[05](01, 33)-(01, 34): RPAR(OP) ')'
[05](01, 34)-(01, 35): NEWLINE(NEWLINE)
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

