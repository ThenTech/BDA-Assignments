[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 14): NAME(NAME) 'collection'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 19): NAME(NAME) 'list'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 27): NAME(NAME) 'length'
[00](01, 27)-(01, 28): COMMA(OP) ','
[00](01, 29)-(01, 35): NAME(NAME) 'subset'
[00](01, 35)-(01, 36): RPAR(OP) ')'
[00](01, 36)-(01, 37): COLON(OP) ':'
[00](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 10): NAME(NAME) 'len'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 17): NAME(NAME) 'subset'
[01](01, 17)-(01, 18): RPAR(OP) ')'
[01](01, 19)-(01, 21): EQEQUAL(OP) '=='
[01](01, 22)-(01, 23): NUMBER(NUMBER) '2'
[01](01, 23)-(01, 24): STAR(OP) '*'
[01](01, 24)-(01, 30): NAME(NAME) 'length'
[01](01, 30)-(01, 31): COLON(OP) ':'
[01](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 13): NAME(NAME) 'print'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 20): NAME(NAME) 'subset'
[02](01, 20)-(01, 21): LSQB(OP) '['
[02](01, 21)-(01, 22): COLON(OP) ':'
[02](01, 22)-(01, 23): MINUS(OP) '-'
[02](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[02](01, 24)-(01, 25): RSQB(OP) ']'
[02](01, 25)-(01, 26): RPAR(OP) ')'
[02](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'elif'
[03](01, 09)-(01, 12): NAME(NAME) 'len'
[03](01, 12)-(01, 13): LPAR(OP) '('
[03](01, 13)-(01, 17): NAME(NAME) 'list'
[03](01, 17)-(01, 18): RPAR(OP) ')'
[03](01, 19)-(01, 21): NOTEQUAL(OP) '!='
[03](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[03](01, 23)-(01, 24): COLON(OP) ':'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 12): NAME(NAME) 'last'
[04](01, 13)-(01, 14): EQUAL(OP) '='
[04](01, 15)-(01, 18): NAME(NAME) 'str'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 23): NAME(NAME) 'list'
[04](01, 23)-(01, 24): LSQB(OP) '['
[04](01, 24)-(01, 25): MINUS(OP) '-'
[04](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[04](01, 26)-(01, 27): RSQB(OP) ']'
[04](01, 27)-(01, 28): RPAR(OP) ')'
[04](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 12): NAME(NAME) 'rest'
[05](01, 13)-(01, 14): EQUAL(OP) '='
[05](01, 15)-(01, 19): NAME(NAME) 'list'
[05](01, 19)-(01, 20): LSQB(OP) '['
[05](01, 20)-(01, 21): COLON(OP) ':'
[05](01, 21)-(01, 22): MINUS(OP) '-'
[05](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[05](01, 23)-(01, 24): RSQB(OP) ']'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 08)-(01, 19): COMMENT(COMMENT) '# add first'
[06](01, 19)-(01, 20): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 18): NAME(NAME) 'collection'
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 23): NAME(NAME) 'rest'
[07](01, 23)-(01, 24): COMMA(OP) ','
[07](01, 25)-(01, 31): NAME(NAME) 'length'
[07](01, 31)-(01, 32): COMMA(OP) ','
[07](01, 33)-(01, 39): NAME(NAME) 'subset'
[07](01, 40)-(01, 41): PLUS(OP) '+'
[07](01, 42)-(01, 46): NAME(NAME) 'last'
[07](01, 47)-(01, 48): PLUS(OP) '+'
[07](01, 49)-(01, 52): STRING(STRING) '" "'
[07](01, 52)-(01, 53): RPAR(OP) ')'
[07](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 08)-(01, 25): COMMENT(COMMENT) "# don't add first"
[08](01, 25)-(01, 26): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 18): NAME(NAME) 'collection'
[09](01, 18)-(01, 19): LPAR(OP) '('
[09](01, 19)-(01, 23): NAME(NAME) 'rest'
[09](01, 23)-(01, 24): COMMA(OP) ','
[09](01, 25)-(01, 31): NAME(NAME) 'length'
[09](01, 31)-(01, 32): COMMA(OP) ','
[09](01, 33)-(01, 39): NAME(NAME) 'subset'
[09](01, 39)-(01, 40): RPAR(OP) ')'
[09](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NAME(NAME) 'n'
[12](01, 02)-(01, 03): EQUAL(OP) '='
[12](01, 04)-(01, 07): NAME(NAME) 'int'
[12](01, 07)-(01, 08): LPAR(OP) '('
[12](01, 08)-(01, 13): NAME(NAME) 'input'
[12](01, 13)-(01, 14): LPAR(OP) '('
[12](01, 14)-(01, 34): STRING(STRING) '"{1, ... , n} | n: "'
[12](01, 34)-(01, 35): RPAR(OP) ')'
[12](01, 35)-(01, 36): RPAR(OP) ')'
[12](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NAME(NAME) 'm'
[13](01, 02)-(01, 03): EQUAL(OP) '='
[13](01, 04)-(01, 07): NAME(NAME) 'int'
[13](01, 07)-(01, 08): LPAR(OP) '('
[13](01, 08)-(01, 13): NAME(NAME) 'input'
[13](01, 13)-(01, 14): LPAR(OP) '('
[13](01, 14)-(01, 24): STRING(STRING) '"length: "'
[13](01, 24)-(01, 25): RPAR(OP) ')'
[13](01, 25)-(01, 26): RPAR(OP) ')'
[13](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): NAME(NAME) 'list'
[14](01, 05)-(01, 06): EQUAL(OP) '='
[14](01, 07)-(01, 08): LSQB(OP) '['
[14](01, 08)-(01, 09): NAME(NAME) 'i'
[14](01, 10)-(01, 13): NAME(NAME) 'for'
[14](01, 14)-(01, 15): NAME(NAME) 'i'
[14](01, 16)-(01, 18): NAME(NAME) 'in'
[14](01, 19)-(01, 24): NAME(NAME) 'range'
[14](01, 24)-(01, 25): LPAR(OP) '('
[14](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[14](01, 26)-(01, 27): COMMA(OP) ','
[14](01, 28)-(01, 29): NAME(NAME) 'n'
[14](01, 29)-(01, 30): PLUS(OP) '+'
[14](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[14](01, 31)-(01, 32): RPAR(OP) ')'
[14](01, 32)-(01, 33): RSQB(OP) ']'
[14](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 10): NAME(NAME) 'collection'
[16](01, 10)-(01, 11): LPAR(OP) '('
[16](01, 11)-(01, 15): NAME(NAME) 'list'
[16](01, 15)-(01, 16): COMMA(OP) ','
[16](01, 17)-(01, 18): NAME(NAME) 'm'
[16](01, 18)-(01, 19): COMMA(OP) ','
[16](01, 20)-(01, 22): STRING(STRING) '""'
[16](01, 22)-(01, 23): RPAR(OP) ')'
[16](01, 23)-(01, 24): NEWLINE(NEWLINE)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

