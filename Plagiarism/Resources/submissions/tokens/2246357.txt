[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 16): NAME(NAME) 'trivial_case'
[00](01, 16)-(01, 17): LPAR(OP) '('
[00](01, 17)-(01, 18): NAME(NAME) 's'
[00](01, 18)-(01, 19): RPAR(OP) ')'
[00](01, 19)-(01, 20): COLON(OP) ':'
[00](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): NAME(NAME) 's'
[01](01, 09)-(01, 11): EQEQUAL(OP) '=='
[01](01, 12)-(01, 15): STRING(STRING) '"X"'
[01](01, 16)-(01, 18): NAME(NAME) 'or'
[01](01, 19)-(01, 20): NAME(NAME) 's'
[01](01, 21)-(01, 23): EQEQUAL(OP) '=='
[01](01, 24)-(01, 27): STRING(STRING) '" "'
[01](01, 27)-(01, 28): COLON(OP) ':'
[01](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 18): STRING(STRING) '"0"'
[02](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'def'
[04](01, 04)-(01, 14): NAME(NAME) 'begin_case'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 16): NAME(NAME) 's'
[04](01, 16)-(01, 17): RPAR(OP) ')'
[04](01, 17)-(01, 18): COLON(OP) ':'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 10): NAME(NAME) 'len'
[05](01, 10)-(01, 11): LPAR(OP) '('
[05](01, 11)-(01, 12): NAME(NAME) 's'
[05](01, 12)-(01, 13): RPAR(OP) ')'
[05](01, 14)-(01, 15): GREATER(OP) '>'
[05](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[05](01, 17)-(01, 18): COLON(OP) ':'
[05](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 12): LPAR(OP) '('
[06](01, 12)-(01, 13): NAME(NAME) 's'
[06](01, 13)-(01, 14): LSQB(OP) '['
[06](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[06](01, 15)-(01, 16): RSQB(OP) ']'
[06](01, 17)-(01, 19): EQEQUAL(OP) '=='
[06](01, 20)-(01, 23): STRING(STRING) '" "'
[06](01, 24)-(01, 27): NAME(NAME) 'and'
[06](01, 28)-(01, 29): NAME(NAME) 's'
[06](01, 29)-(01, 30): LSQB(OP) '['
[06](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[06](01, 31)-(01, 32): RSQB(OP) ']'
[06](01, 33)-(01, 35): EQEQUAL(OP) '=='
[06](01, 36)-(01, 39): STRING(STRING) '"X"'
[06](01, 39)-(01, 40): RPAR(OP) ')'
[06](01, 41)-(01, 43): NAME(NAME) 'or'
[06](01, 44)-(01, 45): LPAR(OP) '('
[06](01, 45)-(01, 46): NAME(NAME) 's'
[06](01, 46)-(01, 47): LSQB(OP) '['
[06](01, 47)-(01, 48): NUMBER(NUMBER) '0'
[06](01, 48)-(01, 49): RSQB(OP) ']'
[06](01, 50)-(01, 52): EQEQUAL(OP) '=='
[06](01, 53)-(01, 56): STRING(STRING) '"X"'
[06](01, 57)-(01, 60): NAME(NAME) 'and'
[06](01, 61)-(01, 62): NAME(NAME) 's'
[06](01, 62)-(01, 63): LSQB(OP) '['
[06](01, 63)-(01, 64): NUMBER(NUMBER) '1'
[06](01, 64)-(01, 65): RSQB(OP) ']'
[06](01, 66)-(01, 68): EQEQUAL(OP) '=='
[06](01, 69)-(01, 72): STRING(STRING) '"X"'
[06](01, 72)-(01, 73): RPAR(OP) ')'
[06](01, 73)-(01, 74): COLON(OP) ':'
[06](01, 74)-(01, 75): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'x1'
[07](01, 15)-(01, 16): EQUAL(OP) '='
[07](01, 17)-(01, 20): STRING(STRING) '"1"'
[07](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 18): NAME(NAME) 'return'
[08](01, 19)-(01, 21): NAME(NAME) 'x1'
[08](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 12): NAME(NAME) 'elif'
[09](01, 13)-(01, 14): LPAR(OP) '('
[09](01, 14)-(01, 15): NAME(NAME) 's'
[09](01, 15)-(01, 16): LSQB(OP) '['
[09](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[09](01, 17)-(01, 18): RSQB(OP) ']'
[09](01, 19)-(01, 21): EQEQUAL(OP) '=='
[09](01, 22)-(01, 25): STRING(STRING) '" "'
[09](01, 26)-(01, 29): NAME(NAME) 'and'
[09](01, 30)-(01, 31): NAME(NAME) 's'
[09](01, 31)-(01, 32): LSQB(OP) '['
[09](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[09](01, 33)-(01, 34): RSQB(OP) ']'
[09](01, 35)-(01, 37): EQEQUAL(OP) '=='
[09](01, 38)-(01, 41): STRING(STRING) '" "'
[09](01, 41)-(01, 42): RPAR(OP) ')'
[09](01, 43)-(01, 45): NAME(NAME) 'or'
[09](01, 46)-(01, 47): LPAR(OP) '('
[09](01, 47)-(01, 48): NAME(NAME) 's'
[09](01, 48)-(01, 49): LSQB(OP) '['
[09](01, 49)-(01, 50): NUMBER(NUMBER) '0'
[09](01, 50)-(01, 51): RSQB(OP) ']'
[09](01, 52)-(01, 54): EQEQUAL(OP) '=='
[09](01, 55)-(01, 58): STRING(STRING) '"X"'
[09](01, 59)-(01, 62): NAME(NAME) 'and'
[09](01, 63)-(01, 64): NAME(NAME) 's'
[09](01, 64)-(01, 65): LSQB(OP) '['
[09](01, 65)-(01, 66): NUMBER(NUMBER) '1'
[09](01, 66)-(01, 67): RSQB(OP) ']'
[09](01, 68)-(01, 70): EQEQUAL(OP) '=='
[09](01, 71)-(01, 74): STRING(STRING) '" "'
[09](01, 74)-(01, 75): RPAR(OP) ')'
[09](01, 75)-(01, 76): COLON(OP) ':'
[09](01, 76)-(01, 77): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 14): NAME(NAME) 'y1'
[10](01, 15)-(01, 16): EQUAL(OP) '='
[10](01, 17)-(01, 20): STRING(STRING) '"0"'
[10](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 18): NAME(NAME) 'return'
[11](01, 19)-(01, 21): NAME(NAME) 'y1'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 03): NAME(NAME) 'def'
[13](01, 04)-(01, 12): NAME(NAME) 'end_case'
[13](01, 12)-(01, 13): LPAR(OP) '('
[13](01, 13)-(01, 14): NAME(NAME) 's'
[13](01, 14)-(01, 15): RPAR(OP) ')'
[13](01, 15)-(01, 16): COLON(OP) ':'
[13](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 06): NAME(NAME) 'if'
[14](01, 07)-(01, 10): NAME(NAME) 'len'
[14](01, 10)-(01, 11): LPAR(OP) '('
[14](01, 11)-(01, 12): NAME(NAME) 's'
[14](01, 12)-(01, 13): RPAR(OP) ')'
[14](01, 14)-(01, 15): GREATER(OP) '>'
[14](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[14](01, 17)-(01, 18): COLON(OP) ':'
[14](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 10): NAME(NAME) 'if'
[15](01, 11)-(01, 12): LPAR(OP) '('
[15](01, 12)-(01, 13): NAME(NAME) 's'
[15](01, 13)-(01, 14): LSQB(OP) '['
[15](01, 14)-(01, 17): NAME(NAME) 'len'
[15](01, 17)-(01, 18): LPAR(OP) '('
[15](01, 18)-(01, 19): NAME(NAME) 's'
[15](01, 19)-(01, 20): RPAR(OP) ')'
[15](01, 21)-(01, 22): MINUS(OP) '-'
[15](01, 23)-(01, 24): NUMBER(NUMBER) '2'
[15](01, 24)-(01, 25): RSQB(OP) ']'
[15](01, 26)-(01, 28): EQEQUAL(OP) '=='
[15](01, 29)-(01, 32): STRING(STRING) '"X"'
[15](01, 33)-(01, 36): NAME(NAME) 'and'
[15](01, 37)-(01, 38): NAME(NAME) 's'
[15](01, 38)-(01, 39): LSQB(OP) '['
[15](01, 39)-(01, 42): NAME(NAME) 'len'
[15](01, 42)-(01, 43): LPAR(OP) '('
[15](01, 43)-(01, 44): NAME(NAME) 's'
[15](01, 44)-(01, 45): RPAR(OP) ')'
[15](01, 46)-(01, 47): MINUS(OP) '-'
[15](01, 48)-(01, 49): NUMBER(NUMBER) '1'
[15](01, 49)-(01, 50): RSQB(OP) ']'
[15](01, 51)-(01, 53): EQEQUAL(OP) '=='
[15](01, 54)-(01, 57): STRING(STRING) '" "'
[15](01, 57)-(01, 58): RPAR(OP) ')'
[15](01, 59)-(01, 61): NAME(NAME) 'or'
[15](01, 62)-(01, 63): LPAR(OP) '('
[15](01, 63)-(01, 64): NAME(NAME) 's'
[15](01, 64)-(01, 65): LSQB(OP) '['
[15](01, 65)-(01, 68): NAME(NAME) 'len'
[15](01, 68)-(01, 69): LPAR(OP) '('
[15](01, 69)-(01, 70): NAME(NAME) 's'
[15](01, 70)-(01, 71): RPAR(OP) ')'
[15](01, 72)-(01, 73): MINUS(OP) '-'
[15](01, 74)-(01, 75): NUMBER(NUMBER) '2'
[15](01, 75)-(01, 76): RSQB(OP) ']'
[15](01, 77)-(01, 79): EQEQUAL(OP) '=='
[15](01, 80)-(01, 83): STRING(STRING) '"X"'
[15](01, 84)-(01, 87): NAME(NAME) 'and'
[15](01, 88)-(01, 89): NAME(NAME) 's'
[15](01, 89)-(01, 90): LSQB(OP) '['
[15](01, 90)-(01, 93): NAME(NAME) 'len'
[15](01, 93)-(01, 94): LPAR(OP) '('
[15](01, 94)-(01, 95): NAME(NAME) 's'
[15](01, 95)-(01, 96): RPAR(OP) ')'
[15](01, 97)-(01, 98): MINUS(OP) '-'
[15](01, 99)-(01, 100): NUMBER(NUMBER) '1'
[15](01, 100)-(01, 101): RSQB(OP) ']'
[15](01, 102)-(01, 104): EQEQUAL(OP) '=='
[15](01, 105)-(01, 108): STRING(STRING) '"X"'
[15](01, 108)-(01, 109): RPAR(OP) ')'
[15](01, 109)-(01, 110): COLON(OP) ':'
[15](01, 110)-(01, 111): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 17): NAME(NAME) 'print'
[16](01, 17)-(01, 18): LPAR(OP) '('
[16](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[16](01, 19)-(01, 20): COMMA(OP) ','
[16](01, 21)-(01, 24): NAME(NAME) 'end'
[16](01, 25)-(01, 26): EQUAL(OP) '='
[16](01, 27)-(01, 29): STRING(STRING) '""'
[16](01, 29)-(01, 30): RPAR(OP) ')'
[16](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 14): NAME(NAME) 'x2'
[17](01, 15)-(01, 16): EQUAL(OP) '='
[17](01, 17)-(01, 20): STRING(STRING) '"1"'
[17](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 18): NAME(NAME) 'return'
[18](01, 19)-(01, 21): NAME(NAME) 'x2'
[18](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 12): NAME(NAME) 'elif'
[19](01, 13)-(01, 14): LPAR(OP) '('
[19](01, 14)-(01, 15): NAME(NAME) 's'
[19](01, 15)-(01, 16): LSQB(OP) '['
[19](01, 16)-(01, 19): NAME(NAME) 'len'
[19](01, 19)-(01, 20): LPAR(OP) '('
[19](01, 20)-(01, 21): NAME(NAME) 's'
[19](01, 21)-(01, 22): RPAR(OP) ')'
[19](01, 23)-(01, 24): MINUS(OP) '-'
[19](01, 25)-(01, 26): NUMBER(NUMBER) '2'
[19](01, 26)-(01, 27): RSQB(OP) ']'
[19](01, 28)-(01, 30): EQEQUAL(OP) '=='
[19](01, 31)-(01, 34): STRING(STRING) '" "'
[19](01, 35)-(01, 38): NAME(NAME) 'and'
[19](01, 39)-(01, 40): NAME(NAME) 's'
[19](01, 40)-(01, 41): LSQB(OP) '['
[19](01, 41)-(01, 44): NAME(NAME) 'len'
[19](01, 44)-(01, 45): LPAR(OP) '('
[19](01, 45)-(01, 46): NAME(NAME) 's'
[19](01, 46)-(01, 47): RPAR(OP) ')'
[19](01, 48)-(01, 49): MINUS(OP) '-'
[19](01, 50)-(01, 51): NUMBER(NUMBER) '1'
[19](01, 51)-(01, 52): RSQB(OP) ']'
[19](01, 53)-(01, 55): EQEQUAL(OP) '=='
[19](01, 56)-(01, 59): STRING(STRING) '" "'
[19](01, 59)-(01, 60): RPAR(OP) ')'
[19](01, 61)-(01, 63): NAME(NAME) 'or'
[19](01, 64)-(01, 65): LPAR(OP) '('
[19](01, 65)-(01, 66): NAME(NAME) 's'
[19](01, 66)-(01, 67): LSQB(OP) '['
[19](01, 67)-(01, 70): NAME(NAME) 'len'
[19](01, 70)-(01, 71): LPAR(OP) '('
[19](01, 71)-(01, 72): NAME(NAME) 's'
[19](01, 72)-(01, 73): RPAR(OP) ')'
[19](01, 74)-(01, 75): MINUS(OP) '-'
[19](01, 76)-(01, 77): NUMBER(NUMBER) '2'
[19](01, 77)-(01, 78): RSQB(OP) ']'
[19](01, 79)-(01, 81): EQEQUAL(OP) '=='
[19](01, 82)-(01, 85): STRING(STRING) '" "'
[19](01, 86)-(01, 89): NAME(NAME) 'and'
[19](01, 90)-(01, 91): NAME(NAME) 's'
[19](01, 91)-(01, 92): LSQB(OP) '['
[19](01, 92)-(01, 95): NAME(NAME) 'len'
[19](01, 95)-(01, 96): LPAR(OP) '('
[19](01, 96)-(01, 97): NAME(NAME) 's'
[19](01, 97)-(01, 98): RPAR(OP) ')'
[19](01, 99)-(01, 100): MINUS(OP) '-'
[19](01, 101)-(01, 102): NUMBER(NUMBER) '1'
[19](01, 102)-(01, 103): RSQB(OP) ']'
[19](01, 104)-(01, 106): EQEQUAL(OP) '=='
[19](01, 107)-(01, 110): STRING(STRING) '"X"'
[19](01, 110)-(01, 111): RPAR(OP) ')'
[19](01, 111)-(01, 112): COLON(OP) ':'
[19](01, 112)-(01, 113): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 17): NAME(NAME) 'print'
[20](01, 17)-(01, 18): LPAR(OP) '('
[20](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[20](01, 19)-(01, 20): COMMA(OP) ','
[20](01, 21)-(01, 24): NAME(NAME) 'end'
[20](01, 25)-(01, 26): EQUAL(OP) '='
[20](01, 27)-(01, 29): STRING(STRING) '""'
[20](01, 29)-(01, 30): RPAR(OP) ')'
[20](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 14): NAME(NAME) 'y2'
[21](01, 15)-(01, 16): EQUAL(OP) '='
[21](01, 17)-(01, 20): STRING(STRING) '"0"'
[21](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 18): NAME(NAME) 'return'
[22](01, 19)-(01, 21): NAME(NAME) 'y2'
[22](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 03): NAME(NAME) 'def'
[24](01, 04)-(01, 10): NAME(NAME) 'encode'
[24](01, 10)-(01, 11): LPAR(OP) '('
[24](01, 11)-(01, 12): NAME(NAME) 's'
[24](01, 12)-(01, 13): RPAR(OP) ')'
[24](01, 13)-(01, 14): COLON(OP) ':'
[24](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 10): NAME(NAME) 'string'
[25](01, 11)-(01, 12): EQUAL(OP) '='
[25](01, 13)-(01, 15): STRING(STRING) '""'
[25](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 16): NAME(NAME) 'trivial_case'
[26](01, 16)-(01, 17): LPAR(OP) '('
[26](01, 17)-(01, 18): NAME(NAME) 's'
[26](01, 18)-(01, 19): RPAR(OP) ')'
[26](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 10): NAME(NAME) 'string'
[27](01, 11)-(01, 12): EQUAL(OP) '='
[27](01, 13)-(01, 19): NAME(NAME) 'string'
[27](01, 20)-(01, 21): PLUS(OP) '+'
[27](01, 22)-(01, 32): NAME(NAME) 'begin_case'
[27](01, 32)-(01, 33): LPAR(OP) '('
[27](01, 33)-(01, 34): NAME(NAME) 's'
[27](01, 34)-(01, 35): RPAR(OP) ')'
[27](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 07): NAME(NAME) 'for'
[28](01, 08)-(01, 09): NAME(NAME) 'i'
[28](01, 10)-(01, 12): NAME(NAME) 'in'
[28](01, 13)-(01, 18): NAME(NAME) 'range'
[28](01, 18)-(01, 19): LPAR(OP) '('
[28](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[28](01, 20)-(01, 21): COMMA(OP) ','
[28](01, 21)-(01, 24): NAME(NAME) 'len'
[28](01, 24)-(01, 25): LPAR(OP) '('
[28](01, 25)-(01, 26): NAME(NAME) 's'
[28](01, 26)-(01, 27): RPAR(OP) ')'
[28](01, 28)-(01, 29): MINUS(OP) '-'
[28](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[28](01, 31)-(01, 32): RPAR(OP) ')'
[28](01, 32)-(01, 33): COLON(OP) ':'
[28](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 10): NAME(NAME) 'if'
[29](01, 11)-(01, 12): LPAR(OP) '('
[29](01, 12)-(01, 13): NAME(NAME) 's'
[29](01, 13)-(01, 14): LSQB(OP) '['
[29](01, 14)-(01, 15): NAME(NAME) 'i'
[29](01, 15)-(01, 16): MINUS(OP) '-'
[29](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[29](01, 17)-(01, 18): RSQB(OP) ']'
[29](01, 19)-(01, 21): EQEQUAL(OP) '=='
[29](01, 22)-(01, 25): STRING(STRING) '" "'
[29](01, 26)-(01, 29): NAME(NAME) 'and'
[29](01, 30)-(01, 31): NAME(NAME) 's'
[29](01, 31)-(01, 32): LSQB(OP) '['
[29](01, 32)-(01, 33): NAME(NAME) 'i'
[29](01, 33)-(01, 34): PLUS(OP) '+'
[29](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[29](01, 35)-(01, 36): RSQB(OP) ']'
[29](01, 37)-(01, 39): EQEQUAL(OP) '=='
[29](01, 40)-(01, 43): STRING(STRING) '" "'
[29](01, 43)-(01, 44): RPAR(OP) ')'
[29](01, 44)-(01, 45): COLON(OP) ':'
[29](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 18): NAME(NAME) 'string'
[30](01, 19)-(01, 20): EQUAL(OP) '='
[30](01, 21)-(01, 27): NAME(NAME) 'string'
[30](01, 28)-(01, 29): PLUS(OP) '+'
[30](01, 30)-(01, 33): STRING(STRING) '"0"'
[30](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 12): NAME(NAME) 'elif'
[31](01, 13)-(01, 14): LPAR(OP) '('
[31](01, 14)-(01, 15): NAME(NAME) 's'
[31](01, 15)-(01, 16): LSQB(OP) '['
[31](01, 16)-(01, 17): NAME(NAME) 'i'
[31](01, 17)-(01, 18): MINUS(OP) '-'
[31](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[31](01, 19)-(01, 20): RSQB(OP) ']'
[31](01, 21)-(01, 23): EQEQUAL(OP) '=='
[31](01, 24)-(01, 27): STRING(STRING) '" "'
[31](01, 28)-(01, 31): NAME(NAME) 'and'
[31](01, 32)-(01, 33): NAME(NAME) 's'
[31](01, 33)-(01, 34): LSQB(OP) '['
[31](01, 34)-(01, 35): NAME(NAME) 'i'
[31](01, 35)-(01, 36): PLUS(OP) '+'
[31](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[31](01, 37)-(01, 38): RSQB(OP) ']'
[31](01, 39)-(01, 41): EQEQUAL(OP) '=='
[31](01, 42)-(01, 45): STRING(STRING) '"X"'
[31](01, 45)-(01, 46): RPAR(OP) ')'
[31](01, 47)-(01, 49): NAME(NAME) 'or'
[31](01, 50)-(01, 51): LPAR(OP) '('
[31](01, 51)-(01, 52): NAME(NAME) 's'
[31](01, 52)-(01, 53): LSQB(OP) '['
[31](01, 53)-(01, 54): NAME(NAME) 'i'
[31](01, 54)-(01, 55): MINUS(OP) '-'
[31](01, 55)-(01, 56): NUMBER(NUMBER) '1'
[31](01, 56)-(01, 57): RSQB(OP) ']'
[31](01, 58)-(01, 60): EQEQUAL(OP) '=='
[31](01, 61)-(01, 64): STRING(STRING) '"X"'
[31](01, 65)-(01, 68): NAME(NAME) 'and'
[31](01, 69)-(01, 70): NAME(NAME) 's'
[31](01, 70)-(01, 71): LSQB(OP) '['
[31](01, 71)-(01, 72): NAME(NAME) 'i'
[31](01, 72)-(01, 73): PLUS(OP) '+'
[31](01, 73)-(01, 74): NUMBER(NUMBER) '1'
[31](01, 74)-(01, 75): RSQB(OP) ']'
[31](01, 76)-(01, 78): EQEQUAL(OP) '=='
[31](01, 79)-(01, 82): STRING(STRING) '" "'
[31](01, 82)-(01, 83): RPAR(OP) ')'
[31](01, 83)-(01, 84): COLON(OP) ':'
[31](01, 84)-(01, 85): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 18): NAME(NAME) 'string'
[32](01, 19)-(01, 20): EQUAL(OP) '='
[32](01, 21)-(01, 27): NAME(NAME) 'string'
[32](01, 28)-(01, 29): PLUS(OP) '+'
[32](01, 30)-(01, 33): STRING(STRING) '"1"'
[32](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 12): NAME(NAME) 'else'
[33](01, 12)-(01, 13): COLON(OP) ':'
[33](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 12): INDENT(INDENT) '            '
[34](01, 12)-(01, 18): NAME(NAME) 'string'
[34](01, 19)-(01, 20): EQUAL(OP) '='
[34](01, 21)-(01, 27): NAME(NAME) 'string'
[34](01, 28)-(01, 29): PLUS(OP) '+'
[34](01, 30)-(01, 33): STRING(STRING) '"2"'
[34](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 04): INDENT(INDENT) '    '
[35](01, 04)-(01, 10): NAME(NAME) 'string'
[35](01, 11)-(01, 12): EQUAL(OP) '='
[35](01, 13)-(01, 19): NAME(NAME) 'string'
[35](01, 20)-(01, 21): PLUS(OP) '+'
[35](01, 22)-(01, 30): NAME(NAME) 'end_case'
[35](01, 30)-(01, 31): LPAR(OP) '('
[35](01, 31)-(01, 32): NAME(NAME) 's'
[35](01, 32)-(01, 33): RPAR(OP) ')'
[35](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 01): NL(NL) '\n'
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 03): NAME(NAME) 'def'
[37](01, 04)-(01, 10): NAME(NAME) 'decode'
[37](01, 10)-(01, 11): LPAR(OP) '('
[37](01, 11)-(01, 12): NAME(NAME) 's'
[37](01, 12)-(01, 13): RPAR(OP) ')'
[37](01, 13)-(01, 14): COLON(OP) ':'
[37](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 08): NAME(NAME) 'pass'
[38](01, 08)-(01, 09): NEWLINE(NEWLINE)
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

