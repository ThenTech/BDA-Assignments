[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): COLON(OP) ':'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'result'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 15): STRING(STRING) '""'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 22): NAME(NAME) 'len'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 24): NAME(NAME) 's'
[02](01, 24)-(01, 25): RPAR(OP) ')'
[02](01, 25)-(01, 26): RPAR(OP) ')'
[02](01, 26)-(01, 27): COLON(OP) ':'
[02](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 14): NAME(NAME) 'len'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 16): NAME(NAME) 's'
[03](01, 16)-(01, 17): RPAR(OP) ')'
[03](01, 18)-(01, 20): EQEQUAL(OP) '=='
[03](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[03](01, 22)-(01, 23): COLON(OP) ':'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 18): NAME(NAME) 'return'
[04](01, 19)-(01, 22): STRING(STRING) "'0'"
[04](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 12): NAME(NAME) 'i'
[05](01, 13)-(01, 15): EQEQUAL(OP) '=='
[05](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[05](01, 17)-(01, 18): COLON(OP) ':'
[05](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 14): NAME(NAME) 'if'
[06](01, 15)-(01, 16): NAME(NAME) 's'
[06](01, 16)-(01, 17): LSQB(OP) '['
[06](01, 17)-(01, 18): NAME(NAME) 'i'
[06](01, 18)-(01, 19): PLUS(OP) '+'
[06](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[06](01, 20)-(01, 21): RSQB(OP) ']'
[06](01, 22)-(01, 24): EQEQUAL(OP) '=='
[06](01, 25)-(01, 28): STRING(STRING) "'X'"
[06](01, 28)-(01, 29): COLON(OP) ':'
[06](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 16): INDENT(INDENT) '                '
[07](01, 16)-(01, 22): NAME(NAME) 'result'
[07](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[07](01, 26)-(01, 29): STRING(STRING) "'1'"
[07](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 16): NAME(NAME) 'else'
[08](01, 16)-(01, 17): COLON(OP) ':'
[08](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 22): NAME(NAME) 'result'
[09](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[09](01, 26)-(01, 29): STRING(STRING) "'0'"
[09](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 12): NAME(NAME) 'elif'
[10](01, 13)-(01, 14): NAME(NAME) 'i'
[10](01, 14)-(01, 16): EQEQUAL(OP) '=='
[10](01, 16)-(01, 19): NAME(NAME) 'len'
[10](01, 19)-(01, 20): LPAR(OP) '('
[10](01, 20)-(01, 21): NAME(NAME) 's'
[10](01, 21)-(01, 22): RPAR(OP) ')'
[10](01, 22)-(01, 23): MINUS(OP) '-'
[10](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[10](01, 24)-(01, 25): COLON(OP) ':'
[10](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 14): NAME(NAME) 'if'
[11](01, 15)-(01, 16): NAME(NAME) 's'
[11](01, 16)-(01, 17): LSQB(OP) '['
[11](01, 17)-(01, 18): NAME(NAME) 'i'
[11](01, 18)-(01, 19): MINUS(OP) '-'
[11](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[11](01, 20)-(01, 21): RSQB(OP) ']'
[11](01, 22)-(01, 24): EQEQUAL(OP) '=='
[11](01, 25)-(01, 28): STRING(STRING) "'X'"
[11](01, 28)-(01, 29): COLON(OP) ':'
[11](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 22): NAME(NAME) 'result'
[12](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[12](01, 26)-(01, 29): STRING(STRING) "'1'"
[12](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 16): NAME(NAME) 'else'
[13](01, 16)-(01, 17): COLON(OP) ':'
[13](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 22): NAME(NAME) 'result'
[14](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[14](01, 26)-(01, 29): STRING(STRING) "'0'"
[14](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 12): NAME(NAME) 'else'
[15](01, 12)-(01, 13): COLON(OP) ':'
[15](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 16): NAME(NAME) 'temp'
[16](01, 17)-(01, 18): EQUAL(OP) '='
[16](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[16](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 14): NAME(NAME) 'if'
[17](01, 15)-(01, 16): NAME(NAME) 's'
[17](01, 16)-(01, 17): LSQB(OP) '['
[17](01, 17)-(01, 18): NAME(NAME) 'i'
[17](01, 18)-(01, 19): PLUS(OP) '+'
[17](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[17](01, 20)-(01, 21): RSQB(OP) ']'
[17](01, 22)-(01, 24): EQEQUAL(OP) '=='
[17](01, 25)-(01, 28): STRING(STRING) "'X'"
[17](01, 28)-(01, 29): COLON(OP) ':'
[17](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 20): NAME(NAME) 'temp'
[18](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[18](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[18](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 14): NAME(NAME) 'if'
[19](01, 15)-(01, 16): NAME(NAME) 's'
[19](01, 16)-(01, 17): LSQB(OP) '['
[19](01, 17)-(01, 18): NAME(NAME) 'i'
[19](01, 18)-(01, 19): MINUS(OP) '-'
[19](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[19](01, 20)-(01, 21): RSQB(OP) ']'
[19](01, 22)-(01, 24): EQEQUAL(OP) '=='
[19](01, 25)-(01, 28): STRING(STRING) "'X'"
[19](01, 28)-(01, 29): COLON(OP) ':'
[19](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 16): INDENT(INDENT) '                '
[20](01, 16)-(01, 20): NAME(NAME) 'temp'
[20](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[20](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[20](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 18): NAME(NAME) 'result'
[21](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[21](01, 20)-(01, 23): NAME(NAME) 'str'
[21](01, 23)-(01, 24): LPAR(OP) '('
[21](01, 24)-(01, 28): NAME(NAME) 'temp'
[21](01, 28)-(01, 29): RPAR(OP) ')'
[21](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 10): NAME(NAME) 'return'
[22](01, 11)-(01, 17): NAME(NAME) 'result'
[22](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 03): NAME(NAME) 'def'
[24](01, 04)-(01, 11): NAME(NAME) 'replace'
[24](01, 11)-(01, 12): LPAR(OP) '('
[24](01, 12)-(01, 13): NAME(NAME) 's'
[24](01, 13)-(01, 14): COMMA(OP) ','
[24](01, 15)-(01, 20): NAME(NAME) 'value'
[24](01, 20)-(01, 21): COMMA(OP) ','
[24](01, 22)-(01, 27): NAME(NAME) 'index'
[24](01, 27)-(01, 28): RPAR(OP) ')'
[24](01, 28)-(01, 29): COLON(OP) ':'
[24](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 10): NAME(NAME) 'return'
[25](01, 11)-(01, 12): NAME(NAME) 's'
[25](01, 12)-(01, 13): LSQB(OP) '['
[25](01, 13)-(01, 14): COLON(OP) ':'
[25](01, 14)-(01, 19): NAME(NAME) 'index'
[25](01, 19)-(01, 20): RSQB(OP) ']'
[25](01, 21)-(01, 22): PLUS(OP) '+'
[25](01, 23)-(01, 28): NAME(NAME) 'value'
[25](01, 29)-(01, 30): PLUS(OP) '+'
[25](01, 31)-(01, 32): NAME(NAME) 's'
[25](01, 32)-(01, 33): LSQB(OP) '['
[25](01, 33)-(01, 38): NAME(NAME) 'index'
[25](01, 38)-(01, 39): PLUS(OP) '+'
[25](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[25](01, 40)-(01, 41): COLON(OP) ':'
[25](01, 41)-(01, 42): RSQB(OP) ']'
[25](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 03): NAME(NAME) 'def'
[27](01, 04)-(01, 10): NAME(NAME) 'decode'
[27](01, 10)-(01, 11): LPAR(OP) '('
[27](01, 11)-(01, 12): NAME(NAME) 's'
[27](01, 12)-(01, 13): RPAR(OP) ')'
[27](01, 13)-(01, 14): COLON(OP) ':'
[27](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 10): NAME(NAME) 'result'
[28](01, 10)-(01, 11): EQUAL(OP) '='
[28](01, 11)-(01, 14): STRING(STRING) '"_"'
[28](01, 14)-(01, 15): STAR(OP) '*'
[28](01, 15)-(01, 18): NAME(NAME) 'len'
[28](01, 18)-(01, 19): LPAR(OP) '('
[28](01, 19)-(01, 20): NAME(NAME) 's'
[28](01, 20)-(01, 21): RPAR(OP) ')'
[28](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 07): NAME(NAME) 'for'
[29](01, 08)-(01, 09): NAME(NAME) 'x'
[29](01, 10)-(01, 12): NAME(NAME) 'in'
[29](01, 13)-(01, 18): NAME(NAME) 'range'
[29](01, 18)-(01, 19): LPAR(OP) '('
[29](01, 19)-(01, 22): NAME(NAME) 'len'
[29](01, 22)-(01, 23): LPAR(OP) '('
[29](01, 23)-(01, 24): NAME(NAME) 's'
[29](01, 24)-(01, 25): RPAR(OP) ')'
[29](01, 25)-(01, 26): RPAR(OP) ')'
[29](01, 26)-(01, 27): COLON(OP) ':'
[29](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 10): NAME(NAME) 'if'
[30](01, 11)-(01, 12): NAME(NAME) 's'
[30](01, 12)-(01, 13): LSQB(OP) '['
[30](01, 13)-(01, 14): NAME(NAME) 'x'
[30](01, 14)-(01, 15): RSQB(OP) ']'
[30](01, 16)-(01, 18): EQEQUAL(OP) '=='
[30](01, 19)-(01, 22): STRING(STRING) "'2'"
[30](01, 22)-(01, 23): COLON(OP) ':'
[30](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 18): NAME(NAME) 'result'
[31](01, 19)-(01, 20): EQUAL(OP) '='
[31](01, 21)-(01, 28): NAME(NAME) 'replace'
[31](01, 28)-(01, 29): LPAR(OP) '('
[31](01, 29)-(01, 35): NAME(NAME) 'result'
[31](01, 35)-(01, 36): COMMA(OP) ','
[31](01, 37)-(01, 38): NAME(NAME) 'x'
[31](01, 38)-(01, 39): MINUS(OP) '-'
[31](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[31](01, 40)-(01, 41): COMMA(OP) ','
[31](01, 42)-(01, 45): STRING(STRING) "'X'"
[31](01, 45)-(01, 46): RPAR(OP) ')'
[31](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 18): NAME(NAME) 'result'
[32](01, 19)-(01, 20): EQUAL(OP) '='
[32](01, 21)-(01, 28): NAME(NAME) 'replace'
[32](01, 28)-(01, 29): LPAR(OP) '('
[32](01, 29)-(01, 35): NAME(NAME) 'result'
[32](01, 35)-(01, 36): COMMA(OP) ','
[32](01, 37)-(01, 38): NAME(NAME) 'x'
[32](01, 38)-(01, 39): PLUS(OP) '+'
[32](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[32](01, 40)-(01, 41): COMMA(OP) ','
[32](01, 42)-(01, 45): STRING(STRING) "'X'"
[32](01, 45)-(01, 46): RPAR(OP) ')'
[32](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 12): NAME(NAME) 'elif'
[33](01, 13)-(01, 14): NAME(NAME) 's'
[33](01, 14)-(01, 15): LSQB(OP) '['
[33](01, 15)-(01, 16): NAME(NAME) 'x'
[33](01, 16)-(01, 17): RSQB(OP) ']'
[33](01, 18)-(01, 20): EQEQUAL(OP) '=='
[33](01, 21)-(01, 24): STRING(STRING) "'0'"
[33](01, 24)-(01, 25): COLON(OP) ':'
[33](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 12): INDENT(INDENT) '            '
[34](01, 12)-(01, 18): NAME(NAME) 'result'
[34](01, 19)-(01, 20): EQUAL(OP) '='
[34](01, 21)-(01, 28): NAME(NAME) 'replace'
[34](01, 28)-(01, 29): LPAR(OP) '('
[34](01, 29)-(01, 35): NAME(NAME) 'result'
[34](01, 35)-(01, 36): COMMA(OP) ','
[34](01, 37)-(01, 38): NAME(NAME) 'x'
[34](01, 38)-(01, 39): MINUS(OP) '-'
[34](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[34](01, 40)-(01, 41): COMMA(OP) ','
[34](01, 42)-(01, 45): STRING(STRING) "' '"
[34](01, 45)-(01, 46): RPAR(OP) ')'
[34](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 12): INDENT(INDENT) '            '
[35](01, 12)-(01, 18): NAME(NAME) 'result'
[35](01, 19)-(01, 20): EQUAL(OP) '='
[35](01, 21)-(01, 28): NAME(NAME) 'replace'
[35](01, 28)-(01, 29): LPAR(OP) '('
[35](01, 29)-(01, 35): NAME(NAME) 'result'
[35](01, 35)-(01, 36): COMMA(OP) ','
[35](01, 37)-(01, 38): NAME(NAME) 'x'
[35](01, 38)-(01, 39): PLUS(OP) '+'
[35](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[35](01, 40)-(01, 41): COMMA(OP) ','
[35](01, 42)-(01, 45): STRING(STRING) "' '"
[35](01, 45)-(01, 46): RPAR(OP) ')'
[35](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 04)-(01, 05): NL(NL) '\n'
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 04): INDENT(INDENT) '    '
[37](01, 04)-(01, 07): NAME(NAME) 'for'
[37](01, 08)-(01, 09): NAME(NAME) 'x'
[37](01, 10)-(01, 12): NAME(NAME) 'in'
[37](01, 13)-(01, 18): NAME(NAME) 'range'
[37](01, 18)-(01, 19): LPAR(OP) '('
[37](01, 19)-(01, 22): NAME(NAME) 'len'
[37](01, 22)-(01, 23): LPAR(OP) '('
[37](01, 23)-(01, 24): NAME(NAME) 's'
[37](01, 24)-(01, 25): RPAR(OP) ')'
[37](01, 25)-(01, 26): RPAR(OP) ')'
[37](01, 26)-(01, 27): COLON(OP) ':'
[37](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 08): INDENT(INDENT) '        '
[38](01, 08)-(01, 15): NAME(NAME) 'canLeft'
[38](01, 16)-(01, 17): EQUAL(OP) '='
[38](01, 18)-(01, 22): NAME(NAME) 'True'
[38](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 08): INDENT(INDENT) '        '
[39](01, 08)-(01, 16): NAME(NAME) 'lastLeft'
[39](01, 17)-(01, 18): EQUAL(OP) '='
[39](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[39](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 08): INDENT(INDENT) '        '
[40](01, 08)-(01, 10): NAME(NAME) 'if'
[40](01, 11)-(01, 12): NAME(NAME) 's'
[40](01, 12)-(01, 13): LSQB(OP) '['
[40](01, 13)-(01, 14): NAME(NAME) 'x'
[40](01, 14)-(01, 15): RSQB(OP) ']'
[40](01, 16)-(01, 18): EQEQUAL(OP) '=='
[40](01, 19)-(01, 22): STRING(STRING) "'1'"
[40](01, 22)-(01, 23): COLON(OP) ':'
[40](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 12): INDENT(INDENT) '            '
[41](01, 12)-(01, 14): NAME(NAME) 'if'
[41](01, 15)-(01, 16): NAME(NAME) 'x'
[41](01, 17)-(01, 18): EQUAL(OP) '='
[41](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[41](01, 20)-(01, 21): COLON(OP) ':'
[41](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 16): INDENT(INDENT) '                '
[42](01, 16)-(01, 22): NAME(NAME) 'result'
[42](01, 23)-(01, 24): EQUAL(OP) '='
[42](01, 25)-(01, 32): NAME(NAME) 'replace'
[42](01, 32)-(01, 33): LPAR(OP) '('
[42](01, 33)-(01, 39): NAME(NAME) 'result'
[42](01, 39)-(01, 40): COMMA(OP) ','
[42](01, 41)-(01, 42): NAME(NAME) 'x'
[42](01, 42)-(01, 43): PLUS(OP) '+'
[42](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[42](01, 44)-(01, 45): COMMA(OP) ','
[42](01, 46)-(01, 49): STRING(STRING) "' '"
[42](01, 49)-(01, 50): RPAR(OP) ')'
[42](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 16): INDENT(INDENT) '                '
[43](01, 16)-(01, 23): NAME(NAME) 'canLeft'
[43](01, 24)-(01, 25): EQUAL(OP) '='
[43](01, 26)-(01, 31): NAME(NAME) 'false'
[43](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 12): INDENT(INDENT) '            '
[44](01, 12)-(01, 14): NAME(NAME) 'if'
[44](01, 15)-(01, 16): NAME(NAME) 'x'
[44](01, 16)-(01, 17): MINUS(OP) '-'
[44](01, 17)-(01, 25): NAME(NAME) 'lastleft'
[44](01, 26)-(01, 28): EQEQUAL(OP) '=='
[44](01, 29)-(01, 30): NUMBER(NUMBER) '2'
[44](01, 31)-(01, 34): NAME(NAME) 'and'
[44](01, 35)-(01, 42): NAME(NAME) 'canLeft'
[44](01, 42)-(01, 43): COLON(OP) ':'
[44](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 16): INDENT(INDENT) '                '
[45](01, 16)-(01, 22): NAME(NAME) 'result'
[45](01, 23)-(01, 24): EQUAL(OP) '='
[45](01, 25)-(01, 32): NAME(NAME) 'replace'
[45](01, 32)-(01, 33): LPAR(OP) '('
[45](01, 33)-(01, 39): NAME(NAME) 'result'
[45](01, 39)-(01, 40): COMMA(OP) ','
[45](01, 41)-(01, 42): NAME(NAME) 'x'
[45](01, 42)-(01, 43): MINUS(OP) '-'
[45](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[45](01, 44)-(01, 45): COMMA(OP) ','
[45](01, 46)-(01, 49): STRING(STRING) "'X'"
[45](01, 49)-(01, 50): RPAR(OP) ')'
[45](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 16): INDENT(INDENT) '                '
[46](01, 16)-(01, 23): NAME(NAME) 'canLeft'
[46](01, 24)-(01, 25): EQUAL(OP) '='
[46](01, 26)-(01, 30): NAME(NAME) 'True'
[46](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 12): INDENT(INDENT) '            '
[47](01, 12)-(01, 16): NAME(NAME) 'elif'
[47](01, 17)-(01, 18): NAME(NAME) 'x'
[47](01, 18)-(01, 19): MINUS(OP) '-'
[47](01, 19)-(01, 27): NAME(NAME) 'lastleft'
[47](01, 28)-(01, 30): EQEQUAL(OP) '=='
[47](01, 31)-(01, 32): NUMBER(NUMBER) '2'
[47](01, 33)-(01, 36): NAME(NAME) 'and'
[47](01, 37)-(01, 40): NAME(NAME) 'not'
[47](01, 41)-(01, 48): NAME(NAME) 'canLeft'
[47](01, 48)-(01, 49): COLON(OP) ':'
[47](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 16): INDENT(INDENT) '                '
[48](01, 16)-(01, 22): NAME(NAME) 'result'
[48](01, 23)-(01, 24): EQUAL(OP) '='
[48](01, 25)-(01, 32): NAME(NAME) 'replace'
[48](01, 32)-(01, 33): LPAR(OP) '('
[48](01, 33)-(01, 39): NAME(NAME) 'result'
[48](01, 39)-(01, 40): COMMA(OP) ','
[48](01, 41)-(01, 42): NAME(NAME) 'x'
[48](01, 42)-(01, 43): PLUS(OP) '+'
[48](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[48](01, 44)-(01, 45): COMMA(OP) ','
[48](01, 46)-(01, 49): STRING(STRING) "'X'"
[48](01, 49)-(01, 50): RPAR(OP) ')'
[48](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 16): INDENT(INDENT) '                '
[49](01, 16)-(01, 23): NAME(NAME) 'canLeft'
[49](01, 24)-(01, 25): EQUAL(OP) '='
[49](01, 26)-(01, 31): NAME(NAME) 'False'
[49](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 12): INDENT(INDENT) '            '
[50](01, 12)-(01, 16): NAME(NAME) 'elif'
[50](01, 17)-(01, 18): NAME(NAME) 'x'
[50](01, 18)-(01, 19): MINUS(OP) '-'
[50](01, 19)-(01, 27): NAME(NAME) 'lastleft'
[50](01, 28)-(01, 29): LESS(OP) '<'
[50](01, 30)-(01, 31): NUMBER(NUMBER) '2'
[50](01, 31)-(01, 32): COLON(OP) ':'
[50](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 16): INDENT(INDENT) '                '
[51](01, 16)-(01, 22): NAME(NAME) 'result'
[51](01, 23)-(01, 24): EQUAL(OP) '='
[51](01, 25)-(01, 32): NAME(NAME) 'replace'
[51](01, 32)-(01, 33): LPAR(OP) '('
[51](01, 33)-(01, 39): NAME(NAME) 'result'
[51](01, 39)-(01, 40): COMMA(OP) ','
[51](01, 41)-(01, 42): NAME(NAME) 'x'
[51](01, 42)-(01, 43): PLUS(OP) '+'
[51](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[51](01, 44)-(01, 45): COMMA(OP) ','
[51](01, 46)-(01, 49): STRING(STRING) "'X'"
[51](01, 49)-(01, 50): RPAR(OP) ')'
[51](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[51](02, 00)-(02, 00): DEDENT(DEDENT)
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 12): INDENT(INDENT) '            '
[52](01, 12)-(01, 16): NAME(NAME) 'elif'
[52](01, 17)-(01, 18): NAME(NAME) 'x'
[52](01, 18)-(01, 19): MINUS(OP) '-'
[52](01, 19)-(01, 27): NAME(NAME) 'lastleft'
[52](01, 28)-(01, 29): GREATER(OP) '>'
[52](01, 30)-(01, 31): NUMBER(NUMBER) '2'
[52](01, 31)-(01, 32): COLON(OP) ':'
[52](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[52](02, 00)-(02, 00): DEDENT(DEDENT)
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 16): INDENT(INDENT) '                '
[53](01, 16)-(01, 22): NAME(NAME) 'result'
[53](01, 23)-(01, 24): EQUAL(OP) '='
[53](01, 25)-(01, 32): NAME(NAME) 'replace'
[53](01, 32)-(01, 33): LPAR(OP) '('
[53](01, 33)-(01, 39): NAME(NAME) 'result'
[53](01, 39)-(01, 40): COMMA(OP) ','
[53](01, 41)-(01, 42): NAME(NAME) 'x'
[53](01, 42)-(01, 43): PLUS(OP) '+'
[53](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[53](01, 44)-(01, 45): COMMA(OP) ','
[53](01, 46)-(01, 49): STRING(STRING) "'X'"
[53](01, 49)-(01, 50): RPAR(OP) ')'
[53](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[53](02, 00)-(02, 00): DEDENT(DEDENT)
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 16): INDENT(INDENT) '                '
[54](01, 16)-(01, 23): NAME(NAME) 'canLeft'
[54](01, 24)-(01, 25): EQUAL(OP) '='
[54](01, 26)-(01, 30): NAME(NAME) 'True'
[54](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): DEDENT(DEDENT)
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 04): INDENT(INDENT) '    '
[55](01, 04)-(01, 09): NAME(NAME) 'print'
[55](01, 09)-(01, 10): LPAR(OP) '('
[55](01, 11)-(01, 17): NAME(NAME) 'result'
[55](01, 18)-(01, 19): RPAR(OP) ')'
[55](01, 19)-(01, 20): NEWLINE(NEWLINE)
[55](02, 00)-(02, 00): DEDENT(DEDENT)
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

