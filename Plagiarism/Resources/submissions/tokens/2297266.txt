[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'matrix'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 17): NAME(NAME) 'counterunique'
[01](01, 18)-(01, 19): EQUAL(OP) '='
[01](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[01](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 17): NAME(NAME) 'counterrowsum'
[02](01, 18)-(01, 19): EQUAL(OP) '='
[02](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[02](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 20): NAME(NAME) 'countercolumnsum'
[03](01, 21)-(01, 22): EQUAL(OP) '='
[03](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 22): NAME(NAME) 'counterdiagonalsum'
[04](01, 23)-(01, 24): EQUAL(OP) '='
[04](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 05): NAME(NAME) 'A'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 08)-(01, 14): NAME(NAME) 'matrix'
[05](01, 14)-(01, 15): LSQB(OP) '['
[05](01, 15)-(01, 16): COLON(OP) ':'
[05](01, 16)-(01, 17): RSQB(OP) ']'
[05](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 06): NAME(NAME) 'if'
[06](01, 07)-(01, 10): NAME(NAME) 'len'
[06](01, 10)-(01, 11): LPAR(OP) '('
[06](01, 11)-(01, 12): NAME(NAME) 'A'
[06](01, 12)-(01, 13): RPAR(OP) ')'
[06](01, 14)-(01, 15): LESS(OP) '<'
[06](01, 16)-(01, 17): NUMBER(NUMBER) '3'
[06](01, 17)-(01, 18): COLON(OP) ':'
[06](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 14): NAME(NAME) 'return'
[07](01, 15)-(01, 20): NAME(NAME) 'False'
[07](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 07): NAME(NAME) 'for'
[08](01, 08)-(01, 09): NAME(NAME) 'i'
[08](01, 10)-(01, 12): NAME(NAME) 'in'
[08](01, 13)-(01, 14): NAME(NAME) 'A'
[08](01, 14)-(01, 15): COLON(OP) ':'
[08](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 14): NAME(NAME) 'matrix'
[09](01, 14)-(01, 15): DOT(OP) '.'
[09](01, 15)-(01, 21): NAME(NAME) 'remove'
[09](01, 21)-(01, 22): LPAR(OP) '('
[09](01, 22)-(01, 23): NAME(NAME) 'i'
[09](01, 23)-(01, 24): RPAR(OP) ')'
[09](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 10): NAME(NAME) 'if'
[10](01, 11)-(01, 12): NAME(NAME) 'i'
[10](01, 13)-(01, 16): NAME(NAME) 'not'
[10](01, 17)-(01, 19): NAME(NAME) 'in'
[10](01, 20)-(01, 26): NAME(NAME) 'matrix'
[10](01, 26)-(01, 27): COLON(OP) ':'
[10](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 25): NAME(NAME) 'counterunique'
[11](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[11](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[11](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 06): NAME(NAME) 'if'
[12](01, 07)-(01, 10): NAME(NAME) 'sum'
[12](01, 10)-(01, 11): LPAR(OP) '('
[12](01, 11)-(01, 12): NAME(NAME) 'A'
[12](01, 12)-(01, 13): COMMA(OP) ','
[12](01, 14)-(01, 15): LSQB(OP) '['
[12](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[12](01, 16)-(01, 17): RSQB(OP) ']'
[12](01, 17)-(01, 18): RPAR(OP) ')'
[12](01, 19)-(01, 21): EQEQUAL(OP) '=='
[12](01, 22)-(01, 25): NAME(NAME) 'sum'
[12](01, 25)-(01, 26): LPAR(OP) '('
[12](01, 26)-(01, 27): NAME(NAME) 'A'
[12](01, 27)-(01, 28): COMMA(OP) ','
[12](01, 29)-(01, 30): LSQB(OP) '['
[12](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[12](01, 31)-(01, 32): RSQB(OP) ']'
[12](01, 32)-(01, 33): RPAR(OP) ')'
[12](01, 34)-(01, 37): NAME(NAME) 'and'
[12](01, 38)-(01, 41): NAME(NAME) 'sum'
[12](01, 41)-(01, 42): LPAR(OP) '('
[12](01, 42)-(01, 43): NAME(NAME) 'A'
[12](01, 43)-(01, 44): COMMA(OP) ','
[12](01, 45)-(01, 46): LSQB(OP) '['
[12](01, 46)-(01, 47): NUMBER(NUMBER) '1'
[12](01, 47)-(01, 48): RSQB(OP) ']'
[12](01, 48)-(01, 49): RPAR(OP) ')'
[12](01, 50)-(01, 52): EQEQUAL(OP) '=='
[12](01, 53)-(01, 56): NAME(NAME) 'sum'
[12](01, 56)-(01, 57): LPAR(OP) '('
[12](01, 57)-(01, 58): NAME(NAME) 'A'
[12](01, 58)-(01, 59): COMMA(OP) ','
[12](01, 60)-(01, 61): LSQB(OP) '['
[12](01, 61)-(01, 62): NUMBER(NUMBER) '2'
[12](01, 62)-(01, 63): RSQB(OP) ']'
[12](01, 63)-(01, 64): RPAR(OP) ')'
[12](01, 64)-(01, 65): COLON(OP) ':'
[12](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 21): NAME(NAME) 'counterrowsum'
[13](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[13](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[13](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 06): NAME(NAME) 'if'
[14](01, 07)-(01, 10): NAME(NAME) 'sum'
[14](01, 10)-(01, 11): LPAR(OP) '('
[14](01, 11)-(01, 12): NAME(NAME) 'i'
[14](01, 12)-(01, 13): LSQB(OP) '['
[14](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[14](01, 14)-(01, 15): RSQB(OP) ']'
[14](01, 16)-(01, 19): NAME(NAME) 'for'
[14](01, 20)-(01, 21): NAME(NAME) 'i'
[14](01, 22)-(01, 24): NAME(NAME) 'in'
[14](01, 25)-(01, 26): NAME(NAME) 'A'
[14](01, 26)-(01, 27): RPAR(OP) ')'
[14](01, 28)-(01, 30): EQEQUAL(OP) '=='
[14](01, 31)-(01, 34): NAME(NAME) 'sum'
[14](01, 34)-(01, 35): LPAR(OP) '('
[14](01, 35)-(01, 36): NAME(NAME) 'A'
[14](01, 36)-(01, 37): COMMA(OP) ','
[14](01, 38)-(01, 39): LSQB(OP) '['
[14](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[14](01, 40)-(01, 41): RSQB(OP) ']'
[14](01, 41)-(01, 42): RPAR(OP) ')'
[14](01, 42)-(01, 43): COLON(OP) ':'
[14](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 24): NAME(NAME) 'countercolumnsum'
[15](01, 25)-(01, 27): PLUSEQUAL(OP) '+='
[15](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[15](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 06): NAME(NAME) 'if'
[16](01, 07)-(01, 10): NAME(NAME) 'sum'
[16](01, 10)-(01, 11): LPAR(OP) '('
[16](01, 11)-(01, 12): NAME(NAME) 'i'
[16](01, 12)-(01, 13): LSQB(OP) '['
[16](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[16](01, 14)-(01, 15): RSQB(OP) ']'
[16](01, 16)-(01, 19): NAME(NAME) 'for'
[16](01, 20)-(01, 21): NAME(NAME) 'i'
[16](01, 22)-(01, 24): NAME(NAME) 'in'
[16](01, 25)-(01, 26): NAME(NAME) 'A'
[16](01, 26)-(01, 27): RPAR(OP) ')'
[16](01, 28)-(01, 30): EQEQUAL(OP) '=='
[16](01, 31)-(01, 34): NAME(NAME) 'sum'
[16](01, 34)-(01, 35): LPAR(OP) '('
[16](01, 35)-(01, 36): NAME(NAME) 'A'
[16](01, 36)-(01, 37): COMMA(OP) ','
[16](01, 38)-(01, 39): LSQB(OP) '['
[16](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[16](01, 40)-(01, 41): RSQB(OP) ']'
[16](01, 41)-(01, 42): RPAR(OP) ')'
[16](01, 42)-(01, 43): COLON(OP) ':'
[16](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 24): NAME(NAME) 'countercolumnsum'
[17](01, 25)-(01, 27): PLUSEQUAL(OP) '+='
[17](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[17](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 06): NAME(NAME) 'if'
[18](01, 07)-(01, 10): NAME(NAME) 'sum'
[18](01, 10)-(01, 11): LPAR(OP) '('
[18](01, 11)-(01, 12): NAME(NAME) 'i'
[18](01, 12)-(01, 13): LSQB(OP) '['
[18](01, 13)-(01, 14): NUMBER(NUMBER) '2'
[18](01, 14)-(01, 15): RSQB(OP) ']'
[18](01, 16)-(01, 19): NAME(NAME) 'for'
[18](01, 20)-(01, 21): NAME(NAME) 'i'
[18](01, 22)-(01, 24): NAME(NAME) 'in'
[18](01, 25)-(01, 26): NAME(NAME) 'A'
[18](01, 26)-(01, 27): RPAR(OP) ')'
[18](01, 28)-(01, 30): EQEQUAL(OP) '=='
[18](01, 31)-(01, 34): NAME(NAME) 'sum'
[18](01, 34)-(01, 35): LPAR(OP) '('
[18](01, 35)-(01, 36): NAME(NAME) 'A'
[18](01, 36)-(01, 37): COMMA(OP) ','
[18](01, 38)-(01, 39): LSQB(OP) '['
[18](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[18](01, 40)-(01, 41): RSQB(OP) ']'
[18](01, 41)-(01, 42): RPAR(OP) ')'
[18](01, 42)-(01, 43): COLON(OP) ':'
[18](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 24): NAME(NAME) 'countercolumnsum'
[19](01, 25)-(01, 27): PLUSEQUAL(OP) '+='
[19](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[19](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 06): NAME(NAME) 'if'
[20](01, 07)-(01, 08): NAME(NAME) 'A'
[20](01, 08)-(01, 09): LSQB(OP) '['
[20](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[20](01, 10)-(01, 11): RSQB(OP) ']'
[20](01, 11)-(01, 12): LSQB(OP) '['
[20](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[20](01, 13)-(01, 14): RSQB(OP) ']'
[20](01, 15)-(01, 16): PLUS(OP) '+'
[20](01, 17)-(01, 18): NAME(NAME) 'A'
[20](01, 18)-(01, 19): LSQB(OP) '['
[20](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[20](01, 20)-(01, 21): RSQB(OP) ']'
[20](01, 21)-(01, 22): LSQB(OP) '['
[20](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[20](01, 23)-(01, 24): RSQB(OP) ']'
[20](01, 25)-(01, 26): PLUS(OP) '+'
[20](01, 27)-(01, 28): NAME(NAME) 'A'
[20](01, 28)-(01, 29): LSQB(OP) '['
[20](01, 29)-(01, 30): NUMBER(NUMBER) '2'
[20](01, 30)-(01, 31): RSQB(OP) ']'
[20](01, 31)-(01, 32): LSQB(OP) '['
[20](01, 32)-(01, 33): NUMBER(NUMBER) '2'
[20](01, 33)-(01, 34): RSQB(OP) ']'
[20](01, 35)-(01, 37): EQEQUAL(OP) '=='
[20](01, 38)-(01, 41): NAME(NAME) 'sum'
[20](01, 41)-(01, 42): LPAR(OP) '('
[20](01, 42)-(01, 43): NAME(NAME) 'A'
[20](01, 43)-(01, 44): COMMA(OP) ','
[20](01, 45)-(01, 46): LSQB(OP) '['
[20](01, 46)-(01, 47): NUMBER(NUMBER) '1'
[20](01, 47)-(01, 48): RSQB(OP) ']'
[20](01, 48)-(01, 49): RPAR(OP) ')'
[20](01, 49)-(01, 50): COLON(OP) ':'
[20](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 26): NAME(NAME) 'counterdiagonalsum'
[21](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[21](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[21](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 10): NAME(NAME) 'return'
[22](01, 11)-(01, 14): NAME(NAME) 'not'
[22](01, 15)-(01, 19): NAME(NAME) 'bool'
[22](01, 19)-(01, 20): LPAR(OP) '('
[22](01, 20)-(01, 33): NAME(NAME) 'counterrowsum'
[22](01, 34)-(01, 36): GREATEREQUAL(OP) '>='
[22](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[22](01, 38)-(01, 39): RPAR(OP) ')'
[22](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 05): NAME(NAME) 'print'
[25](01, 05)-(01, 06): LPAR(OP) '('
[25](01, 06)-(01, 21): NAME(NAME) 'is_magic_square'
[25](01, 21)-(01, 22): LPAR(OP) '('
[25](01, 22)-(01, 23): LSQB(OP) '['
[25](01, 23)-(01, 24): LSQB(OP) '['
[25](01, 24)-(01, 25): NUMBER(NUMBER) '8'
[25](01, 25)-(01, 26): COMMA(OP) ','
[25](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[25](01, 27)-(01, 28): COMMA(OP) ','
[25](01, 28)-(01, 29): NUMBER(NUMBER) '7'
[25](01, 29)-(01, 30): RSQB(OP) ']'
[25](01, 30)-(01, 31): COMMA(OP) ','
[25](01, 31)-(01, 32): LSQB(OP) '['
[25](01, 32)-(01, 33): NUMBER(NUMBER) '3'
[25](01, 33)-(01, 34): COMMA(OP) ','
[25](01, 34)-(01, 35): NUMBER(NUMBER) '5'
[25](01, 35)-(01, 36): COMMA(OP) ','
[25](01, 36)-(01, 37): NUMBER(NUMBER) '6'
[25](01, 37)-(01, 38): RSQB(OP) ']'
[25](01, 38)-(01, 39): COMMA(OP) ','
[25](01, 39)-(01, 40): LSQB(OP) '['
[25](01, 40)-(01, 41): NUMBER(NUMBER) '4'
[25](01, 41)-(01, 42): COMMA(OP) ','
[25](01, 42)-(01, 43): NUMBER(NUMBER) '9'
[25](01, 43)-(01, 44): COMMA(OP) ','
[25](01, 44)-(01, 45): NUMBER(NUMBER) '2'
[25](01, 45)-(01, 46): RSQB(OP) ']'
[25](01, 46)-(01, 47): RSQB(OP) ']'
[25](01, 47)-(01, 48): RPAR(OP) ')'
[25](01, 48)-(01, 49): RPAR(OP) ')'
[25](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

