[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): COLON(OP) ':'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'answer'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 15): STRING(STRING) '""'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 04)-(01, 11): COMMENT(COMMENT) '#deel 1'
[02](01, 11)-(01, 12): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 10): NAME(NAME) 'len'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 12): NAME(NAME) 's'
[03](01, 12)-(01, 13): RPAR(OP) ')'
[03](01, 14)-(01, 16): EQEQUAL(OP) '=='
[03](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[03](01, 18)-(01, 19): COLON(OP) ':'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): NAME(NAME) 's'
[04](01, 13)-(01, 15): EQEQUAL(OP) '=='
[04](01, 16)-(01, 19): STRING(STRING) '"X"'
[04](01, 19)-(01, 20): COLON(OP) ':'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 18): NAME(NAME) 'answer'
[05](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[05](01, 22)-(01, 25): STRING(STRING) '"0"'
[05](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 12): NAME(NAME) 'else'
[06](01, 12)-(01, 13): COLON(OP) ':'
[06](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'answer'
[07](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[07](01, 22)-(01, 25): STRING(STRING) '"0"'
[07](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 06): NAME(NAME) 'if'
[08](01, 07)-(01, 10): NAME(NAME) 'len'
[08](01, 10)-(01, 11): LPAR(OP) '('
[08](01, 11)-(01, 12): NAME(NAME) 's'
[08](01, 12)-(01, 13): RPAR(OP) ')'
[08](01, 14)-(01, 15): GREATER(OP) '>'
[08](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[08](01, 17)-(01, 18): COLON(OP) ':'
[08](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 12): NAME(NAME) 's'
[09](01, 12)-(01, 13): LSQB(OP) '['
[09](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[09](01, 14)-(01, 15): RSQB(OP) ']'
[09](01, 16)-(01, 18): EQEQUAL(OP) '=='
[09](01, 19)-(01, 22): STRING(STRING) '"X"'
[09](01, 22)-(01, 23): COLON(OP) ':'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 18): NAME(NAME) 'answer'
[10](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[10](01, 22)-(01, 25): STRING(STRING) '"1"'
[10](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 12): NAME(NAME) 'else'
[11](01, 12)-(01, 13): COLON(OP) ':'
[11](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 18): NAME(NAME) 'answer'
[12](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[12](01, 22)-(01, 25): STRING(STRING) '"0"'
[12](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 08)-(01, 15): COMMENT(COMMENT) '#deel 2'
[13](01, 15)-(01, 16): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 09): NAME(NAME) 'i'
[14](01, 09)-(01, 10): EQUAL(OP) '='
[14](01, 10)-(01, 11): NUMBER(NUMBER) '1'
[14](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 13): NAME(NAME) 'while'
[15](01, 14)-(01, 15): NAME(NAME) 'i'
[15](01, 16)-(01, 17): LESS(OP) '<'
[15](01, 18)-(01, 21): NAME(NAME) 'len'
[15](01, 21)-(01, 22): LPAR(OP) '('
[15](01, 22)-(01, 23): NAME(NAME) 's'
[15](01, 23)-(01, 24): RPAR(OP) ')'
[15](01, 24)-(01, 25): MINUS(OP) '-'
[15](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[15](01, 26)-(01, 27): COLON(OP) ':'
[15](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 14): NAME(NAME) 'if'
[16](01, 15)-(01, 16): NAME(NAME) 's'
[16](01, 16)-(01, 17): LSQB(OP) '['
[16](01, 17)-(01, 18): NAME(NAME) 'i'
[16](01, 18)-(01, 19): MINUS(OP) '-'
[16](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[16](01, 20)-(01, 21): RSQB(OP) ']'
[16](01, 22)-(01, 24): EQEQUAL(OP) '=='
[16](01, 25)-(01, 28): STRING(STRING) '" "'
[16](01, 29)-(01, 32): NAME(NAME) 'and'
[16](01, 33)-(01, 34): NAME(NAME) 's'
[16](01, 34)-(01, 35): LSQB(OP) '['
[16](01, 35)-(01, 36): NAME(NAME) 'i'
[16](01, 36)-(01, 37): PLUS(OP) '+'
[16](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[16](01, 38)-(01, 39): RSQB(OP) ']'
[16](01, 40)-(01, 42): EQEQUAL(OP) '=='
[16](01, 43)-(01, 46): STRING(STRING) '"X"'
[16](01, 46)-(01, 47): COLON(OP) ':'
[16](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 22): NAME(NAME) 'answer'
[17](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[17](01, 26)-(01, 29): STRING(STRING) '"1"'
[17](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 17): NAME(NAME) 'i'
[18](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[18](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[18](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 16): NAME(NAME) 'elif'
[19](01, 17)-(01, 18): NAME(NAME) 's'
[19](01, 18)-(01, 19): LSQB(OP) '['
[19](01, 19)-(01, 20): NAME(NAME) 'i'
[19](01, 20)-(01, 21): MINUS(OP) '-'
[19](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[19](01, 22)-(01, 23): RSQB(OP) ']'
[19](01, 24)-(01, 26): EQEQUAL(OP) '=='
[19](01, 27)-(01, 30): STRING(STRING) '"X"'
[19](01, 31)-(01, 34): NAME(NAME) 'and'
[19](01, 35)-(01, 36): NAME(NAME) 's'
[19](01, 36)-(01, 37): LSQB(OP) '['
[19](01, 37)-(01, 38): NAME(NAME) 'i'
[19](01, 38)-(01, 39): PLUS(OP) '+'
[19](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[19](01, 40)-(01, 41): RSQB(OP) ']'
[19](01, 42)-(01, 44): EQEQUAL(OP) '=='
[19](01, 45)-(01, 48): STRING(STRING) '" "'
[19](01, 48)-(01, 49): COLON(OP) ':'
[19](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 16): INDENT(INDENT) '                '
[20](01, 16)-(01, 22): NAME(NAME) 'answer'
[20](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[20](01, 26)-(01, 29): STRING(STRING) '"1"'
[20](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 17): NAME(NAME) 'i'
[21](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[21](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[21](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 16): NAME(NAME) 'elif'
[22](01, 17)-(01, 18): NAME(NAME) 's'
[22](01, 18)-(01, 19): LSQB(OP) '['
[22](01, 19)-(01, 20): NAME(NAME) 'i'
[22](01, 20)-(01, 21): MINUS(OP) '-'
[22](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[22](01, 22)-(01, 23): RSQB(OP) ']'
[22](01, 24)-(01, 26): EQEQUAL(OP) '=='
[22](01, 27)-(01, 30): STRING(STRING) '"X"'
[22](01, 31)-(01, 34): NAME(NAME) 'and'
[22](01, 35)-(01, 36): NAME(NAME) 's'
[22](01, 36)-(01, 37): LSQB(OP) '['
[22](01, 37)-(01, 38): NAME(NAME) 'i'
[22](01, 38)-(01, 39): PLUS(OP) '+'
[22](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[22](01, 40)-(01, 41): RSQB(OP) ']'
[22](01, 42)-(01, 44): EQEQUAL(OP) '=='
[22](01, 45)-(01, 48): STRING(STRING) '"X"'
[22](01, 48)-(01, 49): COLON(OP) ':'
[22](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 16): INDENT(INDENT) '                '
[23](01, 16)-(01, 22): NAME(NAME) 'answer'
[23](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[23](01, 26)-(01, 29): STRING(STRING) '"2"'
[23](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 16): INDENT(INDENT) '                '
[24](01, 16)-(01, 17): NAME(NAME) 'i'
[24](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[24](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[24](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 16): NAME(NAME) 'elif'
[25](01, 17)-(01, 18): NAME(NAME) 's'
[25](01, 18)-(01, 19): LSQB(OP) '['
[25](01, 19)-(01, 20): NAME(NAME) 'i'
[25](01, 21)-(01, 22): MINUS(OP) '-'
[25](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[25](01, 24)-(01, 25): RSQB(OP) ']'
[25](01, 26)-(01, 28): EQEQUAL(OP) '=='
[25](01, 29)-(01, 32): STRING(STRING) '" "'
[25](01, 33)-(01, 36): NAME(NAME) 'and'
[25](01, 37)-(01, 38): NAME(NAME) 's'
[25](01, 38)-(01, 39): LSQB(OP) '['
[25](01, 39)-(01, 40): NAME(NAME) 'i'
[25](01, 41)-(01, 42): PLUS(OP) '+'
[25](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[25](01, 44)-(01, 45): RSQB(OP) ']'
[25](01, 46)-(01, 48): EQEQUAL(OP) '=='
[25](01, 49)-(01, 52): STRING(STRING) '" "'
[25](01, 52)-(01, 53): COLON(OP) ':'
[25](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 16): INDENT(INDENT) '                '
[26](01, 16)-(01, 22): NAME(NAME) 'answer'
[26](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[26](01, 26)-(01, 29): STRING(STRING) '"0"'
[26](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 16): INDENT(INDENT) '                '
[27](01, 16)-(01, 17): NAME(NAME) 'i'
[27](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[27](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[27](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 08)-(01, 15): COMMENT(COMMENT) '#deel 3'
[28](01, 15)-(01, 16): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 10): NAME(NAME) 'if'
[29](01, 11)-(01, 12): NAME(NAME) 's'
[29](01, 12)-(01, 13): LSQB(OP) '['
[29](01, 13)-(01, 16): NAME(NAME) 'len'
[29](01, 16)-(01, 17): LPAR(OP) '('
[29](01, 17)-(01, 18): NAME(NAME) 's'
[29](01, 18)-(01, 19): RPAR(OP) ')'
[29](01, 19)-(01, 20): MINUS(OP) '-'
[29](01, 20)-(01, 21): NUMBER(NUMBER) '2'
[29](01, 21)-(01, 22): RSQB(OP) ']'
[29](01, 23)-(01, 25): EQEQUAL(OP) '=='
[29](01, 26)-(01, 29): STRING(STRING) '"X"'
[29](01, 29)-(01, 30): COLON(OP) ':'
[29](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 18): NAME(NAME) 'answer'
[30](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[30](01, 22)-(01, 25): STRING(STRING) '"1"'
[30](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 12): NAME(NAME) 'else'
[31](01, 12)-(01, 13): COLON(OP) ':'
[31](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 18): NAME(NAME) 'answer'
[32](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[32](01, 22)-(01, 25): STRING(STRING) '"0"'
[32](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 10): NAME(NAME) 'return'
[33](01, 11)-(01, 17): NAME(NAME) 'answer'
[33](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 01): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 01): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 03): NAME(NAME) 'def'
[36](01, 04)-(01, 10): NAME(NAME) 'decode'
[36](01, 10)-(01, 11): LPAR(OP) '('
[36](01, 11)-(01, 12): NAME(NAME) 's'
[36](01, 12)-(01, 13): RPAR(OP) ')'
[36](01, 13)-(01, 14): COLON(OP) ':'
[36](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 04): INDENT(INDENT) '    '
[37](01, 04)-(01, 06): NAME(NAME) 'a1'
[37](01, 07)-(01, 08): EQUAL(OP) '='
[37](01, 09)-(01, 12): STRING(STRING) '"X"'
[37](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 06): NAME(NAME) 'a2'
[38](01, 07)-(01, 08): EQUAL(OP) '='
[38](01, 09)-(01, 12): STRING(STRING) '" "'
[38](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 04)-(01, 11): COMMENT(COMMENT) '#stap 1'
[39](01, 11)-(01, 12): NL(NL) '\n'
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 04): INDENT(INDENT) '    '
[40](01, 04)-(01, 06): NAME(NAME) 'if'
[40](01, 07)-(01, 08): NAME(NAME) 's'
[40](01, 08)-(01, 09): LSQB(OP) '['
[40](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[40](01, 10)-(01, 11): RSQB(OP) ']'
[40](01, 12)-(01, 14): EQEQUAL(OP) '=='
[40](01, 15)-(01, 18): STRING(STRING) '"1"'
[40](01, 18)-(01, 19): COLON(OP) ':'
[40](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 08): INDENT(INDENT) '        '
[41](01, 08)-(01, 10): NAME(NAME) 'a1'
[41](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[41](01, 14)-(01, 17): STRING(STRING) '"X"'
[41](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 08): INDENT(INDENT) '        '
[42](01, 08)-(01, 10): NAME(NAME) 'a2'
[42](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[42](01, 14)-(01, 17): STRING(STRING) '"X"'
[42](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 04): INDENT(INDENT) '    '
[43](01, 04)-(01, 08): NAME(NAME) 'elif'
[43](01, 09)-(01, 10): NAME(NAME) 's'
[43](01, 10)-(01, 11): LSQB(OP) '['
[43](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[43](01, 12)-(01, 13): RSQB(OP) ']'
[43](01, 14)-(01, 16): EQEQUAL(OP) '=='
[43](01, 17)-(01, 20): STRING(STRING) '"0"'
[43](01, 20)-(01, 21): COLON(OP) ':'
[43](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 08): INDENT(INDENT) '        '
[44](01, 08)-(01, 10): NAME(NAME) 'a1'
[44](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[44](01, 14)-(01, 17): STRING(STRING) '" "'
[44](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 08): INDENT(INDENT) '        '
[45](01, 08)-(01, 10): NAME(NAME) 'a2'
[45](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[45](01, 14)-(01, 17): STRING(STRING) '" "'
[45](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 04)-(01, 11): COMMENT(COMMENT) '#stap 2'
[46](01, 11)-(01, 12): NL(NL) '\n'
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 04): INDENT(INDENT) '    '
[47](01, 04)-(01, 05): NAME(NAME) 'i'
[47](01, 06)-(01, 07): EQUAL(OP) '='
[47](01, 08)-(01, 09): NUMBER(NUMBER) '2'
[47](01, 10)-(01, 13): COMMENT(COMMENT) '#a1'
[47](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 04): INDENT(INDENT) '    '
[48](01, 04)-(01, 09): NAME(NAME) 'while'
[48](01, 10)-(01, 11): NAME(NAME) 'i'
[48](01, 12)-(01, 13): LESS(OP) '<'
[48](01, 14)-(01, 17): NAME(NAME) 'len'
[48](01, 17)-(01, 18): LPAR(OP) '('
[48](01, 18)-(01, 19): NAME(NAME) 's'
[48](01, 19)-(01, 20): RPAR(OP) ')'
[48](01, 20)-(01, 21): COLON(OP) ':'
[48](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 08): INDENT(INDENT) '        '
[49](01, 08)-(01, 10): NAME(NAME) 'if'
[49](01, 11)-(01, 12): NAME(NAME) 's'
[49](01, 12)-(01, 13): LSQB(OP) '['
[49](01, 13)-(01, 14): NAME(NAME) 'i'
[49](01, 15)-(01, 16): MINUS(OP) '-'
[49](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[49](01, 18)-(01, 19): RSQB(OP) ']'
[49](01, 20)-(01, 22): EQEQUAL(OP) '=='
[49](01, 23)-(01, 26): STRING(STRING) '"1"'
[49](01, 27)-(01, 30): NAME(NAME) 'and'
[49](01, 31)-(01, 33): NAME(NAME) 'a1'
[49](01, 33)-(01, 34): LSQB(OP) '['
[49](01, 34)-(01, 37): NAME(NAME) 'len'
[49](01, 37)-(01, 38): LPAR(OP) '('
[49](01, 38)-(01, 40): NAME(NAME) 'a1'
[49](01, 40)-(01, 41): RPAR(OP) ')'
[49](01, 41)-(01, 42): MINUS(OP) '-'
[49](01, 42)-(01, 43): NUMBER(NUMBER) '2'
[49](01, 43)-(01, 44): RSQB(OP) ']'
[49](01, 44)-(01, 46): EQEQUAL(OP) '=='
[49](01, 47)-(01, 50): STRING(STRING) '" "'
[49](01, 50)-(01, 51): COLON(OP) ':'
[49](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 12): INDENT(INDENT) '            '
[50](01, 12)-(01, 14): NAME(NAME) 'a1'
[50](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[50](01, 18)-(01, 21): STRING(STRING) '"X"'
[50](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 12): INDENT(INDENT) '            '
[51](01, 12)-(01, 13): NAME(NAME) 'i'
[51](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[51](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[51](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[51](02, 00)-(02, 00): DEDENT(DEDENT)
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 08): INDENT(INDENT) '        '
[52](01, 08)-(01, 12): NAME(NAME) 'elif'
[52](01, 13)-(01, 14): NAME(NAME) 's'
[52](01, 14)-(01, 15): LSQB(OP) '['
[52](01, 15)-(01, 16): NAME(NAME) 'i'
[52](01, 17)-(01, 18): MINUS(OP) '-'
[52](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[52](01, 20)-(01, 21): RSQB(OP) ']'
[52](01, 22)-(01, 24): EQEQUAL(OP) '=='
[52](01, 25)-(01, 28): STRING(STRING) '"1"'
[52](01, 29)-(01, 32): NAME(NAME) 'and'
[52](01, 33)-(01, 35): NAME(NAME) 'a1'
[52](01, 35)-(01, 36): LSQB(OP) '['
[52](01, 36)-(01, 39): NAME(NAME) 'len'
[52](01, 39)-(01, 40): LPAR(OP) '('
[52](01, 40)-(01, 42): NAME(NAME) 'a1'
[52](01, 42)-(01, 43): RPAR(OP) ')'
[52](01, 44)-(01, 45): MINUS(OP) '-'
[52](01, 46)-(01, 47): NUMBER(NUMBER) '2'
[52](01, 47)-(01, 48): RSQB(OP) ']'
[52](01, 49)-(01, 51): EQEQUAL(OP) '=='
[52](01, 52)-(01, 55): STRING(STRING) '"X"'
[52](01, 55)-(01, 56): COLON(OP) ':'
[52](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[52](02, 00)-(02, 00): DEDENT(DEDENT)
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 12): INDENT(INDENT) '            '
[53](01, 12)-(01, 14): NAME(NAME) 'a1'
[53](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[53](01, 18)-(01, 21): STRING(STRING) '" "'
[53](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[53](02, 00)-(02, 00): DEDENT(DEDENT)
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 12): INDENT(INDENT) '            '
[54](01, 12)-(01, 13): NAME(NAME) 'i'
[54](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[54](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[54](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): DEDENT(DEDENT)
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 08): INDENT(INDENT) '        '
[55](01, 08)-(01, 12): NAME(NAME) 'elif'
[55](01, 13)-(01, 14): NAME(NAME) 's'
[55](01, 14)-(01, 15): LSQB(OP) '['
[55](01, 15)-(01, 16): NAME(NAME) 'i'
[55](01, 16)-(01, 17): MINUS(OP) '-'
[55](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[55](01, 18)-(01, 19): RSQB(OP) ']'
[55](01, 20)-(01, 22): EQEQUAL(OP) '=='
[55](01, 23)-(01, 26): STRING(STRING) '"2"'
[55](01, 26)-(01, 27): COLON(OP) ':'
[55](01, 28)-(01, 35): COMMENT(COMMENT) '#bij 2x'
[55](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[55](02, 00)-(02, 00): DEDENT(DEDENT)
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[56](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[56](01, 00)-(01, 12): INDENT(INDENT) '            '
[56](01, 12)-(01, 14): NAME(NAME) 'a1'
[56](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[56](01, 18)-(01, 21): STRING(STRING) '"X"'
[56](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[56](02, 00)-(02, 00): DEDENT(DEDENT)
[56](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[57](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[57](01, 00)-(01, 12): INDENT(INDENT) '            '
[57](01, 12)-(01, 13): NAME(NAME) 'i'
[57](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[57](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[57](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[57](02, 00)-(02, 00): DEDENT(DEDENT)
[57](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[58](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[58](01, 00)-(01, 08): INDENT(INDENT) '        '
[58](01, 08)-(01, 12): NAME(NAME) 'elif'
[58](01, 13)-(01, 14): NAME(NAME) 's'
[58](01, 14)-(01, 15): LSQB(OP) '['
[58](01, 15)-(01, 16): NAME(NAME) 'i'
[58](01, 16)-(01, 17): MINUS(OP) '-'
[58](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[58](01, 18)-(01, 19): RSQB(OP) ']'
[58](01, 20)-(01, 22): EQEQUAL(OP) '=='
[58](01, 23)-(01, 26): STRING(STRING) '"0"'
[58](01, 26)-(01, 27): COLON(OP) ':'
[58](01, 28)-(01, 35): COMMENT(COMMENT) '#bij 0x'
[58](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[58](02, 00)-(02, 00): DEDENT(DEDENT)
[58](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[59](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[59](01, 00)-(01, 12): INDENT(INDENT) '            '
[59](01, 12)-(01, 14): NAME(NAME) 'a1'
[59](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[59](01, 18)-(01, 21): STRING(STRING) '" "'
[59](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[59](02, 00)-(02, 00): DEDENT(DEDENT)
[59](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[60](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[60](01, 00)-(01, 12): INDENT(INDENT) '            '
[60](01, 12)-(01, 13): NAME(NAME) 'i'
[60](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[60](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[60](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[60](02, 00)-(02, 00): DEDENT(DEDENT)
[60](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[61](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[61](01, 00)-(01, 04): INDENT(INDENT) '    '
[61](01, 04)-(01, 05): NAME(NAME) 'i'
[61](01, 06)-(01, 07): EQUAL(OP) '='
[61](01, 08)-(01, 09): NUMBER(NUMBER) '2'
[61](01, 10)-(01, 13): COMMENT(COMMENT) '#a2'
[61](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[61](02, 00)-(02, 00): DEDENT(DEDENT)
[61](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[62](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[62](01, 00)-(01, 04): INDENT(INDENT) '    '
[62](01, 04)-(01, 09): NAME(NAME) 'while'
[62](01, 10)-(01, 11): NAME(NAME) 'i'
[62](01, 12)-(01, 13): LESS(OP) '<'
[62](01, 14)-(01, 17): NAME(NAME) 'len'
[62](01, 17)-(01, 18): LPAR(OP) '('
[62](01, 18)-(01, 19): NAME(NAME) 's'
[62](01, 19)-(01, 20): RPAR(OP) ')'
[62](01, 20)-(01, 21): COLON(OP) ':'
[62](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[62](02, 00)-(02, 00): DEDENT(DEDENT)
[62](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[63](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[63](01, 00)-(01, 08): INDENT(INDENT) '        '
[63](01, 08)-(01, 10): NAME(NAME) 'if'
[63](01, 11)-(01, 12): NAME(NAME) 's'
[63](01, 12)-(01, 13): LSQB(OP) '['
[63](01, 13)-(01, 14): NAME(NAME) 'i'
[63](01, 15)-(01, 16): MINUS(OP) '-'
[63](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[63](01, 18)-(01, 19): RSQB(OP) ']'
[63](01, 20)-(01, 22): EQEQUAL(OP) '=='
[63](01, 23)-(01, 26): STRING(STRING) '"1"'
[63](01, 27)-(01, 30): NAME(NAME) 'and'
[63](01, 31)-(01, 33): NAME(NAME) 'a2'
[63](01, 33)-(01, 34): LSQB(OP) '['
[63](01, 34)-(01, 37): NAME(NAME) 'len'
[63](01, 37)-(01, 38): LPAR(OP) '('
[63](01, 38)-(01, 40): NAME(NAME) 'a2'
[63](01, 40)-(01, 41): RPAR(OP) ')'
[63](01, 42)-(01, 43): MINUS(OP) '-'
[63](01, 44)-(01, 45): NUMBER(NUMBER) '2'
[63](01, 45)-(01, 46): RSQB(OP) ']'
[63](01, 47)-(01, 49): EQEQUAL(OP) '=='
[63](01, 50)-(01, 53): STRING(STRING) '" "'
[63](01, 53)-(01, 54): COLON(OP) ':'
[63](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[63](02, 00)-(02, 00): DEDENT(DEDENT)
[63](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[64](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[64](01, 00)-(01, 12): INDENT(INDENT) '            '
[64](01, 12)-(01, 14): NAME(NAME) 'a2'
[64](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[64](01, 18)-(01, 21): STRING(STRING) '"X"'
[64](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[64](02, 00)-(02, 00): DEDENT(DEDENT)
[64](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[65](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[65](01, 00)-(01, 12): INDENT(INDENT) '            '
[65](01, 12)-(01, 13): NAME(NAME) 'i'
[65](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[65](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[65](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[65](02, 00)-(02, 00): DEDENT(DEDENT)
[65](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[66](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[66](01, 00)-(01, 08): INDENT(INDENT) '        '
[66](01, 08)-(01, 12): NAME(NAME) 'elif'
[66](01, 13)-(01, 14): NAME(NAME) 's'
[66](01, 14)-(01, 15): LSQB(OP) '['
[66](01, 15)-(01, 16): NAME(NAME) 'i'
[66](01, 17)-(01, 18): MINUS(OP) '-'
[66](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[66](01, 20)-(01, 21): RSQB(OP) ']'
[66](01, 22)-(01, 24): EQEQUAL(OP) '=='
[66](01, 25)-(01, 28): STRING(STRING) '"1"'
[66](01, 29)-(01, 32): NAME(NAME) 'and'
[66](01, 33)-(01, 35): NAME(NAME) 'a2'
[66](01, 35)-(01, 36): LSQB(OP) '['
[66](01, 36)-(01, 39): NAME(NAME) 'len'
[66](01, 39)-(01, 40): LPAR(OP) '('
[66](01, 40)-(01, 42): NAME(NAME) 'a2'
[66](01, 42)-(01, 43): RPAR(OP) ')'
[66](01, 44)-(01, 45): MINUS(OP) '-'
[66](01, 46)-(01, 47): NUMBER(NUMBER) '2'
[66](01, 47)-(01, 48): RSQB(OP) ']'
[66](01, 49)-(01, 51): EQEQUAL(OP) '=='
[66](01, 52)-(01, 55): STRING(STRING) '"X"'
[66](01, 55)-(01, 56): COLON(OP) ':'
[66](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[66](02, 00)-(02, 00): DEDENT(DEDENT)
[66](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[67](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[67](01, 00)-(01, 12): INDENT(INDENT) '            '
[67](01, 12)-(01, 14): NAME(NAME) 'a2'
[67](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[67](01, 18)-(01, 21): STRING(STRING) '" "'
[67](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[67](02, 00)-(02, 00): DEDENT(DEDENT)
[67](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[68](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[68](01, 00)-(01, 12): INDENT(INDENT) '            '
[68](01, 12)-(01, 13): NAME(NAME) 'i'
[68](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[68](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[68](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[68](02, 00)-(02, 00): DEDENT(DEDENT)
[68](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[69](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[69](01, 00)-(01, 08): INDENT(INDENT) '        '
[69](01, 08)-(01, 12): NAME(NAME) 'elif'
[69](01, 13)-(01, 14): NAME(NAME) 's'
[69](01, 14)-(01, 15): LSQB(OP) '['
[69](01, 15)-(01, 16): NAME(NAME) 'i'
[69](01, 17)-(01, 18): MINUS(OP) '-'
[69](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[69](01, 20)-(01, 21): RSQB(OP) ']'
[69](01, 22)-(01, 24): EQEQUAL(OP) '=='
[69](01, 25)-(01, 28): STRING(STRING) '"2"'
[69](01, 28)-(01, 29): COLON(OP) ':'
[69](01, 31)-(01, 39): COMMENT(COMMENT) '# bij 2x'
[69](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[69](02, 00)-(02, 00): DEDENT(DEDENT)
[69](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[70](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[70](01, 00)-(01, 12): INDENT(INDENT) '            '
[70](01, 12)-(01, 14): NAME(NAME) 'a2'
[70](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[70](01, 18)-(01, 21): STRING(STRING) '"X"'
[70](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[70](02, 00)-(02, 00): DEDENT(DEDENT)
[70](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[71](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[71](01, 00)-(01, 12): INDENT(INDENT) '            '
[71](01, 12)-(01, 13): NAME(NAME) 'i'
[71](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[71](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[71](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[71](02, 00)-(02, 00): DEDENT(DEDENT)
[71](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[72](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[72](01, 00)-(01, 08): INDENT(INDENT) '        '
[72](01, 08)-(01, 12): NAME(NAME) 'elif'
[72](01, 13)-(01, 14): NAME(NAME) 's'
[72](01, 14)-(01, 15): LSQB(OP) '['
[72](01, 15)-(01, 16): NAME(NAME) 'i'
[72](01, 17)-(01, 18): MINUS(OP) '-'
[72](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[72](01, 20)-(01, 21): RSQB(OP) ']'
[72](01, 22)-(01, 24): EQEQUAL(OP) '=='
[72](01, 25)-(01, 28): STRING(STRING) '"0"'
[72](01, 28)-(01, 29): COLON(OP) ':'
[72](01, 31)-(01, 39): COMMENT(COMMENT) '# bij 0x'
[72](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[72](02, 00)-(02, 00): DEDENT(DEDENT)
[72](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[73](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[73](01, 00)-(01, 12): INDENT(INDENT) '            '
[73](01, 12)-(01, 14): NAME(NAME) 'a2'
[73](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[73](01, 18)-(01, 21): STRING(STRING) '" "'
[73](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[73](02, 00)-(02, 00): DEDENT(DEDENT)
[73](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[74](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[74](01, 00)-(01, 12): INDENT(INDENT) '            '
[74](01, 12)-(01, 13): NAME(NAME) 'i'
[74](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[74](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[74](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[74](02, 00)-(02, 00): DEDENT(DEDENT)
[74](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[75](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[75](01, 04)-(01, 59): COMMENT(COMMENT) '#if s[1] == "0" or s[0:4] == "1122" or s[0:3] == "122":'
[75](01, 59)-(01, 60): NL(NL) '\n'
[75](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[76](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[76](01, 08)-(01, 18): COMMENT(COMMENT) '#print(a2)'
[76](01, 18)-(01, 19): NL(NL) '\n'
[76](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[77](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[77](01, 00)-(01, 04): INDENT(INDENT) '    '
[77](01, 04)-(01, 06): NAME(NAME) 'if'
[77](01, 07)-(01, 08): NAME(NAME) 's'
[77](01, 08)-(01, 09): LSQB(OP) '['
[77](01, 09)-(01, 10): NUMBER(NUMBER) '1'
[77](01, 10)-(01, 11): RSQB(OP) ']'
[77](01, 12)-(01, 14): EQEQUAL(OP) '=='
[77](01, 15)-(01, 18): STRING(STRING) '"0"'
[77](01, 18)-(01, 19): COLON(OP) ':'
[77](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[77](02, 00)-(02, 00): DEDENT(DEDENT)
[77](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[78](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[78](01, 00)-(01, 08): INDENT(INDENT) '        '
[78](01, 08)-(01, 13): NAME(NAME) 'print'
[78](01, 13)-(01, 14): LPAR(OP) '('
[78](01, 14)-(01, 16): NAME(NAME) 'a2'
[78](01, 16)-(01, 17): RPAR(OP) ')'
[78](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[78](02, 00)-(02, 00): DEDENT(DEDENT)
[78](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[79](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[79](01, 00)-(01, 04): INDENT(INDENT) '    '
[79](01, 04)-(01, 08): NAME(NAME) 'elif'
[79](01, 09)-(01, 10): LPAR(OP) '('
[79](01, 10)-(01, 13): NAME(NAME) 'len'
[79](01, 13)-(01, 14): LPAR(OP) '('
[79](01, 14)-(01, 15): NAME(NAME) 's'
[79](01, 15)-(01, 16): RPAR(OP) ')'
[79](01, 17)-(01, 19): EQEQUAL(OP) '=='
[79](01, 20)-(01, 21): NUMBER(NUMBER) '2'
[79](01, 22)-(01, 25): NAME(NAME) 'and'
[79](01, 26)-(01, 27): NAME(NAME) 's'
[79](01, 27)-(01, 28): LSQB(OP) '['
[79](01, 28)-(01, 29): NUMBER(NUMBER) '0'
[79](01, 29)-(01, 30): COLON(OP) ':'
[79](01, 30)-(01, 31): NUMBER(NUMBER) '2'
[79](01, 31)-(01, 32): RSQB(OP) ']'
[79](01, 33)-(01, 35): EQEQUAL(OP) '=='
[79](01, 36)-(01, 40): STRING(STRING) '"11"'
[79](01, 40)-(01, 41): RPAR(OP) ')'
[79](01, 42)-(01, 44): NAME(NAME) 'or'
[79](01, 45)-(01, 46): NAME(NAME) 's'
[79](01, 46)-(01, 47): LSQB(OP) '['
[79](01, 47)-(01, 48): NUMBER(NUMBER) '3'
[79](01, 48)-(01, 49): RSQB(OP) ']'
[79](01, 50)-(01, 52): EQEQUAL(OP) '=='
[79](01, 53)-(01, 56): STRING(STRING) '"0"'
[79](01, 57)-(01, 59): NAME(NAME) 'or'
[79](01, 60)-(01, 61): NAME(NAME) 's'
[79](01, 61)-(01, 62): LSQB(OP) '['
[79](01, 62)-(01, 63): NUMBER(NUMBER) '1'
[79](01, 63)-(01, 64): RSQB(OP) ']'
[79](01, 65)-(01, 67): EQEQUAL(OP) '=='
[79](01, 68)-(01, 71): STRING(STRING) '"2"'
[79](01, 72)-(01, 74): NAME(NAME) 'or'
[79](01, 75)-(01, 76): NAME(NAME) 's'
[79](01, 76)-(01, 77): LSQB(OP) '['
[79](01, 77)-(01, 78): NUMBER(NUMBER) '1'
[79](01, 78)-(01, 79): COLON(OP) ':'
[79](01, 79)-(01, 80): NUMBER(NUMBER) '3'
[79](01, 80)-(01, 81): RSQB(OP) ']'
[79](01, 82)-(01, 84): EQEQUAL(OP) '=='
[79](01, 85)-(01, 89): STRING(STRING) '"22"'
[79](01, 89)-(01, 90): COLON(OP) ':'
[79](01, 90)-(01, 91): NEWLINE(NEWLINE) '\n'
[79](02, 00)-(02, 00): DEDENT(DEDENT)
[79](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[80](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[80](01, 00)-(01, 08): INDENT(INDENT) '        '
[80](01, 08)-(01, 13): NAME(NAME) 'print'
[80](01, 13)-(01, 14): LPAR(OP) '('
[80](01, 14)-(01, 16): NAME(NAME) 'a1'
[80](01, 16)-(01, 17): RPAR(OP) ')'
[80](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[80](02, 00)-(02, 00): DEDENT(DEDENT)
[80](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[81](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[81](01, 00)-(01, 04): INDENT(INDENT) '    '
[81](01, 04)-(01, 08): NAME(NAME) 'else'
[81](01, 08)-(01, 09): COLON(OP) ':'
[81](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[81](02, 00)-(02, 00): DEDENT(DEDENT)
[81](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[82](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[82](01, 00)-(01, 08): INDENT(INDENT) '        '
[82](01, 08)-(01, 13): NAME(NAME) 'print'
[82](01, 13)-(01, 14): LPAR(OP) '('
[82](01, 14)-(01, 16): NAME(NAME) 'a2'
[82](01, 16)-(01, 17): RPAR(OP) ')'
[82](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[82](02, 00)-(02, 00): DEDENT(DEDENT)
[82](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[83](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[83](01, 00)-(01, 08): INDENT(INDENT) '        '
[83](01, 08)-(01, 13): NAME(NAME) 'print'
[83](01, 13)-(01, 14): LPAR(OP) '('
[83](01, 14)-(01, 16): NAME(NAME) 'a1'
[83](01, 16)-(01, 17): RPAR(OP) ')'
[83](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[83](02, 00)-(02, 00): DEDENT(DEDENT)
[83](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

