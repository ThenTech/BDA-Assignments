[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'i'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[00](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'def'
[01](01, 04)-(01, 11): NAME(NAME) 'convert'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 18): NAME(NAME) 'number'
[01](01, 18)-(01, 19): RPAR(OP) ')'
[01](01, 19)-(01, 20): COLON(OP) ':'
[01](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'while'
[02](01, 10)-(01, 13): NAME(NAME) 'len'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 20): NAME(NAME) 'number'
[02](01, 20)-(01, 21): RPAR(OP) ')'
[02](01, 22)-(01, 23): LESS(OP) '<'
[02](01, 23)-(01, 24): GREATER(OP) '>'
[02](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[02](01, 26)-(01, 27): COLON(OP) ':'
[02](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 14): NAME(NAME) 'return'
[03](01, 15)-(01, 22): NAME(NAME) 'convert'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 29): NAME(NAME) 'number'
[03](01, 29)-(01, 30): LSQB(OP) '['
[03](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[03](01, 31)-(01, 32): COLON(OP) ':'
[03](01, 32)-(01, 35): NAME(NAME) 'len'
[03](01, 35)-(01, 36): LPAR(OP) '('
[03](01, 36)-(01, 42): NAME(NAME) 'number'
[03](01, 42)-(01, 43): RPAR(OP) ')'
[03](01, 43)-(01, 44): MINUS(OP) '-'
[03](01, 44)-(01, 45): LPAR(OP) '('
[03](01, 45)-(01, 46): NAME(NAME) 'i'
[03](01, 46)-(01, 47): PLUS(OP) '+'
[03](01, 47)-(01, 48): NUMBER(NUMBER) '1'
[03](01, 48)-(01, 49): RPAR(OP) ')'
[03](01, 49)-(01, 50): RSQB(OP) ']'
[03](01, 50)-(01, 51): RPAR(OP) ')'
[03](01, 52)-(01, 53): PLUS(OP) '+'
[03](01, 54)-(01, 55): LPAR(OP) '('
[03](01, 55)-(01, 57): NUMBER(NUMBER) '10'
[03](01, 57)-(01, 59): DOUBLESTAR(OP) '**'
[03](01, 59)-(01, 60): NAME(NAME) 'i'
[03](01, 60)-(01, 61): RPAR(OP) ')'
[03](01, 62)-(01, 63): STAR(OP) '*'
[03](01, 64)-(01, 67): NAME(NAME) 'int'
[03](01, 67)-(01, 68): LPAR(OP) '('
[03](01, 68)-(01, 74): NAME(NAME) 'number'
[03](01, 74)-(01, 75): LSQB(OP) '['
[03](01, 75)-(01, 78): NAME(NAME) 'len'
[03](01, 78)-(01, 79): LPAR(OP) '('
[03](01, 79)-(01, 85): NAME(NAME) 'number'
[03](01, 85)-(01, 86): RPAR(OP) ')'
[03](01, 87)-(01, 88): MINUS(OP) '-'
[03](01, 89)-(01, 90): NAME(NAME) 'i'
[03](01, 91)-(01, 92): MINUS(OP) '-'
[03](01, 93)-(01, 94): NUMBER(NUMBER) '1'
[03](01, 94)-(01, 95): RSQB(OP) ']'
[03](01, 95)-(01, 96): RPAR(OP) ')'
[03](01, 97)-(01, 98): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 08): NAME(NAME) 'pass'
[04](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'return'
[05](01, 11)-(01, 14): NAME(NAME) 'int'
[05](01, 14)-(01, 15): LPAR(OP) '('
[05](01, 15)-(01, 21): NAME(NAME) 'number'
[05](01, 21)-(01, 22): RPAR(OP) ')'
[05](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 07): NAME(NAME) 'convert'
[07](01, 07)-(01, 08): LPAR(OP) '('
[07](01, 08)-(01, 15): STRING(STRING) '"12345"'
[07](01, 15)-(01, 16): RPAR(OP) ')'
[07](01, 16)-(01, 17): NEWLINE(NEWLINE)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

