[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 18): NAME(NAME) 'cleanup_spaces'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 25): NAME(NAME) 'string'
[00](01, 25)-(01, 26): RPAR(OP) ')'
[00](01, 26)-(01, 27): COLON(OP) ':'
[00](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'spaties'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 17): NAME(NAME) 'nieuwe_string'
[02](01, 17)-(01, 18): EQUAL(OP) '='
[02](01, 18)-(01, 20): STRING(STRING) '""'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 10): NAME(NAME) 'el'
[03](01, 11)-(01, 13): NAME(NAME) 'in'
[03](01, 14)-(01, 20): NAME(NAME) 'string'
[03](01, 20)-(01, 21): COLON(OP) ':'
[03](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 13): NAME(NAME) 'el'
[04](01, 14)-(01, 16): EQEQUAL(OP) '=='
[04](01, 17)-(01, 20): STRING(STRING) '" "'
[04](01, 20)-(01, 21): COLON(OP) ':'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 14): NAME(NAME) 'if'
[05](01, 15)-(01, 22): NAME(NAME) 'spaties'
[05](01, 23)-(01, 25): EQEQUAL(OP) '=='
[05](01, 26)-(01, 27): NUMBER(NUMBER) '0'
[05](01, 27)-(01, 28): COLON(OP) ':'
[05](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 29): NAME(NAME) 'nieuwe_string'
[06](01, 30)-(01, 31): EQUAL(OP) '='
[06](01, 32)-(01, 45): NAME(NAME) 'nieuwe_string'
[06](01, 46)-(01, 47): PLUS(OP) '+'
[06](01, 48)-(01, 50): NAME(NAME) 'el'
[06](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 16): INDENT(INDENT) '                '
[07](01, 16)-(01, 23): NAME(NAME) 'spaties'
[07](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[07](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[07](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'elif'
[08](01, 13)-(01, 15): NAME(NAME) 'el'
[08](01, 16)-(01, 18): NOTEQUAL(OP) '!='
[08](01, 19)-(01, 22): STRING(STRING) '" "'
[08](01, 22)-(01, 23): COLON(OP) ':'
[08](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 19): NAME(NAME) 'spaties'
[09](01, 20)-(01, 21): EQUAL(OP) '='
[09](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 25): NAME(NAME) 'nieuwe_string'
[10](01, 26)-(01, 27): EQUAL(OP) '='
[10](01, 28)-(01, 41): NAME(NAME) 'nieuwe_string'
[10](01, 42)-(01, 43): PLUS(OP) '+'
[10](01, 44)-(01, 46): NAME(NAME) 'el'
[10](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 06): NAME(NAME) 'if'
[12](01, 07)-(01, 20): NAME(NAME) 'nieuwe_string'
[12](01, 20)-(01, 21): LSQB(OP) '['
[12](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[12](01, 22)-(01, 23): RSQB(OP) ']'
[12](01, 24)-(01, 26): EQEQUAL(OP) '=='
[12](01, 27)-(01, 30): STRING(STRING) '" "'
[12](01, 30)-(01, 31): COLON(OP) ':'
[12](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 21): NAME(NAME) 'nieuwe_string'
[13](01, 22)-(01, 23): EQUAL(OP) '='
[13](01, 24)-(01, 37): NAME(NAME) 'nieuwe_string'
[13](01, 37)-(01, 38): LSQB(OP) '['
[13](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[13](01, 39)-(01, 40): COLON(OP) ':'
[13](01, 40)-(01, 41): RSQB(OP) ']'
[13](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 06): NAME(NAME) 'if'
[14](01, 07)-(01, 20): NAME(NAME) 'nieuwe_string'
[14](01, 20)-(01, 21): LSQB(OP) '['
[14](01, 21)-(01, 22): MINUS(OP) '-'
[14](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[14](01, 23)-(01, 24): RSQB(OP) ']'
[14](01, 25)-(01, 27): EQEQUAL(OP) '=='
[14](01, 28)-(01, 31): STRING(STRING) '" "'
[14](01, 31)-(01, 32): COLON(OP) ':'
[14](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 21): NAME(NAME) 'nieuwe_string'
[15](01, 22)-(01, 23): EQUAL(OP) '='
[15](01, 24)-(01, 37): NAME(NAME) 'nieuwe_string'
[15](01, 37)-(01, 38): LSQB(OP) '['
[15](01, 38)-(01, 39): COLON(OP) ':'
[15](01, 39)-(01, 40): MINUS(OP) '-'
[15](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[15](01, 41)-(01, 42): RSQB(OP) ']'
[15](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 10): NAME(NAME) 'return'
[17](01, 11)-(01, 24): NAME(NAME) 'nieuwe_string'
[17](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

