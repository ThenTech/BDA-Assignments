[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 16): NAME(NAME) 'as_intersect'
[00](01, 16)-(01, 17): LPAR(OP) '('
[00](01, 17)-(01, 18): NAME(NAME) 'a'
[00](01, 18)-(01, 19): COMMA(OP) ','
[00](01, 20)-(01, 21): NAME(NAME) 'b'
[00](01, 21)-(01, 22): COMMA(OP) ','
[00](01, 23)-(01, 24): NAME(NAME) 'c'
[00](01, 24)-(01, 25): COMMA(OP) ','
[00](01, 26)-(01, 27): NAME(NAME) 'd'
[00](01, 27)-(01, 28): RPAR(OP) ')'
[00](01, 28)-(01, 29): COLON(OP) ':'
[00](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): NAME(NAME) 'a'
[01](01, 09)-(01, 11): LESSEQUAL(OP) '<='
[01](01, 12)-(01, 13): NAME(NAME) 'd'
[01](01, 14)-(01, 16): NAME(NAME) 'or'
[01](01, 17)-(01, 18): NAME(NAME) 'b'
[01](01, 19)-(01, 21): GREATEREQUAL(OP) '>='
[01](01, 22)-(01, 23): NAME(NAME) 'c'
[01](01, 23)-(01, 24): COLON(OP) ':'
[01](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 19): NAME(NAME) 'True'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 10): NAME(NAME) 'return'
[03](01, 11)-(01, 16): NAME(NAME) 'False'
[03](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'def'
[05](01, 04)-(01, 18): NAME(NAME) 'does_intersect'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 21): NAME(NAME) 'x1'
[05](01, 21)-(01, 22): COMMA(OP) ','
[05](01, 23)-(01, 25): NAME(NAME) 'y1'
[05](01, 25)-(01, 26): COMMA(OP) ','
[05](01, 27)-(01, 29): NAME(NAME) 'w1'
[05](01, 29)-(01, 30): COMMA(OP) ','
[05](01, 31)-(01, 33): NAME(NAME) 'h1'
[05](01, 33)-(01, 34): COMMA(OP) ','
[05](01, 35)-(01, 37): NAME(NAME) 'x2'
[05](01, 37)-(01, 38): COMMA(OP) ','
[05](01, 39)-(01, 41): NAME(NAME) 'y2'
[05](01, 41)-(01, 42): COMMA(OP) ','
[05](01, 43)-(01, 45): NAME(NAME) 'w2'
[05](01, 45)-(01, 46): COMMA(OP) ','
[05](01, 47)-(01, 49): NAME(NAME) 'h2'
[05](01, 49)-(01, 50): RPAR(OP) ')'
[05](01, 50)-(01, 51): COLON(OP) ':'
[05](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 04)-(01, 49): COMMENT(COMMENT) '# a = x1   b = x1 + w1   c = x2   d = x2 + w2'
[06](01, 49)-(01, 50): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 06): NAME(NAME) 'if'
[08](01, 07)-(01, 19): NAME(NAME) 'as_intersect'
[08](01, 19)-(01, 20): LPAR(OP) '('
[08](01, 20)-(01, 22): NAME(NAME) 'x1'
[08](01, 22)-(01, 23): COMMA(OP) ','
[08](01, 24)-(01, 26): NAME(NAME) 'x1'
[08](01, 27)-(01, 28): PLUS(OP) '+'
[08](01, 29)-(01, 31): NAME(NAME) 'w1'
[08](01, 31)-(01, 32): COMMA(OP) ','
[08](01, 33)-(01, 35): NAME(NAME) 'x2'
[08](01, 35)-(01, 36): COMMA(OP) ','
[08](01, 37)-(01, 39): NAME(NAME) 'x2'
[08](01, 40)-(01, 41): PLUS(OP) '+'
[08](01, 42)-(01, 44): NAME(NAME) 'w2'
[08](01, 44)-(01, 45): RPAR(OP) ')'
[08](01, 46)-(01, 49): NAME(NAME) 'and'
[08](01, 50)-(01, 62): NAME(NAME) 'as_intersect'
[08](01, 62)-(01, 63): LPAR(OP) '('
[08](01, 63)-(01, 65): NAME(NAME) 'y1'
[08](01, 65)-(01, 66): COMMA(OP) ','
[08](01, 67)-(01, 69): NAME(NAME) 'y1'
[08](01, 70)-(01, 71): PLUS(OP) '+'
[08](01, 72)-(01, 74): NAME(NAME) 'h1'
[08](01, 74)-(01, 75): COMMA(OP) ','
[08](01, 76)-(01, 78): NAME(NAME) 'y2'
[08](01, 78)-(01, 79): COMMA(OP) ','
[08](01, 80)-(01, 82): NAME(NAME) 'y2'
[08](01, 83)-(01, 84): PLUS(OP) '+'
[08](01, 85)-(01, 87): NAME(NAME) 'h2'
[08](01, 87)-(01, 88): RPAR(OP) ')'
[08](01, 88)-(01, 89): COLON(OP) ':'
[08](01, 89)-(01, 90): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 14): NAME(NAME) 'return'
[09](01, 15)-(01, 19): NAME(NAME) 'True'
[09](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'return'
[10](01, 11)-(01, 16): NAME(NAME) 'False'
[10](01, 16)-(01, 17): NEWLINE(NEWLINE)
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

