[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'amount'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 12): NAME(NAME) 'int'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 18): NAME(NAME) 'input'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 66): STRING(STRING) '"Write here how much you have to pay in cent: "'
[00](01, 66)-(01, 67): RPAR(OP) ')'
[00](01, 67)-(01, 68): RPAR(OP) ')'
[00](01, 68)-(01, 69): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): NAME(NAME) 'twoE'
[01](01, 05)-(01, 06): EQUAL(OP) '='
[01](01, 07)-(01, 08): NUMBER(NUMBER) '0'
[01](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): NAME(NAME) 'oneE'
[02](01, 05)-(01, 06): EQUAL(OP) '='
[02](01, 07)-(01, 08): NUMBER(NUMBER) '0'
[02](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 06): NAME(NAME) 'fiftyC'
[03](01, 07)-(01, 08): EQUAL(OP) '='
[03](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[03](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 07): NAME(NAME) 'twentyC'
[04](01, 08)-(01, 09): EQUAL(OP) '='
[04](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[04](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): NAME(NAME) 'tenC'
[05](01, 05)-(01, 06): EQUAL(OP) '='
[05](01, 07)-(01, 08): NUMBER(NUMBER) '0'
[05](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 05): NAME(NAME) 'fiveC'
[06](01, 06)-(01, 07): EQUAL(OP) '='
[06](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[06](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): NAME(NAME) 'twoC'
[07](01, 05)-(01, 06): EQUAL(OP) '='
[07](01, 07)-(01, 08): NUMBER(NUMBER) '0'
[07](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): NAME(NAME) 'oneC'
[08](01, 05)-(01, 06): EQUAL(OP) '='
[08](01, 07)-(01, 08): NUMBER(NUMBER) '0'
[08](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 05): NAME(NAME) 'while'
[09](01, 06)-(01, 07): LPAR(OP) '('
[09](01, 07)-(01, 13): NAME(NAME) 'amount'
[09](01, 14)-(01, 15): SLASH(OP) '/'
[09](01, 16)-(01, 19): NUMBER(NUMBER) '200'
[09](01, 19)-(01, 20): RPAR(OP) ')'
[09](01, 21)-(01, 23): GREATEREQUAL(OP) '>='
[09](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[09](01, 25)-(01, 26): COLON(OP) ':'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 08): NAME(NAME) 'twoE'
[10](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[10](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[10](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'amount'
[11](01, 11)-(01, 13): MINEQUAL(OP) '-='
[11](01, 14)-(01, 17): NUMBER(NUMBER) '200'
[11](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 06): NAME(NAME) 'if'
[12](01, 07)-(01, 13): NAME(NAME) 'amount'
[12](01, 14)-(01, 15): LESS(OP) '<'
[12](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[12](01, 17)-(01, 18): COLON(OP) ':'
[12](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 13): NAME(NAME) 'break'
[13](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 05): NAME(NAME) 'while'
[14](01, 06)-(01, 07): LPAR(OP) '('
[14](01, 07)-(01, 13): NAME(NAME) 'amount'
[14](01, 14)-(01, 15): SLASH(OP) '/'
[14](01, 16)-(01, 19): NUMBER(NUMBER) '100'
[14](01, 19)-(01, 20): RPAR(OP) ')'
[14](01, 21)-(01, 23): GREATEREQUAL(OP) '>='
[14](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[14](01, 25)-(01, 26): COLON(OP) ':'
[14](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 08): NAME(NAME) 'oneE'
[15](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[15](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[15](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 10): NAME(NAME) 'amount'
[16](01, 11)-(01, 13): MINEQUAL(OP) '-='
[16](01, 14)-(01, 17): NUMBER(NUMBER) '100'
[16](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 06): NAME(NAME) 'if'
[17](01, 07)-(01, 13): NAME(NAME) 'amount'
[17](01, 14)-(01, 15): LESS(OP) '<'
[17](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[17](01, 17)-(01, 18): COLON(OP) ':'
[17](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 13): NAME(NAME) 'break'
[18](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 05): NAME(NAME) 'while'
[19](01, 06)-(01, 07): LPAR(OP) '('
[19](01, 07)-(01, 13): NAME(NAME) 'amount'
[19](01, 14)-(01, 15): SLASH(OP) '/'
[19](01, 16)-(01, 18): NUMBER(NUMBER) '50'
[19](01, 18)-(01, 19): RPAR(OP) ')'
[19](01, 20)-(01, 22): GREATEREQUAL(OP) '>='
[19](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[19](01, 24)-(01, 25): COLON(OP) ':'
[19](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 10): NAME(NAME) 'fiftyC'
[20](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[20](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[20](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 10): NAME(NAME) 'amount'
[21](01, 11)-(01, 13): MINEQUAL(OP) '-='
[21](01, 14)-(01, 16): NUMBER(NUMBER) '50'
[21](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 06): NAME(NAME) 'if'
[22](01, 07)-(01, 13): NAME(NAME) 'amount'
[22](01, 14)-(01, 15): LESS(OP) '<'
[22](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[22](01, 17)-(01, 18): COLON(OP) ':'
[22](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 13): NAME(NAME) 'break'
[23](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 05): NAME(NAME) 'while'
[24](01, 06)-(01, 12): NAME(NAME) 'amount'
[24](01, 13)-(01, 14): SLASH(OP) '/'
[24](01, 15)-(01, 17): NUMBER(NUMBER) '20'
[24](01, 18)-(01, 20): GREATEREQUAL(OP) '>='
[24](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[24](01, 22)-(01, 23): COLON(OP) ':'
[24](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 11): NAME(NAME) 'twentyC'
[25](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[25](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[25](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 10): NAME(NAME) 'amount'
[26](01, 11)-(01, 13): MINEQUAL(OP) '-='
[26](01, 14)-(01, 16): NUMBER(NUMBER) '20'
[26](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 06): NAME(NAME) 'if'
[27](01, 07)-(01, 13): NAME(NAME) 'amount'
[27](01, 14)-(01, 15): LESS(OP) '<'
[27](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[27](01, 17)-(01, 18): COLON(OP) ':'
[27](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 08): INDENT(INDENT) '        '
[28](01, 08)-(01, 13): NAME(NAME) 'break'
[28](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 05): NAME(NAME) 'while'
[29](01, 06)-(01, 12): NAME(NAME) 'amount'
[29](01, 13)-(01, 14): SLASH(OP) '/'
[29](01, 15)-(01, 17): NUMBER(NUMBER) '10'
[29](01, 18)-(01, 20): GREATEREQUAL(OP) '>='
[29](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[29](01, 22)-(01, 23): COLON(OP) ':'
[29](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 08): NAME(NAME) 'tenC'
[30](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[30](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[30](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 10): NAME(NAME) 'amount'
[31](01, 11)-(01, 13): MINEQUAL(OP) '-='
[31](01, 14)-(01, 16): NUMBER(NUMBER) '10'
[31](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 06): NAME(NAME) 'if'
[32](01, 07)-(01, 13): NAME(NAME) 'amount'
[32](01, 14)-(01, 15): LESS(OP) '<'
[32](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[32](01, 17)-(01, 18): COLON(OP) ':'
[32](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 13): NAME(NAME) 'break'
[33](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 05): NAME(NAME) 'while'
[34](01, 06)-(01, 12): NAME(NAME) 'amount'
[34](01, 13)-(01, 14): SLASH(OP) '/'
[34](01, 15)-(01, 16): NUMBER(NUMBER) '5'
[34](01, 17)-(01, 19): GREATEREQUAL(OP) '>='
[34](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[34](01, 21)-(01, 22): COLON(OP) ':'
[34](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 04): INDENT(INDENT) '    '
[35](01, 04)-(01, 09): NAME(NAME) 'fiveC'
[35](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[35](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[35](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 04): INDENT(INDENT) '    '
[36](01, 04)-(01, 10): NAME(NAME) 'amount'
[36](01, 11)-(01, 13): MINEQUAL(OP) '-='
[36](01, 14)-(01, 15): NUMBER(NUMBER) '5'
[36](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 04): INDENT(INDENT) '    '
[37](01, 04)-(01, 06): NAME(NAME) 'if'
[37](01, 07)-(01, 13): NAME(NAME) 'amount'
[37](01, 14)-(01, 15): LESS(OP) '<'
[37](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[37](01, 17)-(01, 18): COLON(OP) ':'
[37](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 08): INDENT(INDENT) '        '
[38](01, 08)-(01, 13): NAME(NAME) 'break'
[38](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 05): NAME(NAME) 'while'
[39](01, 06)-(01, 12): NAME(NAME) 'amount'
[39](01, 13)-(01, 14): SLASH(OP) '/'
[39](01, 15)-(01, 16): NUMBER(NUMBER) '2'
[39](01, 17)-(01, 19): GREATEREQUAL(OP) '>='
[39](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[39](01, 21)-(01, 22): COLON(OP) ':'
[39](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 04): INDENT(INDENT) '    '
[40](01, 04)-(01, 08): NAME(NAME) 'twoC'
[40](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[40](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[40](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 04): INDENT(INDENT) '    '
[41](01, 04)-(01, 10): NAME(NAME) 'amount'
[41](01, 11)-(01, 13): MINEQUAL(OP) '-='
[41](01, 14)-(01, 15): NUMBER(NUMBER) '2'
[41](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 04): INDENT(INDENT) '    '
[42](01, 04)-(01, 06): NAME(NAME) 'if'
[42](01, 07)-(01, 13): NAME(NAME) 'amount'
[42](01, 14)-(01, 15): LESS(OP) '<'
[42](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[42](01, 17)-(01, 18): COLON(OP) ':'
[42](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 08): INDENT(INDENT) '        '
[43](01, 08)-(01, 13): NAME(NAME) 'break'
[43](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 05): NAME(NAME) 'while'
[44](01, 06)-(01, 12): NAME(NAME) 'amount'
[44](01, 13)-(01, 14): SLASH(OP) '/'
[44](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[44](01, 17)-(01, 19): GREATEREQUAL(OP) '>='
[44](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[44](01, 21)-(01, 22): COLON(OP) ':'
[44](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 04): INDENT(INDENT) '    '
[45](01, 04)-(01, 08): NAME(NAME) 'oneC'
[45](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[45](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[45](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 04): INDENT(INDENT) '    '
[46](01, 04)-(01, 10): NAME(NAME) 'amount'
[46](01, 11)-(01, 13): MINEQUAL(OP) '-='
[46](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[46](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 04): INDENT(INDENT) '    '
[47](01, 04)-(01, 06): NAME(NAME) 'if'
[47](01, 07)-(01, 13): NAME(NAME) 'amount'
[47](01, 14)-(01, 15): LESS(OP) '<'
[47](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[47](01, 17)-(01, 18): COLON(OP) ':'
[47](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 08): INDENT(INDENT) '        '
[48](01, 08)-(01, 13): NAME(NAME) 'break'
[48](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 01): NL(NL) '\n'
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 05): NAME(NAME) 'print'
[50](01, 05)-(01, 06): LPAR(OP) '('
[50](01, 06)-(01, 16): STRING(STRING) '"2-euros:"'
[50](01, 16)-(01, 17): COMMA(OP) ','
[50](01, 18)-(01, 22): NAME(NAME) 'twoE'
[50](01, 22)-(01, 23): RPAR(OP) ')'
[50](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 05): NAME(NAME) 'print'
[51](01, 05)-(01, 06): LPAR(OP) '('
[51](01, 06)-(01, 16): STRING(STRING) '"1-euros:"'
[51](01, 16)-(01, 17): COMMA(OP) ','
[51](01, 18)-(01, 22): NAME(NAME) 'oneE'
[51](01, 22)-(01, 23): RPAR(OP) ')'
[51](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 05): NAME(NAME) 'print'
[52](01, 05)-(01, 06): LPAR(OP) '('
[52](01, 06)-(01, 18): STRING(STRING) '"50c-euros:"'
[52](01, 18)-(01, 19): COMMA(OP) ','
[52](01, 20)-(01, 26): NAME(NAME) 'fiftyC'
[52](01, 26)-(01, 27): RPAR(OP) ')'
[52](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 05): NAME(NAME) 'print'
[53](01, 05)-(01, 06): LPAR(OP) '('
[53](01, 06)-(01, 18): STRING(STRING) '"20c-euros:"'
[53](01, 18)-(01, 19): COMMA(OP) ','
[53](01, 20)-(01, 27): NAME(NAME) 'twentyC'
[53](01, 27)-(01, 28): RPAR(OP) ')'
[53](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 05): NAME(NAME) 'print'
[54](01, 05)-(01, 06): LPAR(OP) '('
[54](01, 06)-(01, 18): STRING(STRING) '"10c-euros:"'
[54](01, 18)-(01, 19): COMMA(OP) ','
[54](01, 20)-(01, 24): NAME(NAME) 'tenC'
[54](01, 24)-(01, 25): RPAR(OP) ')'
[54](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 05): NAME(NAME) 'print'
[55](01, 05)-(01, 06): LPAR(OP) '('
[55](01, 06)-(01, 17): STRING(STRING) '"5c-euros:"'
[55](01, 17)-(01, 18): COMMA(OP) ','
[55](01, 19)-(01, 24): NAME(NAME) 'fiveC'
[55](01, 24)-(01, 25): RPAR(OP) ')'
[55](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[56](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[56](01, 00)-(01, 05): NAME(NAME) 'print'
[56](01, 05)-(01, 06): LPAR(OP) '('
[56](01, 06)-(01, 17): STRING(STRING) '"2c-euros:"'
[56](01, 17)-(01, 18): COMMA(OP) ','
[56](01, 19)-(01, 23): NAME(NAME) 'twoC'
[56](01, 23)-(01, 24): RPAR(OP) ')'
[56](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[56](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[57](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[57](01, 00)-(01, 05): NAME(NAME) 'print'
[57](01, 05)-(01, 06): LPAR(OP) '('
[57](01, 06)-(01, 17): STRING(STRING) '"1c-euros:"'
[57](01, 17)-(01, 18): COMMA(OP) ','
[57](01, 19)-(01, 23): NAME(NAME) 'oneC'
[57](01, 23)-(01, 24): RPAR(OP) ')'
[57](01, 24)-(01, 25): NEWLINE(NEWLINE)
[57](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

