[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'x'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 07): NAME(NAME) 'int'
[00](01, 07)-(01, 08): LPAR(OP) '('
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 34): STRING(STRING) '"Geef een jaartal: "'
[00](01, 34)-(01, 35): RPAR(OP) ')'
[00](01, 35)-(01, 36): RPAR(OP) ')'
[00](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 02): NAME(NAME) 'if'
[01](01, 03)-(01, 04): LPAR(OP) '('
[01](01, 04)-(01, 05): NAME(NAME) 'x'
[01](01, 06)-(01, 07): PERCENT(OP) '%'
[01](01, 08)-(01, 09): NUMBER(NUMBER) '4'
[01](01, 10)-(01, 12): EQEQUAL(OP) '=='
[01](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[01](01, 14)-(01, 15): RPAR(OP) ')'
[01](01, 16)-(01, 19): NAME(NAME) 'and'
[01](01, 20)-(01, 21): LPAR(OP) '('
[01](01, 21)-(01, 22): LPAR(OP) '('
[01](01, 22)-(01, 23): NAME(NAME) 'x'
[01](01, 24)-(01, 25): PERCENT(OP) '%'
[01](01, 26)-(01, 29): NUMBER(NUMBER) '100'
[01](01, 30)-(01, 32): NOTEQUAL(OP) '!='
[01](01, 33)-(01, 34): NUMBER(NUMBER) '0'
[01](01, 34)-(01, 35): RPAR(OP) ')'
[01](01, 36)-(01, 38): NAME(NAME) 'or'
[01](01, 39)-(01, 40): LPAR(OP) '('
[01](01, 40)-(01, 41): NAME(NAME) 'x'
[01](01, 42)-(01, 43): PERCENT(OP) '%'
[01](01, 44)-(01, 47): NUMBER(NUMBER) '400'
[01](01, 48)-(01, 50): EQEQUAL(OP) '=='
[01](01, 51)-(01, 52): NUMBER(NUMBER) '0'
[01](01, 52)-(01, 53): RPAR(OP) ')'
[01](01, 53)-(01, 54): RPAR(OP) ')'
[01](01, 54)-(01, 55): COLON(OP) ':'
[01](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'print'
[02](01, 09)-(01, 10): LPAR(OP) '('
[02](01, 10)-(01, 11): NAME(NAME) 'x'
[02](01, 11)-(01, 12): COMMA(OP) ','
[02](01, 12)-(01, 28): STRING(STRING) '"is a leap year"'
[02](01, 28)-(01, 29): RPAR(OP) ')'
[02](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): NAME(NAME) 'else'
[03](01, 04)-(01, 05): COLON(OP) ':'
[03](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'print'
[04](01, 09)-(01, 10): LPAR(OP) '('
[04](01, 10)-(01, 11): NAME(NAME) 'x'
[04](01, 11)-(01, 12): COMMA(OP) ','
[04](01, 12)-(01, 32): STRING(STRING) '"is not a leap year"'
[04](01, 32)-(01, 33): RPAR(OP) ')'
[04](01, 33)-(01, 34): NEWLINE(NEWLINE)
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

