[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 21): NAME(NAME) 'dimension_checker'
[00](01, 21)-(01, 22): LPAR(OP) '('
[00](01, 22)-(01, 24): NAME(NAME) 'mx'
[00](01, 24)-(01, 25): RPAR(OP) ')'
[00](01, 25)-(01, 26): COLON(OP) ':'
[00](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 10): NAME(NAME) 'len'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 13): NAME(NAME) 'mx'
[01](01, 13)-(01, 14): RPAR(OP) ')'
[01](01, 15)-(01, 16): PERCENT(OP) '%'
[01](01, 17)-(01, 18): NUMBER(NUMBER) '2'
[01](01, 19)-(01, 21): EQEQUAL(OP) '=='
[01](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[01](01, 23)-(01, 24): COLON(OP) ':'
[01](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 20): NAME(NAME) 'False'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 04)-(01, 05): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 18): NAME(NAME) 'range'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 22): NAME(NAME) 'len'
[04](01, 22)-(01, 23): LPAR(OP) '('
[04](01, 23)-(01, 25): NAME(NAME) 'mx'
[04](01, 25)-(01, 26): RPAR(OP) ')'
[04](01, 26)-(01, 27): RPAR(OP) ')'
[04](01, 27)-(01, 28): COLON(OP) ':'
[04](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 14): NAME(NAME) 'len'
[05](01, 14)-(01, 15): LPAR(OP) '('
[05](01, 15)-(01, 17): NAME(NAME) 'mx'
[05](01, 17)-(01, 18): RPAR(OP) ')'
[05](01, 19)-(01, 21): NOTEQUAL(OP) '!='
[05](01, 22)-(01, 25): NAME(NAME) 'len'
[05](01, 25)-(01, 26): LPAR(OP) '('
[05](01, 26)-(01, 28): NAME(NAME) 'mx'
[05](01, 28)-(01, 29): LSQB(OP) '['
[05](01, 29)-(01, 30): NAME(NAME) 'i'
[05](01, 30)-(01, 31): RSQB(OP) ']'
[05](01, 31)-(01, 32): RPAR(OP) ')'
[05](01, 32)-(01, 33): COLON(OP) ':'
[05](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 18): NAME(NAME) 'return'
[06](01, 19)-(01, 24): NAME(NAME) 'False'
[06](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 04)-(01, 05): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'def'
[09](01, 04)-(01, 10): NAME(NAME) 'unique'
[09](01, 10)-(01, 11): LPAR(OP) '('
[09](01, 11)-(01, 15): NAME(NAME) 'list'
[09](01, 15)-(01, 16): RPAR(OP) ')'
[09](01, 16)-(01, 17): COLON(OP) ':'
[09](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 09): NAME(NAME) 'check'
[10](01, 10)-(01, 11): EQUAL(OP) '='
[10](01, 12)-(01, 13): LSQB(OP) '['
[10](01, 13)-(01, 14): RSQB(OP) ']'
[10](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 07): NAME(NAME) 'for'
[11](01, 08)-(01, 10): NAME(NAME) 'ch'
[11](01, 11)-(01, 13): NAME(NAME) 'in'
[11](01, 14)-(01, 18): NAME(NAME) 'list'
[11](01, 18)-(01, 19): COLON(OP) ':'
[11](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 10): NAME(NAME) 'if'
[12](01, 11)-(01, 13): NAME(NAME) 'ch'
[12](01, 14)-(01, 16): NAME(NAME) 'in'
[12](01, 17)-(01, 22): NAME(NAME) 'check'
[12](01, 22)-(01, 23): COLON(OP) ':'
[12](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 18): NAME(NAME) 'return'
[13](01, 19)-(01, 24): NAME(NAME) 'False'
[13](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 12): NAME(NAME) 'else'
[14](01, 12)-(01, 13): COLON(OP) ':'
[14](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 17): NAME(NAME) 'check'
[15](01, 17)-(01, 18): DOT(OP) '.'
[15](01, 18)-(01, 24): NAME(NAME) 'append'
[15](01, 24)-(01, 25): LPAR(OP) '('
[15](01, 25)-(01, 27): NAME(NAME) 'ch'
[15](01, 27)-(01, 28): RPAR(OP) ')'
[15](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 10): NAME(NAME) 'return'
[16](01, 11)-(01, 15): NAME(NAME) 'True'
[16](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 03): NAME(NAME) 'def'
[18](01, 04)-(01, 11): NAME(NAME) 'twod_1d'
[18](01, 11)-(01, 12): LPAR(OP) '('
[18](01, 12)-(01, 14): NAME(NAME) 'mx'
[18](01, 14)-(01, 15): RPAR(OP) ')'
[18](01, 15)-(01, 16): COLON(OP) ':'
[18](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 08): NAME(NAME) 'list'
[19](01, 09)-(01, 10): EQUAL(OP) '='
[19](01, 11)-(01, 12): LSQB(OP) '['
[19](01, 12)-(01, 13): RSQB(OP) ']'
[19](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 07): NAME(NAME) 'for'
[20](01, 08)-(01, 09): NAME(NAME) 'r'
[20](01, 10)-(01, 12): NAME(NAME) 'in'
[20](01, 13)-(01, 15): NAME(NAME) 'mx'
[20](01, 15)-(01, 16): COLON(OP) ':'
[20](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 11): NAME(NAME) 'for'
[21](01, 12)-(01, 14): NAME(NAME) 'el'
[21](01, 15)-(01, 17): NAME(NAME) 'in'
[21](01, 18)-(01, 19): NAME(NAME) 'r'
[21](01, 19)-(01, 20): COLON(OP) ':'
[21](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 16): NAME(NAME) 'list'
[22](01, 16)-(01, 17): DOT(OP) '.'
[22](01, 17)-(01, 23): NAME(NAME) 'append'
[22](01, 23)-(01, 24): LPAR(OP) '('
[22](01, 24)-(01, 26): NAME(NAME) 'el'
[22](01, 26)-(01, 27): RPAR(OP) ')'
[22](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 10): NAME(NAME) 'return'
[23](01, 11)-(01, 15): NAME(NAME) 'list'
[23](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 03): NAME(NAME) 'def'
[25](01, 04)-(01, 07): NAME(NAME) 'som'
[25](01, 07)-(01, 08): LPAR(OP) '('
[25](01, 08)-(01, 10): NAME(NAME) 'mx'
[25](01, 10)-(01, 11): RPAR(OP) ')'
[25](01, 11)-(01, 12): COLON(OP) ':'
[25](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 05): NAME(NAME) 's'
[26](01, 06)-(01, 07): EQUAL(OP) '='
[26](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[26](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 07): NAME(NAME) 'for'
[27](01, 08)-(01, 09): NAME(NAME) 'i'
[27](01, 10)-(01, 12): NAME(NAME) 'in'
[27](01, 13)-(01, 18): NAME(NAME) 'range'
[27](01, 18)-(01, 19): LPAR(OP) '('
[27](01, 19)-(01, 22): NAME(NAME) 'len'
[27](01, 22)-(01, 23): LPAR(OP) '('
[27](01, 23)-(01, 25): NAME(NAME) 'mx'
[27](01, 25)-(01, 26): RPAR(OP) ')'
[27](01, 26)-(01, 27): RPAR(OP) ')'
[27](01, 27)-(01, 28): COLON(OP) ':'
[27](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 08): INDENT(INDENT) '        '
[28](01, 08)-(01, 09): NAME(NAME) 's'
[28](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[28](01, 13)-(01, 15): NAME(NAME) 'mx'
[28](01, 15)-(01, 16): LSQB(OP) '['
[28](01, 16)-(01, 17): NAME(NAME) 'i'
[28](01, 17)-(01, 18): RSQB(OP) ']'
[28](01, 18)-(01, 19): LSQB(OP) '['
[28](01, 19)-(01, 20): NAME(NAME) 'i'
[28](01, 20)-(01, 21): RSQB(OP) ']'
[28](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 12): NAME(NAME) 'checksum'
[29](01, 13)-(01, 14): EQUAL(OP) '='
[29](01, 15)-(01, 16): NAME(NAME) 's'
[29](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 04)-(01, 05): NL(NL) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 07): NAME(NAME) 'for'
[31](01, 08)-(01, 09): NAME(NAME) 'i'
[31](01, 10)-(01, 12): NAME(NAME) 'in'
[31](01, 13)-(01, 18): NAME(NAME) 'range'
[31](01, 18)-(01, 19): LPAR(OP) '('
[31](01, 19)-(01, 22): NAME(NAME) 'len'
[31](01, 22)-(01, 23): LPAR(OP) '('
[31](01, 23)-(01, 25): NAME(NAME) 'mx'
[31](01, 25)-(01, 26): RPAR(OP) ')'
[31](01, 26)-(01, 27): RPAR(OP) ')'
[31](01, 27)-(01, 28): COLON(OP) ':'
[31](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 10): NAME(NAME) 's1'
[32](01, 11)-(01, 12): EQUAL(OP) '='
[32](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[32](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 10): NAME(NAME) 's2'
[33](01, 11)-(01, 12): EQUAL(OP) '='
[33](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[33](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 08): INDENT(INDENT) '        '
[34](01, 08)-(01, 11): NAME(NAME) 'for'
[34](01, 12)-(01, 13): NAME(NAME) 'j'
[34](01, 14)-(01, 16): NAME(NAME) 'in'
[34](01, 17)-(01, 22): NAME(NAME) 'range'
[34](01, 22)-(01, 23): LPAR(OP) '('
[34](01, 23)-(01, 26): NAME(NAME) 'len'
[34](01, 26)-(01, 27): LPAR(OP) '('
[34](01, 27)-(01, 29): NAME(NAME) 'mx'
[34](01, 29)-(01, 30): RPAR(OP) ')'
[34](01, 30)-(01, 31): RPAR(OP) ')'
[34](01, 31)-(01, 32): COLON(OP) ':'
[34](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 12): INDENT(INDENT) '            '
[35](01, 12)-(01, 14): NAME(NAME) 's1'
[35](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[35](01, 18)-(01, 20): NAME(NAME) 'mx'
[35](01, 20)-(01, 21): LSQB(OP) '['
[35](01, 21)-(01, 22): NAME(NAME) 'i'
[35](01, 22)-(01, 23): RSQB(OP) ']'
[35](01, 23)-(01, 24): LSQB(OP) '['
[35](01, 24)-(01, 25): NAME(NAME) 'j'
[35](01, 25)-(01, 26): RSQB(OP) ']'
[35](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 12): INDENT(INDENT) '            '
[36](01, 12)-(01, 14): NAME(NAME) 's2'
[36](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[36](01, 18)-(01, 20): NAME(NAME) 'mx'
[36](01, 20)-(01, 21): LSQB(OP) '['
[36](01, 21)-(01, 22): NAME(NAME) 'j'
[36](01, 22)-(01, 23): RSQB(OP) ']'
[36](01, 23)-(01, 24): LSQB(OP) '['
[36](01, 24)-(01, 25): NAME(NAME) 'i'
[36](01, 25)-(01, 26): RSQB(OP) ']'
[36](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 08): INDENT(INDENT) '        '
[37](01, 08)-(01, 10): NAME(NAME) 'if'
[37](01, 11)-(01, 13): NAME(NAME) 's1'
[37](01, 14)-(01, 16): NOTEQUAL(OP) '!='
[37](01, 17)-(01, 25): NAME(NAME) 'checksum'
[37](01, 26)-(01, 28): NAME(NAME) 'or'
[37](01, 29)-(01, 31): NAME(NAME) 's2'
[37](01, 32)-(01, 34): NOTEQUAL(OP) '!='
[37](01, 35)-(01, 43): NAME(NAME) 'checksum'
[37](01, 43)-(01, 44): COLON(OP) ':'
[37](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 12): INDENT(INDENT) '            '
[38](01, 12)-(01, 18): NAME(NAME) 'return'
[38](01, 19)-(01, 24): NAME(NAME) 'False'
[38](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 04): INDENT(INDENT) '    '
[39](01, 04)-(01, 10): NAME(NAME) 'return'
[39](01, 11)-(01, 15): NAME(NAME) 'True'
[39](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 01): NL(NL) '\n'
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 03): NAME(NAME) 'def'
[41](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[41](01, 19)-(01, 20): LPAR(OP) '('
[41](01, 20)-(01, 26): NAME(NAME) 'matrix'
[41](01, 26)-(01, 27): RPAR(OP) ')'
[41](01, 27)-(01, 28): COLON(OP) ':'
[41](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 04): INDENT(INDENT) '    '
[42](01, 04)-(01, 10): NAME(NAME) 'return'
[42](01, 11)-(01, 28): NAME(NAME) 'dimension_checker'
[42](01, 29)-(01, 30): LPAR(OP) '('
[42](01, 30)-(01, 36): NAME(NAME) 'matrix'
[42](01, 36)-(01, 37): RPAR(OP) ')'
[42](01, 38)-(01, 41): NAME(NAME) 'and'
[42](01, 42)-(01, 48): NAME(NAME) 'unique'
[42](01, 48)-(01, 49): LPAR(OP) '('
[42](01, 49)-(01, 56): NAME(NAME) 'twod_1d'
[42](01, 56)-(01, 57): LPAR(OP) '('
[42](01, 57)-(01, 63): NAME(NAME) 'matrix'
[42](01, 63)-(01, 64): RPAR(OP) ')'
[42](01, 64)-(01, 65): RPAR(OP) ')'
[42](01, 66)-(01, 69): NAME(NAME) 'and'
[42](01, 70)-(01, 73): NAME(NAME) 'som'
[42](01, 73)-(01, 74): LPAR(OP) '('
[42](01, 74)-(01, 80): NAME(NAME) 'matrix'
[42](01, 80)-(01, 81): RPAR(OP) ')'
[42](01, 81)-(01, 82): NEWLINE(NEWLINE)
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

