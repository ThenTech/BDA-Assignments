[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 17): NAME(NAME) 'lucky_numbers'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 19): NAME(NAME) 'n'
[00](01, 19)-(01, 20): RPAR(OP) ')'
[00](01, 20)-(01, 21): COLON(OP) ':'
[00](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'l'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 09): LSQB(OP) '['
[01](01, 09)-(01, 10): RSQB(OP) ']'
[01](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[02](01, 20)-(01, 21): COMMA(OP) ','
[02](01, 21)-(01, 22): NAME(NAME) 'n'
[02](01, 22)-(01, 23): PLUS(OP) '+'
[02](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[02](01, 24)-(01, 25): RPAR(OP) ')'
[02](01, 25)-(01, 26): COLON(OP) ':'
[02](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 09): NAME(NAME) 'l'
[03](01, 09)-(01, 10): DOT(OP) '.'
[03](01, 10)-(01, 16): NAME(NAME) 'append'
[03](01, 16)-(01, 17): LPAR(OP) '('
[03](01, 17)-(01, 18): NAME(NAME) 'i'
[03](01, 18)-(01, 19): RPAR(OP) ')'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'Ln'
[04](01, 07)-(01, 08): EQUAL(OP) '='
[04](01, 09)-(01, 10): LSQB(OP) '['
[04](01, 10)-(01, 11): RSQB(OP) ']'
[04](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'vorige'
[05](01, 11)-(01, 12): EQUAL(OP) '='
[05](01, 13)-(01, 14): NAME(NAME) 'l'
[05](01, 14)-(01, 15): LSQB(OP) '['
[05](01, 15)-(01, 16): COLON(OP) ':'
[05](01, 16)-(01, 17): RSQB(OP) ']'
[05](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 10): NAME(NAME) 'teller'
[06](01, 11)-(01, 12): EQUAL(OP) '='
[06](01, 13)-(01, 14): NUMBER(NUMBER) '2'
[06](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 05): NAME(NAME) 'j'
[07](01, 06)-(01, 07): EQUAL(OP) '='
[07](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[07](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'while'
[08](01, 10)-(01, 11): NAME(NAME) 'j'
[08](01, 12)-(01, 13): LESS(OP) '<'
[08](01, 14)-(01, 15): NAME(NAME) 'n'
[08](01, 15)-(01, 16): SLASH(OP) '/'
[08](01, 16)-(01, 17): NUMBER(NUMBER) '2'
[08](01, 17)-(01, 18): COLON(OP) ':'
[08](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 11): NAME(NAME) 'for'
[09](01, 12)-(01, 13): NAME(NAME) 'i'
[09](01, 14)-(01, 16): NAME(NAME) 'in'
[09](01, 17)-(01, 22): NAME(NAME) 'range'
[09](01, 22)-(01, 23): LPAR(OP) '('
[09](01, 23)-(01, 26): NAME(NAME) 'len'
[09](01, 26)-(01, 27): LPAR(OP) '('
[09](01, 27)-(01, 33): NAME(NAME) 'vorige'
[09](01, 33)-(01, 34): RPAR(OP) ')'
[09](01, 34)-(01, 35): RPAR(OP) ')'
[09](01, 35)-(01, 36): COLON(OP) ':'
[09](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 10): INDENT(INDENT) '          '
[10](01, 10)-(01, 12): NAME(NAME) 'if'
[10](01, 13)-(01, 14): LPAR(OP) '('
[10](01, 14)-(01, 15): NAME(NAME) 'i'
[10](01, 15)-(01, 16): PLUS(OP) '+'
[10](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[10](01, 17)-(01, 18): RPAR(OP) ')'
[10](01, 18)-(01, 19): PERCENT(OP) '%'
[10](01, 19)-(01, 25): NAME(NAME) 'teller'
[10](01, 26)-(01, 28): NOTEQUAL(OP) '!='
[10](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[10](01, 30)-(01, 31): COLON(OP) ':'
[10](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 13): INDENT(INDENT) '             '
[11](01, 13)-(01, 15): NAME(NAME) 'Ln'
[11](01, 15)-(01, 16): DOT(OP) '.'
[11](01, 16)-(01, 22): NAME(NAME) 'append'
[11](01, 22)-(01, 23): LPAR(OP) '('
[11](01, 23)-(01, 29): NAME(NAME) 'vorige'
[11](01, 29)-(01, 30): LSQB(OP) '['
[11](01, 30)-(01, 31): NAME(NAME) 'i'
[11](01, 31)-(01, 32): RSQB(OP) ']'
[11](01, 32)-(01, 33): RPAR(OP) ')'
[11](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 14): NAME(NAME) 'vorige'
[12](01, 15)-(01, 16): EQUAL(OP) '='
[12](01, 17)-(01, 19): NAME(NAME) 'Ln'
[12](01, 19)-(01, 20): LSQB(OP) '['
[12](01, 20)-(01, 21): COLON(OP) ':'
[12](01, 21)-(01, 22): RSQB(OP) ']'
[12](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'Ln'
[13](01, 11)-(01, 12): EQUAL(OP) '='
[13](01, 13)-(01, 14): LSQB(OP) '['
[13](01, 14)-(01, 15): RSQB(OP) ']'
[13](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 09): NAME(NAME) 'j'
[14](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[14](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[14](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 14): NAME(NAME) 'teller'
[15](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[15](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[15](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 10): NAME(NAME) 'return'
[16](01, 11)-(01, 17): NAME(NAME) 'vorige'
[16](01, 17)-(01, 18): NEWLINE(NEWLINE)
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

