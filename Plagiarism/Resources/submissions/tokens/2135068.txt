[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 08): NAME(NAME) 'sentence'
[00](01, 09)-(01, 10): EQUAL(OP) '='
[00](01, 11)-(01, 16): NAME(NAME) 'input'
[00](01, 16)-(01, 17): LPAR(OP) '('
[00](01, 17)-(01, 36): STRING(STRING) '"write a sentence "'
[00](01, 36)-(01, 37): RPAR(OP) ')'
[00](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'x'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[01](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'y'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[02](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 07): NAME(NAME) 'letters'
[03](01, 08)-(01, 09): EQUAL(OP) '='
[03](01, 10)-(01, 11): LSQB(OP) '['
[03](01, 11)-(01, 14): STRING(STRING) '"a"'
[03](01, 14)-(01, 15): COMMA(OP) ','
[03](01, 15)-(01, 18): STRING(STRING) '"b"'
[03](01, 18)-(01, 19): COMMA(OP) ','
[03](01, 19)-(01, 22): STRING(STRING) '"c"'
[03](01, 22)-(01, 23): COMMA(OP) ','
[03](01, 23)-(01, 26): STRING(STRING) '"d"'
[03](01, 26)-(01, 27): COMMA(OP) ','
[03](01, 27)-(01, 30): STRING(STRING) '"e"'
[03](01, 30)-(01, 31): COMMA(OP) ','
[03](01, 31)-(01, 34): STRING(STRING) '"f"'
[03](01, 34)-(01, 35): COMMA(OP) ','
[03](01, 35)-(01, 38): STRING(STRING) '"g"'
[03](01, 38)-(01, 39): COMMA(OP) ','
[03](01, 39)-(01, 42): STRING(STRING) '"h"'
[03](01, 42)-(01, 43): COMMA(OP) ','
[03](01, 43)-(01, 46): STRING(STRING) '"i"'
[03](01, 46)-(01, 47): COMMA(OP) ','
[03](01, 47)-(01, 50): STRING(STRING) '"j"'
[03](01, 50)-(01, 51): COMMA(OP) ','
[03](01, 51)-(01, 54): STRING(STRING) '"k"'
[03](01, 54)-(01, 55): COMMA(OP) ','
[03](01, 55)-(01, 58): STRING(STRING) '"l"'
[03](01, 58)-(01, 59): COMMA(OP) ','
[03](01, 59)-(01, 62): STRING(STRING) '"m"'
[03](01, 62)-(01, 63): COMMA(OP) ','
[03](01, 63)-(01, 66): STRING(STRING) '"n"'
[03](01, 66)-(01, 67): COMMA(OP) ','
[03](01, 67)-(01, 70): STRING(STRING) '"o"'
[03](01, 70)-(01, 71): COMMA(OP) ','
[03](01, 71)-(01, 74): STRING(STRING) '"p"'
[03](01, 74)-(01, 75): COMMA(OP) ','
[03](01, 75)-(01, 78): STRING(STRING) '"q"'
[03](01, 78)-(01, 79): COMMA(OP) ','
[03](01, 79)-(01, 82): STRING(STRING) '"r"'
[03](01, 82)-(01, 83): COMMA(OP) ','
[03](01, 83)-(01, 86): STRING(STRING) '"s"'
[03](01, 86)-(01, 87): COMMA(OP) ','
[03](01, 87)-(01, 90): STRING(STRING) '"t"'
[03](01, 90)-(01, 91): COMMA(OP) ','
[03](01, 91)-(01, 94): STRING(STRING) '"u"'
[03](01, 94)-(01, 95): COMMA(OP) ','
[03](01, 95)-(01, 98): STRING(STRING) '"v"'
[03](01, 98)-(01, 99): COMMA(OP) ','
[03](01, 99)-(01, 102): STRING(STRING) '"w"'
[03](01, 102)-(01, 103): COMMA(OP) ','
[03](01, 103)-(01, 106): STRING(STRING) '"x"'
[03](01, 106)-(01, 107): COMMA(OP) ','
[03](01, 107)-(01, 110): STRING(STRING) '"y"'
[03](01, 110)-(01, 111): COMMA(OP) ','
[03](01, 111)-(01, 114): STRING(STRING) '"z"'
[03](01, 114)-(01, 115): RSQB(OP) ']'
[03](01, 115)-(01, 116): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 05): NAME(NAME) 'count'
[04](01, 06)-(01, 07): EQUAL(OP) '='
[04](01, 08)-(01, 09): LSQB(OP) '['
[04](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[04](01, 10)-(01, 11): COMMA(OP) ','
[04](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[04](01, 12)-(01, 13): COMMA(OP) ','
[04](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[04](01, 14)-(01, 15): COMMA(OP) ','
[04](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[04](01, 16)-(01, 17): COMMA(OP) ','
[04](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[04](01, 18)-(01, 19): COMMA(OP) ','
[04](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[04](01, 20)-(01, 21): COMMA(OP) ','
[04](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[04](01, 22)-(01, 23): COMMA(OP) ','
[04](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[04](01, 24)-(01, 25): COMMA(OP) ','
[04](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[04](01, 26)-(01, 27): COMMA(OP) ','
[04](01, 27)-(01, 28): NUMBER(NUMBER) '0'
[04](01, 28)-(01, 29): COMMA(OP) ','
[04](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[04](01, 30)-(01, 31): COMMA(OP) ','
[04](01, 31)-(01, 32): NUMBER(NUMBER) '0'
[04](01, 32)-(01, 33): COMMA(OP) ','
[04](01, 33)-(01, 34): NUMBER(NUMBER) '0'
[04](01, 34)-(01, 35): COMMA(OP) ','
[04](01, 35)-(01, 36): NUMBER(NUMBER) '0'
[04](01, 36)-(01, 37): COMMA(OP) ','
[04](01, 37)-(01, 38): NUMBER(NUMBER) '0'
[04](01, 38)-(01, 39): COMMA(OP) ','
[04](01, 39)-(01, 40): NUMBER(NUMBER) '0'
[04](01, 40)-(01, 41): COMMA(OP) ','
[04](01, 41)-(01, 42): NUMBER(NUMBER) '0'
[04](01, 42)-(01, 43): COMMA(OP) ','
[04](01, 43)-(01, 44): NUMBER(NUMBER) '0'
[04](01, 44)-(01, 45): COMMA(OP) ','
[04](01, 45)-(01, 46): NUMBER(NUMBER) '0'
[04](01, 46)-(01, 47): COMMA(OP) ','
[04](01, 47)-(01, 48): NUMBER(NUMBER) '0'
[04](01, 48)-(01, 49): COMMA(OP) ','
[04](01, 49)-(01, 50): NUMBER(NUMBER) '0'
[04](01, 50)-(01, 51): COMMA(OP) ','
[04](01, 51)-(01, 52): NUMBER(NUMBER) '0'
[04](01, 52)-(01, 53): COMMA(OP) ','
[04](01, 53)-(01, 54): NUMBER(NUMBER) '0'
[04](01, 54)-(01, 55): COMMA(OP) ','
[04](01, 55)-(01, 56): NUMBER(NUMBER) '0'
[04](01, 56)-(01, 57): COMMA(OP) ','
[04](01, 57)-(01, 58): NUMBER(NUMBER) '0'
[04](01, 58)-(01, 59): COMMA(OP) ','
[04](01, 59)-(01, 60): NUMBER(NUMBER) '0'
[04](01, 60)-(01, 61): COMMA(OP) ','
[04](01, 61)-(01, 62): NUMBER(NUMBER) '0'
[04](01, 62)-(01, 63): RSQB(OP) ']'
[04](01, 63)-(01, 64): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 05): NAME(NAME) 'while'
[05](01, 06)-(01, 07): NAME(NAME) 'x'
[05](01, 08)-(01, 09): LESS(OP) '<'
[05](01, 10)-(01, 13): NAME(NAME) 'len'
[05](01, 13)-(01, 14): LPAR(OP) '('
[05](01, 14)-(01, 22): NAME(NAME) 'sentence'
[05](01, 22)-(01, 23): RPAR(OP) ')'
[05](01, 23)-(01, 24): COLON(OP) ':'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'y'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 21): NUMBER(NUMBER) '26'
[06](01, 21)-(01, 22): RPAR(OP) ')'
[06](01, 22)-(01, 23): COLON(OP) ':'
[06](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 19): NAME(NAME) 'sentence'
[07](01, 19)-(01, 20): LSQB(OP) '['
[07](01, 20)-(01, 21): NAME(NAME) 'x'
[07](01, 21)-(01, 22): RSQB(OP) ']'
[07](01, 23)-(01, 25): EQEQUAL(OP) '=='
[07](01, 26)-(01, 33): NAME(NAME) 'letters'
[07](01, 33)-(01, 34): LSQB(OP) '['
[07](01, 34)-(01, 35): NAME(NAME) 'y'
[07](01, 35)-(01, 36): RSQB(OP) ']'
[07](01, 36)-(01, 37): COLON(OP) ':'
[07](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 17): NAME(NAME) 'count'
[08](01, 17)-(01, 18): LSQB(OP) '['
[08](01, 18)-(01, 19): NAME(NAME) 'y'
[08](01, 19)-(01, 20): RSQB(OP) ']'
[08](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[08](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[08](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 05): NAME(NAME) 'x'
[10](01, 06)-(01, 08): PLUSEQUAL(OP) '+='
[10](01, 09)-(01, 10): NUMBER(NUMBER) '1'
[10](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 03): NAME(NAME) 'for'
[11](01, 04)-(01, 05): NAME(NAME) 'y'
[11](01, 06)-(01, 08): NAME(NAME) 'in'
[11](01, 09)-(01, 14): NAME(NAME) 'range'
[11](01, 14)-(01, 15): LPAR(OP) '('
[11](01, 15)-(01, 17): NUMBER(NUMBER) '26'
[11](01, 17)-(01, 18): RPAR(OP) ')'
[11](01, 18)-(01, 19): COLON(OP) ':'
[11](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 09): NAME(NAME) 'print'
[12](01, 09)-(01, 10): LPAR(OP) '('
[12](01, 10)-(01, 17): NAME(NAME) 'letters'
[12](01, 17)-(01, 18): LSQB(OP) '['
[12](01, 18)-(01, 19): NAME(NAME) 'y'
[12](01, 19)-(01, 20): RSQB(OP) ']'
[12](01, 20)-(01, 21): COMMA(OP) ','
[12](01, 22)-(01, 26): STRING(STRING) '": "'
[12](01, 26)-(01, 27): COMMA(OP) ','
[12](01, 28)-(01, 33): NAME(NAME) 'count'
[12](01, 33)-(01, 34): LSQB(OP) '['
[12](01, 34)-(01, 35): NAME(NAME) 'y'
[12](01, 35)-(01, 36): RSQB(OP) ']'
[12](01, 36)-(01, 37): COMMA(OP) ','
[12](01, 38)-(01, 41): NAME(NAME) 'sep'
[12](01, 41)-(01, 42): EQUAL(OP) '='
[12](01, 42)-(01, 44): STRING(STRING) '""'
[12](01, 44)-(01, 45): RPAR(OP) ')'
[12](01, 45)-(01, 46): NEWLINE(NEWLINE)
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

