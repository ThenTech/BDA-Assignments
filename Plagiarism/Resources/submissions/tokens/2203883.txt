[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 17): NAME(NAME) 'mijnen'
[00](01, 17)-(01, 18): RPAR(OP) ')'
[00](01, 18)-(01, 19): COLON(OP) ':'
[00](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 14): NAME(NAME) 'stringding'
[01](01, 14)-(01, 15): EQUAL(OP) '='
[01](01, 15)-(01, 17): STRING(STRING) '""'
[01](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 13): NAME(NAME) 'gecodeerd'
[02](01, 13)-(01, 14): EQUAL(OP) '='
[02](01, 14)-(01, 16): STRING(STRING) '""'
[02](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 10): NAME(NAME) 'int'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 14): NAME(NAME) 'len'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 21): NAME(NAME) 'mijnen'
[03](01, 21)-(01, 22): RPAR(OP) ')'
[03](01, 22)-(01, 23): RPAR(OP) ')'
[03](01, 23)-(01, 25): EQEQUAL(OP) '=='
[03](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[03](01, 26)-(01, 27): COLON(OP) ':'
[03](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 18): STRING(STRING) '"0"'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'else'
[05](01, 08)-(01, 09): COLON(OP) ':'
[05](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 11): NAME(NAME) 'for'
[06](01, 12)-(01, 13): NAME(NAME) 'n'
[06](01, 14)-(01, 16): NAME(NAME) 'in'
[06](01, 17)-(01, 22): NAME(NAME) 'range'
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 26): NAME(NAME) 'len'
[06](01, 26)-(01, 27): LPAR(OP) '('
[06](01, 27)-(01, 33): NAME(NAME) 'mijnen'
[06](01, 33)-(01, 34): RPAR(OP) ')'
[06](01, 34)-(01, 35): RPAR(OP) ')'
[06](01, 35)-(01, 36): COLON(OP) ':'
[06](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'if'
[07](01, 15)-(01, 16): NAME(NAME) 'n'
[07](01, 17)-(01, 19): EQEQUAL(OP) '=='
[07](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[07](01, 21)-(01, 22): COLON(OP) ':'
[07](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 18): NAME(NAME) 'if'
[08](01, 19)-(01, 25): NAME(NAME) 'mijnen'
[08](01, 25)-(01, 26): LSQB(OP) '['
[08](01, 26)-(01, 27): NAME(NAME) 'n'
[08](01, 27)-(01, 28): PLUS(OP) '+'
[08](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[08](01, 29)-(01, 30): RSQB(OP) ']'
[08](01, 31)-(01, 33): EQEQUAL(OP) '=='
[08](01, 34)-(01, 37): STRING(STRING) '"X"'
[08](01, 37)-(01, 38): COLON(OP) ':'
[08](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 20): INDENT(INDENT) '                    '
[09](01, 20)-(01, 29): NAME(NAME) 'gecodeerd'
[09](01, 30)-(01, 31): EQUAL(OP) '='
[09](01, 32)-(01, 41): NAME(NAME) 'gecodeerd'
[09](01, 42)-(01, 43): PLUS(OP) '+'
[09](01, 44)-(01, 47): STRING(STRING) '"1"'
[09](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 20): NAME(NAME) 'else'
[10](01, 20)-(01, 21): COLON(OP) ':'
[10](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 20): INDENT(INDENT) '                    '
[11](01, 20)-(01, 29): NAME(NAME) 'gecodeerd'
[11](01, 30)-(01, 31): EQUAL(OP) '='
[11](01, 32)-(01, 41): NAME(NAME) 'gecodeerd'
[11](01, 42)-(01, 43): PLUS(OP) '+'
[11](01, 44)-(01, 47): STRING(STRING) '"0"'
[11](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 16): NAME(NAME) 'elif'
[13](01, 17)-(01, 18): NAME(NAME) 'n'
[13](01, 18)-(01, 20): EQEQUAL(OP) '=='
[13](01, 20)-(01, 23): NAME(NAME) 'len'
[13](01, 23)-(01, 24): LPAR(OP) '('
[13](01, 24)-(01, 30): NAME(NAME) 'mijnen'
[13](01, 30)-(01, 31): RPAR(OP) ')'
[13](01, 31)-(01, 32): MINUS(OP) '-'
[13](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[13](01, 33)-(01, 34): COLON(OP) ':'
[13](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 18): NAME(NAME) 'if'
[14](01, 19)-(01, 25): NAME(NAME) 'mijnen'
[14](01, 25)-(01, 26): LSQB(OP) '['
[14](01, 26)-(01, 27): NAME(NAME) 'n'
[14](01, 27)-(01, 28): MINUS(OP) '-'
[14](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[14](01, 29)-(01, 30): RSQB(OP) ']'
[14](01, 31)-(01, 33): EQEQUAL(OP) '=='
[14](01, 34)-(01, 37): STRING(STRING) '"X"'
[14](01, 37)-(01, 38): COLON(OP) ':'
[14](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 20): INDENT(INDENT) '                    '
[15](01, 20)-(01, 29): NAME(NAME) 'gecodeerd'
[15](01, 30)-(01, 31): EQUAL(OP) '='
[15](01, 32)-(01, 41): NAME(NAME) 'gecodeerd'
[15](01, 42)-(01, 43): PLUS(OP) '+'
[15](01, 44)-(01, 47): STRING(STRING) '"1"'
[15](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 20): NAME(NAME) 'else'
[16](01, 20)-(01, 21): COLON(OP) ':'
[16](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 20): INDENT(INDENT) '                    '
[17](01, 20)-(01, 29): NAME(NAME) 'gecodeerd'
[17](01, 30)-(01, 31): EQUAL(OP) '='
[17](01, 32)-(01, 41): NAME(NAME) 'gecodeerd'
[17](01, 42)-(01, 43): PLUS(OP) '+'
[17](01, 44)-(01, 47): STRING(STRING) '"0"'
[17](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 16): NAME(NAME) 'else'
[18](01, 16)-(01, 17): COLON(OP) ':'
[18](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 16): INDENT(INDENT) '                '
[19](01, 16)-(01, 18): NAME(NAME) 'if'
[19](01, 19)-(01, 25): NAME(NAME) 'mijnen'
[19](01, 25)-(01, 26): LSQB(OP) '['
[19](01, 26)-(01, 27): NAME(NAME) 'n'
[19](01, 27)-(01, 28): MINUS(OP) '-'
[19](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[19](01, 29)-(01, 30): RSQB(OP) ']'
[19](01, 31)-(01, 33): EQEQUAL(OP) '=='
[19](01, 34)-(01, 37): STRING(STRING) '"X"'
[19](01, 38)-(01, 41): NAME(NAME) 'and'
[19](01, 42)-(01, 48): NAME(NAME) 'mijnen'
[19](01, 48)-(01, 49): LSQB(OP) '['
[19](01, 49)-(01, 50): NAME(NAME) 'n'
[19](01, 50)-(01, 51): PLUS(OP) '+'
[19](01, 51)-(01, 52): NUMBER(NUMBER) '1'
[19](01, 52)-(01, 53): RSQB(OP) ']'
[19](01, 54)-(01, 56): EQEQUAL(OP) '=='
[19](01, 57)-(01, 60): STRING(STRING) '"X"'
[19](01, 60)-(01, 61): COLON(OP) ':'
[19](01, 61)-(01, 62): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 20): INDENT(INDENT) '                    '
[20](01, 20)-(01, 29): NAME(NAME) 'gecodeerd'
[20](01, 30)-(01, 31): EQUAL(OP) '='
[20](01, 32)-(01, 41): NAME(NAME) 'gecodeerd'
[20](01, 42)-(01, 43): PLUS(OP) '+'
[20](01, 44)-(01, 47): STRING(STRING) '"2"'
[20](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 20): NAME(NAME) 'elif'
[21](01, 21)-(01, 27): NAME(NAME) 'mijnen'
[21](01, 27)-(01, 28): LSQB(OP) '['
[21](01, 28)-(01, 29): NAME(NAME) 'n'
[21](01, 29)-(01, 30): MINUS(OP) '-'
[21](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[21](01, 31)-(01, 32): RSQB(OP) ']'
[21](01, 33)-(01, 35): EQEQUAL(OP) '=='
[21](01, 36)-(01, 39): STRING(STRING) '"X"'
[21](01, 40)-(01, 42): NAME(NAME) 'or'
[21](01, 43)-(01, 49): NAME(NAME) 'mijnen'
[21](01, 49)-(01, 50): LSQB(OP) '['
[21](01, 50)-(01, 51): NAME(NAME) 'n'
[21](01, 51)-(01, 52): PLUS(OP) '+'
[21](01, 52)-(01, 53): NUMBER(NUMBER) '1'
[21](01, 53)-(01, 54): RSQB(OP) ']'
[21](01, 55)-(01, 57): EQEQUAL(OP) '=='
[21](01, 58)-(01, 61): STRING(STRING) '"X"'
[21](01, 61)-(01, 62): COLON(OP) ':'
[21](01, 62)-(01, 63): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 20): INDENT(INDENT) '                    '
[22](01, 20)-(01, 29): NAME(NAME) 'gecodeerd'
[22](01, 30)-(01, 31): EQUAL(OP) '='
[22](01, 32)-(01, 41): NAME(NAME) 'gecodeerd'
[22](01, 42)-(01, 43): PLUS(OP) '+'
[22](01, 44)-(01, 47): STRING(STRING) '"1"'
[22](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 16): INDENT(INDENT) '                '
[23](01, 16)-(01, 20): NAME(NAME) 'else'
[23](01, 20)-(01, 21): COLON(OP) ':'
[23](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 20): INDENT(INDENT) '                    '
[24](01, 20)-(01, 29): NAME(NAME) 'gecodeerd'
[24](01, 30)-(01, 31): EQUAL(OP) '='
[24](01, 32)-(01, 41): NAME(NAME) 'gecodeerd'
[24](01, 42)-(01, 43): PLUS(OP) '+'
[24](01, 44)-(01, 47): STRING(STRING) '"0"'
[24](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 10): NAME(NAME) 'return'
[25](01, 11)-(01, 20): NAME(NAME) 'gecodeerd'
[25](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 01): NL(NL) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 03): NAME(NAME) 'def'
[28](01, 04)-(01, 10): NAME(NAME) 'decode'
[28](01, 10)-(01, 11): LPAR(OP) '('
[28](01, 11)-(01, 12): NAME(NAME) 's'
[28](01, 12)-(01, 13): COMMA(OP) ','
[28](01, 14)-(01, 15): NAME(NAME) 'n'
[28](01, 15)-(01, 16): RPAR(OP) ')'
[28](01, 16)-(01, 17): COLON(OP) ':'
[28](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 08): NAME(NAME) 'pass'
[29](01, 08)-(01, 09): NEWLINE(NEWLINE)
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

