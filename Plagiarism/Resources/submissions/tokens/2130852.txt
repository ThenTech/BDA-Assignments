[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'x'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 23): STRING(STRING) '"What is x? "'
[00](01, 23)-(01, 24): RPAR(OP) ')'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'y'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 09): NAME(NAME) 'input'
[01](01, 09)-(01, 10): LPAR(OP) '('
[01](01, 10)-(01, 23): STRING(STRING) '"What is y? "'
[01](01, 23)-(01, 24): RPAR(OP) ')'
[01](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'for'
[03](01, 04)-(01, 10): NAME(NAME) 'matrix'
[03](01, 11)-(01, 13): NAME(NAME) 'in'
[03](01, 14)-(01, 19): NAME(NAME) 'range'
[03](01, 19)-(01, 20): LPAR(OP) '('
[03](01, 20)-(01, 23): NAME(NAME) 'int'
[03](01, 23)-(01, 24): LPAR(OP) '('
[03](01, 24)-(01, 25): NAME(NAME) 'x'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 27)-(01, 28): STAR(OP) '*'
[03](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[03](01, 31)-(01, 32): PLUS(OP) '+'
[03](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[03](01, 34)-(01, 35): COMMA(OP) ','
[03](01, 36)-(01, 39): NAME(NAME) 'int'
[03](01, 39)-(01, 40): LPAR(OP) '('
[03](01, 40)-(01, 41): NAME(NAME) 'x'
[03](01, 41)-(01, 42): RPAR(OP) ')'
[03](01, 43)-(01, 44): STAR(OP) '*'
[03](01, 45)-(01, 46): NUMBER(NUMBER) '1'
[03](01, 47)-(01, 48): PLUS(OP) '+'
[03](01, 49)-(01, 50): NUMBER(NUMBER) '1'
[03](01, 50)-(01, 51): RPAR(OP) ')'
[03](01, 51)-(01, 52): COLON(OP) ':'
[03](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'print'
[04](01, 09)-(01, 10): LPAR(OP) '('
[04](01, 10)-(01, 16): NAME(NAME) 'matrix'
[04](01, 16)-(01, 17): COMMA(OP) ','
[04](01, 18)-(01, 21): NAME(NAME) 'end'
[04](01, 21)-(01, 22): EQUAL(OP) '='
[04](01, 22)-(01, 25): STRING(STRING) '" "'
[04](01, 25)-(01, 26): RPAR(OP) ')'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 05): NAME(NAME) 'print'
[05](01, 05)-(01, 06): LPAR(OP) '('
[05](01, 06)-(01, 08): STRING(STRING) '""'
[05](01, 08)-(01, 09): RPAR(OP) ')'
[05](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 03): NAME(NAME) 'for'
[06](01, 04)-(01, 10): NAME(NAME) 'matrix'
[06](01, 11)-(01, 13): NAME(NAME) 'in'
[06](01, 14)-(01, 19): NAME(NAME) 'range'
[06](01, 19)-(01, 20): LPAR(OP) '('
[06](01, 20)-(01, 23): NAME(NAME) 'int'
[06](01, 23)-(01, 24): LPAR(OP) '('
[06](01, 24)-(01, 25): NAME(NAME) 'x'
[06](01, 25)-(01, 26): RPAR(OP) ')'
[06](01, 27)-(01, 28): STAR(OP) '*'
[06](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[06](01, 31)-(01, 32): PLUS(OP) '+'
[06](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[06](01, 34)-(01, 35): COMMA(OP) ','
[06](01, 36)-(01, 39): NAME(NAME) 'int'
[06](01, 39)-(01, 40): LPAR(OP) '('
[06](01, 40)-(01, 41): NAME(NAME) 'x'
[06](01, 41)-(01, 42): RPAR(OP) ')'
[06](01, 43)-(01, 44): STAR(OP) '*'
[06](01, 45)-(01, 46): NUMBER(NUMBER) '2'
[06](01, 47)-(01, 48): PLUS(OP) '+'
[06](01, 49)-(01, 50): NUMBER(NUMBER) '1'
[06](01, 50)-(01, 51): RPAR(OP) ')'
[06](01, 51)-(01, 52): COLON(OP) ':'
[06](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 09): NAME(NAME) 'print'
[07](01, 09)-(01, 10): LPAR(OP) '('
[07](01, 10)-(01, 16): NAME(NAME) 'matrix'
[07](01, 16)-(01, 17): COMMA(OP) ','
[07](01, 18)-(01, 21): NAME(NAME) 'end'
[07](01, 21)-(01, 22): EQUAL(OP) '='
[07](01, 22)-(01, 25): STRING(STRING) '" "'
[07](01, 25)-(01, 26): RPAR(OP) ')'
[07](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 05): NAME(NAME) 'print'
[08](01, 05)-(01, 06): LPAR(OP) '('
[08](01, 06)-(01, 08): STRING(STRING) '""'
[08](01, 08)-(01, 09): RPAR(OP) ')'
[08](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'for'
[09](01, 04)-(01, 10): NAME(NAME) 'matrix'
[09](01, 11)-(01, 13): NAME(NAME) 'in'
[09](01, 14)-(01, 19): NAME(NAME) 'range'
[09](01, 19)-(01, 20): LPAR(OP) '('
[09](01, 20)-(01, 23): NAME(NAME) 'int'
[09](01, 23)-(01, 24): LPAR(OP) '('
[09](01, 24)-(01, 25): NAME(NAME) 'x'
[09](01, 25)-(01, 26): RPAR(OP) ')'
[09](01, 27)-(01, 28): STAR(OP) '*'
[09](01, 29)-(01, 30): NUMBER(NUMBER) '2'
[09](01, 31)-(01, 32): PLUS(OP) '+'
[09](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[09](01, 34)-(01, 35): COMMA(OP) ','
[09](01, 36)-(01, 39): NAME(NAME) 'int'
[09](01, 39)-(01, 40): LPAR(OP) '('
[09](01, 40)-(01, 41): NAME(NAME) 'x'
[09](01, 41)-(01, 42): RPAR(OP) ')'
[09](01, 43)-(01, 44): STAR(OP) '*'
[09](01, 45)-(01, 46): NUMBER(NUMBER) '3'
[09](01, 47)-(01, 48): PLUS(OP) '+'
[09](01, 49)-(01, 50): NUMBER(NUMBER) '1'
[09](01, 50)-(01, 51): RPAR(OP) ')'
[09](01, 51)-(01, 52): COLON(OP) ':'
[09](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 09): NAME(NAME) 'print'
[10](01, 09)-(01, 10): LPAR(OP) '('
[10](01, 10)-(01, 16): NAME(NAME) 'matrix'
[10](01, 16)-(01, 17): COMMA(OP) ','
[10](01, 18)-(01, 21): NAME(NAME) 'end'
[10](01, 21)-(01, 22): EQUAL(OP) '='
[10](01, 22)-(01, 25): STRING(STRING) '" "'
[10](01, 25)-(01, 26): RPAR(OP) ')'
[10](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 05): NAME(NAME) 'print'
[11](01, 05)-(01, 06): LPAR(OP) '('
[11](01, 06)-(01, 08): STRING(STRING) '""'
[11](01, 08)-(01, 09): RPAR(OP) ')'
[11](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 03): NAME(NAME) 'for'
[12](01, 04)-(01, 10): NAME(NAME) 'matrix'
[12](01, 11)-(01, 13): NAME(NAME) 'in'
[12](01, 14)-(01, 19): NAME(NAME) 'range'
[12](01, 19)-(01, 20): LPAR(OP) '('
[12](01, 20)-(01, 23): NAME(NAME) 'int'
[12](01, 23)-(01, 24): LPAR(OP) '('
[12](01, 24)-(01, 25): NAME(NAME) 'x'
[12](01, 25)-(01, 26): RPAR(OP) ')'
[12](01, 27)-(01, 28): STAR(OP) '*'
[12](01, 29)-(01, 30): NUMBER(NUMBER) '3'
[12](01, 31)-(01, 32): PLUS(OP) '+'
[12](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[12](01, 34)-(01, 35): COMMA(OP) ','
[12](01, 36)-(01, 39): NAME(NAME) 'int'
[12](01, 39)-(01, 40): LPAR(OP) '('
[12](01, 40)-(01, 41): NAME(NAME) 'x'
[12](01, 41)-(01, 42): RPAR(OP) ')'
[12](01, 43)-(01, 44): STAR(OP) '*'
[12](01, 45)-(01, 46): NUMBER(NUMBER) '4'
[12](01, 47)-(01, 48): PLUS(OP) '+'
[12](01, 49)-(01, 50): NUMBER(NUMBER) '1'
[12](01, 50)-(01, 51): RPAR(OP) ')'
[12](01, 51)-(01, 52): COLON(OP) ':'
[12](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 09): NAME(NAME) 'print'
[13](01, 09)-(01, 10): LPAR(OP) '('
[13](01, 10)-(01, 16): NAME(NAME) 'matrix'
[13](01, 16)-(01, 17): COMMA(OP) ','
[13](01, 18)-(01, 21): NAME(NAME) 'end'
[13](01, 21)-(01, 22): EQUAL(OP) '='
[13](01, 22)-(01, 25): STRING(STRING) '" "'
[13](01, 25)-(01, 26): RPAR(OP) ')'
[13](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 05): NAME(NAME) 'print'
[14](01, 05)-(01, 06): LPAR(OP) '('
[14](01, 06)-(01, 08): STRING(STRING) '""'
[14](01, 08)-(01, 09): RPAR(OP) ')'
[14](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 03): NAME(NAME) 'for'
[15](01, 04)-(01, 10): NAME(NAME) 'matrix'
[15](01, 11)-(01, 13): NAME(NAME) 'in'
[15](01, 14)-(01, 19): NAME(NAME) 'range'
[15](01, 19)-(01, 20): LPAR(OP) '('
[15](01, 20)-(01, 23): NAME(NAME) 'int'
[15](01, 23)-(01, 24): LPAR(OP) '('
[15](01, 24)-(01, 25): NAME(NAME) 'x'
[15](01, 25)-(01, 26): RPAR(OP) ')'
[15](01, 27)-(01, 28): STAR(OP) '*'
[15](01, 29)-(01, 30): NUMBER(NUMBER) '4'
[15](01, 31)-(01, 32): PLUS(OP) '+'
[15](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[15](01, 34)-(01, 35): COMMA(OP) ','
[15](01, 36)-(01, 39): NAME(NAME) 'int'
[15](01, 39)-(01, 40): LPAR(OP) '('
[15](01, 40)-(01, 41): NAME(NAME) 'x'
[15](01, 41)-(01, 42): RPAR(OP) ')'
[15](01, 43)-(01, 44): STAR(OP) '*'
[15](01, 45)-(01, 46): NUMBER(NUMBER) '5'
[15](01, 47)-(01, 48): PLUS(OP) '+'
[15](01, 49)-(01, 50): NUMBER(NUMBER) '1'
[15](01, 50)-(01, 51): RPAR(OP) ')'
[15](01, 51)-(01, 52): COLON(OP) ':'
[15](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 09): NAME(NAME) 'print'
[16](01, 09)-(01, 10): LPAR(OP) '('
[16](01, 10)-(01, 16): NAME(NAME) 'matrix'
[16](01, 16)-(01, 17): COMMA(OP) ','
[16](01, 18)-(01, 21): NAME(NAME) 'end'
[16](01, 21)-(01, 22): EQUAL(OP) '='
[16](01, 22)-(01, 25): STRING(STRING) '" "'
[16](01, 25)-(01, 26): RPAR(OP) ')'
[16](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 05): NAME(NAME) 'print'
[17](01, 05)-(01, 06): LPAR(OP) '('
[17](01, 06)-(01, 08): STRING(STRING) '""'
[17](01, 08)-(01, 09): RPAR(OP) ')'
[17](01, 09)-(01, 10): NEWLINE(NEWLINE)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

