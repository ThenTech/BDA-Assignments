[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 14): NAME(NAME) 'quick_sort'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 16): NAME(NAME) 'l'
[00](01, 16)-(01, 17): COMMA(OP) ','
[00](01, 18)-(01, 29): NAME(NAME) 'sorted_list'
[00](01, 29)-(01, 30): EQUAL(OP) '='
[00](01, 30)-(01, 34): NAME(NAME) 'None'
[00](01, 34)-(01, 35): COMMA(OP) ','
[00](01, 36)-(01, 50): NAME(NAME) 'length_history'
[00](01, 50)-(01, 51): EQUAL(OP) '='
[00](01, 51)-(01, 55): NAME(NAME) 'None'
[00](01, 55)-(01, 56): RPAR(OP) ')'
[00](01, 56)-(01, 57): COLON(OP) ':'
[00](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 18): NAME(NAME) 'sorted_list'
[01](01, 19)-(01, 21): NAME(NAME) 'is'
[01](01, 22)-(01, 26): NAME(NAME) 'None'
[01](01, 26)-(01, 27): COLON(OP) ':'
[01](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 19): NAME(NAME) 'sorted_list'
[02](01, 20)-(01, 21): EQUAL(OP) '='
[02](01, 22)-(01, 23): LSQB(OP) '['
[02](01, 23)-(01, 24): RSQB(OP) ']'
[02](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 22): NAME(NAME) 'length_history'
[03](01, 23)-(01, 24): EQUAL(OP) '='
[03](01, 25)-(01, 26): LSQB(OP) '['
[03](01, 26)-(01, 27): RSQB(OP) ']'
[03](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 18): NAME(NAME) 'length_history'
[05](01, 18)-(01, 19): DOT(OP) '.'
[05](01, 19)-(01, 25): NAME(NAME) 'append'
[05](01, 25)-(01, 26): LPAR(OP) '('
[05](01, 26)-(01, 29): NAME(NAME) 'len'
[05](01, 29)-(01, 30): LPAR(OP) '('
[05](01, 30)-(01, 31): NAME(NAME) 'l'
[05](01, 31)-(01, 32): RPAR(OP) ')'
[05](01, 32)-(01, 33): RPAR(OP) ')'
[05](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 12): NAME(NAME) 'half_len'
[06](01, 13)-(01, 14): EQUAL(OP) '='
[06](01, 15)-(01, 18): NAME(NAME) 'int'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 22): NAME(NAME) 'len'
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 24): NAME(NAME) 'l'
[06](01, 24)-(01, 25): RPAR(OP) ')'
[06](01, 26)-(01, 27): SLASH(OP) '/'
[06](01, 28)-(01, 29): NUMBER(NUMBER) '2'
[06](01, 29)-(01, 30): RPAR(OP) ')'
[06](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'l_less'
[07](01, 11)-(01, 12): EQUAL(OP) '='
[07](01, 13)-(01, 14): LSQB(OP) '['
[07](01, 14)-(01, 15): RSQB(OP) ']'
[07](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 11): NAME(NAME) 'l_equal'
[08](01, 12)-(01, 13): EQUAL(OP) '='
[08](01, 14)-(01, 15): LSQB(OP) '['
[08](01, 15)-(01, 16): RSQB(OP) ']'
[08](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 13): NAME(NAME) 'l_greater'
[09](01, 14)-(01, 15): EQUAL(OP) '='
[09](01, 16)-(01, 17): LSQB(OP) '['
[09](01, 17)-(01, 18): RSQB(OP) ']'
[09](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 06): NAME(NAME) 'if'
[11](01, 07)-(01, 10): NAME(NAME) 'len'
[11](01, 10)-(01, 11): LPAR(OP) '('
[11](01, 11)-(01, 12): NAME(NAME) 'l'
[11](01, 12)-(01, 13): RPAR(OP) ')'
[11](01, 14)-(01, 15): GREATER(OP) '>'
[11](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[11](01, 17)-(01, 18): COLON(OP) ':'
[11](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 13): NAME(NAME) 'pivot'
[12](01, 14)-(01, 15): EQUAL(OP) '='
[12](01, 16)-(01, 17): NAME(NAME) 'l'
[12](01, 17)-(01, 18): LSQB(OP) '['
[12](01, 18)-(01, 26): NAME(NAME) 'half_len'
[12](01, 26)-(01, 27): RSQB(OP) ']'
[12](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 11): NAME(NAME) 'for'
[13](01, 12)-(01, 18): NAME(NAME) 'number'
[13](01, 19)-(01, 21): NAME(NAME) 'in'
[13](01, 22)-(01, 23): NAME(NAME) 'l'
[13](01, 23)-(01, 24): COLON(OP) ':'
[13](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 14): NAME(NAME) 'if'
[14](01, 15)-(01, 21): NAME(NAME) 'number'
[14](01, 22)-(01, 23): LESS(OP) '<'
[14](01, 24)-(01, 29): NAME(NAME) 'pivot'
[14](01, 29)-(01, 30): COLON(OP) ':'
[14](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 22): NAME(NAME) 'l_less'
[15](01, 22)-(01, 23): DOT(OP) '.'
[15](01, 23)-(01, 29): NAME(NAME) 'append'
[15](01, 29)-(01, 30): LPAR(OP) '('
[15](01, 30)-(01, 36): NAME(NAME) 'number'
[15](01, 36)-(01, 37): RPAR(OP) ')'
[15](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 16): NAME(NAME) 'elif'
[16](01, 17)-(01, 23): NAME(NAME) 'number'
[16](01, 24)-(01, 25): GREATER(OP) '>'
[16](01, 26)-(01, 31): NAME(NAME) 'pivot'
[16](01, 31)-(01, 32): COLON(OP) ':'
[16](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 25): NAME(NAME) 'l_greater'
[17](01, 25)-(01, 26): DOT(OP) '.'
[17](01, 26)-(01, 32): NAME(NAME) 'append'
[17](01, 32)-(01, 33): LPAR(OP) '('
[17](01, 33)-(01, 39): NAME(NAME) 'number'
[17](01, 39)-(01, 40): RPAR(OP) ')'
[17](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 16): NAME(NAME) 'else'
[18](01, 16)-(01, 17): COLON(OP) ':'
[18](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 16): INDENT(INDENT) '                '
[19](01, 16)-(01, 23): NAME(NAME) 'l_equal'
[19](01, 23)-(01, 24): DOT(OP) '.'
[19](01, 24)-(01, 30): NAME(NAME) 'append'
[19](01, 30)-(01, 31): LPAR(OP) '('
[19](01, 31)-(01, 37): NAME(NAME) 'number'
[19](01, 37)-(01, 38): RPAR(OP) ')'
[19](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 08): NAME(NAME) 'else'
[20](01, 08)-(01, 09): COLON(OP) ':'
[20](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 14): NAME(NAME) 'return'
[21](01, 15)-(01, 16): NAME(NAME) 'l'
[21](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 06): NAME(NAME) 'l1'
[23](01, 07)-(01, 08): EQUAL(OP) '='
[23](01, 09)-(01, 19): NAME(NAME) 'quick_sort'
[23](01, 19)-(01, 20): LPAR(OP) '('
[23](01, 20)-(01, 26): NAME(NAME) 'l_less'
[23](01, 26)-(01, 27): COMMA(OP) ','
[23](01, 28)-(01, 39): NAME(NAME) 'sorted_list'
[23](01, 39)-(01, 40): COMMA(OP) ','
[23](01, 41)-(01, 55): NAME(NAME) 'length_history'
[23](01, 55)-(01, 56): RPAR(OP) ')'
[23](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 06): NAME(NAME) 'if'
[24](01, 07)-(01, 10): NAME(NAME) 'not'
[24](01, 11)-(01, 19): NAME(NAME) 'is_empty'
[24](01, 19)-(01, 20): LPAR(OP) '('
[24](01, 20)-(01, 22): NAME(NAME) 'l1'
[24](01, 22)-(01, 23): RPAR(OP) ')'
[24](01, 24)-(01, 27): NAME(NAME) 'and'
[24](01, 28)-(01, 31): NAME(NAME) 'not'
[24](01, 32)-(01, 41): NAME(NAME) 'is_sorted'
[24](01, 41)-(01, 42): LPAR(OP) '('
[24](01, 42)-(01, 56): NAME(NAME) 'length_history'
[24](01, 56)-(01, 57): COMMA(OP) ','
[24](01, 58)-(01, 69): NAME(NAME) 'sorted_list'
[24](01, 69)-(01, 70): RPAR(OP) ')'
[24](01, 70)-(01, 71): COLON(OP) ':'
[24](01, 71)-(01, 72): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 08): INDENT(INDENT) '        '
[25](01, 08)-(01, 19): NAME(NAME) 'sorted_list'
[25](01, 19)-(01, 20): DOT(OP) '.'
[25](01, 20)-(01, 26): NAME(NAME) 'append'
[25](01, 26)-(01, 27): LPAR(OP) '('
[25](01, 27)-(01, 29): NAME(NAME) 'l1'
[25](01, 29)-(01, 30): LSQB(OP) '['
[25](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[25](01, 31)-(01, 32): RSQB(OP) ']'
[25](01, 32)-(01, 33): RPAR(OP) ')'
[25](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 06): NAME(NAME) 'l2'
[27](01, 07)-(01, 08): EQUAL(OP) '='
[27](01, 09)-(01, 16): NAME(NAME) 'l_equal'
[27](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 06): NAME(NAME) 'if'
[28](01, 07)-(01, 10): NAME(NAME) 'not'
[28](01, 11)-(01, 19): NAME(NAME) 'is_empty'
[28](01, 19)-(01, 20): LPAR(OP) '('
[28](01, 20)-(01, 22): NAME(NAME) 'l2'
[28](01, 22)-(01, 23): RPAR(OP) ')'
[28](01, 23)-(01, 24): COLON(OP) ':'
[28](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 11): NAME(NAME) 'for'
[29](01, 12)-(01, 13): NAME(NAME) 'i'
[29](01, 14)-(01, 16): NAME(NAME) 'in'
[29](01, 17)-(01, 22): NAME(NAME) 'range'
[29](01, 22)-(01, 23): LPAR(OP) '('
[29](01, 23)-(01, 26): NAME(NAME) 'len'
[29](01, 26)-(01, 27): LPAR(OP) '('
[29](01, 27)-(01, 29): NAME(NAME) 'l2'
[29](01, 29)-(01, 30): RPAR(OP) ')'
[29](01, 30)-(01, 31): RPAR(OP) ')'
[29](01, 31)-(01, 32): COLON(OP) ':'
[29](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 23): NAME(NAME) 'sorted_list'
[30](01, 23)-(01, 24): DOT(OP) '.'
[30](01, 24)-(01, 30): NAME(NAME) 'append'
[30](01, 30)-(01, 31): LPAR(OP) '('
[30](01, 31)-(01, 33): NAME(NAME) 'l2'
[30](01, 33)-(01, 34): LSQB(OP) '['
[30](01, 34)-(01, 35): NAME(NAME) 'i'
[30](01, 35)-(01, 36): RSQB(OP) ']'
[30](01, 36)-(01, 37): RPAR(OP) ')'
[30](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 01): NL(NL) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 06): NAME(NAME) 'l3'
[32](01, 07)-(01, 08): EQUAL(OP) '='
[32](01, 09)-(01, 19): NAME(NAME) 'quick_sort'
[32](01, 19)-(01, 20): LPAR(OP) '('
[32](01, 20)-(01, 29): NAME(NAME) 'l_greater'
[32](01, 29)-(01, 30): COMMA(OP) ','
[32](01, 31)-(01, 42): NAME(NAME) 'sorted_list'
[32](01, 42)-(01, 43): COMMA(OP) ','
[32](01, 44)-(01, 58): NAME(NAME) 'length_history'
[32](01, 58)-(01, 59): RPAR(OP) ')'
[32](01, 59)-(01, 60): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 06): NAME(NAME) 'if'
[33](01, 07)-(01, 10): NAME(NAME) 'not'
[33](01, 11)-(01, 19): NAME(NAME) 'is_empty'
[33](01, 19)-(01, 20): LPAR(OP) '('
[33](01, 20)-(01, 22): NAME(NAME) 'l3'
[33](01, 22)-(01, 23): RPAR(OP) ')'
[33](01, 24)-(01, 27): NAME(NAME) 'and'
[33](01, 28)-(01, 31): NAME(NAME) 'not'
[33](01, 32)-(01, 41): NAME(NAME) 'is_sorted'
[33](01, 41)-(01, 42): LPAR(OP) '('
[33](01, 42)-(01, 56): NAME(NAME) 'length_history'
[33](01, 56)-(01, 57): COMMA(OP) ','
[33](01, 58)-(01, 69): NAME(NAME) 'sorted_list'
[33](01, 69)-(01, 70): RPAR(OP) ')'
[33](01, 70)-(01, 71): COLON(OP) ':'
[33](01, 71)-(01, 72): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 08): INDENT(INDENT) '        '
[34](01, 08)-(01, 19): NAME(NAME) 'sorted_list'
[34](01, 19)-(01, 20): DOT(OP) '.'
[34](01, 20)-(01, 26): NAME(NAME) 'append'
[34](01, 26)-(01, 27): LPAR(OP) '('
[34](01, 27)-(01, 29): NAME(NAME) 'l3'
[34](01, 29)-(01, 30): LSQB(OP) '['
[34](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[34](01, 31)-(01, 32): RSQB(OP) ']'
[34](01, 32)-(01, 33): RPAR(OP) ')'
[34](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 01): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 04)-(01, 116): COMMENT(COMMENT) "# print(len(sorted_list), '/', length_history[0], 'Sorted:', sorted_list, length_history[0] == len(sorted_list))"
[36](01, 116)-(01, 117): NL(NL) '\n'
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 01): NL(NL) '\n'
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 06): NAME(NAME) 'if'
[38](01, 07)-(01, 16): NAME(NAME) 'is_sorted'
[38](01, 16)-(01, 17): LPAR(OP) '('
[38](01, 17)-(01, 31): NAME(NAME) 'length_history'
[38](01, 31)-(01, 32): COMMA(OP) ','
[38](01, 33)-(01, 44): NAME(NAME) 'sorted_list'
[38](01, 44)-(01, 45): RPAR(OP) ')'
[38](01, 45)-(01, 46): COLON(OP) ':'
[38](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 08): INDENT(INDENT) '        '
[39](01, 08)-(01, 14): NAME(NAME) 'return'
[39](01, 15)-(01, 26): NAME(NAME) 'sorted_list'
[39](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 01): NL(NL) '\n'
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 01): NL(NL) '\n'
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 03): NAME(NAME) 'def'
[42](01, 04)-(01, 12): NAME(NAME) 'is_empty'
[42](01, 12)-(01, 13): LPAR(OP) '('
[42](01, 13)-(01, 14): NAME(NAME) 'l'
[42](01, 14)-(01, 15): RPAR(OP) ')'
[42](01, 15)-(01, 16): COLON(OP) ':'
[42](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 04): INDENT(INDENT) '    '
[43](01, 04)-(01, 06): NAME(NAME) 'if'
[43](01, 07)-(01, 08): NAME(NAME) 'l'
[43](01, 09)-(01, 11): NAME(NAME) 'is'
[43](01, 12)-(01, 16): NAME(NAME) 'None'
[43](01, 17)-(01, 19): NAME(NAME) 'or'
[43](01, 20)-(01, 23): NAME(NAME) 'len'
[43](01, 23)-(01, 24): LPAR(OP) '('
[43](01, 24)-(01, 25): NAME(NAME) 'l'
[43](01, 25)-(01, 26): RPAR(OP) ')'
[43](01, 27)-(01, 29): EQEQUAL(OP) '=='
[43](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[43](01, 31)-(01, 32): COLON(OP) ':'
[43](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 08): INDENT(INDENT) '        '
[44](01, 08)-(01, 14): NAME(NAME) 'return'
[44](01, 15)-(01, 19): NAME(NAME) 'True'
[44](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 04): INDENT(INDENT) '    '
[45](01, 04)-(01, 10): NAME(NAME) 'return'
[45](01, 11)-(01, 16): NAME(NAME) 'False'
[45](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 01): NL(NL) '\n'
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 01): NL(NL) '\n'
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 03): NAME(NAME) 'def'
[48](01, 04)-(01, 13): NAME(NAME) 'is_sorted'
[48](01, 13)-(01, 14): LPAR(OP) '('
[48](01, 14)-(01, 28): NAME(NAME) 'length_history'
[48](01, 28)-(01, 29): COMMA(OP) ','
[48](01, 30)-(01, 41): NAME(NAME) 'sorted_list'
[48](01, 41)-(01, 42): RPAR(OP) ')'
[48](01, 42)-(01, 43): COLON(OP) ':'
[48](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 04): INDENT(INDENT) '    '
[49](01, 04)-(01, 06): NAME(NAME) 'if'
[49](01, 07)-(01, 21): NAME(NAME) 'length_history'
[49](01, 21)-(01, 22): LSQB(OP) '['
[49](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[49](01, 23)-(01, 24): RSQB(OP) ']'
[49](01, 25)-(01, 27): EQEQUAL(OP) '=='
[49](01, 28)-(01, 31): NAME(NAME) 'len'
[49](01, 31)-(01, 32): LPAR(OP) '('
[49](01, 32)-(01, 43): NAME(NAME) 'sorted_list'
[49](01, 43)-(01, 44): RPAR(OP) ')'
[49](01, 44)-(01, 45): COLON(OP) ':'
[49](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 08): INDENT(INDENT) '        '
[50](01, 08)-(01, 14): NAME(NAME) 'return'
[50](01, 15)-(01, 19): NAME(NAME) 'True'
[50](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 04): INDENT(INDENT) '    '
[51](01, 04)-(01, 10): NAME(NAME) 'return'
[51](01, 11)-(01, 16): NAME(NAME) 'False'
[51](01, 16)-(01, 17): NEWLINE(NEWLINE)
[51](02, 00)-(02, 00): DEDENT(DEDENT)
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

