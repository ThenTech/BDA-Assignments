[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'create_sequence'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'string'
[00](01, 26)-(01, 27): COMMA(OP) ','
[00](01, 28)-(01, 33): NAME(NAME) 'index'
[00](01, 33)-(01, 34): COMMA(OP) ','
[00](01, 35)-(01, 41): NAME(NAME) 'length'
[00](01, 41)-(01, 42): RPAR(OP) ')'
[00](01, 42)-(01, 43): COLON(OP) ':'
[00](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): INDENT(INDENT) '\t'
[01](01, 01)-(01, 07): NAME(NAME) 'output'
[01](01, 08)-(01, 09): EQUAL(OP) '='
[01](01, 10)-(01, 12): STRING(STRING) '""'
[01](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): INDENT(INDENT) '\t'
[02](01, 01)-(01, 04): NAME(NAME) 'for'
[02](01, 05)-(01, 06): NAME(NAME) 'i'
[02](01, 07)-(01, 09): NAME(NAME) 'in'
[02](01, 10)-(01, 15): NAME(NAME) 'range'
[02](01, 15)-(01, 16): LPAR(OP) '('
[02](01, 16)-(01, 22): NAME(NAME) 'length'
[02](01, 22)-(01, 23): RPAR(OP) ')'
[02](01, 23)-(01, 24): COLON(OP) ':'
[02](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[03](01, 02)-(01, 08): NAME(NAME) 'output'
[03](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[03](01, 12)-(01, 29): NAME(NAME) 'get_char_at_index'
[03](01, 29)-(01, 30): LPAR(OP) '('
[03](01, 30)-(01, 36): NAME(NAME) 'string'
[03](01, 36)-(01, 37): COMMA(OP) ','
[03](01, 38)-(01, 43): NAME(NAME) 'index'
[03](01, 43)-(01, 44): PLUS(OP) '+'
[03](01, 44)-(01, 45): NAME(NAME) 'i'
[03](01, 45)-(01, 46): RPAR(OP) ')'
[03](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): INDENT(INDENT) '\t'
[04](01, 01)-(01, 06): NAME(NAME) 'print'
[04](01, 06)-(01, 07): LPAR(OP) '('
[04](01, 07)-(01, 13): NAME(NAME) 'output'
[04](01, 13)-(01, 14): RPAR(OP) ')'
[04](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 03): NAME(NAME) 'def'
[06](01, 04)-(01, 21): NAME(NAME) 'get_char_at_index'
[06](01, 21)-(01, 22): LPAR(OP) '('
[06](01, 22)-(01, 28): NAME(NAME) 'string'
[06](01, 28)-(01, 29): COMMA(OP) ','
[06](01, 30)-(01, 35): NAME(NAME) 'index'
[06](01, 35)-(01, 36): RPAR(OP) ')'
[06](01, 36)-(01, 37): COLON(OP) ':'
[06](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): INDENT(INDENT) '\t'
[07](01, 01)-(01, 03): NAME(NAME) 'if'
[07](01, 04)-(01, 09): NAME(NAME) 'index'
[07](01, 10)-(01, 12): NOTEQUAL(OP) '!='
[07](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[07](01, 14)-(01, 15): COLON(OP) ':'
[07](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[08](01, 02)-(01, 08): NAME(NAME) 'return'
[08](01, 09)-(01, 15): NAME(NAME) 'string'
[08](01, 15)-(01, 16): LSQB(OP) '['
[08](01, 16)-(01, 17): LPAR(OP) '('
[08](01, 17)-(01, 22): NAME(NAME) 'index'
[08](01, 22)-(01, 23): RPAR(OP) ')'
[08](01, 24)-(01, 25): PERCENT(OP) '%'
[08](01, 26)-(01, 29): NAME(NAME) 'len'
[08](01, 29)-(01, 30): LPAR(OP) '('
[08](01, 30)-(01, 36): NAME(NAME) 'string'
[08](01, 36)-(01, 37): RPAR(OP) ')'
[08](01, 37)-(01, 38): RSQB(OP) ']'
[08](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): INDENT(INDENT) '\t'
[09](01, 01)-(01, 05): NAME(NAME) 'else'
[09](01, 05)-(01, 06): COLON(OP) ':'
[09](01, 07)-(01, 13): NAME(NAME) 'return'
[09](01, 14)-(01, 20): NAME(NAME) 'string'
[09](01, 20)-(01, 21): LSQB(OP) '['
[09](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[09](01, 22)-(01, 23): RSQB(OP) ']'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

