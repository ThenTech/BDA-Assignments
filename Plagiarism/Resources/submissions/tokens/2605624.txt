[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 13): NAME(NAME) 'substring'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 20): NAME(NAME) 'string'
[00](01, 20)-(01, 21): COMMA(OP) ','
[00](01, 22)-(01, 23): NAME(NAME) 'n'
[00](01, 23)-(01, 24): COMMA(OP) ','
[00](01, 25)-(01, 26): NAME(NAME) 'm'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 13): NAME(NAME) 'substring'
[01](01, 14)-(01, 15): EQUAL(OP) '='
[01](01, 16)-(01, 18): STRING(STRING) '""'
[01](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 05): NAME(NAME) 'y'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[02](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'j'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 19): NAME(NAME) 'string'
[03](01, 19)-(01, 20): LSQB(OP) '['
[03](01, 20)-(01, 21): NAME(NAME) 'n'
[03](01, 21)-(01, 22): COLON(OP) ':'
[03](01, 22)-(01, 23): RSQB(OP) ']'
[03](01, 23)-(01, 24): COLON(OP) ':'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): NAME(NAME) 'm'
[04](01, 13)-(01, 15): EQEQUAL(OP) '=='
[04](01, 16)-(01, 17): NAME(NAME) 'y'
[04](01, 17)-(01, 18): COLON(OP) ':'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 18): NAME(NAME) 'return'
[05](01, 19)-(01, 28): NAME(NAME) 'substring'
[05](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 12): NAME(NAME) 'else'
[06](01, 12)-(01, 13): COLON(OP) ':'
[06](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 13): NAME(NAME) 'y'
[07](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[07](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 21): NAME(NAME) 'substring'
[08](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[08](01, 25)-(01, 26): NAME(NAME) 'j'
[08](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 10): NAME(NAME) 'return'
[09](01, 11)-(01, 20): NAME(NAME) 'substring'
[09](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 03): NAME(NAME) 'def'
[12](01, 04)-(01, 12): NAME(NAME) 'find_pos'
[12](01, 12)-(01, 13): LPAR(OP) '('
[12](01, 13)-(01, 20): NAME(NAME) 'string1'
[12](01, 20)-(01, 21): COMMA(OP) ','
[12](01, 22)-(01, 29): NAME(NAME) 'string2'
[12](01, 29)-(01, 30): RPAR(OP) ')'
[12](01, 30)-(01, 31): COLON(OP) ':'
[12](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 05): NAME(NAME) 'x'
[13](01, 06)-(01, 07): EQUAL(OP) '='
[13](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[13](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 10): NAME(NAME) 'letter'
[14](01, 11)-(01, 12): EQUAL(OP) '='
[14](01, 13)-(01, 20): NAME(NAME) 'string1'
[14](01, 20)-(01, 21): LSQB(OP) '['
[14](01, 21)-(01, 22): NAME(NAME) 'x'
[14](01, 22)-(01, 23): RSQB(OP) ']'
[14](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'for'
[15](01, 08)-(01, 09): NAME(NAME) 'i'
[15](01, 10)-(01, 12): NAME(NAME) 'in'
[15](01, 13)-(01, 20): NAME(NAME) 'string2'
[15](01, 20)-(01, 21): COLON(OP) ':'
[15](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 10): NAME(NAME) 'if'
[16](01, 11)-(01, 12): NAME(NAME) 'i'
[16](01, 13)-(01, 15): EQEQUAL(OP) '=='
[16](01, 16)-(01, 22): NAME(NAME) 'letter'
[16](01, 22)-(01, 23): COLON(OP) ':'
[16](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 22): NAME(NAME) 'substringy'
[17](01, 23)-(01, 24): EQUAL(OP) '='
[17](01, 25)-(01, 34): NAME(NAME) 'substring'
[17](01, 34)-(01, 35): LPAR(OP) '('
[17](01, 35)-(01, 42): NAME(NAME) 'string2'
[17](01, 42)-(01, 43): COMMA(OP) ','
[17](01, 44)-(01, 45): NAME(NAME) 'x'
[17](01, 45)-(01, 46): COMMA(OP) ','
[17](01, 47)-(01, 50): NAME(NAME) 'len'
[17](01, 50)-(01, 51): LPAR(OP) '('
[17](01, 51)-(01, 58): NAME(NAME) 'string1'
[17](01, 58)-(01, 59): RPAR(OP) ')'
[17](01, 59)-(01, 60): RPAR(OP) ')'
[17](01, 60)-(01, 61): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 14): NAME(NAME) 'if'
[18](01, 15)-(01, 22): NAME(NAME) 'string2'
[18](01, 23)-(01, 25): EQEQUAL(OP) '=='
[18](01, 26)-(01, 36): NAME(NAME) 'substringy'
[18](01, 36)-(01, 37): COLON(OP) ':'
[18](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 16): INDENT(INDENT) '                '
[19](01, 16)-(01, 22): NAME(NAME) 'return'
[19](01, 23)-(01, 24): NAME(NAME) 'x'
[19](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 12): NAME(NAME) 'else'
[20](01, 12)-(01, 13): COLON(OP) ':'
[20](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 13): NAME(NAME) 'x'
[21](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[21](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[21](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 10): NAME(NAME) 'return'
[22](01, 11)-(01, 15): NAME(NAME) 'None'
[22](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 03): NAME(NAME) 'def'
[25](01, 04)-(01, 13): NAME(NAME) 'in_string'
[25](01, 13)-(01, 14): LPAR(OP) '('
[25](01, 14)-(01, 21): NAME(NAME) 'string1'
[25](01, 21)-(01, 22): COMMA(OP) ','
[25](01, 23)-(01, 30): NAME(NAME) 'string2'
[25](01, 30)-(01, 31): RPAR(OP) ')'
[25](01, 31)-(01, 32): COLON(OP) ':'
[25](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 09): NAME(NAME) 'integ'
[26](01, 10)-(01, 11): EQUAL(OP) '='
[26](01, 12)-(01, 20): NAME(NAME) 'find_pos'
[26](01, 20)-(01, 21): LPAR(OP) '('
[26](01, 21)-(01, 28): NAME(NAME) 'string1'
[26](01, 28)-(01, 29): COMMA(OP) ','
[26](01, 30)-(01, 37): NAME(NAME) 'string2'
[26](01, 37)-(01, 38): RPAR(OP) ')'
[26](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 06): NAME(NAME) 'if'
[27](01, 07)-(01, 12): NAME(NAME) 'integ'
[27](01, 13)-(01, 15): NAME(NAME) 'is'
[27](01, 16)-(01, 20): NAME(NAME) 'None'
[27](01, 20)-(01, 21): COLON(OP) ':'
[27](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 08): INDENT(INDENT) '        '
[28](01, 08)-(01, 14): NAME(NAME) 'return'
[28](01, 15)-(01, 20): NAME(NAME) 'False'
[28](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 10): NAME(NAME) 'return'
[29](01, 11)-(01, 15): NAME(NAME) 'True'
[29](01, 15)-(01, 16): NEWLINE(NEWLINE)
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

