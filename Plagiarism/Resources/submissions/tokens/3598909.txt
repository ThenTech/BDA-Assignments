[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'count_words'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'string'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'i'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[01](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 05): NAME(NAME) 'x'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[02](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'while'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 12): NAME(NAME) 'i'
[03](01, 13)-(01, 14): LESS(OP) '<'
[03](01, 15)-(01, 18): NAME(NAME) 'len'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 25): NAME(NAME) 'string'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 26)-(01, 27): MINUS(OP) '-'
[03](01, 27)-(01, 28): NUMBER(NUMBER) '2'
[03](01, 28)-(01, 29): RPAR(OP) ')'
[03](01, 29)-(01, 30): COLON(OP) ':'
[03](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'letter'
[04](01, 15)-(01, 16): EQUAL(OP) '='
[04](01, 17)-(01, 23): NAME(NAME) 'string'
[04](01, 23)-(01, 24): LSQB(OP) '['
[04](01, 24)-(01, 25): NAME(NAME) 'i'
[04](01, 25)-(01, 26): RSQB(OP) ']'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 12): LPAR(OP) '('
[05](01, 12)-(01, 15): NAME(NAME) 'not'
[05](01, 16)-(01, 17): NAME(NAME) 'a'
[05](01, 18)-(01, 20): LESSEQUAL(OP) '<='
[05](01, 21)-(01, 27): NAME(NAME) 'string'
[05](01, 27)-(01, 28): LSQB(OP) '['
[05](01, 28)-(01, 29): NAME(NAME) 'i'
[05](01, 29)-(01, 30): RSQB(OP) ']'
[05](01, 31)-(01, 33): LESSEQUAL(OP) '<='
[05](01, 34)-(01, 35): NAME(NAME) 'z'
[05](01, 36)-(01, 38): NAME(NAME) 'or'
[05](01, 39)-(01, 40): NAME(NAME) 'A'
[05](01, 41)-(01, 43): LESSEQUAL(OP) '<='
[05](01, 44)-(01, 50): NAME(NAME) 'string'
[05](01, 50)-(01, 51): LSQB(OP) '['
[05](01, 51)-(01, 52): NAME(NAME) 'i'
[05](01, 52)-(01, 53): RSQB(OP) ']'
[05](01, 54)-(01, 56): LESSEQUAL(OP) '<='
[05](01, 57)-(01, 58): NAME(NAME) 'Z'
[05](01, 58)-(01, 59): RPAR(OP) ')'
[05](01, 60)-(01, 63): NAME(NAME) 'and'
[05](01, 64)-(01, 65): LPAR(OP) '('
[05](01, 65)-(01, 66): NAME(NAME) 'a'
[05](01, 67)-(01, 69): LESSEQUAL(OP) '<='
[05](01, 70)-(01, 76): NAME(NAME) 'string'
[05](01, 76)-(01, 77): LSQB(OP) '['
[05](01, 77)-(01, 78): NAME(NAME) 'i'
[05](01, 78)-(01, 79): PLUS(OP) '+'
[05](01, 79)-(01, 80): NUMBER(NUMBER) '1'
[05](01, 80)-(01, 81): RSQB(OP) ']'
[05](01, 82)-(01, 84): LESSEQUAL(OP) '<='
[05](01, 85)-(01, 86): NAME(NAME) 'z'
[05](01, 87)-(01, 89): NAME(NAME) 'or'
[05](01, 90)-(01, 91): NAME(NAME) 'A'
[05](01, 92)-(01, 94): LESSEQUAL(OP) '<='
[05](01, 95)-(01, 101): NAME(NAME) 'string'
[05](01, 101)-(01, 102): LSQB(OP) '['
[05](01, 102)-(01, 103): NAME(NAME) 'i'
[05](01, 103)-(01, 104): PLUS(OP) '+'
[05](01, 104)-(01, 105): NUMBER(NUMBER) '1'
[05](01, 105)-(01, 106): RSQB(OP) ']'
[05](01, 107)-(01, 109): LESSEQUAL(OP) '<='
[05](01, 110)-(01, 111): NAME(NAME) 'Z'
[05](01, 111)-(01, 112): RPAR(OP) ')'
[05](01, 112)-(01, 113): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 13): NAME(NAME) 'x'
[06](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[06](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[06](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 09): NAME(NAME) 'i'
[07](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[07](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[07](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 10): NAME(NAME) 'return'
[08](01, 11)-(01, 12): NAME(NAME) 'x'
[08](01, 12)-(01, 13): NEWLINE(NEWLINE)
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

