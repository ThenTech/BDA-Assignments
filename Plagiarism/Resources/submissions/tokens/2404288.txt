[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'convert'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 18): NAME(NAME) 'number'
[00](01, 18)-(01, 19): RPAR(OP) ')'
[00](01, 19)-(01, 20): COLON(OP) ':'
[00](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'x'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[01](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 11): NAME(NAME) 'counter'
[02](01, 12)-(01, 13): EQUAL(OP) '='
[02](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 13): NAME(NAME) 'number'
[03](01, 14)-(01, 16): NOTEQUAL(OP) '!='
[03](01, 17)-(01, 19): STRING(STRING) '""'
[03](01, 19)-(01, 20): COLON(OP) ':'
[03](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 15): NAME(NAME) 'counter'
[04](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[04](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 15): NAME(NAME) 'convert'
[05](01, 15)-(01, 16): LPAR(OP) '('
[05](01, 16)-(01, 22): NAME(NAME) 'number'
[05](01, 22)-(01, 23): LSQB(OP) '['
[05](01, 23)-(01, 24): COLON(OP) ':'
[05](01, 24)-(01, 27): NAME(NAME) 'len'
[05](01, 27)-(01, 28): LPAR(OP) '('
[05](01, 28)-(01, 34): NAME(NAME) 'number'
[05](01, 34)-(01, 35): RPAR(OP) ')'
[05](01, 35)-(01, 36): MINUS(OP) '-'
[05](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[05](01, 37)-(01, 38): RSQB(OP) ']'
[05](01, 38)-(01, 39): RPAR(OP) ')'
[05](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 05): NAME(NAME) 'x'
[06](01, 06)-(01, 08): PLUSEQUAL(OP) '+='
[06](01, 09)-(01, 12): NAME(NAME) 'int'
[06](01, 12)-(01, 13): LPAR(OP) '('
[06](01, 13)-(01, 19): NAME(NAME) 'number'
[06](01, 19)-(01, 20): RPAR(OP) ')'
[06](01, 20)-(01, 21): STAR(OP) '*'
[06](01, 21)-(01, 23): NUMBER(NUMBER) '10'
[06](01, 23)-(01, 24): STAR(OP) '*'
[06](01, 24)-(01, 31): NAME(NAME) 'counter'
[06](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 11): NAME(NAME) 'counter'
[07](01, 12)-(01, 14): MINEQUAL(OP) '-='
[07](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[07](01, 16)-(01, 17): NEWLINE(NEWLINE)
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

