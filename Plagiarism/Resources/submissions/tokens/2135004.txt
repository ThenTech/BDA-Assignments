[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 09): NAME(NAME) 'sentence1'
[00](01, 10)-(01, 11): EQUAL(OP) '='
[00](01, 12)-(01, 17): NAME(NAME) 'input'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 19): RPAR(OP) ')'
[00](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 09): NAME(NAME) 'sentence2'
[01](01, 10)-(01, 11): EQUAL(OP) '='
[01](01, 12)-(01, 17): NAME(NAME) 'input'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 19): RPAR(OP) ')'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 02): NAME(NAME) 'if'
[03](01, 03)-(01, 09): NAME(NAME) 'sorted'
[03](01, 09)-(01, 10): LPAR(OP) '('
[03](01, 10)-(01, 19): NAME(NAME) 'sentence1'
[03](01, 19)-(01, 20): RPAR(OP) ')'
[03](01, 21)-(01, 23): EQEQUAL(OP) '=='
[03](01, 24)-(01, 30): NAME(NAME) 'sorted'
[03](01, 30)-(01, 31): LPAR(OP) '('
[03](01, 31)-(01, 40): NAME(NAME) 'sentence2'
[03](01, 40)-(01, 41): RPAR(OP) ')'
[03](01, 41)-(01, 42): COLON(OP) ':'
[03](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'print'
[04](01, 09)-(01, 10): LPAR(OP) '('
[04](01, 10)-(01, 19): NAME(NAME) 'sentence1'
[04](01, 20)-(01, 21): PLUS(OP) '+'
[04](01, 22)-(01, 29): STRING(STRING) '" and "'
[04](01, 30)-(01, 31): PLUS(OP) '+'
[04](01, 32)-(01, 41): NAME(NAME) 'sentence2'
[04](01, 42)-(01, 43): PLUS(OP) '+'
[04](01, 44)-(01, 59): STRING(STRING) '" are anagrams"'
[04](01, 59)-(01, 60): RPAR(OP) ')'
[04](01, 60)-(01, 61): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): NAME(NAME) 'else'
[05](01, 04)-(01, 05): COLON(OP) ':'
[05](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'print'
[06](01, 09)-(01, 10): LPAR(OP) '('
[06](01, 10)-(01, 19): NAME(NAME) 'sentence1'
[06](01, 20)-(01, 21): PLUS(OP) '+'
[06](01, 22)-(01, 29): STRING(STRING) '" and "'
[06](01, 30)-(01, 31): PLUS(OP) '+'
[06](01, 32)-(01, 41): NAME(NAME) 'sentence2'
[06](01, 42)-(01, 43): PLUS(OP) '+'
[06](01, 44)-(01, 63): STRING(STRING) '" are not anagrams"'
[06](01, 63)-(01, 64): RPAR(OP) ')'
[06](01, 64)-(01, 65): NEWLINE(NEWLINE)
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

