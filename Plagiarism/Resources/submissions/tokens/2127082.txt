[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 02): NAME(NAME) 'N1'
[01](01, 03)-(01, 04): EQUAL(OP) '='
[01](01, 09)-(01, 12): NAME(NAME) 'int'
[01](01, 12)-(01, 13): LPAR(OP) '('
[01](01, 13)-(01, 18): NAME(NAME) 'input'
[01](01, 18)-(01, 19): LPAR(OP) '('
[01](01, 19)-(01, 40): STRING(STRING) '"hoeveelheid 1 cent:"'
[01](01, 40)-(01, 41): RPAR(OP) ')'
[01](01, 41)-(01, 42): RPAR(OP) ')'
[01](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 02): NAME(NAME) 'N2'
[02](01, 03)-(01, 04): EQUAL(OP) '='
[02](01, 09)-(01, 12): NAME(NAME) 'int'
[02](01, 12)-(01, 13): LPAR(OP) '('
[02](01, 13)-(01, 18): NAME(NAME) 'input'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 40): STRING(STRING) '"hoeveelheid 2 cent:"'
[02](01, 40)-(01, 41): RPAR(OP) ')'
[02](01, 41)-(01, 42): RPAR(OP) ')'
[02](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 02): NAME(NAME) 'N5'
[03](01, 03)-(01, 04): EQUAL(OP) '='
[03](01, 09)-(01, 12): NAME(NAME) 'int'
[03](01, 12)-(01, 13): LPAR(OP) '('
[03](01, 13)-(01, 18): NAME(NAME) 'input'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 40): STRING(STRING) '"hoeveelheid 5 cent:"'
[03](01, 40)-(01, 41): RPAR(OP) ')'
[03](01, 41)-(01, 42): RPAR(OP) ')'
[03](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'N10'
[04](01, 04)-(01, 05): EQUAL(OP) '='
[04](01, 09)-(01, 12): NAME(NAME) 'int'
[04](01, 12)-(01, 13): LPAR(OP) '('
[04](01, 13)-(01, 18): NAME(NAME) 'input'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 41): STRING(STRING) '"hoeveelheid 10 cent:"'
[04](01, 41)-(01, 42): RPAR(OP) ')'
[04](01, 42)-(01, 43): RPAR(OP) ')'
[04](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'N20'
[05](01, 04)-(01, 05): EQUAL(OP) '='
[05](01, 09)-(01, 12): NAME(NAME) 'int'
[05](01, 12)-(01, 13): LPAR(OP) '('
[05](01, 13)-(01, 18): NAME(NAME) 'input'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 41): STRING(STRING) '"hoeveelheid 20 cent:"'
[05](01, 41)-(01, 42): RPAR(OP) ')'
[05](01, 42)-(01, 43): RPAR(OP) ')'
[05](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 06): NAME(NAME) 'totaal'
[06](01, 07)-(01, 08): EQUAL(OP) '='
[06](01, 09)-(01, 12): NAME(NAME) 'str'
[06](01, 12)-(01, 13): LPAR(OP) '('
[06](01, 13)-(01, 15): NAME(NAME) 'N1'
[06](01, 16)-(01, 17): PLUS(OP) '+'
[06](01, 18)-(01, 20): NAME(NAME) 'N2'
[06](01, 20)-(01, 21): STAR(OP) '*'
[06](01, 21)-(01, 22): NUMBER(NUMBER) '2'
[06](01, 23)-(01, 24): PLUS(OP) '+'
[06](01, 25)-(01, 27): NAME(NAME) 'N5'
[06](01, 27)-(01, 28): STAR(OP) '*'
[06](01, 28)-(01, 29): NUMBER(NUMBER) '5'
[06](01, 30)-(01, 31): PLUS(OP) '+'
[06](01, 32)-(01, 35): NAME(NAME) 'N10'
[06](01, 35)-(01, 36): STAR(OP) '*'
[06](01, 36)-(01, 38): NUMBER(NUMBER) '10'
[06](01, 39)-(01, 40): PLUS(OP) '+'
[06](01, 41)-(01, 44): NAME(NAME) 'N20'
[06](01, 44)-(01, 45): STAR(OP) '*'
[06](01, 45)-(01, 47): NUMBER(NUMBER) '20'
[06](01, 47)-(01, 48): RPAR(OP) ')'
[06](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 05): NAME(NAME) 'getal'
[07](01, 06)-(01, 07): EQUAL(OP) '='
[07](01, 08)-(01, 14): NAME(NAME) 'totaal'
[07](01, 14)-(01, 15): LSQB(OP) '['
[07](01, 15)-(01, 18): NAME(NAME) 'len'
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 25): NAME(NAME) 'totaal'
[07](01, 25)-(01, 26): RPAR(OP) ')'
[07](01, 26)-(01, 27): MINUS(OP) '-'
[07](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[07](01, 28)-(01, 29): RSQB(OP) ']'
[07](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 07): NAME(NAME) 'tiental'
[08](01, 08)-(01, 09): EQUAL(OP) '='
[08](01, 10)-(01, 16): NAME(NAME) 'totaal'
[08](01, 16)-(01, 17): LSQB(OP) '['
[08](01, 17)-(01, 20): NAME(NAME) 'len'
[08](01, 20)-(01, 21): LPAR(OP) '('
[08](01, 21)-(01, 27): NAME(NAME) 'totaal'
[08](01, 27)-(01, 28): RPAR(OP) ')'
[08](01, 28)-(01, 29): MINUS(OP) '-'
[08](01, 29)-(01, 30): NUMBER(NUMBER) '2'
[08](01, 30)-(01, 31): RSQB(OP) ']'
[08](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 05): NAME(NAME) 'euros'
[09](01, 06)-(01, 07): EQUAL(OP) '='
[09](01, 08)-(01, 11): NAME(NAME) 'int'
[09](01, 11)-(01, 12): LPAR(OP) '('
[09](01, 12)-(01, 14): NAME(NAME) 'N1'
[09](01, 14)-(01, 15): STAR(OP) '*'
[09](01, 15)-(01, 19): NUMBER(NUMBER) '0.01'
[09](01, 20)-(01, 21): PLUS(OP) '+'
[09](01, 22)-(01, 24): NAME(NAME) 'N2'
[09](01, 24)-(01, 25): STAR(OP) '*'
[09](01, 25)-(01, 29): NUMBER(NUMBER) '0.02'
[09](01, 30)-(01, 31): PLUS(OP) '+'
[09](01, 32)-(01, 34): NAME(NAME) 'N5'
[09](01, 34)-(01, 35): STAR(OP) '*'
[09](01, 35)-(01, 39): NUMBER(NUMBER) '0.05'
[09](01, 40)-(01, 41): PLUS(OP) '+'
[09](01, 42)-(01, 45): NAME(NAME) 'N10'
[09](01, 45)-(01, 46): STAR(OP) '*'
[09](01, 46)-(01, 50): NUMBER(NUMBER) '0.10'
[09](01, 51)-(01, 52): PLUS(OP) '+'
[09](01, 53)-(01, 56): NAME(NAME) 'N20'
[09](01, 56)-(01, 57): STAR(OP) '*'
[09](01, 57)-(01, 61): NUMBER(NUMBER) '0.20'
[09](01, 61)-(01, 62): RPAR(OP) ')'
[09](01, 62)-(01, 63): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 05): NAME(NAME) 'print'
[10](01, 05)-(01, 06): LPAR(OP) '('
[10](01, 06)-(01, 17): STRING(STRING) '"You have "'
[10](01, 17)-(01, 18): COMMA(OP) ','
[10](01, 19)-(01, 24): NAME(NAME) 'euros'
[10](01, 24)-(01, 25): COMMA(OP) ','
[10](01, 26)-(01, 29): STRING(STRING) '"."'
[10](01, 29)-(01, 30): COMMA(OP) ','
[10](01, 31)-(01, 38): NAME(NAME) 'tiental'
[10](01, 38)-(01, 39): COMMA(OP) ','
[10](01, 40)-(01, 45): NAME(NAME) 'getal'
[10](01, 45)-(01, 46): COMMA(OP) ','
[10](01, 47)-(01, 55): STRING(STRING) '" euro!"'
[10](01, 55)-(01, 56): COMMA(OP) ','
[10](01, 57)-(01, 60): NAME(NAME) 'sep'
[10](01, 60)-(01, 61): EQUAL(OP) '='
[10](01, 61)-(01, 63): STRING(STRING) '""'
[10](01, 63)-(01, 64): RPAR(OP) ')'
[10](01, 64)-(01, 65): NEWLINE(NEWLINE)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

