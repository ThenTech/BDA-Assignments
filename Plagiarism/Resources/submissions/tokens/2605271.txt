[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 02): NAME(NAME) 'ef'
[00](01, 03)-(01, 25): NAME(NAME) 'is_palindrome_sentence'
[00](01, 25)-(01, 26): LPAR(OP) '('
[00](01, 26)-(01, 34): NAME(NAME) 'sentence'
[00](01, 34)-(01, 35): RPAR(OP) ')'
[00](01, 35)-(01, 36): COLON(OP) ':'
[00](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 19): NAME(NAME) 'sentence_filter'
[01](01, 20)-(01, 21): EQUAL(OP) '='
[01](01, 22)-(01, 30): NAME(NAME) 'sentence'
[01](01, 30)-(01, 31): DOT(OP) '.'
[01](01, 31)-(01, 36): NAME(NAME) 'lower'
[01](01, 36)-(01, 37): LPAR(OP) '('
[01](01, 37)-(01, 38): RPAR(OP) ')'
[01](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 20): NAME(NAME) 'sentence_filter2'
[02](01, 21)-(01, 22): EQUAL(OP) '='
[02](01, 23)-(01, 25): STRING(STRING) '""'
[02](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 14): NAME(NAME) 'palindroom'
[03](01, 15)-(01, 16): EQUAL(OP) '='
[03](01, 17)-(01, 21): NAME(NAME) 'True'
[03](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 18): NAME(NAME) 'range'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 22): NAME(NAME) 'len'
[04](01, 22)-(01, 23): LPAR(OP) '('
[04](01, 23)-(01, 38): NAME(NAME) 'sentence_filter'
[04](01, 38)-(01, 39): RPAR(OP) ')'
[04](01, 39)-(01, 40): RPAR(OP) ')'
[04](01, 40)-(01, 41): COLON(OP) ':'
[04](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 26): NAME(NAME) 'sentence_filter'
[05](01, 26)-(01, 27): LSQB(OP) '['
[05](01, 27)-(01, 28): NAME(NAME) 'i'
[05](01, 28)-(01, 29): RSQB(OP) ']'
[05](01, 30)-(01, 32): NAME(NAME) 'in'
[05](01, 33)-(01, 40): NAME(NAME) 'alfabet'
[05](01, 40)-(01, 41): COLON(OP) ':'
[05](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 28): NAME(NAME) 'sentence_filter2'
[06](01, 29)-(01, 31): PLUSEQUAL(OP) '+='
[06](01, 32)-(01, 47): NAME(NAME) 'sentence_filter'
[06](01, 47)-(01, 48): LSQB(OP) '['
[06](01, 48)-(01, 49): NAME(NAME) 'i'
[06](01, 49)-(01, 50): RSQB(OP) ']'
[06](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 07): NAME(NAME) 'for'
[07](01, 08)-(01, 09): NAME(NAME) 'i'
[07](01, 10)-(01, 12): NAME(NAME) 'in'
[07](01, 13)-(01, 18): NAME(NAME) 'range'
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 22): NAME(NAME) 'len'
[07](01, 22)-(01, 23): LPAR(OP) '('
[07](01, 23)-(01, 39): NAME(NAME) 'sentence_filter2'
[07](01, 39)-(01, 40): RPAR(OP) ')'
[07](01, 41)-(01, 43): DOUBLESLASH(OP) '//'
[07](01, 44)-(01, 45): NUMBER(NUMBER) '2'
[07](01, 45)-(01, 46): RPAR(OP) ')'
[07](01, 46)-(01, 47): COLON(OP) ':'
[07](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 27): NAME(NAME) 'sentence_filter2'
[08](01, 27)-(01, 28): LSQB(OP) '['
[08](01, 28)-(01, 29): NAME(NAME) 'i'
[08](01, 29)-(01, 30): RSQB(OP) ']'
[08](01, 31)-(01, 33): NOTEQUAL(OP) '!='
[08](01, 34)-(01, 50): NAME(NAME) 'sentence_filter2'
[08](01, 50)-(01, 51): LSQB(OP) '['
[08](01, 51)-(01, 54): NAME(NAME) 'len'
[08](01, 54)-(01, 55): LPAR(OP) '('
[08](01, 55)-(01, 71): NAME(NAME) 'sentence_filter2'
[08](01, 71)-(01, 72): RPAR(OP) ')'
[08](01, 72)-(01, 73): MINUS(OP) '-'
[08](01, 73)-(01, 74): NAME(NAME) 'i'
[08](01, 74)-(01, 75): MINUS(OP) '-'
[08](01, 75)-(01, 76): NUMBER(NUMBER) '1'
[08](01, 76)-(01, 77): RSQB(OP) ']'
[08](01, 77)-(01, 78): COLON(OP) ':'
[08](01, 78)-(01, 79): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 18): NAME(NAME) 'return'
[09](01, 19)-(01, 24): NAME(NAME) 'False'
[09](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'return'
[10](01, 15)-(01, 25): NAME(NAME) 'palindroom'
[10](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 07): NAME(NAME) 'alfabet'
[11](01, 08)-(01, 09): EQUAL(OP) '='
[11](01, 10)-(01, 38): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[11](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

