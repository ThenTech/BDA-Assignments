[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 14): NAME(NAME) 'is_ordered'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 16): NAME(NAME) 'l'
[00](01, 16)-(01, 17): RPAR(OP) ')'
[00](01, 17)-(01, 18): COLON(OP) ':'
[00](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 07): NAME(NAME) 'for'
[01](01, 08)-(01, 09): NAME(NAME) 'i'
[01](01, 10)-(01, 12): NAME(NAME) 'in'
[01](01, 13)-(01, 18): NAME(NAME) 'range'
[01](01, 18)-(01, 19): LPAR(OP) '('
[01](01, 19)-(01, 22): NAME(NAME) 'len'
[01](01, 22)-(01, 23): LPAR(OP) '('
[01](01, 23)-(01, 24): NAME(NAME) 'l'
[01](01, 24)-(01, 25): RPAR(OP) ')'
[01](01, 25)-(01, 26): MINUS(OP) '-'
[01](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[01](01, 27)-(01, 28): RPAR(OP) ')'
[01](01, 28)-(01, 29): COLON(OP) ':'
[01](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 10): NAME(NAME) 'if'
[02](01, 11)-(01, 12): NAME(NAME) 'l'
[02](01, 12)-(01, 13): LSQB(OP) '['
[02](01, 13)-(01, 14): NAME(NAME) 'i'
[02](01, 14)-(01, 15): RSQB(OP) ']'
[02](01, 16)-(01, 17): GREATER(OP) '>'
[02](01, 18)-(01, 19): NAME(NAME) 'l'
[02](01, 19)-(01, 20): LSQB(OP) '['
[02](01, 20)-(01, 21): NAME(NAME) 'i'
[02](01, 21)-(01, 22): PLUS(OP) '+'
[02](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[02](01, 23)-(01, 24): RSQB(OP) ']'
[02](01, 24)-(01, 25): COLON(OP) ':'
[02](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 12): INDENT(INDENT) '            '
[03](01, 12)-(01, 18): NAME(NAME) 'return'
[03](01, 19)-(01, 24): NAME(NAME) 'False'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 10): NAME(NAME) 'return'
[04](01, 11)-(01, 15): NAME(NAME) 'True'
[04](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 05): NAME(NAME) 'print'
[07](01, 05)-(01, 06): LPAR(OP) '('
[07](01, 06)-(01, 16): NAME(NAME) 'is_ordered'
[07](01, 16)-(01, 17): LPAR(OP) '('
[07](01, 17)-(01, 18): LSQB(OP) '['
[07](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[07](01, 19)-(01, 20): COMMA(OP) ','
[07](01, 21)-(01, 22): MINUS(OP) '-'
[07](01, 22)-(01, 23): NUMBER(NUMBER) '2'
[07](01, 23)-(01, 24): COMMA(OP) ','
[07](01, 25)-(01, 26): NUMBER(NUMBER) '3'
[07](01, 26)-(01, 27): COMMA(OP) ','
[07](01, 28)-(01, 29): NUMBER(NUMBER) '4'
[07](01, 29)-(01, 30): COMMA(OP) ','
[07](01, 31)-(01, 32): NUMBER(NUMBER) '5'
[07](01, 32)-(01, 33): COMMA(OP) ','
[07](01, 34)-(01, 35): NUMBER(NUMBER) '6'
[07](01, 35)-(01, 36): COMMA(OP) ','
[07](01, 37)-(01, 38): NUMBER(NUMBER) '7'
[07](01, 38)-(01, 39): COMMA(OP) ','
[07](01, 40)-(01, 41): NUMBER(NUMBER) '8'
[07](01, 41)-(01, 42): COMMA(OP) ','
[07](01, 43)-(01, 44): NUMBER(NUMBER) '9'
[07](01, 44)-(01, 45): RSQB(OP) ']'
[07](01, 45)-(01, 46): RPAR(OP) ')'
[07](01, 46)-(01, 47): RPAR(OP) ')'
[07](01, 47)-(01, 48): NEWLINE(NEWLINE)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

