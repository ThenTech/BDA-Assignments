[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'def'
[01](01, 04)-(01, 22): NAME(NAME) 'clean_up_and_count'
[01](01, 22)-(01, 23): LPAR(OP) '('
[01](01, 23)-(01, 29): NAME(NAME) 'string'
[01](01, 29)-(01, 30): RPAR(OP) ')'
[01](01, 30)-(01, 31): COLON(OP) ':'
[01](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 14): NAME(NAME) 'new_string'
[02](01, 15)-(01, 16): EQUAL(OP) '='
[02](01, 17)-(01, 19): STRING(STRING) '""'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 12): NAME(NAME) 'char'
[03](01, 13)-(01, 15): NAME(NAME) 'in'
[03](01, 16)-(01, 22): NAME(NAME) 'string'
[03](01, 22)-(01, 23): COLON(OP) ':'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 08)-(01, 43): COMMENT(COMMENT) '# if the char is not in the alfabet'
[04](01, 43)-(01, 44): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 28): NAME(NAME) 'char_in_char_list'
[05](01, 28)-(01, 29): LPAR(OP) '('
[05](01, 29)-(01, 33): NAME(NAME) 'char'
[05](01, 33)-(01, 34): COMMA(OP) ','
[05](01, 35)-(01, 89): STRING(STRING) '"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"'
[05](01, 89)-(01, 90): RPAR(OP) ')'
[05](01, 90)-(01, 91): COLON(OP) ':'
[05](01, 91)-(01, 92): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 22): NAME(NAME) 'new_string'
[06](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[06](01, 26)-(01, 30): NAME(NAME) 'char'
[06](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 12): NAME(NAME) 'elif'
[07](01, 13)-(01, 23): NAME(NAME) 'new_string'
[07](01, 24)-(01, 26): NOTEQUAL(OP) '!='
[07](01, 27)-(01, 29): STRING(STRING) '""'
[07](01, 29)-(01, 30): COLON(OP) ':'
[07](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 17): NAME(NAME) 'print'
[08](01, 17)-(01, 18): LPAR(OP) '('
[08](01, 18)-(01, 28): NAME(NAME) 'new_string'
[08](01, 28)-(01, 29): COMMA(OP) ','
[08](01, 30)-(01, 33): NAME(NAME) 'len'
[08](01, 33)-(01, 34): LPAR(OP) '('
[08](01, 34)-(01, 44): NAME(NAME) 'new_string'
[08](01, 44)-(01, 45): RPAR(OP) ')'
[08](01, 45)-(01, 46): RPAR(OP) ')'
[08](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 22): NAME(NAME) 'new_string'
[09](01, 23)-(01, 24): EQUAL(OP) '='
[09](01, 25)-(01, 27): STRING(STRING) '""'
[09](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 12)-(01, 13): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 06): NAME(NAME) 'if'
[11](01, 07)-(01, 17): NAME(NAME) 'new_string'
[11](01, 18)-(01, 20): NOTEQUAL(OP) '!='
[11](01, 21)-(01, 23): STRING(STRING) '""'
[11](01, 23)-(01, 24): COLON(OP) ':'
[11](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 17): NAME(NAME) 'print'
[12](01, 17)-(01, 18): LPAR(OP) '('
[12](01, 18)-(01, 28): NAME(NAME) 'new_string'
[12](01, 28)-(01, 29): COMMA(OP) ','
[12](01, 30)-(01, 33): NAME(NAME) 'len'
[12](01, 33)-(01, 34): LPAR(OP) '('
[12](01, 34)-(01, 44): NAME(NAME) 'new_string'
[12](01, 44)-(01, 45): RPAR(OP) ')'
[12](01, 45)-(01, 46): RPAR(OP) ')'
[12](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 12)-(01, 13): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 03): NAME(NAME) 'def'
[14](01, 04)-(01, 21): NAME(NAME) 'char_in_char_list'
[14](01, 21)-(01, 22): LPAR(OP) '('
[14](01, 22)-(01, 26): NAME(NAME) 'char'
[14](01, 26)-(01, 27): COMMA(OP) ','
[14](01, 28)-(01, 37): NAME(NAME) 'char_list'
[14](01, 37)-(01, 38): RPAR(OP) ')'
[14](01, 38)-(01, 39): COLON(OP) ':'
[14](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'for'
[15](01, 08)-(01, 12): NAME(NAME) 'item'
[15](01, 13)-(01, 15): NAME(NAME) 'in'
[15](01, 16)-(01, 25): NAME(NAME) 'char_list'
[15](01, 25)-(01, 26): COLON(OP) ':'
[15](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 10): NAME(NAME) 'if'
[16](01, 11)-(01, 15): NAME(NAME) 'item'
[16](01, 16)-(01, 18): EQEQUAL(OP) '=='
[16](01, 19)-(01, 23): NAME(NAME) 'char'
[16](01, 23)-(01, 24): COLON(OP) ':'
[16](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 18): NAME(NAME) 'return'
[17](01, 19)-(01, 23): NAME(NAME) 'True'
[17](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 10): NAME(NAME) 'return'
[18](01, 11)-(01, 16): NAME(NAME) 'False'
[18](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 04)-(01, 05): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 18): NAME(NAME) 'clean_up_and_count'
[20](01, 18)-(01, 19): LPAR(OP) '('
[20](01, 20)-(01, 25): NAME(NAME) 'input'
[20](01, 25)-(01, 26): LPAR(OP) '('
[20](01, 26)-(01, 45): STRING(STRING) '"Give me a String:"'
[20](01, 45)-(01, 46): RPAR(OP) ')'
[20](01, 47)-(01, 48): RPAR(OP) ')'
[20](01, 48)-(01, 49): NEWLINE(NEWLINE)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

