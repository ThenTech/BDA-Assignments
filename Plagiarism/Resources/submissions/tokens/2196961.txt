[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'count_words'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'string'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 09): NAME(NAME) 'print'
[01](01, 09)-(01, 10): LPAR(OP) '('
[01](01, 10)-(01, 16): NAME(NAME) 'string'
[01](01, 16)-(01, 17): RPAR(OP) ')'
[01](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'lijst'
[02](01, 10)-(01, 11): EQUAL(OP) '='
[02](01, 12)-(01, 18): NAME(NAME) 'string'
[02](01, 18)-(01, 19): DOT(OP) '.'
[02](01, 19)-(01, 24): NAME(NAME) 'split'
[02](01, 24)-(01, 25): LPAR(OP) '('
[02](01, 25)-(01, 26): RPAR(OP) ')'
[02](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'print'
[03](01, 09)-(01, 10): LPAR(OP) '('
[03](01, 10)-(01, 15): NAME(NAME) 'lijst'
[03](01, 15)-(01, 16): RPAR(OP) ')'
[03](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 19): NAME(NAME) 'verboden_tekens'
[04](01, 20)-(01, 21): EQUAL(OP) '='
[04](01, 22)-(01, 23): LSQB(OP) '['
[04](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[04](01, 24)-(01, 25): COMMA(OP) ','
[04](01, 26)-(01, 27): NUMBER(NUMBER) '2'
[04](01, 27)-(01, 28): COMMA(OP) ','
[04](01, 29)-(01, 30): NUMBER(NUMBER) '3'
[04](01, 30)-(01, 31): COMMA(OP) ','
[04](01, 32)-(01, 33): NUMBER(NUMBER) '4'
[04](01, 33)-(01, 34): COMMA(OP) ','
[04](01, 35)-(01, 36): NUMBER(NUMBER) '5'
[04](01, 36)-(01, 37): COMMA(OP) ','
[04](01, 38)-(01, 39): NUMBER(NUMBER) '6'
[04](01, 39)-(01, 40): COMMA(OP) ','
[04](01, 41)-(01, 42): NUMBER(NUMBER) '7'
[04](01, 42)-(01, 43): COMMA(OP) ','
[04](01, 44)-(01, 45): NUMBER(NUMBER) '8'
[04](01, 45)-(01, 46): COMMA(OP) ','
[04](01, 47)-(01, 48): NUMBER(NUMBER) '9'
[04](01, 48)-(01, 49): COMMA(OP) ','
[04](01, 50)-(01, 51): NUMBER(NUMBER) '0'
[04](01, 51)-(01, 52): COMMA(OP) ','
[04](01, 52)-(01, 55): STRING(STRING) '"."'
[04](01, 55)-(01, 56): COMMA(OP) ','
[04](01, 56)-(01, 59): STRING(STRING) '"?"'
[04](01, 59)-(01, 60): COMMA(OP) ','
[04](01, 60)-(01, 63): STRING(STRING) '"!"'
[04](01, 63)-(01, 64): COMMA(OP) ','
[04](01, 64)-(01, 67): STRING(STRING) '","'
[04](01, 67)-(01, 68): RSQB(OP) ']'
[04](01, 68)-(01, 69): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 12): NAME(NAME) 'in'
[05](01, 13)-(01, 18): NAME(NAME) 'range'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 22): NAME(NAME) 'len'
[05](01, 22)-(01, 23): LPAR(OP) '('
[05](01, 23)-(01, 29): NAME(NAME) 'string'
[05](01, 29)-(01, 30): RPAR(OP) ')'
[05](01, 30)-(01, 31): RPAR(OP) ')'
[05](01, 31)-(01, 32): COLON(OP) ':'
[05](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 17): NAME(NAME) 'string'
[06](01, 17)-(01, 18): LSQB(OP) '['
[06](01, 18)-(01, 19): NAME(NAME) 'i'
[06](01, 19)-(01, 20): RSQB(OP) ']'
[06](01, 21)-(01, 23): NAME(NAME) 'in'
[06](01, 24)-(01, 39): NAME(NAME) 'verboden_tekens'
[06](01, 39)-(01, 40): COLON(OP) ':'
[06](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'string'
[07](01, 19)-(01, 20): EQUAL(OP) '='
[07](01, 21)-(01, 27): NAME(NAME) 'string'
[07](01, 27)-(01, 28): LSQB(OP) '['
[07](01, 28)-(01, 29): NUMBER(NUMBER) '0'
[07](01, 29)-(01, 30): COLON(OP) ':'
[07](01, 30)-(01, 31): NAME(NAME) 'i'
[07](01, 31)-(01, 32): RSQB(OP) ']'
[07](01, 33)-(01, 34): PLUS(OP) '+'
[07](01, 35)-(01, 38): STRING(STRING) '" "'
[07](01, 39)-(01, 40): PLUS(OP) '+'
[07](01, 41)-(01, 47): NAME(NAME) 'string'
[07](01, 47)-(01, 48): LSQB(OP) '['
[07](01, 48)-(01, 49): NAME(NAME) 'i'
[07](01, 49)-(01, 50): PLUS(OP) '+'
[07](01, 50)-(01, 51): NUMBER(NUMBER) '1'
[07](01, 51)-(01, 52): RSQB(OP) ']'
[07](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'lijst'
[08](01, 10)-(01, 11): EQUAL(OP) '='
[08](01, 12)-(01, 18): NAME(NAME) 'string'
[08](01, 18)-(01, 19): DOT(OP) '.'
[08](01, 19)-(01, 24): NAME(NAME) 'split'
[08](01, 24)-(01, 25): LPAR(OP) '('
[08](01, 25)-(01, 26): RPAR(OP) ')'
[08](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'print'
[09](01, 09)-(01, 10): LPAR(OP) '('
[09](01, 10)-(01, 15): NAME(NAME) 'lijst'
[09](01, 15)-(01, 16): RPAR(OP) ')'
[09](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'return'
[10](01, 11)-(01, 14): NAME(NAME) 'len'
[10](01, 14)-(01, 15): LPAR(OP) '('
[10](01, 15)-(01, 20): NAME(NAME) 'lijst'
[10](01, 20)-(01, 21): RPAR(OP) ')'
[10](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 11): NAME(NAME) 'count_words'
[11](01, 11)-(01, 12): LPAR(OP) '('
[11](01, 12)-(01, 37): STRING(STRING) '"five 6 seven,eight!nine"'
[11](01, 37)-(01, 38): RPAR(OP) ')'
[11](01, 38)-(01, 39): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

