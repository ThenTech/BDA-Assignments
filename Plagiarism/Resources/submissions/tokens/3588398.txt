[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'printHelper'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'length'
[00](01, 22)-(01, 23): COMMA(OP) ','
[00](01, 24)-(01, 29): NAME(NAME) 'bases'
[00](01, 29)-(01, 30): COMMA(OP) ','
[00](01, 31)-(01, 37): NAME(NAME) 'string'
[00](01, 37)-(01, 38): RPAR(OP) ')'
[00](01, 38)-(01, 39): COLON(OP) ':'
[00](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 10): NAME(NAME) 'len'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 17): NAME(NAME) 'string'
[01](01, 17)-(01, 18): RPAR(OP) ')'
[01](01, 19)-(01, 21): EQEQUAL(OP) '=='
[01](01, 22)-(01, 28): NAME(NAME) 'length'
[01](01, 28)-(01, 29): COLON(OP) ':'
[01](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 13): NAME(NAME) 'print'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 20): NAME(NAME) 'string'
[02](01, 20)-(01, 21): RPAR(OP) ')'
[02](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'else'
[03](01, 08)-(01, 09): COLON(OP) ':'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 11): NAME(NAME) 'for'
[04](01, 12)-(01, 13): NAME(NAME) 'i'
[04](01, 14)-(01, 16): NAME(NAME) 'in'
[04](01, 17)-(01, 22): NAME(NAME) 'bases'
[04](01, 22)-(01, 23): COLON(OP) ':'
[04](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 23): NAME(NAME) 'printHelper'
[05](01, 23)-(01, 24): LPAR(OP) '('
[05](01, 24)-(01, 30): NAME(NAME) 'length'
[05](01, 30)-(01, 31): COMMA(OP) ','
[05](01, 32)-(01, 37): NAME(NAME) 'bases'
[05](01, 37)-(01, 38): COMMA(OP) ','
[05](01, 39)-(01, 45): NAME(NAME) 'string'
[05](01, 46)-(01, 47): PLUS(OP) '+'
[05](01, 48)-(01, 49): NAME(NAME) 'i'
[05](01, 49)-(01, 50): RPAR(OP) ')'
[05](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): NAME(NAME) 'def'
[07](01, 04)-(01, 12): NAME(NAME) 'printDna'
[07](01, 12)-(01, 13): LPAR(OP) '('
[07](01, 13)-(01, 19): NAME(NAME) 'length'
[07](01, 19)-(01, 20): RPAR(OP) ')'
[07](01, 20)-(01, 21): COLON(OP) ':'
[07](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'bases'
[08](01, 10)-(01, 11): EQUAL(OP) '='
[08](01, 12)-(01, 18): STRING(STRING) "'ACGT'"
[08](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 15): NAME(NAME) 'printHelper'
[09](01, 15)-(01, 16): LPAR(OP) '('
[09](01, 16)-(01, 22): NAME(NAME) 'length'
[09](01, 22)-(01, 23): COMMA(OP) ','
[09](01, 24)-(01, 29): NAME(NAME) 'bases'
[09](01, 29)-(01, 30): COMMA(OP) ','
[09](01, 31)-(01, 33): STRING(STRING) '""'
[09](01, 33)-(01, 34): RPAR(OP) ')'
[09](01, 34)-(01, 35): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

