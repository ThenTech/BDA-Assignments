[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): NAME(NAME) 'year'
[01](01, 04)-(01, 05): EQUAL(OP) '='
[01](01, 05)-(01, 08): NAME(NAME) 'int'
[01](01, 08)-(01, 09): LPAR(OP) '('
[01](01, 09)-(01, 14): NAME(NAME) 'input'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 21): STRING(STRING) '"year"'
[01](01, 21)-(01, 22): RPAR(OP) ')'
[01](01, 22)-(01, 23): RPAR(OP) ')'
[01](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 02): NAME(NAME) 'if'
[02](01, 04)-(01, 08): NAME(NAME) 'year'
[02](01, 08)-(01, 09): PERCENT(OP) '%'
[02](01, 09)-(01, 12): NUMBER(NUMBER) '100'
[02](01, 12)-(01, 14): EQEQUAL(OP) '=='
[02](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[02](01, 16)-(01, 19): NAME(NAME) 'and'
[02](01, 20)-(01, 23): NAME(NAME) 'not'
[02](01, 23)-(01, 24): LPAR(OP) '('
[02](01, 24)-(01, 28): NAME(NAME) 'year'
[02](01, 28)-(01, 29): PERCENT(OP) '%'
[02](01, 29)-(01, 32): NUMBER(NUMBER) '400'
[02](01, 32)-(01, 34): EQEQUAL(OP) '=='
[02](01, 34)-(01, 35): NUMBER(NUMBER) '0'
[02](01, 35)-(01, 36): RPAR(OP) ')'
[02](01, 36)-(01, 37): COLON(OP) ':'
[02](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'print'
[03](01, 09)-(01, 10): LPAR(OP) '('
[03](01, 10)-(01, 13): NAME(NAME) 'str'
[03](01, 13)-(01, 14): LPAR(OP) '('
[03](01, 14)-(01, 18): NAME(NAME) 'year'
[03](01, 18)-(01, 19): RPAR(OP) ')'
[03](01, 20)-(01, 21): PLUS(OP) '+'
[03](01, 22)-(01, 43): STRING(STRING) '" is not a leap year"'
[03](01, 43)-(01, 44): RPAR(OP) ')'
[03](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): NAME(NAME) 'elif'
[04](01, 05)-(01, 09): NAME(NAME) 'year'
[04](01, 09)-(01, 10): PERCENT(OP) '%'
[04](01, 10)-(01, 11): NUMBER(NUMBER) '4'
[04](01, 11)-(01, 13): EQEQUAL(OP) '=='
[04](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[04](01, 14)-(01, 15): COLON(OP) ':'
[04](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'print'
[05](01, 09)-(01, 10): LPAR(OP) '('
[05](01, 10)-(01, 13): NAME(NAME) 'str'
[05](01, 13)-(01, 14): LPAR(OP) '('
[05](01, 14)-(01, 18): NAME(NAME) 'year'
[05](01, 18)-(01, 19): RPAR(OP) ')'
[05](01, 20)-(01, 21): PLUS(OP) '+'
[05](01, 22)-(01, 39): STRING(STRING) '" is a leap year"'
[05](01, 39)-(01, 40): RPAR(OP) ')'
[05](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): NAME(NAME) 'else'
[06](01, 04)-(01, 05): COLON(OP) ':'
[06](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 09): NAME(NAME) 'print'
[07](01, 09)-(01, 10): LPAR(OP) '('
[07](01, 10)-(01, 13): NAME(NAME) 'str'
[07](01, 13)-(01, 14): LPAR(OP) '('
[07](01, 14)-(01, 18): NAME(NAME) 'year'
[07](01, 18)-(01, 19): RPAR(OP) ')'
[07](01, 20)-(01, 21): PLUS(OP) '+'
[07](01, 22)-(01, 43): STRING(STRING) '" is not a leap year"'
[07](01, 43)-(01, 44): RPAR(OP) ')'
[07](01, 44)-(01, 45): NEWLINE(NEWLINE)
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

