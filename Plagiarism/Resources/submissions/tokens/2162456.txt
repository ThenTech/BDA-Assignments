[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 12): NAME(NAME) 'is_prime'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 14): NAME(NAME) 'x'
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): COLON(OP) ':'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): NAME(NAME) 'x'
[01](01, 09)-(01, 10): PERCENT(OP) '%'
[01](01, 11)-(01, 12): NUMBER(NUMBER) '2'
[01](01, 13)-(01, 15): NOTEQUAL(OP) '!='
[01](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[01](01, 18)-(01, 21): NAME(NAME) 'and'
[01](01, 22)-(01, 23): NAME(NAME) 'x'
[01](01, 24)-(01, 25): PERCENT(OP) '%'
[01](01, 26)-(01, 27): NUMBER(NUMBER) '3'
[01](01, 28)-(01, 30): NOTEQUAL(OP) '!='
[01](01, 31)-(01, 32): NUMBER(NUMBER) '0'
[01](01, 33)-(01, 36): NAME(NAME) 'and'
[01](01, 37)-(01, 38): NAME(NAME) 'x'
[01](01, 39)-(01, 40): GREATER(OP) '>'
[01](01, 41)-(01, 42): NUMBER(NUMBER) '0'
[01](01, 43)-(01, 46): NAME(NAME) 'and'
[01](01, 47)-(01, 48): NAME(NAME) 'x'
[01](01, 49)-(01, 51): NOTEQUAL(OP) '!='
[01](01, 52)-(01, 53): NUMBER(NUMBER) '1'
[01](01, 54)-(01, 57): NAME(NAME) 'and'
[01](01, 58)-(01, 59): NAME(NAME) 'x'
[01](01, 60)-(01, 61): PERCENT(OP) '%'
[01](01, 62)-(01, 63): NUMBER(NUMBER) '5'
[01](01, 64)-(01, 66): NOTEQUAL(OP) '!='
[01](01, 67)-(01, 68): NUMBER(NUMBER) '0'
[01](01, 69)-(01, 72): NAME(NAME) 'and'
[01](01, 73)-(01, 74): NAME(NAME) 'x'
[01](01, 75)-(01, 76): PERCENT(OP) '%'
[01](01, 77)-(01, 78): NUMBER(NUMBER) '7'
[01](01, 79)-(01, 81): NOTEQUAL(OP) '!='
[01](01, 82)-(01, 83): NUMBER(NUMBER) '0'
[01](01, 83)-(01, 84): COLON(OP) ':'
[01](01, 84)-(01, 85): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 19): NAME(NAME) 'True'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'elif'
[03](01, 09)-(01, 10): NAME(NAME) 'x'
[03](01, 11)-(01, 13): EQEQUAL(OP) '=='
[03](01, 14)-(01, 15): NUMBER(NUMBER) '3'
[03](01, 16)-(01, 18): NAME(NAME) 'or'
[03](01, 19)-(01, 20): NAME(NAME) 'x'
[03](01, 21)-(01, 23): EQEQUAL(OP) '=='
[03](01, 24)-(01, 25): NUMBER(NUMBER) '2'
[03](01, 26)-(01, 28): NAME(NAME) 'or'
[03](01, 29)-(01, 30): NAME(NAME) 'x'
[03](01, 31)-(01, 33): EQEQUAL(OP) '=='
[03](01, 34)-(01, 35): NUMBER(NUMBER) '5'
[03](01, 36)-(01, 38): NAME(NAME) 'or'
[03](01, 39)-(01, 40): NAME(NAME) 'x'
[03](01, 41)-(01, 43): EQEQUAL(OP) '=='
[03](01, 44)-(01, 45): NUMBER(NUMBER) '7'
[03](01, 45)-(01, 46): COLON(OP) ':'
[03](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 19): NAME(NAME) 'True'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'else'
[05](01, 08)-(01, 09): COLON(OP) ':'
[05](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 14): NAME(NAME) 'return'
[06](01, 15)-(01, 20): NAME(NAME) 'False'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 05): NAME(NAME) 'print'
[07](01, 05)-(01, 06): LPAR(OP) '('
[07](01, 06)-(01, 14): NAME(NAME) 'is_prime'
[07](01, 14)-(01, 15): LPAR(OP) '('
[07](01, 15)-(01, 16): NUMBER(NUMBER) '3'
[07](01, 16)-(01, 17): RPAR(OP) ')'
[07](01, 17)-(01, 18): RPAR(OP) ')'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'def'
[09](01, 04)-(01, 19): NAME(NAME) 'all_primes_upto'
[09](01, 19)-(01, 20): LPAR(OP) '('
[09](01, 20)-(01, 21): NAME(NAME) 'x'
[09](01, 21)-(01, 22): RPAR(OP) ')'
[09](01, 22)-(01, 23): COLON(OP) ':'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 07): NAME(NAME) 'for'
[10](01, 08)-(01, 09): NAME(NAME) 'i'
[10](01, 10)-(01, 12): NAME(NAME) 'in'
[10](01, 13)-(01, 18): NAME(NAME) 'range'
[10](01, 18)-(01, 19): LPAR(OP) '('
[10](01, 19)-(01, 20): NAME(NAME) 'x'
[10](01, 20)-(01, 21): PLUS(OP) '+'
[10](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[10](01, 22)-(01, 23): RPAR(OP) ')'
[10](01, 23)-(01, 24): COLON(OP) ':'
[10](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 19): NAME(NAME) 'is_prime'
[11](01, 19)-(01, 20): LPAR(OP) '('
[11](01, 20)-(01, 21): NAME(NAME) 'i'
[11](01, 21)-(01, 22): RPAR(OP) ')'
[11](01, 22)-(01, 23): COLON(OP) ':'
[11](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 17): NAME(NAME) 'print'
[12](01, 17)-(01, 18): LPAR(OP) '('
[12](01, 18)-(01, 19): NAME(NAME) 'i'
[12](01, 19)-(01, 20): RPAR(OP) ')'
[12](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 10): NAME(NAME) 'return'
[13](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 05): NAME(NAME) 'print'
[14](01, 05)-(01, 06): LPAR(OP) '('
[14](01, 06)-(01, 21): NAME(NAME) 'all_primes_upto'
[14](01, 21)-(01, 22): LPAR(OP) '('
[14](01, 22)-(01, 24): NUMBER(NUMBER) '13'
[14](01, 24)-(01, 25): RPAR(OP) ')'
[14](01, 25)-(01, 26): RPAR(OP) ')'
[14](01, 26)-(01, 27): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

