[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 08): NAME(NAME) 'alphabet'
[00](01, 09)-(01, 10): EQUAL(OP) '='
[00](01, 11)-(01, 65): STRING(STRING) "'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'"
[00](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'def'
[01](01, 04)-(01, 10): NAME(NAME) 'encode'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 12): NAME(NAME) 's'
[01](01, 12)-(01, 13): COMMA(OP) ','
[01](01, 14)-(01, 15): NAME(NAME) 'n'
[01](01, 15)-(01, 16): RPAR(OP) ')'
[01](01, 16)-(01, 17): COLON(OP) ':'
[01](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 05): NAME(NAME) 'x'
[03](01, 05)-(01, 06): EQUAL(OP) '='
[03](01, 06)-(01, 08): STRING(STRING) "''"
[03](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 12): NAME(NAME) 'in'
[05](01, 13)-(01, 14): NAME(NAME) 's'
[05](01, 14)-(01, 15): COLON(OP) ':'
[05](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 12): NAME(NAME) 'i'
[06](01, 13)-(01, 16): NAME(NAME) 'not'
[06](01, 17)-(01, 19): NAME(NAME) 'in'
[06](01, 20)-(01, 28): NAME(NAME) 'alphabet'
[06](01, 28)-(01, 29): COLON(OP) ':'
[06](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 13): NAME(NAME) 'x'
[07](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[07](01, 17)-(01, 18): NAME(NAME) 'i'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'else'
[08](01, 12)-(01, 13): COLON(OP) ':'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 14): NAME(NAME) 'if'
[09](01, 15)-(01, 18): NAME(NAME) 'ord'
[09](01, 18)-(01, 19): LPAR(OP) '('
[09](01, 19)-(01, 20): NAME(NAME) 'i'
[09](01, 20)-(01, 21): RPAR(OP) ')'
[09](01, 21)-(01, 22): PLUS(OP) '+'
[09](01, 22)-(01, 23): NAME(NAME) 'n'
[09](01, 24)-(01, 25): LESS(OP) '<'
[09](01, 26)-(01, 29): NAME(NAME) 'ord'
[09](01, 29)-(01, 30): LPAR(OP) '('
[09](01, 30)-(01, 33): STRING(STRING) "'a'"
[09](01, 33)-(01, 34): RPAR(OP) ')'
[09](01, 34)-(01, 35): COLON(OP) ':'
[09](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 17): NAME(NAME) 'x'
[10](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[10](01, 21)-(01, 24): NAME(NAME) 'chr'
[10](01, 24)-(01, 25): LPAR(OP) '('
[10](01, 25)-(01, 28): NAME(NAME) 'ord'
[10](01, 28)-(01, 29): LPAR(OP) '('
[10](01, 29)-(01, 30): NAME(NAME) 'i'
[10](01, 30)-(01, 31): RPAR(OP) ')'
[10](01, 31)-(01, 32): PLUS(OP) '+'
[10](01, 33)-(01, 34): NAME(NAME) 'n'
[10](01, 35)-(01, 36): PLUS(OP) '+'
[10](01, 37)-(01, 39): NUMBER(NUMBER) '26'
[10](01, 39)-(01, 40): RPAR(OP) ')'
[10](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 16): NAME(NAME) 'elif'
[11](01, 17)-(01, 20): NAME(NAME) 'ord'
[11](01, 20)-(01, 21): LPAR(OP) '('
[11](01, 21)-(01, 22): NAME(NAME) 'i'
[11](01, 22)-(01, 23): RPAR(OP) ')'
[11](01, 23)-(01, 24): PLUS(OP) '+'
[11](01, 24)-(01, 25): NAME(NAME) 'n'
[11](01, 26)-(01, 27): GREATER(OP) '>'
[11](01, 28)-(01, 31): NAME(NAME) 'ord'
[11](01, 31)-(01, 32): LPAR(OP) '('
[11](01, 32)-(01, 35): STRING(STRING) "'z'"
[11](01, 35)-(01, 36): RPAR(OP) ')'
[11](01, 36)-(01, 37): COLON(OP) ':'
[11](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 17): NAME(NAME) 'x'
[12](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[12](01, 21)-(01, 24): NAME(NAME) 'chr'
[12](01, 24)-(01, 25): LPAR(OP) '('
[12](01, 25)-(01, 28): NAME(NAME) 'ord'
[12](01, 28)-(01, 29): LPAR(OP) '('
[12](01, 29)-(01, 30): NAME(NAME) 'i'
[12](01, 30)-(01, 31): RPAR(OP) ')'
[12](01, 31)-(01, 32): PLUS(OP) '+'
[12](01, 33)-(01, 34): NAME(NAME) 'n'
[12](01, 35)-(01, 36): MINUS(OP) '-'
[12](01, 37)-(01, 40): NUMBER(NUMBER) '122'
[12](01, 41)-(01, 42): PLUS(OP) '+'
[12](01, 42)-(01, 44): NUMBER(NUMBER) '96'
[12](01, 44)-(01, 45): RPAR(OP) ')'
[12](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 16): NAME(NAME) 'else'
[13](01, 16)-(01, 17): COLON(OP) ':'
[13](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 17): NAME(NAME) 'x'
[14](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[14](01, 21)-(01, 24): NAME(NAME) 'chr'
[14](01, 24)-(01, 25): LPAR(OP) '('
[14](01, 25)-(01, 28): NAME(NAME) 'ord'
[14](01, 28)-(01, 29): LPAR(OP) '('
[14](01, 29)-(01, 30): NAME(NAME) 'i'
[14](01, 30)-(01, 31): RPAR(OP) ')'
[14](01, 31)-(01, 32): PLUS(OP) '+'
[14](01, 32)-(01, 33): NAME(NAME) 'n'
[14](01, 33)-(01, 34): RPAR(OP) ')'
[14](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 10): NAME(NAME) 'return'
[15](01, 11)-(01, 12): NAME(NAME) 'x'
[15](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 03): NAME(NAME) 'def'
[17](01, 04)-(01, 10): NAME(NAME) 'decode'
[17](01, 10)-(01, 11): LPAR(OP) '('
[17](01, 11)-(01, 12): NAME(NAME) 's'
[17](01, 12)-(01, 13): COMMA(OP) ','
[17](01, 14)-(01, 15): NAME(NAME) 'n'
[17](01, 15)-(01, 16): RPAR(OP) ')'
[17](01, 16)-(01, 17): COLON(OP) ':'
[17](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 05): NAME(NAME) 'x'
[18](01, 06)-(01, 07): EQUAL(OP) '='
[18](01, 08)-(01, 14): NAME(NAME) 'encode'
[18](01, 14)-(01, 15): LPAR(OP) '('
[18](01, 15)-(01, 16): NAME(NAME) 's'
[18](01, 16)-(01, 17): COMMA(OP) ','
[18](01, 17)-(01, 18): MINUS(OP) '-'
[18](01, 18)-(01, 19): NAME(NAME) 'n'
[18](01, 19)-(01, 20): RPAR(OP) ')'
[18](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 10): NAME(NAME) 'return'
[19](01, 11)-(01, 12): NAME(NAME) 'x'
[19](01, 12)-(01, 13): NEWLINE(NEWLINE)
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

