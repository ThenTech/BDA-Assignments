[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'lister'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 17): NAME(NAME) 'number'
[00](01, 17)-(01, 18): RPAR(OP) ')'
[00](01, 18)-(01, 19): COLON(OP) ':'
[00](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'list'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 12): LSQB(OP) '['
[01](01, 12)-(01, 13): RSQB(OP) ']'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'while'
[02](01, 10)-(01, 16): NAME(NAME) 'number'
[02](01, 17)-(01, 18): GREATER(OP) '>'
[02](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[02](01, 20)-(01, 21): COLON(OP) ':'
[02](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 12): NAME(NAME) 'list'
[03](01, 13)-(01, 15): PLUSEQUAL(OP) '+='
[03](01, 16)-(01, 17): LSQB(OP) '['
[03](01, 17)-(01, 23): NAME(NAME) 'number'
[03](01, 23)-(01, 24): RSQB(OP) ']'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'number'
[04](01, 15)-(01, 17): MINEQUAL(OP) '-='
[04](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'return'
[05](01, 11)-(01, 15): NAME(NAME) 'list'
[05](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 04)-(01, 05): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 03): NAME(NAME) 'def'
[08](01, 04)-(01, 14): NAME(NAME) 'collection'
[08](01, 14)-(01, 15): LPAR(OP) '('
[08](01, 15)-(01, 21): NAME(NAME) 'number'
[08](01, 21)-(01, 22): COMMA(OP) ','
[08](01, 23)-(01, 31): NAME(NAME) 'elements'
[08](01, 31)-(01, 32): RPAR(OP) ')'
[08](01, 32)-(01, 33): COLON(OP) ':'
[08](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 20): NAME(NAME) 'collectionhelper'
[09](01, 20)-(01, 21): LPAR(OP) '('
[09](01, 21)-(01, 27): NAME(NAME) 'lister'
[09](01, 27)-(01, 28): LPAR(OP) '('
[09](01, 28)-(01, 34): NAME(NAME) 'number'
[09](01, 34)-(01, 35): RPAR(OP) ')'
[09](01, 35)-(01, 36): COMMA(OP) ','
[09](01, 37)-(01, 38): LSQB(OP) '['
[09](01, 38)-(01, 39): RSQB(OP) ']'
[09](01, 39)-(01, 40): COMMA(OP) ','
[09](01, 41)-(01, 49): NAME(NAME) 'elements'
[09](01, 49)-(01, 50): RPAR(OP) ')'
[09](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 03): NAME(NAME) 'def'
[12](01, 04)-(01, 11): NAME(NAME) 'printer'
[12](01, 11)-(01, 12): LPAR(OP) '('
[12](01, 12)-(01, 17): NAME(NAME) 'incol'
[12](01, 17)-(01, 18): RPAR(OP) ')'
[12](01, 18)-(01, 19): COLON(OP) ':'
[12](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 07): NAME(NAME) 'for'
[13](01, 08)-(01, 09): NAME(NAME) 'i'
[13](01, 10)-(01, 12): NAME(NAME) 'in'
[13](01, 13)-(01, 18): NAME(NAME) 'incol'
[13](01, 18)-(01, 19): COLON(OP) ':'
[13](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 13): NAME(NAME) 'print'
[14](01, 13)-(01, 14): LPAR(OP) '('
[14](01, 14)-(01, 15): NAME(NAME) 'i'
[14](01, 15)-(01, 16): COMMA(OP) ','
[14](01, 17)-(01, 20): NAME(NAME) 'end'
[14](01, 20)-(01, 21): EQUAL(OP) '='
[14](01, 21)-(01, 24): STRING(STRING) "' '"
[14](01, 24)-(01, 25): RPAR(OP) ')'
[14](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 09): NAME(NAME) 'print'
[15](01, 09)-(01, 10): LPAR(OP) '('
[15](01, 10)-(01, 11): RPAR(OP) ')'
[15](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 04)-(01, 05): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 03): NAME(NAME) 'def'
[18](01, 04)-(01, 20): NAME(NAME) 'collectionhelper'
[18](01, 20)-(01, 21): LPAR(OP) '('
[18](01, 21)-(01, 25): NAME(NAME) 'list'
[18](01, 25)-(01, 26): COMMA(OP) ','
[18](01, 27)-(01, 32): NAME(NAME) 'incol'
[18](01, 32)-(01, 33): COMMA(OP) ','
[18](01, 34)-(01, 42): NAME(NAME) 'elements'
[18](01, 42)-(01, 43): RPAR(OP) ')'
[18](01, 43)-(01, 44): COLON(OP) ':'
[18](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 06): NAME(NAME) 'if'
[19](01, 07)-(01, 10): NAME(NAME) 'len'
[19](01, 10)-(01, 11): LPAR(OP) '('
[19](01, 11)-(01, 16): NAME(NAME) 'incol'
[19](01, 16)-(01, 17): RPAR(OP) ')'
[19](01, 18)-(01, 20): EQEQUAL(OP) '=='
[19](01, 21)-(01, 29): NAME(NAME) 'elements'
[19](01, 29)-(01, 30): COLON(OP) ':'
[19](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 15): NAME(NAME) 'printer'
[20](01, 15)-(01, 16): LPAR(OP) '('
[20](01, 16)-(01, 21): NAME(NAME) 'incol'
[20](01, 21)-(01, 22): RPAR(OP) ')'
[20](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 14): NAME(NAME) 'return'
[21](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 06): NAME(NAME) 'if'
[22](01, 07)-(01, 11): NAME(NAME) 'list'
[22](01, 12)-(01, 14): EQEQUAL(OP) '=='
[22](01, 15)-(01, 16): LSQB(OP) '['
[22](01, 16)-(01, 17): RSQB(OP) ']'
[22](01, 17)-(01, 18): COLON(OP) ':'
[22](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 14): NAME(NAME) 'return'
[23](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 20): NAME(NAME) 'collectionhelper'
[24](01, 20)-(01, 21): LPAR(OP) '('
[24](01, 21)-(01, 25): NAME(NAME) 'list'
[24](01, 25)-(01, 26): LSQB(OP) '['
[24](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[24](01, 27)-(01, 28): COLON(OP) ':'
[24](01, 28)-(01, 29): RSQB(OP) ']'
[24](01, 29)-(01, 30): COMMA(OP) ','
[24](01, 31)-(01, 36): NAME(NAME) 'incol'
[24](01, 36)-(01, 37): PLUS(OP) '+'
[24](01, 37)-(01, 38): LSQB(OP) '['
[24](01, 38)-(01, 42): NAME(NAME) 'list'
[24](01, 42)-(01, 43): LSQB(OP) '['
[24](01, 43)-(01, 44): NUMBER(NUMBER) '0'
[24](01, 44)-(01, 45): RSQB(OP) ']'
[24](01, 45)-(01, 46): RSQB(OP) ']'
[24](01, 46)-(01, 47): COMMA(OP) ','
[24](01, 48)-(01, 56): NAME(NAME) 'elements'
[24](01, 56)-(01, 57): RPAR(OP) ')'
[24](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 20): NAME(NAME) 'collectionhelper'
[25](01, 20)-(01, 21): LPAR(OP) '('
[25](01, 21)-(01, 25): NAME(NAME) 'list'
[25](01, 25)-(01, 26): LSQB(OP) '['
[25](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[25](01, 27)-(01, 28): COLON(OP) ':'
[25](01, 28)-(01, 29): RSQB(OP) ']'
[25](01, 29)-(01, 30): COMMA(OP) ','
[25](01, 31)-(01, 36): NAME(NAME) 'incol'
[25](01, 36)-(01, 37): COMMA(OP) ','
[25](01, 38)-(01, 46): NAME(NAME) 'elements'
[25](01, 46)-(01, 47): RPAR(OP) ')'
[25](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 01): NL(NL) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 10): NAME(NAME) 'collection'
[28](01, 10)-(01, 11): LPAR(OP) '('
[28](01, 11)-(01, 14): NAME(NAME) 'int'
[28](01, 14)-(01, 15): LPAR(OP) '('
[28](01, 15)-(01, 20): NAME(NAME) 'input'
[28](01, 20)-(01, 21): LPAR(OP) '('
[28](01, 21)-(01, 22): RPAR(OP) ')'
[28](01, 22)-(01, 23): RPAR(OP) ')'
[28](01, 23)-(01, 24): COMMA(OP) ','
[28](01, 25)-(01, 28): NAME(NAME) 'int'
[28](01, 28)-(01, 29): LPAR(OP) '('
[28](01, 29)-(01, 34): NAME(NAME) 'input'
[28](01, 34)-(01, 35): LPAR(OP) '('
[28](01, 35)-(01, 36): RPAR(OP) ')'
[28](01, 36)-(01, 37): RPAR(OP) ')'
[28](01, 37)-(01, 38): RPAR(OP) ')'
[28](01, 38)-(01, 39): NEWLINE(NEWLINE)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

