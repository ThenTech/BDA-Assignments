[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 09): NAME(NAME) 'TeBetalen'
[00](01, 10)-(01, 11): EQUAL(OP) '='
[00](01, 12)-(01, 15): NUMBER(NUMBER) '589'
[00](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 08): NAME(NAME) 'TweeEuro'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 14): NUMBER(NUMBER) '589'
[01](01, 15)-(01, 17): DOUBLESLASH(OP) '//'
[01](01, 18)-(01, 21): NUMBER(NUMBER) '200'
[01](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 02): NAME(NAME) 'TE'
[02](01, 03)-(01, 04): EQUAL(OP) '='
[02](01, 05)-(01, 08): NUMBER(NUMBER) '589'
[02](01, 09)-(01, 10): MINUS(OP) '-'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 20): NAME(NAME) 'TweeEuro'
[02](01, 21)-(01, 22): STAR(OP) '*'
[02](01, 23)-(01, 26): NUMBER(NUMBER) '200'
[02](01, 26)-(01, 27): RPAR(OP) ')'
[02](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 07): NAME(NAME) 'EenEuro'
[03](01, 08)-(01, 09): EQUAL(OP) '='
[03](01, 10)-(01, 12): NAME(NAME) 'TE'
[03](01, 13)-(01, 15): DOUBLESLASH(OP) '//'
[03](01, 16)-(01, 19): NUMBER(NUMBER) '100'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 02): NAME(NAME) 'EE'
[04](01, 03)-(01, 04): EQUAL(OP) '='
[04](01, 05)-(01, 07): NAME(NAME) 'TE'
[04](01, 08)-(01, 09): MINUS(OP) '-'
[04](01, 10)-(01, 11): LPAR(OP) '('
[04](01, 11)-(01, 18): NAME(NAME) 'EenEuro'
[04](01, 19)-(01, 20): STAR(OP) '*'
[04](01, 21)-(01, 24): NUMBER(NUMBER) '100'
[04](01, 24)-(01, 25): RPAR(OP) ')'
[04](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 09): NAME(NAME) 'HalveEuro'
[05](01, 10)-(01, 11): EQUAL(OP) '='
[05](01, 12)-(01, 14): NAME(NAME) 'EE'
[05](01, 15)-(01, 17): DOUBLESLASH(OP) '//'
[05](01, 18)-(01, 20): NUMBER(NUMBER) '50'
[05](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 02): NAME(NAME) 'HE'
[06](01, 03)-(01, 04): EQUAL(OP) '='
[06](01, 05)-(01, 07): NAME(NAME) 'EE'
[06](01, 08)-(01, 09): MINUS(OP) '-'
[06](01, 10)-(01, 11): LPAR(OP) '('
[06](01, 11)-(01, 20): NAME(NAME) 'HalveEuro'
[06](01, 21)-(01, 22): STAR(OP) '*'
[06](01, 23)-(01, 25): NUMBER(NUMBER) '50'
[06](01, 25)-(01, 26): RPAR(OP) ')'
[06](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 11): NAME(NAME) 'Twintigcent'
[07](01, 12)-(01, 13): EQUAL(OP) '='
[07](01, 14)-(01, 16): NAME(NAME) 'HE'
[07](01, 17)-(01, 19): DOUBLESLASH(OP) '//'
[07](01, 20)-(01, 22): NUMBER(NUMBER) '20'
[07](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 02): NAME(NAME) 'TC'
[08](01, 03)-(01, 04): EQUAL(OP) '='
[08](01, 05)-(01, 07): NAME(NAME) 'HE'
[08](01, 08)-(01, 09): MINUS(OP) '-'
[08](01, 10)-(01, 11): LPAR(OP) '('
[08](01, 11)-(01, 22): NAME(NAME) 'Twintigcent'
[08](01, 23)-(01, 24): STAR(OP) '*'
[08](01, 25)-(01, 27): NUMBER(NUMBER) '20'
[08](01, 27)-(01, 28): RPAR(OP) ')'
[08](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): NAME(NAME) 'Tiencent'
[09](01, 09)-(01, 10): EQUAL(OP) '='
[09](01, 11)-(01, 13): NAME(NAME) 'TC'
[09](01, 14)-(01, 16): DOUBLESLASH(OP) '//'
[09](01, 17)-(01, 19): NUMBER(NUMBER) '10'
[09](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 03): NAME(NAME) 'TiC'
[10](01, 04)-(01, 05): EQUAL(OP) '='
[10](01, 06)-(01, 08): NAME(NAME) 'TC'
[10](01, 09)-(01, 10): MINUS(OP) '-'
[10](01, 11)-(01, 12): LPAR(OP) '('
[10](01, 12)-(01, 20): NAME(NAME) 'Tiencent'
[10](01, 21)-(01, 22): STAR(OP) '*'
[10](01, 23)-(01, 25): NUMBER(NUMBER) '10'
[10](01, 25)-(01, 26): RPAR(OP) ')'
[10](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): NAME(NAME) 'Vijfcent'
[11](01, 09)-(01, 10): EQUAL(OP) '='
[11](01, 11)-(01, 14): NAME(NAME) 'TiC'
[11](01, 15)-(01, 17): DOUBLESLASH(OP) '//'
[11](01, 18)-(01, 19): NUMBER(NUMBER) '5'
[11](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 02): NAME(NAME) 'VC'
[12](01, 03)-(01, 04): EQUAL(OP) '='
[12](01, 05)-(01, 08): NAME(NAME) 'TiC'
[12](01, 09)-(01, 10): MINUS(OP) '-'
[12](01, 11)-(01, 12): LPAR(OP) '('
[12](01, 12)-(01, 20): NAME(NAME) 'Vijfcent'
[12](01, 21)-(01, 22): STAR(OP) '*'
[12](01, 23)-(01, 24): NUMBER(NUMBER) '5'
[12](01, 24)-(01, 25): RPAR(OP) ')'
[12](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): NAME(NAME) 'Tweecent'
[13](01, 09)-(01, 10): EQUAL(OP) '='
[13](01, 11)-(01, 13): NAME(NAME) 'VC'
[13](01, 14)-(01, 16): DOUBLESLASH(OP) '//'
[13](01, 17)-(01, 18): NUMBER(NUMBER) '2'
[13](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 02): NAME(NAME) 'TC'
[14](01, 03)-(01, 04): COLON(OP) ':'
[14](01, 05)-(01, 07): NAME(NAME) 'VC'
[14](01, 08)-(01, 09): MINUS(OP) '-'
[14](01, 10)-(01, 11): LPAR(OP) '('
[14](01, 11)-(01, 19): NAME(NAME) 'Tweecent'
[14](01, 20)-(01, 21): STAR(OP) '*'
[14](01, 22)-(01, 23): NUMBER(NUMBER) '2'
[14](01, 23)-(01, 24): RPAR(OP) ')'
[14](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 07): NAME(NAME) 'Eencent'
[15](01, 08)-(01, 09): EQUAL(OP) '='
[15](01, 10)-(01, 12): NAME(NAME) 'TC'
[15](01, 13)-(01, 15): DOUBLESLASH(OP) '//'
[15](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[15](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 02): NAME(NAME) 'EC'
[16](01, 03)-(01, 04): EQUAL(OP) '='
[16](01, 05)-(01, 07): NAME(NAME) 'TC'
[16](01, 08)-(01, 09): MINUS(OP) '-'
[16](01, 10)-(01, 11): LPAR(OP) '('
[16](01, 11)-(01, 18): NAME(NAME) 'Eencent'
[16](01, 19)-(01, 20): STAR(OP) '*'
[16](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[16](01, 22)-(01, 23): RPAR(OP) ')'
[16](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 05): NAME(NAME) 'print'
[17](01, 05)-(01, 06): LPAR(OP) '('
[17](01, 06)-(01, 38): STRING(STRING) '"Te betalen munten van 2 euro: "'
[17](01, 38)-(01, 39): COMMA(OP) ','
[17](01, 40)-(01, 48): NAME(NAME) 'TweeEuro'
[17](01, 48)-(01, 49): RPAR(OP) ')'
[17](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 05): NAME(NAME) 'print'
[18](01, 05)-(01, 06): LPAR(OP) '('
[18](01, 06)-(01, 38): STRING(STRING) '"Te betalen munten van 1 euro: "'
[18](01, 38)-(01, 39): COMMA(OP) ','
[18](01, 40)-(01, 47): NAME(NAME) 'EenEuro'
[18](01, 47)-(01, 48): RPAR(OP) ')'
[18](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 05): NAME(NAME) 'print'
[19](01, 05)-(01, 06): LPAR(OP) '('
[19](01, 06)-(01, 47): STRING(STRING) '"Te betalen munten van een halve euro : "'
[19](01, 47)-(01, 48): COMMA(OP) ','
[19](01, 49)-(01, 58): NAME(NAME) 'HalveEuro'
[19](01, 58)-(01, 59): RPAR(OP) ')'
[19](01, 59)-(01, 60): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 05): NAME(NAME) 'print'
[20](01, 05)-(01, 06): LPAR(OP) '('
[20](01, 06)-(01, 44): STRING(STRING) '"Te betalen munten van twintig cent: "'
[20](01, 44)-(01, 45): COMMA(OP) ','
[20](01, 46)-(01, 57): NAME(NAME) 'Twintigcent'
[20](01, 57)-(01, 58): RPAR(OP) ')'
[20](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 05): NAME(NAME) 'print'
[21](01, 05)-(01, 06): LPAR(OP) '('
[21](01, 06)-(01, 41): STRING(STRING) '"Te betalen munten van tien cent: "'
[21](01, 41)-(01, 42): COMMA(OP) ','
[21](01, 43)-(01, 51): NAME(NAME) 'Tiencent'
[21](01, 51)-(01, 52): RPAR(OP) ')'
[21](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 05): NAME(NAME) 'print'
[22](01, 05)-(01, 06): LPAR(OP) '('
[22](01, 06)-(01, 41): STRING(STRING) '"Te betalen munten van vijf cent: "'
[22](01, 41)-(01, 42): COMMA(OP) ','
[22](01, 43)-(01, 51): NAME(NAME) 'Vijfcent'
[22](01, 51)-(01, 52): RPAR(OP) ')'
[22](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 05): NAME(NAME) 'print'
[23](01, 05)-(01, 06): LPAR(OP) '('
[23](01, 06)-(01, 41): STRING(STRING) '"Te betalen munten van twee cent: "'
[23](01, 41)-(01, 42): COMMA(OP) ','
[23](01, 43)-(01, 51): NAME(NAME) 'Tweecent'
[23](01, 51)-(01, 52): RPAR(OP) ')'
[23](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 05): NAME(NAME) 'print'
[24](01, 05)-(01, 06): LPAR(OP) '('
[24](01, 06)-(01, 40): STRING(STRING) '"Te betalen munten van een cent: "'
[24](01, 40)-(01, 41): COMMA(OP) ','
[24](01, 42)-(01, 49): NAME(NAME) 'Eencent'
[24](01, 49)-(01, 50): RPAR(OP) ')'
[24](01, 50)-(01, 51): NEWLINE(NEWLINE)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

