[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 07): NAME(NAME) 'phrase1'
[00](01, 08)-(01, 09): EQUAL(OP) '='
[00](01, 10)-(01, 15): NAME(NAME) 'input'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 34): STRING(STRING) '"enter phrase 1: "'
[00](01, 34)-(01, 35): RPAR(OP) ')'
[00](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 07): NAME(NAME) 'phrase2'
[01](01, 08)-(01, 09): EQUAL(OP) '='
[01](01, 10)-(01, 15): NAME(NAME) 'input'
[01](01, 15)-(01, 16): LPAR(OP) '('
[01](01, 16)-(01, 34): STRING(STRING) '"enter phrase 2: "'
[01](01, 34)-(01, 35): RPAR(OP) ')'
[01](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 06): NAME(NAME) 'backup'
[02](01, 07)-(01, 08): EQUAL(OP) '='
[02](01, 09)-(01, 16): NAME(NAME) 'phrase2'
[02](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 07): NAME(NAME) 'anagram'
[03](01, 08)-(01, 09): EQUAL(OP) '='
[03](01, 10)-(01, 14): NAME(NAME) 'True'
[03](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'for'
[04](01, 04)-(01, 05): NAME(NAME) 'i'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 14): NAME(NAME) 'range'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 18): NAME(NAME) 'len'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 26): NAME(NAME) 'phrase1'
[04](01, 26)-(01, 27): RPAR(OP) ')'
[04](01, 27)-(01, 28): RPAR(OP) ')'
[04](01, 28)-(01, 29): COLON(OP) ':'
[04](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): INDENT(INDENT) '\t'
[05](01, 01)-(01, 12): NAME(NAME) 'letterfound'
[05](01, 13)-(01, 14): EQUAL(OP) '='
[05](01, 15)-(01, 20): NAME(NAME) 'False'
[05](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): INDENT(INDENT) '\t'
[06](01, 01)-(01, 04): NAME(NAME) 'for'
[06](01, 05)-(01, 06): NAME(NAME) 'j'
[06](01, 07)-(01, 09): NAME(NAME) 'in'
[06](01, 10)-(01, 15): NAME(NAME) 'range'
[06](01, 15)-(01, 16): LPAR(OP) '('
[06](01, 16)-(01, 19): NAME(NAME) 'len'
[06](01, 19)-(01, 20): LPAR(OP) '('
[06](01, 20)-(01, 27): NAME(NAME) 'phrase2'
[06](01, 27)-(01, 28): RPAR(OP) ')'
[06](01, 28)-(01, 29): RPAR(OP) ')'
[06](01, 29)-(01, 30): COLON(OP) ':'
[06](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[07](01, 02)-(01, 04): NAME(NAME) 'if'
[07](01, 05)-(01, 12): NAME(NAME) 'phrase1'
[07](01, 12)-(01, 13): LSQB(OP) '['
[07](01, 13)-(01, 14): NAME(NAME) 'i'
[07](01, 14)-(01, 15): RSQB(OP) ']'
[07](01, 16)-(01, 18): EQEQUAL(OP) '=='
[07](01, 19)-(01, 26): NAME(NAME) 'phrase2'
[07](01, 26)-(01, 27): LSQB(OP) '['
[07](01, 27)-(01, 28): NAME(NAME) 'j'
[07](01, 28)-(01, 29): RSQB(OP) ']'
[07](01, 29)-(01, 30): COLON(OP) ':'
[07](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 03): INDENT(INDENT) '\t\t\t'
[08](01, 03)-(01, 14): NAME(NAME) 'letterfound'
[08](01, 15)-(01, 16): EQUAL(OP) '='
[08](01, 17)-(01, 21): NAME(NAME) 'True'
[08](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): INDENT(INDENT) '\t\t\t'
[09](01, 03)-(01, 10): NAME(NAME) 'phrase2'
[09](01, 11)-(01, 12): EQUAL(OP) '='
[09](01, 13)-(01, 20): NAME(NAME) 'phrase2'
[09](01, 20)-(01, 21): LSQB(OP) '['
[09](01, 21)-(01, 22): COLON(OP) ':'
[09](01, 22)-(01, 23): NAME(NAME) 'j'
[09](01, 23)-(01, 24): RSQB(OP) ']'
[09](01, 25)-(01, 26): PLUS(OP) '+'
[09](01, 27)-(01, 30): STRING(STRING) '"."'
[09](01, 31)-(01, 32): PLUS(OP) '+'
[09](01, 33)-(01, 40): NAME(NAME) 'phrase2'
[09](01, 40)-(01, 41): LSQB(OP) '['
[09](01, 41)-(01, 42): LPAR(OP) '('
[09](01, 42)-(01, 43): NAME(NAME) 'j'
[09](01, 43)-(01, 44): PLUS(OP) '+'
[09](01, 44)-(01, 45): NUMBER(NUMBER) '1'
[09](01, 45)-(01, 46): RPAR(OP) ')'
[09](01, 46)-(01, 47): COLON(OP) ':'
[09](01, 47)-(01, 48): RSQB(OP) ']'
[09](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 03): INDENT(INDENT) '\t\t\t'
[10](01, 03)-(01, 08): NAME(NAME) 'break'
[10](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): INDENT(INDENT) '\t'
[11](01, 01)-(01, 03): NAME(NAME) 'if'
[11](01, 04)-(01, 15): NAME(NAME) 'letterfound'
[11](01, 16)-(01, 18): EQEQUAL(OP) '=='
[11](01, 19)-(01, 24): NAME(NAME) 'False'
[11](01, 24)-(01, 25): COLON(OP) ':'
[11](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[12](01, 02)-(01, 09): NAME(NAME) 'anagram'
[12](01, 10)-(01, 11): EQUAL(OP) '='
[12](01, 12)-(01, 17): NAME(NAME) 'False'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[13](01, 02)-(01, 07): NAME(NAME) 'break'
[13](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 02): NAME(NAME) 'if'
[14](01, 03)-(01, 10): NAME(NAME) 'anagram'
[14](01, 11)-(01, 13): EQEQUAL(OP) '=='
[14](01, 14)-(01, 18): NAME(NAME) 'True'
[14](01, 18)-(01, 19): COLON(OP) ':'
[14](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): INDENT(INDENT) '\t'
[15](01, 01)-(01, 06): NAME(NAME) 'print'
[15](01, 06)-(01, 07): LPAR(OP) '('
[15](01, 07)-(01, 14): NAME(NAME) 'phrase1'
[15](01, 14)-(01, 15): COMMA(OP) ','
[15](01, 16)-(01, 21): STRING(STRING) '"and"'
[15](01, 21)-(01, 22): COMMA(OP) ','
[15](01, 23)-(01, 29): NAME(NAME) 'backup'
[15](01, 29)-(01, 30): COMMA(OP) ','
[15](01, 31)-(01, 45): STRING(STRING) '"are anagrams"'
[15](01, 45)-(01, 46): RPAR(OP) ')'
[15](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): NAME(NAME) 'else'
[16](01, 04)-(01, 05): COLON(OP) ':'
[16](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): INDENT(INDENT) '\t'
[17](01, 01)-(01, 06): NAME(NAME) 'print'
[17](01, 06)-(01, 07): LPAR(OP) '('
[17](01, 07)-(01, 14): NAME(NAME) 'phrase1'
[17](01, 14)-(01, 15): COMMA(OP) ','
[17](01, 16)-(01, 21): STRING(STRING) '"and"'
[17](01, 21)-(01, 22): COMMA(OP) ','
[17](01, 23)-(01, 29): NAME(NAME) 'backup'
[17](01, 29)-(01, 30): COMMA(OP) ','
[17](01, 31)-(01, 49): STRING(STRING) '"are not anagrams"'
[17](01, 49)-(01, 50): RPAR(OP) ')'
[17](01, 50)-(01, 51): NEWLINE(NEWLINE)
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

