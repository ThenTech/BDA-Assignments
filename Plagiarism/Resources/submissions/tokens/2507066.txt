[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): COMMA(OP) ','
[00](01, 14)-(01, 15): NAME(NAME) 'n'
[00](01, 15)-(01, 16): EQUAL(OP) '='
[00](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[00](01, 17)-(01, 18): RPAR(OP) ')'
[00](01, 18)-(01, 19): COLON(OP) ':'
[00](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 09): NAME(NAME) 'new_s'
[01](01, 10)-(01, 11): EQUAL(OP) '='
[01](01, 12)-(01, 14): STRING(STRING) "''"
[01](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 10): NAME(NAME) 'len'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 12): NAME(NAME) 's'
[03](01, 12)-(01, 13): RPAR(OP) ')'
[03](01, 14)-(01, 16): EQEQUAL(OP) '=='
[03](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[03](01, 18)-(01, 19): COLON(OP) ':'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'new_s'
[04](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[04](01, 17)-(01, 20): STRING(STRING) "'0'"
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'else'
[05](01, 08)-(01, 09): COLON(OP) ':'
[05](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 11): NAME(NAME) 'for'
[06](01, 12)-(01, 13): NAME(NAME) 'i'
[06](01, 14)-(01, 16): NAME(NAME) 'in'
[06](01, 17)-(01, 22): NAME(NAME) 'range'
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 26): NAME(NAME) 'len'
[06](01, 26)-(01, 27): LPAR(OP) '('
[06](01, 27)-(01, 28): NAME(NAME) 's'
[06](01, 28)-(01, 29): RPAR(OP) ')'
[06](01, 29)-(01, 30): RPAR(OP) ')'
[06](01, 30)-(01, 31): COLON(OP) ':'
[06](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'if'
[07](01, 15)-(01, 16): NAME(NAME) 'i'
[07](01, 17)-(01, 19): EQEQUAL(OP) '=='
[07](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[07](01, 21)-(01, 22): COLON(OP) ':'
[07](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 18): NAME(NAME) 'if'
[08](01, 19)-(01, 20): NAME(NAME) 's'
[08](01, 20)-(01, 21): LSQB(OP) '['
[08](01, 21)-(01, 22): NAME(NAME) 'i'
[08](01, 22)-(01, 23): PLUS(OP) '+'
[08](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[08](01, 24)-(01, 25): RSQB(OP) ']'
[08](01, 26)-(01, 28): EQEQUAL(OP) '=='
[08](01, 29)-(01, 32): STRING(STRING) "'X'"
[08](01, 32)-(01, 33): COLON(OP) ':'
[08](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 20): INDENT(INDENT) '                    '
[09](01, 20)-(01, 25): NAME(NAME) 'new_s'
[09](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[09](01, 29)-(01, 32): STRING(STRING) "'1'"
[09](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 20): NAME(NAME) 'else'
[10](01, 20)-(01, 21): COLON(OP) ':'
[10](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 20): INDENT(INDENT) '                    '
[11](01, 20)-(01, 25): NAME(NAME) 'new_s'
[11](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[11](01, 29)-(01, 32): STRING(STRING) "'0'"
[11](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 16): NAME(NAME) 'else'
[12](01, 16)-(01, 17): COLON(OP) ':'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 18): NAME(NAME) 'if'
[13](01, 19)-(01, 20): NAME(NAME) 'i'
[13](01, 21)-(01, 23): EQEQUAL(OP) '=='
[13](01, 24)-(01, 27): NAME(NAME) 'len'
[13](01, 27)-(01, 28): LPAR(OP) '('
[13](01, 28)-(01, 29): NAME(NAME) 's'
[13](01, 29)-(01, 30): RPAR(OP) ')'
[13](01, 30)-(01, 31): MINUS(OP) '-'
[13](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[13](01, 32)-(01, 33): COLON(OP) ':'
[13](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 20): INDENT(INDENT) '                    '
[14](01, 20)-(01, 22): NAME(NAME) 'if'
[14](01, 23)-(01, 24): NAME(NAME) 's'
[14](01, 24)-(01, 25): LSQB(OP) '['
[14](01, 25)-(01, 26): NAME(NAME) 'i'
[14](01, 26)-(01, 27): MINUS(OP) '-'
[14](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[14](01, 28)-(01, 29): RSQB(OP) ']'
[14](01, 30)-(01, 32): EQEQUAL(OP) '=='
[14](01, 33)-(01, 36): STRING(STRING) "'X'"
[14](01, 36)-(01, 37): COLON(OP) ':'
[14](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 24): INDENT(INDENT) '                        '
[15](01, 24)-(01, 29): NAME(NAME) 'new_s'
[15](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[15](01, 33)-(01, 36): STRING(STRING) "'1'"
[15](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 20): INDENT(INDENT) '                    '
[16](01, 20)-(01, 24): NAME(NAME) 'else'
[16](01, 24)-(01, 25): COLON(OP) ':'
[16](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 24): INDENT(INDENT) '                        '
[17](01, 24)-(01, 29): NAME(NAME) 'new_s'
[17](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[17](01, 33)-(01, 36): STRING(STRING) "'0'"
[17](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 20): NAME(NAME) 'else'
[18](01, 20)-(01, 21): COLON(OP) ':'
[18](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 20): INDENT(INDENT) '                    '
[19](01, 20)-(01, 22): NAME(NAME) 'if'
[19](01, 23)-(01, 24): NAME(NAME) 's'
[19](01, 24)-(01, 25): LSQB(OP) '['
[19](01, 25)-(01, 26): NAME(NAME) 'i'
[19](01, 26)-(01, 27): MINUS(OP) '-'
[19](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[19](01, 28)-(01, 29): RSQB(OP) ']'
[19](01, 30)-(01, 32): EQEQUAL(OP) '=='
[19](01, 33)-(01, 36): STRING(STRING) "'X'"
[19](01, 37)-(01, 40): NAME(NAME) 'and'
[19](01, 41)-(01, 42): NAME(NAME) 's'
[19](01, 42)-(01, 43): LSQB(OP) '['
[19](01, 43)-(01, 44): NAME(NAME) 'i'
[19](01, 44)-(01, 45): PLUS(OP) '+'
[19](01, 45)-(01, 46): NUMBER(NUMBER) '1'
[19](01, 46)-(01, 47): RSQB(OP) ']'
[19](01, 48)-(01, 50): EQEQUAL(OP) '=='
[19](01, 51)-(01, 54): STRING(STRING) "'X'"
[19](01, 54)-(01, 55): COLON(OP) ':'
[19](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 24): INDENT(INDENT) '                        '
[20](01, 24)-(01, 29): NAME(NAME) 'new_s'
[20](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[20](01, 33)-(01, 36): STRING(STRING) "'2'"
[20](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 20): INDENT(INDENT) '                    '
[21](01, 20)-(01, 24): NAME(NAME) 'elif'
[21](01, 25)-(01, 26): NAME(NAME) 's'
[21](01, 26)-(01, 27): LSQB(OP) '['
[21](01, 27)-(01, 28): NAME(NAME) 'i'
[21](01, 28)-(01, 29): MINUS(OP) '-'
[21](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[21](01, 30)-(01, 31): RSQB(OP) ']'
[21](01, 32)-(01, 34): EQEQUAL(OP) '=='
[21](01, 35)-(01, 38): STRING(STRING) "'X'"
[21](01, 38)-(01, 39): COLON(OP) ':'
[21](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 24): INDENT(INDENT) '                        '
[22](01, 24)-(01, 29): NAME(NAME) 'new_s'
[22](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[22](01, 33)-(01, 36): STRING(STRING) "'1'"
[22](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 20): INDENT(INDENT) '                    '
[23](01, 20)-(01, 24): NAME(NAME) 'elif'
[23](01, 25)-(01, 26): NAME(NAME) 's'
[23](01, 26)-(01, 27): LSQB(OP) '['
[23](01, 27)-(01, 28): NAME(NAME) 'i'
[23](01, 28)-(01, 29): PLUS(OP) '+'
[23](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[23](01, 30)-(01, 31): RSQB(OP) ']'
[23](01, 32)-(01, 34): EQEQUAL(OP) '=='
[23](01, 35)-(01, 38): STRING(STRING) "'X'"
[23](01, 38)-(01, 39): COLON(OP) ':'
[23](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 24): INDENT(INDENT) '                        '
[24](01, 24)-(01, 29): NAME(NAME) 'new_s'
[24](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[24](01, 33)-(01, 36): STRING(STRING) "'1'"
[24](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 20): INDENT(INDENT) '                    '
[25](01, 20)-(01, 24): NAME(NAME) 'else'
[25](01, 24)-(01, 25): COLON(OP) ':'
[25](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 24): INDENT(INDENT) '                        '
[26](01, 24)-(01, 29): NAME(NAME) 'new_s'
[26](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[26](01, 33)-(01, 36): STRING(STRING) "'0'"
[26](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 10): NAME(NAME) 'return'
[27](01, 11)-(01, 16): NAME(NAME) 'new_s'
[27](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 01): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 03): NAME(NAME) 'def'
[29](01, 04)-(01, 08): NAME(NAME) 'calc'
[29](01, 08)-(01, 09): LPAR(OP) '('
[29](01, 09)-(01, 10): NAME(NAME) 'n'
[29](01, 10)-(01, 11): RPAR(OP) ')'
[29](01, 11)-(01, 12): COLON(OP) ':'
[29](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 06): NAME(NAME) 'if'
[30](01, 07)-(01, 08): NAME(NAME) 'n'
[30](01, 09)-(01, 11): EQEQUAL(OP) '=='
[30](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[30](01, 13)-(01, 14): COLON(OP) ':'
[30](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 14): NAME(NAME) 'return'
[31](01, 15)-(01, 19): STRING(STRING) "'  '"
[31](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 08): NAME(NAME) 'elif'
[32](01, 09)-(01, 10): NAME(NAME) 'n'
[32](01, 11)-(01, 13): EQEQUAL(OP) '=='
[32](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[32](01, 15)-(01, 16): COLON(OP) ':'
[32](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 14): NAME(NAME) 'return'
[33](01, 15)-(01, 19): STRING(STRING) "' X'"
[33](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 08): NAME(NAME) 'elif'
[34](01, 09)-(01, 10): NAME(NAME) 'n'
[34](01, 11)-(01, 13): EQEQUAL(OP) '=='
[34](01, 14)-(01, 15): NUMBER(NUMBER) '2'
[34](01, 15)-(01, 16): COLON(OP) ':'
[34](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 14): NAME(NAME) 'return'
[35](01, 15)-(01, 19): STRING(STRING) "'X '"
[35](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 04): INDENT(INDENT) '    '
[36](01, 04)-(01, 08): NAME(NAME) 'else'
[36](01, 08)-(01, 09): COLON(OP) ':'
[36](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 08): INDENT(INDENT) '        '
[37](01, 08)-(01, 14): NAME(NAME) 'return'
[37](01, 15)-(01, 19): STRING(STRING) "'XX'"
[37](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 01): NL(NL) '\n'
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 03): NAME(NAME) 'def'
[39](01, 04)-(01, 10): NAME(NAME) 'decode'
[39](01, 10)-(01, 11): LPAR(OP) '('
[39](01, 11)-(01, 12): NAME(NAME) 's'
[39](01, 12)-(01, 13): COMMA(OP) ','
[39](01, 14)-(01, 15): NAME(NAME) 'n'
[39](01, 15)-(01, 16): EQUAL(OP) '='
[39](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[39](01, 17)-(01, 18): RPAR(OP) ')'
[39](01, 18)-(01, 19): COLON(OP) ':'
[39](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 04)-(01, 14): COMMENT(COMMENT) '#112121211'
[40](01, 14)-(01, 15): NL(NL) '\n'
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 04)-(01, 05): COMMENT(COMMENT) '#'
[41](01, 05)-(01, 06): NL(NL) '\n'
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 04)-(01, 14): COMMENT(COMMENT) '#132424231'
[42](01, 14)-(01, 15): NL(NL) '\n'
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 04)-(01, 14): COMMENT(COMMENT) '# XXX XXX '
[43](01, 14)-(01, 15): NL(NL) '\n'
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 04)-(01, 14): COMMENT(COMMENT) '#XX XXX XX'
[44](01, 14)-(01, 15): NL(NL) '\n'
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 01): NL(NL) '\n'
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 04)-(01, 14): COMMENT(COMMENT) '#102020201'
[46](01, 14)-(01, 15): NL(NL) '\n'
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 04)-(01, 14): COMMENT(COMMENT) '#030404030'
[47](01, 14)-(01, 15): NL(NL) '\n'
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 04)-(01, 14): COMMENT(COMMENT) '# X X X X '
[48](01, 14)-(01, 15): NL(NL) '\n'
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 01): NL(NL) '\n'
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 04)-(01, 14): COMMENT(COMMENT) '#0 1 2 3 4'
[50](01, 14)-(01, 15): NL(NL) '\n'
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 04)-(01, 14): COMMENT(COMMENT) '#    X X X'
[51](01, 14)-(01, 15): NL(NL) '\n'
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 04)-(01, 14): COMMENT(COMMENT) '#  X   X X'
[52](01, 14)-(01, 15): NL(NL) '\n'
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 01): NL(NL) '\n'
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 04): INDENT(INDENT) '    '
[54](01, 04)-(01, 09): NAME(NAME) 'new_s'
[54](01, 10)-(01, 11): EQUAL(OP) '='
[54](01, 12)-(01, 14): STRING(STRING) "''"
[54](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): DEDENT(DEDENT)
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 04): INDENT(INDENT) '    '
[55](01, 04)-(01, 10): NAME(NAME) 'new_s2'
[55](01, 11)-(01, 12): EQUAL(OP) '='
[55](01, 13)-(01, 15): STRING(STRING) "''"
[55](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[55](02, 00)-(02, 00): DEDENT(DEDENT)
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[56](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[56](01, 00)-(01, 01): NL(NL) '\n'
[56](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[57](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[57](01, 00)-(01, 04): INDENT(INDENT) '    '
[57](01, 04)-(01, 06): NAME(NAME) 'if'
[57](01, 07)-(01, 10): NAME(NAME) 'len'
[57](01, 10)-(01, 11): LPAR(OP) '('
[57](01, 11)-(01, 12): NAME(NAME) 's'
[57](01, 12)-(01, 13): RPAR(OP) ')'
[57](01, 14)-(01, 16): EQEQUAL(OP) '=='
[57](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[57](01, 18)-(01, 19): COLON(OP) ':'
[57](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[57](02, 00)-(02, 00): DEDENT(DEDENT)
[57](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[58](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[58](01, 00)-(01, 08): INDENT(INDENT) '        '
[58](01, 08)-(01, 13): NAME(NAME) 'new_s'
[58](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[58](01, 17)-(01, 20): STRING(STRING) "'X'"
[58](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[58](02, 00)-(02, 00): DEDENT(DEDENT)
[58](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[59](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[59](01, 00)-(01, 08): INDENT(INDENT) '        '
[59](01, 08)-(01, 14): NAME(NAME) 'new_s2'
[59](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[59](01, 18)-(01, 21): STRING(STRING) "' '"
[59](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[59](02, 00)-(02, 00): DEDENT(DEDENT)
[59](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[60](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[60](01, 00)-(01, 04): INDENT(INDENT) '    '
[60](01, 04)-(01, 08): NAME(NAME) 'else'
[60](01, 08)-(01, 09): COLON(OP) ':'
[60](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[60](02, 00)-(02, 00): DEDENT(DEDENT)
[60](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[61](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[61](01, 00)-(01, 08): INDENT(INDENT) '        '
[61](01, 08)-(01, 11): NAME(NAME) 'for'
[61](01, 12)-(01, 13): NAME(NAME) 'i'
[61](01, 14)-(01, 16): NAME(NAME) 'in'
[61](01, 17)-(01, 22): NAME(NAME) 'range'
[61](01, 22)-(01, 23): LPAR(OP) '('
[61](01, 23)-(01, 26): NAME(NAME) 'len'
[61](01, 26)-(01, 27): LPAR(OP) '('
[61](01, 27)-(01, 28): NAME(NAME) 's'
[61](01, 28)-(01, 29): RPAR(OP) ')'
[61](01, 29)-(01, 30): RPAR(OP) ')'
[61](01, 30)-(01, 31): COLON(OP) ':'
[61](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[61](02, 00)-(02, 00): DEDENT(DEDENT)
[61](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[62](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[62](01, 00)-(01, 12): INDENT(INDENT) '            '
[62](01, 12)-(01, 14): NAME(NAME) 'if'
[62](01, 15)-(01, 16): NAME(NAME) 'i'
[62](01, 17)-(01, 19): EQEQUAL(OP) '=='
[62](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[62](01, 21)-(01, 22): COLON(OP) ':'
[62](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[62](02, 00)-(02, 00): DEDENT(DEDENT)
[62](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[63](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[63](01, 00)-(01, 16): INDENT(INDENT) '                '
[63](01, 16)-(01, 17): NAME(NAME) 'n'
[63](01, 18)-(01, 19): EQUAL(OP) '='
[63](01, 20)-(01, 23): NAME(NAME) 'int'
[63](01, 23)-(01, 24): LPAR(OP) '('
[63](01, 24)-(01, 25): NAME(NAME) 's'
[63](01, 25)-(01, 26): LSQB(OP) '['
[63](01, 26)-(01, 27): NAME(NAME) 'i'
[63](01, 27)-(01, 28): PLUS(OP) '+'
[63](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[63](01, 29)-(01, 30): RSQB(OP) ']'
[63](01, 30)-(01, 31): RPAR(OP) ')'
[63](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[63](02, 00)-(02, 00): DEDENT(DEDENT)
[63](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[64](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[64](01, 00)-(01, 16): INDENT(INDENT) '                '
[64](01, 16)-(01, 21): NAME(NAME) 'new_s'
[64](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[64](01, 25)-(01, 29): NAME(NAME) 'calc'
[64](01, 29)-(01, 30): LPAR(OP) '('
[64](01, 30)-(01, 31): NAME(NAME) 'n'
[64](01, 31)-(01, 32): RPAR(OP) ')'
[64](01, 32)-(01, 33): LSQB(OP) '['
[64](01, 33)-(01, 34): NUMBER(NUMBER) '0'
[64](01, 34)-(01, 35): RSQB(OP) ']'
[64](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[64](02, 00)-(02, 00): DEDENT(DEDENT)
[64](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[65](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[65](01, 00)-(01, 16): INDENT(INDENT) '                '
[65](01, 16)-(01, 22): NAME(NAME) 'new_s2'
[65](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[65](01, 26)-(01, 30): NAME(NAME) 'calc'
[65](01, 30)-(01, 31): LPAR(OP) '('
[65](01, 31)-(01, 32): NAME(NAME) 'n'
[65](01, 32)-(01, 33): RPAR(OP) ')'
[65](01, 33)-(01, 34): LSQB(OP) '['
[65](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[65](01, 35)-(01, 36): RSQB(OP) ']'
[65](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[65](02, 00)-(02, 00): DEDENT(DEDENT)
[65](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[66](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[66](01, 00)-(01, 12): INDENT(INDENT) '            '
[66](01, 12)-(01, 16): NAME(NAME) 'else'
[66](01, 16)-(01, 17): COLON(OP) ':'
[66](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[66](02, 00)-(02, 00): DEDENT(DEDENT)
[66](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[67](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[67](01, 00)-(01, 16): INDENT(INDENT) '                '
[67](01, 16)-(01, 18): NAME(NAME) 'if'
[67](01, 19)-(01, 20): NAME(NAME) 'i'
[67](01, 21)-(01, 23): EQEQUAL(OP) '=='
[67](01, 24)-(01, 27): NAME(NAME) 'len'
[67](01, 27)-(01, 28): LPAR(OP) '('
[67](01, 28)-(01, 29): NAME(NAME) 's'
[67](01, 29)-(01, 30): RPAR(OP) ')'
[67](01, 30)-(01, 31): MINUS(OP) '-'
[67](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[67](01, 32)-(01, 33): COLON(OP) ':'
[67](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[67](02, 00)-(02, 00): DEDENT(DEDENT)
[67](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[68](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[68](01, 00)-(01, 20): INDENT(INDENT) '                    '
[68](01, 20)-(01, 21): NAME(NAME) 'n'
[68](01, 22)-(01, 23): EQUAL(OP) '='
[68](01, 24)-(01, 27): NAME(NAME) 'int'
[68](01, 27)-(01, 28): LPAR(OP) '('
[68](01, 28)-(01, 29): NAME(NAME) 's'
[68](01, 29)-(01, 30): LSQB(OP) '['
[68](01, 30)-(01, 31): NAME(NAME) 'i'
[68](01, 31)-(01, 32): MINUS(OP) '-'
[68](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[68](01, 33)-(01, 34): RSQB(OP) ']'
[68](01, 34)-(01, 35): RPAR(OP) ')'
[68](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[68](02, 00)-(02, 00): DEDENT(DEDENT)
[68](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[69](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[69](01, 00)-(01, 20): INDENT(INDENT) '                    '
[69](01, 20)-(01, 25): NAME(NAME) 'new_s'
[69](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[69](01, 29)-(01, 33): NAME(NAME) 'calc'
[69](01, 33)-(01, 34): LPAR(OP) '('
[69](01, 34)-(01, 35): NAME(NAME) 'n'
[69](01, 35)-(01, 36): RPAR(OP) ')'
[69](01, 36)-(01, 37): LSQB(OP) '['
[69](01, 37)-(01, 38): NUMBER(NUMBER) '0'
[69](01, 38)-(01, 39): RSQB(OP) ']'
[69](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[69](02, 00)-(02, 00): DEDENT(DEDENT)
[69](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[70](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[70](01, 00)-(01, 20): INDENT(INDENT) '                    '
[70](01, 20)-(01, 26): NAME(NAME) 'new_s2'
[70](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[70](01, 30)-(01, 34): NAME(NAME) 'calc'
[70](01, 34)-(01, 35): LPAR(OP) '('
[70](01, 35)-(01, 36): NAME(NAME) 'n'
[70](01, 36)-(01, 37): RPAR(OP) ')'
[70](01, 37)-(01, 38): LSQB(OP) '['
[70](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[70](01, 39)-(01, 40): RSQB(OP) ']'
[70](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[70](02, 00)-(02, 00): DEDENT(DEDENT)
[70](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[71](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[71](01, 00)-(01, 16): INDENT(INDENT) '                '
[71](01, 16)-(01, 20): NAME(NAME) 'else'
[71](01, 20)-(01, 21): COLON(OP) ':'
[71](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[71](02, 00)-(02, 00): DEDENT(DEDENT)
[71](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[72](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[72](01, 00)-(01, 20): INDENT(INDENT) '                    '
[72](01, 20)-(01, 21): NAME(NAME) 'n'
[72](01, 22)-(01, 23): EQUAL(OP) '='
[72](01, 24)-(01, 27): NAME(NAME) 'int'
[72](01, 27)-(01, 28): LPAR(OP) '('
[72](01, 28)-(01, 29): NAME(NAME) 's'
[72](01, 29)-(01, 30): LSQB(OP) '['
[72](01, 30)-(01, 31): NAME(NAME) 'i'
[72](01, 31)-(01, 32): MINUS(OP) '-'
[72](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[72](01, 33)-(01, 34): RSQB(OP) ']'
[72](01, 34)-(01, 35): RPAR(OP) ')'
[72](01, 36)-(01, 37): PLUS(OP) '+'
[72](01, 38)-(01, 41): NAME(NAME) 'int'
[72](01, 41)-(01, 42): LPAR(OP) '('
[72](01, 42)-(01, 43): NAME(NAME) 's'
[72](01, 43)-(01, 44): LSQB(OP) '['
[72](01, 44)-(01, 45): NAME(NAME) 'i'
[72](01, 45)-(01, 46): PLUS(OP) '+'
[72](01, 46)-(01, 47): NUMBER(NUMBER) '1'
[72](01, 47)-(01, 48): RSQB(OP) ']'
[72](01, 48)-(01, 49): RPAR(OP) ')'
[72](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[72](02, 00)-(02, 00): DEDENT(DEDENT)
[72](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[73](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[73](01, 00)-(01, 20): INDENT(INDENT) '                    '
[73](01, 20)-(01, 25): NAME(NAME) 'new_s'
[73](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[73](01, 29)-(01, 33): NAME(NAME) 'calc'
[73](01, 33)-(01, 34): LPAR(OP) '('
[73](01, 34)-(01, 35): NAME(NAME) 'n'
[73](01, 35)-(01, 36): RPAR(OP) ')'
[73](01, 36)-(01, 37): LSQB(OP) '['
[73](01, 37)-(01, 38): NUMBER(NUMBER) '0'
[73](01, 38)-(01, 39): RSQB(OP) ']'
[73](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[73](02, 00)-(02, 00): DEDENT(DEDENT)
[73](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[74](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[74](01, 00)-(01, 20): INDENT(INDENT) '                    '
[74](01, 20)-(01, 26): NAME(NAME) 'new_s2'
[74](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[74](01, 30)-(01, 34): NAME(NAME) 'calc'
[74](01, 34)-(01, 35): LPAR(OP) '('
[74](01, 35)-(01, 36): NAME(NAME) 'n'
[74](01, 36)-(01, 37): RPAR(OP) ')'
[74](01, 37)-(01, 38): LSQB(OP) '['
[74](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[74](01, 39)-(01, 40): RSQB(OP) ']'
[74](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[74](02, 00)-(02, 00): DEDENT(DEDENT)
[74](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[75](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[75](01, 00)-(01, 04): INDENT(INDENT) '    '
[75](01, 04)-(01, 06): NAME(NAME) 'if'
[75](01, 07)-(01, 12): NAME(NAME) 'new_s'
[75](01, 13)-(01, 15): EQEQUAL(OP) '=='
[75](01, 16)-(01, 22): NAME(NAME) 'new_s2'
[75](01, 22)-(01, 23): COLON(OP) ':'
[75](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[75](02, 00)-(02, 00): DEDENT(DEDENT)
[75](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[76](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[76](01, 00)-(01, 08): INDENT(INDENT) '        '
[76](01, 08)-(01, 13): NAME(NAME) 'print'
[76](01, 13)-(01, 14): LPAR(OP) '('
[76](01, 14)-(01, 19): NAME(NAME) 'new_s'
[76](01, 19)-(01, 20): RPAR(OP) ')'
[76](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[76](02, 00)-(02, 00): DEDENT(DEDENT)
[76](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[77](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[77](01, 00)-(01, 04): INDENT(INDENT) '    '
[77](01, 04)-(01, 08): NAME(NAME) 'else'
[77](01, 08)-(01, 09): COLON(OP) ':'
[77](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[77](02, 00)-(02, 00): DEDENT(DEDENT)
[77](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[78](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[78](01, 00)-(01, 08): INDENT(INDENT) '        '
[78](01, 08)-(01, 13): NAME(NAME) 'print'
[78](01, 13)-(01, 14): LPAR(OP) '('
[78](01, 14)-(01, 19): NAME(NAME) 'new_s'
[78](01, 19)-(01, 20): RPAR(OP) ')'
[78](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[78](02, 00)-(02, 00): DEDENT(DEDENT)
[78](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[79](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[79](01, 00)-(01, 08): INDENT(INDENT) '        '
[79](01, 08)-(01, 13): NAME(NAME) 'print'
[79](01, 13)-(01, 14): LPAR(OP) '('
[79](01, 14)-(01, 20): NAME(NAME) 'new_s2'
[79](01, 20)-(01, 21): RPAR(OP) ')'
[79](01, 21)-(01, 22): NEWLINE(NEWLINE)
[79](02, 00)-(02, 00): DEDENT(DEDENT)
[79](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

