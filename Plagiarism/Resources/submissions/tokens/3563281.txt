[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 10): NAME(NAME) 'string'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 13)-(01, 15): STRING(STRING) '""'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'index'
[03](01, 10)-(01, 11): EQUAL(OP) '='
[03](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[03](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'count'
[04](01, 10)-(01, 11): EQUAL(OP) '='
[04](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[04](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 12): NAME(NAME) 'in'
[05](01, 13)-(01, 18): NAME(NAME) 'range'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 22): NAME(NAME) 'len'
[05](01, 22)-(01, 23): LPAR(OP) '('
[05](01, 23)-(01, 29): NAME(NAME) 'corpus'
[05](01, 29)-(01, 30): RPAR(OP) ')'
[05](01, 30)-(01, 31): RPAR(OP) ')'
[05](01, 31)-(01, 32): COLON(OP) ':'
[05](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 17): NAME(NAME) 'corpus'
[06](01, 17)-(01, 18): LSQB(OP) '['
[06](01, 18)-(01, 19): NAME(NAME) 'i'
[06](01, 19)-(01, 20): COLON(OP) ':'
[06](01, 20)-(01, 21): NAME(NAME) 'i'
[06](01, 21)-(01, 22): PLUS(OP) '+'
[06](01, 22)-(01, 25): NAME(NAME) 'len'
[06](01, 25)-(01, 26): LPAR(OP) '('
[06](01, 26)-(01, 33): NAME(NAME) 'pattern'
[06](01, 33)-(01, 34): RPAR(OP) ')'
[06](01, 34)-(01, 35): RSQB(OP) ']'
[06](01, 36)-(01, 38): EQEQUAL(OP) '=='
[06](01, 39)-(01, 46): NAME(NAME) 'pattern'
[06](01, 46)-(01, 47): COLON(OP) ':'
[06](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'string'
[07](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[07](01, 22)-(01, 28): NAME(NAME) 'corpus'
[07](01, 28)-(01, 29): LSQB(OP) '['
[07](01, 29)-(01, 34): NAME(NAME) 'index'
[07](01, 34)-(01, 35): COLON(OP) ':'
[07](01, 35)-(01, 36): NAME(NAME) 'i'
[07](01, 36)-(01, 37): RSQB(OP) ']'
[07](01, 38)-(01, 39): PLUS(OP) '+'
[07](01, 40)-(01, 51): NAME(NAME) 'replacement'
[07](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 17): NAME(NAME) 'index'
[08](01, 18)-(01, 19): EQUAL(OP) '='
[08](01, 20)-(01, 21): NAME(NAME) 'i'
[08](01, 22)-(01, 23): PLUS(OP) '+'
[08](01, 24)-(01, 27): NAME(NAME) 'len'
[08](01, 27)-(01, 28): LPAR(OP) '('
[08](01, 28)-(01, 39): NAME(NAME) 'replacement'
[08](01, 39)-(01, 40): RPAR(OP) ')'
[08](01, 41)-(01, 42): PLUS(OP) '+'
[08](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[08](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 17): NAME(NAME) 'count'
[09](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[09](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[09](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 06): NAME(NAME) 'if'
[10](01, 07)-(01, 10): NAME(NAME) 'len'
[10](01, 10)-(01, 11): LPAR(OP) '('
[10](01, 11)-(01, 17): NAME(NAME) 'string'
[10](01, 17)-(01, 18): RPAR(OP) ')'
[10](01, 19)-(01, 21): NOTEQUAL(OP) '!='
[10](01, 22)-(01, 25): NAME(NAME) 'len'
[10](01, 25)-(01, 26): LPAR(OP) '('
[10](01, 26)-(01, 32): NAME(NAME) 'corpus'
[10](01, 32)-(01, 33): RPAR(OP) ')'
[10](01, 34)-(01, 35): MINUS(OP) '-'
[10](01, 36)-(01, 41): NAME(NAME) 'count'
[10](01, 41)-(01, 42): STAR(OP) '*'
[10](01, 42)-(01, 45): NAME(NAME) 'len'
[10](01, 45)-(01, 46): LPAR(OP) '('
[10](01, 46)-(01, 57): NAME(NAME) 'replacement'
[10](01, 57)-(01, 58): RPAR(OP) ')'
[10](01, 59)-(01, 60): PLUS(OP) '+'
[10](01, 61)-(01, 66): NAME(NAME) 'count'
[10](01, 66)-(01, 67): STAR(OP) '*'
[10](01, 67)-(01, 70): NAME(NAME) 'len'
[10](01, 70)-(01, 71): LPAR(OP) '('
[10](01, 71)-(01, 78): NAME(NAME) 'pattern'
[10](01, 78)-(01, 79): RPAR(OP) ')'
[10](01, 79)-(01, 80): COLON(OP) ':'
[10](01, 80)-(01, 81): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 14): NAME(NAME) 'string'
[11](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[11](01, 18)-(01, 24): NAME(NAME) 'corpus'
[11](01, 24)-(01, 25): LSQB(OP) '['
[11](01, 25)-(01, 30): NAME(NAME) 'index'
[11](01, 30)-(01, 31): COLON(OP) ':'
[11](01, 31)-(01, 32): RSQB(OP) ']'
[11](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 10): NAME(NAME) 'return'
[12](01, 11)-(01, 17): NAME(NAME) 'string'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE)
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

