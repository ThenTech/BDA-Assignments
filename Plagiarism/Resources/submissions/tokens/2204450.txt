[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'import'
[00](01, 07)-(01, 13): NAME(NAME) 'string'
[00](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 16): NAME(NAME) 'to_lowercase'
[03](01, 16)-(01, 17): LPAR(OP) '('
[03](01, 17)-(01, 25): NAME(NAME) 'sentence'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 26)-(01, 27): COLON(OP) ':'
[03](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 15): NAME(NAME) 'newsentence'
[04](01, 16)-(01, 17): EQUAL(OP) '='
[04](01, 18)-(01, 20): STRING(STRING) '""'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 12): NAME(NAME) 'char'
[06](01, 13)-(01, 15): NAME(NAME) 'in'
[06](01, 16)-(01, 24): NAME(NAME) 'sentence'
[06](01, 24)-(01, 25): COLON(OP) ':'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 14): STRING(STRING) '"A"'
[07](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[07](01, 18)-(01, 22): NAME(NAME) 'char'
[07](01, 23)-(01, 25): LESSEQUAL(OP) '<='
[07](01, 26)-(01, 29): STRING(STRING) '"Z"'
[07](01, 29)-(01, 30): COLON(OP) ':'
[07](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 19): NAME(NAME) 'ordinal'
[08](01, 20)-(01, 21): EQUAL(OP) '='
[08](01, 22)-(01, 25): NAME(NAME) 'ord'
[08](01, 25)-(01, 26): LPAR(OP) '('
[08](01, 26)-(01, 30): NAME(NAME) 'char'
[08](01, 30)-(01, 31): RPAR(OP) ')'
[08](01, 32)-(01, 33): MINUS(OP) '-'
[08](01, 34)-(01, 37): NAME(NAME) 'ord'
[08](01, 37)-(01, 38): LPAR(OP) '('
[08](01, 38)-(01, 41): STRING(STRING) '"A"'
[08](01, 41)-(01, 42): RPAR(OP) ')'
[08](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 23): NAME(NAME) 'newsentence'
[09](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[09](01, 27)-(01, 30): NAME(NAME) 'chr'
[09](01, 30)-(01, 31): LPAR(OP) '('
[09](01, 31)-(01, 34): NAME(NAME) 'ord'
[09](01, 34)-(01, 35): LPAR(OP) '('
[09](01, 35)-(01, 38): STRING(STRING) '"a"'
[09](01, 38)-(01, 39): RPAR(OP) ')'
[09](01, 40)-(01, 41): PLUS(OP) '+'
[09](01, 42)-(01, 49): NAME(NAME) 'ordinal'
[09](01, 49)-(01, 50): RPAR(OP) ')'
[09](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 12): NAME(NAME) 'else'
[10](01, 12)-(01, 13): COLON(OP) ':'
[10](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 23): NAME(NAME) 'newsentence'
[11](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[11](01, 27)-(01, 31): NAME(NAME) 'char'
[11](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 10): NAME(NAME) 'return'
[12](01, 11)-(01, 22): NAME(NAME) 'newsentence'
[12](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 03): NAME(NAME) 'def'
[15](01, 04)-(01, 24): NAME(NAME) 'strip_special_tokens'
[15](01, 24)-(01, 25): LPAR(OP) '('
[15](01, 25)-(01, 33): NAME(NAME) 'sentence'
[15](01, 33)-(01, 34): RPAR(OP) ')'
[15](01, 34)-(01, 35): COLON(OP) ':'
[15](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 15): NAME(NAME) 'newsentence'
[16](01, 16)-(01, 17): EQUAL(OP) '='
[16](01, 18)-(01, 20): STRING(STRING) '""'
[16](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 07): NAME(NAME) 'for'
[18](01, 08)-(01, 12): NAME(NAME) 'char'
[18](01, 13)-(01, 15): NAME(NAME) 'in'
[18](01, 16)-(01, 24): NAME(NAME) 'sentence'
[18](01, 24)-(01, 25): COLON(OP) ':'
[18](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 10): NAME(NAME) 'if'
[19](01, 11)-(01, 15): NAME(NAME) 'char'
[19](01, 16)-(01, 19): NAME(NAME) 'not'
[19](01, 20)-(01, 22): NAME(NAME) 'in'
[19](01, 23)-(01, 29): NAME(NAME) 'string'
[19](01, 29)-(01, 30): DOT(OP) '.'
[19](01, 30)-(01, 41): NAME(NAME) 'punctuation'
[19](01, 41)-(01, 42): COLON(OP) ':'
[19](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 23): NAME(NAME) 'newsentence'
[20](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[20](01, 27)-(01, 31): NAME(NAME) 'char'
[20](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 12): NAME(NAME) 'else'
[21](01, 12)-(01, 13): COLON(OP) ':'
[21](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 23): NAME(NAME) 'newsentence'
[22](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[22](01, 27)-(01, 29): STRING(STRING) '""'
[22](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 10): NAME(NAME) 'return'
[23](01, 11)-(01, 22): NAME(NAME) 'newsentence'
[23](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 03): NAME(NAME) 'def'
[26](01, 04)-(01, 17): NAME(NAME) 'delete_spaces'
[26](01, 17)-(01, 18): LPAR(OP) '('
[26](01, 18)-(01, 26): NAME(NAME) 'sentence'
[26](01, 26)-(01, 27): RPAR(OP) ')'
[26](01, 27)-(01, 28): COLON(OP) ':'
[26](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 15): NAME(NAME) 'newsentence'
[27](01, 16)-(01, 17): EQUAL(OP) '='
[27](01, 18)-(01, 20): STRING(STRING) '""'
[27](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 01): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 07): NAME(NAME) 'for'
[29](01, 08)-(01, 12): NAME(NAME) 'char'
[29](01, 13)-(01, 15): NAME(NAME) 'in'
[29](01, 16)-(01, 24): NAME(NAME) 'sentence'
[29](01, 24)-(01, 25): COLON(OP) ':'
[29](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 10): NAME(NAME) 'if'
[30](01, 11)-(01, 15): NAME(NAME) 'char'
[30](01, 16)-(01, 18): EQEQUAL(OP) '=='
[30](01, 19)-(01, 22): STRING(STRING) '" "'
[30](01, 22)-(01, 23): COLON(OP) ':'
[30](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 23): NAME(NAME) 'newsentence'
[31](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[31](01, 27)-(01, 29): STRING(STRING) '""'
[31](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 12): NAME(NAME) 'else'
[32](01, 12)-(01, 13): COLON(OP) ':'
[32](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 12): INDENT(INDENT) '            '
[33](01, 12)-(01, 23): NAME(NAME) 'newsentence'
[33](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[33](01, 27)-(01, 31): NAME(NAME) 'char'
[33](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 10): NAME(NAME) 'return'
[34](01, 11)-(01, 22): NAME(NAME) 'newsentence'
[34](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 01): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 01): NL(NL) '\n'
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 03): NAME(NAME) 'def'
[37](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[37](01, 26)-(01, 27): LPAR(OP) '('
[37](01, 27)-(01, 35): NAME(NAME) 'sentence'
[37](01, 35)-(01, 36): RPAR(OP) ')'
[37](01, 36)-(01, 37): COLON(OP) ':'
[37](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 15): NAME(NAME) 'newsentence'
[38](01, 16)-(01, 17): EQUAL(OP) '='
[38](01, 18)-(01, 30): NAME(NAME) 'to_lowercase'
[38](01, 30)-(01, 31): LPAR(OP) '('
[38](01, 31)-(01, 39): NAME(NAME) 'sentence'
[38](01, 39)-(01, 40): RPAR(OP) ')'
[38](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 04): INDENT(INDENT) '    '
[39](01, 04)-(01, 15): NAME(NAME) 'newsentence'
[39](01, 16)-(01, 17): EQUAL(OP) '='
[39](01, 18)-(01, 38): NAME(NAME) 'strip_special_tokens'
[39](01, 38)-(01, 39): LPAR(OP) '('
[39](01, 39)-(01, 50): NAME(NAME) 'newsentence'
[39](01, 50)-(01, 51): RPAR(OP) ')'
[39](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 04): INDENT(INDENT) '    '
[40](01, 04)-(01, 15): NAME(NAME) 'newsentence'
[40](01, 16)-(01, 17): EQUAL(OP) '='
[40](01, 18)-(01, 31): NAME(NAME) 'delete_spaces'
[40](01, 31)-(01, 32): LPAR(OP) '('
[40](01, 32)-(01, 43): NAME(NAME) 'newsentence'
[40](01, 43)-(01, 44): RPAR(OP) ')'
[40](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 01): NL(NL) '\n'
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 04): INDENT(INDENT) '    '
[42](01, 04)-(01, 07): NAME(NAME) 'for'
[42](01, 08)-(01, 09): NAME(NAME) 'i'
[42](01, 10)-(01, 12): NAME(NAME) 'in'
[42](01, 13)-(01, 18): NAME(NAME) 'range'
[42](01, 18)-(01, 19): LPAR(OP) '('
[42](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[42](01, 20)-(01, 21): COMMA(OP) ','
[42](01, 22)-(01, 25): NAME(NAME) 'len'
[42](01, 25)-(01, 26): LPAR(OP) '('
[42](01, 26)-(01, 37): NAME(NAME) 'newsentence'
[42](01, 37)-(01, 38): RPAR(OP) ')'
[42](01, 38)-(01, 40): DOUBLESLASH(OP) '//'
[42](01, 40)-(01, 41): NUMBER(NUMBER) '2'
[42](01, 41)-(01, 42): RPAR(OP) ')'
[42](01, 42)-(01, 43): COLON(OP) ':'
[42](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 08): INDENT(INDENT) '        '
[43](01, 08)-(01, 10): NAME(NAME) 'if'
[43](01, 11)-(01, 22): NAME(NAME) 'newsentence'
[43](01, 22)-(01, 23): LSQB(OP) '['
[43](01, 23)-(01, 24): NAME(NAME) 'i'
[43](01, 24)-(01, 25): RSQB(OP) ']'
[43](01, 26)-(01, 28): NOTEQUAL(OP) '!='
[43](01, 29)-(01, 40): NAME(NAME) 'newsentence'
[43](01, 40)-(01, 41): LSQB(OP) '['
[43](01, 41)-(01, 44): NAME(NAME) 'len'
[43](01, 44)-(01, 45): LPAR(OP) '('
[43](01, 45)-(01, 56): NAME(NAME) 'newsentence'
[43](01, 56)-(01, 57): RPAR(OP) ')'
[43](01, 58)-(01, 59): MINUS(OP) '-'
[43](01, 60)-(01, 61): NAME(NAME) 'i'
[43](01, 62)-(01, 63): MINUS(OP) '-'
[43](01, 64)-(01, 65): NUMBER(NUMBER) '1'
[43](01, 65)-(01, 66): RSQB(OP) ']'
[43](01, 66)-(01, 67): COLON(OP) ':'
[43](01, 67)-(01, 68): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 12): INDENT(INDENT) '            '
[44](01, 12)-(01, 18): NAME(NAME) 'return'
[44](01, 19)-(01, 24): NAME(NAME) 'False'
[44](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 04): INDENT(INDENT) '    '
[45](01, 04)-(01, 10): NAME(NAME) 'return'
[45](01, 11)-(01, 15): NAME(NAME) 'True'
[45](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

