[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'count_words'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 17): NAME(NAME) 's'
[00](01, 17)-(01, 18): RPAR(OP) ')'
[00](01, 18)-(01, 19): COLON(OP) ':'
[00](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 12): NAME(NAME) 'length_s'
[01](01, 13)-(01, 14): EQUAL(OP) '='
[01](01, 15)-(01, 18): NAME(NAME) 'len'
[01](01, 18)-(01, 19): LPAR(OP) '('
[01](01, 19)-(01, 20): NAME(NAME) 's'
[01](01, 20)-(01, 21): RPAR(OP) ')'
[01](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 11): NAME(NAME) 'counter'
[02](01, 12)-(01, 13): EQUAL(OP) '='
[02](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 18): NAME(NAME) 'range'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[04](01, 20)-(01, 21): COMMA(OP) ','
[04](01, 22)-(01, 30): NAME(NAME) 'length_s'
[04](01, 30)-(01, 31): RPAR(OP) ')'
[04](01, 31)-(01, 32): COLON(OP) ':'
[04](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 12): LPAR(OP) '('
[05](01, 12)-(01, 13): NAME(NAME) 's'
[05](01, 13)-(01, 14): LSQB(OP) '['
[05](01, 14)-(01, 15): NAME(NAME) 'i'
[05](01, 15)-(01, 16): RSQB(OP) ']'
[05](01, 17)-(01, 19): NAME(NAME) 'in'
[05](01, 20)-(01, 26): NAME(NAME) 'string'
[05](01, 26)-(01, 27): DOT(OP) '.'
[05](01, 27)-(01, 38): NAME(NAME) 'punctuation'
[05](01, 39)-(01, 41): NAME(NAME) 'or'
[05](01, 42)-(01, 43): NAME(NAME) 's'
[05](01, 43)-(01, 44): LSQB(OP) '['
[05](01, 44)-(01, 45): NAME(NAME) 'i'
[05](01, 45)-(01, 46): RSQB(OP) ']'
[05](01, 47)-(01, 49): EQEQUAL(OP) '=='
[05](01, 50)-(01, 53): STRING(STRING) '" "'
[05](01, 53)-(01, 54): RPAR(OP) ')'
[05](01, 54)-(01, 55): COLON(OP) ':'
[05](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 19): NAME(NAME) 'counter'
[06](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[06](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[06](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 12): NAME(NAME) 'elif'
[07](01, 12)-(01, 13): LPAR(OP) '('
[07](01, 13)-(01, 14): NAME(NAME) 'i'
[07](01, 15)-(01, 17): EQEQUAL(OP) '=='
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 22): NAME(NAME) 'len'
[07](01, 22)-(01, 23): LPAR(OP) '('
[07](01, 23)-(01, 24): NAME(NAME) 's'
[07](01, 24)-(01, 25): RPAR(OP) ')'
[07](01, 26)-(01, 27): MINUS(OP) '-'
[07](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[07](01, 29)-(01, 30): RPAR(OP) ')'
[07](01, 31)-(01, 34): NAME(NAME) 'and'
[07](01, 35)-(01, 36): NAME(NAME) 's'
[07](01, 36)-(01, 37): LSQB(OP) '['
[07](01, 37)-(01, 38): NAME(NAME) 'i'
[07](01, 38)-(01, 39): RSQB(OP) ']'
[07](01, 40)-(01, 43): NAME(NAME) 'not'
[07](01, 44)-(01, 46): NAME(NAME) 'in'
[07](01, 47)-(01, 53): NAME(NAME) 'string'
[07](01, 53)-(01, 54): DOT(OP) '.'
[07](01, 54)-(01, 65): NAME(NAME) 'punctuation'
[07](01, 65)-(01, 66): RPAR(OP) ')'
[07](01, 66)-(01, 67): COLON(OP) ':'
[07](01, 67)-(01, 68): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 19): NAME(NAME) 'counter'
[08](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[08](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[08](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 10): NAME(NAME) 'return'
[09](01, 11)-(01, 18): NAME(NAME) 'counter'
[09](01, 18)-(01, 19): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

