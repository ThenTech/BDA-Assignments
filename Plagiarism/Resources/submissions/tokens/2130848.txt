[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'cent1'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 11): NAME(NAME) 'int'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 17): NAME(NAME) 'input'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 37): STRING(STRING) '"Aantal 1 cent = ?"'
[00](01, 37)-(01, 38): RPAR(OP) ')'
[00](01, 38)-(01, 39): RPAR(OP) ')'
[00](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'cent2'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 11): NAME(NAME) 'int'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 17): NAME(NAME) 'input'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 37): STRING(STRING) '"Aantal 2 cent = ?"'
[01](01, 37)-(01, 38): RPAR(OP) ')'
[01](01, 38)-(01, 39): RPAR(OP) ')'
[01](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 05): NAME(NAME) 'cent5'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 11): NAME(NAME) 'int'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 17): NAME(NAME) 'input'
[02](01, 17)-(01, 18): LPAR(OP) '('
[02](01, 18)-(01, 37): STRING(STRING) '"Aantal 5 cent = ?"'
[02](01, 37)-(01, 38): RPAR(OP) ')'
[02](01, 38)-(01, 39): RPAR(OP) ')'
[02](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 06): NAME(NAME) 'cent10'
[03](01, 07)-(01, 08): EQUAL(OP) '='
[03](01, 09)-(01, 12): NAME(NAME) 'int'
[03](01, 12)-(01, 13): LPAR(OP) '('
[03](01, 13)-(01, 18): NAME(NAME) 'input'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 39): STRING(STRING) '"Aantal 10 cent = ?"'
[03](01, 39)-(01, 40): RPAR(OP) ')'
[03](01, 40)-(01, 41): RPAR(OP) ')'
[03](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 06): NAME(NAME) 'cent20'
[04](01, 07)-(01, 08): EQUAL(OP) '='
[04](01, 09)-(01, 12): NAME(NAME) 'int'
[04](01, 12)-(01, 13): LPAR(OP) '('
[04](01, 13)-(01, 18): NAME(NAME) 'input'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 39): STRING(STRING) '"Aantal 20 cent = ?"'
[04](01, 39)-(01, 40): RPAR(OP) ')'
[04](01, 40)-(01, 41): RPAR(OP) ')'
[04](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 06): NAME(NAME) 'totaal'
[06](01, 07)-(01, 08): EQUAL(OP) '='
[06](01, 09)-(01, 14): NAME(NAME) 'cent1'
[06](01, 15)-(01, 16): PLUS(OP) '+'
[06](01, 17)-(01, 22): NAME(NAME) 'cent2'
[06](01, 23)-(01, 24): STAR(OP) '*'
[06](01, 25)-(01, 26): NUMBER(NUMBER) '2'
[06](01, 27)-(01, 28): PLUS(OP) '+'
[06](01, 29)-(01, 34): NAME(NAME) 'cent5'
[06](01, 35)-(01, 36): STAR(OP) '*'
[06](01, 37)-(01, 38): NUMBER(NUMBER) '5'
[06](01, 39)-(01, 40): PLUS(OP) '+'
[06](01, 41)-(01, 47): NAME(NAME) 'cent10'
[06](01, 48)-(01, 49): STAR(OP) '*'
[06](01, 50)-(01, 52): NUMBER(NUMBER) '10'
[06](01, 53)-(01, 54): PLUS(OP) '+'
[06](01, 55)-(01, 61): NAME(NAME) 'cent20'
[06](01, 62)-(01, 63): STAR(OP) '*'
[06](01, 64)-(01, 66): NUMBER(NUMBER) '20'
[06](01, 66)-(01, 67): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 05): NAME(NAME) 'print'
[08](01, 05)-(01, 06): LPAR(OP) '('
[08](01, 06)-(01, 17): STRING(STRING) '"You have "'
[08](01, 18)-(01, 19): PLUS(OP) '+'
[08](01, 20)-(01, 23): NAME(NAME) 'str'
[08](01, 23)-(01, 24): LPAR(OP) '('
[08](01, 24)-(01, 30): NAME(NAME) 'totaal'
[08](01, 30)-(01, 31): SLASH(OP) '/'
[08](01, 31)-(01, 34): NUMBER(NUMBER) '100'
[08](01, 34)-(01, 35): RPAR(OP) ')'
[08](01, 36)-(01, 37): PLUS(OP) '+'
[08](01, 38)-(01, 46): STRING(STRING) '" euro!"'
[08](01, 46)-(01, 47): RPAR(OP) ')'
[08](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

