[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'a'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 11): RPAR(OP) ')'
[00](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'b'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 09): NAME(NAME) 'input'
[01](01, 09)-(01, 10): LPAR(OP) '('
[01](01, 10)-(01, 11): RPAR(OP) ')'
[01](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'm'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 18): STRING(STRING) '"are anagrams"'
[02](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'def'
[04](01, 04)-(01, 20): NAME(NAME) 'get_letters_list'
[04](01, 20)-(01, 21): LPAR(OP) '('
[04](01, 21)-(01, 22): NAME(NAME) 'a'
[04](01, 22)-(01, 23): RPAR(OP) ')'
[04](01, 23)-(01, 24): COLON(OP) ':'
[04](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'a_ls'
[05](01, 09)-(01, 10): EQUAL(OP) '='
[05](01, 11)-(01, 12): NAME(NAME) 'a'
[05](01, 12)-(01, 13): DOT(OP) '.'
[05](01, 13)-(01, 18): NAME(NAME) 'split'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 20): RPAR(OP) ')'
[05](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 10): NAME(NAME) 'a_list'
[06](01, 11)-(01, 12): EQUAL(OP) '='
[06](01, 13)-(01, 14): LSQB(OP) '['
[06](01, 14)-(01, 15): RSQB(OP) ']'
[06](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 07): NAME(NAME) 'for'
[07](01, 08)-(01, 09): NAME(NAME) 'i'
[07](01, 10)-(01, 12): NAME(NAME) 'in'
[07](01, 13)-(01, 17): NAME(NAME) 'a_ls'
[07](01, 17)-(01, 18): COLON(OP) ':'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 11): NAME(NAME) 'for'
[08](01, 12)-(01, 13): NAME(NAME) 'j'
[08](01, 14)-(01, 16): NAME(NAME) 'in'
[08](01, 17)-(01, 18): NAME(NAME) 'i'
[08](01, 18)-(01, 19): COLON(OP) ':'
[08](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 14): NAME(NAME) 'if'
[09](01, 15)-(01, 18): STRING(STRING) "'a'"
[09](01, 19)-(01, 21): LESSEQUAL(OP) '<='
[09](01, 22)-(01, 23): NAME(NAME) 'j'
[09](01, 24)-(01, 26): LESSEQUAL(OP) '<='
[09](01, 27)-(01, 30): STRING(STRING) "'z'"
[09](01, 30)-(01, 31): COLON(OP) ':'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 22): NAME(NAME) 'a_list'
[10](01, 22)-(01, 23): DOT(OP) '.'
[10](01, 23)-(01, 29): NAME(NAME) 'append'
[10](01, 29)-(01, 30): LPAR(OP) '('
[10](01, 30)-(01, 31): NAME(NAME) 'j'
[10](01, 31)-(01, 32): RPAR(OP) ')'
[10](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'a_list'
[11](01, 10)-(01, 11): DOT(OP) '.'
[11](01, 11)-(01, 15): NAME(NAME) 'sort'
[11](01, 15)-(01, 16): LPAR(OP) '('
[11](01, 16)-(01, 17): RPAR(OP) ')'
[11](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 10): NAME(NAME) 'return'
[12](01, 11)-(01, 17): NAME(NAME) 'a_list'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 03): NAME(NAME) 'def'
[15](01, 04)-(01, 13): NAME(NAME) 'sort_list'
[15](01, 13)-(01, 14): LPAR(OP) '('
[15](01, 14)-(01, 16): NAME(NAME) 'ls'
[15](01, 16)-(01, 17): RPAR(OP) ')'
[15](01, 17)-(01, 18): COLON(OP) ':'
[15](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 06): NAME(NAME) 'ls'
[16](01, 06)-(01, 07): DOT(OP) '.'
[16](01, 07)-(01, 11): NAME(NAME) 'sort'
[16](01, 11)-(01, 12): LPAR(OP) '('
[16](01, 12)-(01, 13): RPAR(OP) ')'
[16](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 10): NAME(NAME) 'return'
[17](01, 11)-(01, 13): NAME(NAME) 'ls'
[17](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 02): NAME(NAME) 'if'
[20](01, 03)-(01, 06): NAME(NAME) 'not'
[20](01, 07)-(01, 08): LPAR(OP) '('
[20](01, 08)-(01, 17): NAME(NAME) 'sort_list'
[20](01, 17)-(01, 18): LPAR(OP) '('
[20](01, 18)-(01, 34): NAME(NAME) 'get_letters_list'
[20](01, 34)-(01, 35): LPAR(OP) '('
[20](01, 35)-(01, 36): NAME(NAME) 'a'
[20](01, 36)-(01, 37): RPAR(OP) ')'
[20](01, 37)-(01, 38): RPAR(OP) ')'
[20](01, 39)-(01, 41): EQEQUAL(OP) '=='
[20](01, 42)-(01, 51): NAME(NAME) 'sort_list'
[20](01, 51)-(01, 52): LPAR(OP) '('
[20](01, 52)-(01, 68): NAME(NAME) 'get_letters_list'
[20](01, 68)-(01, 69): LPAR(OP) '('
[20](01, 69)-(01, 70): NAME(NAME) 'b'
[20](01, 70)-(01, 71): RPAR(OP) ')'
[20](01, 71)-(01, 72): RPAR(OP) ')'
[20](01, 72)-(01, 73): RPAR(OP) ')'
[20](01, 73)-(01, 74): COLON(OP) ':'
[20](01, 74)-(01, 75): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 05): NAME(NAME) 'm'
[21](01, 06)-(01, 07): EQUAL(OP) '='
[21](01, 08)-(01, 26): STRING(STRING) '"are not anagrams"'
[21](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 05): NAME(NAME) 'print'
[23](01, 05)-(01, 06): LPAR(OP) '('
[23](01, 06)-(01, 07): NAME(NAME) 'a'
[23](01, 07)-(01, 08): COMMA(OP) ','
[23](01, 09)-(01, 14): STRING(STRING) '"and"'
[23](01, 14)-(01, 15): COMMA(OP) ','
[23](01, 16)-(01, 17): NAME(NAME) 'b'
[23](01, 17)-(01, 18): COMMA(OP) ','
[23](01, 19)-(01, 20): NAME(NAME) 'm'
[23](01, 20)-(01, 21): RPAR(OP) ')'
[23](01, 21)-(01, 22): NEWLINE(NEWLINE)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

