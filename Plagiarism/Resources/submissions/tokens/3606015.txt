[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'count_words'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'string'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 15): NAME(NAME) 'alphastring'
[01](01, 16)-(01, 17): EQUAL(OP) '='
[01](01, 18)-(01, 46): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[01](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 13): NAME(NAME) 'wordcount'
[02](01, 14)-(01, 15): EQUAL(OP) '='
[02](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[02](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 15): NAME(NAME) 'lettercount'
[03](01, 16)-(01, 17): EQUAL(OP) '='
[03](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 10): NAME(NAME) 'inWord'
[04](01, 11)-(01, 12): EQUAL(OP) '='
[04](01, 13)-(01, 18): NAME(NAME) 'False'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 04)-(01, 05): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'i'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 19): NAME(NAME) 'string'
[06](01, 19)-(01, 20): COLON(OP) ':'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 11): NAME(NAME) 'for'
[07](01, 12)-(01, 13): NAME(NAME) 'j'
[07](01, 14)-(01, 16): NAME(NAME) 'in'
[07](01, 17)-(01, 28): NAME(NAME) 'alphastring'
[07](01, 28)-(01, 29): COLON(OP) ':'
[07](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 14): NAME(NAME) 'if'
[08](01, 15)-(01, 16): NAME(NAME) 'i'
[08](01, 17)-(01, 19): EQEQUAL(OP) '=='
[08](01, 20)-(01, 21): NAME(NAME) 'j'
[08](01, 22)-(01, 25): NAME(NAME) 'and'
[08](01, 26)-(01, 29): NAME(NAME) 'not'
[08](01, 30)-(01, 36): NAME(NAME) 'inWord'
[08](01, 36)-(01, 37): COLON(OP) ':'
[08](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 22): NAME(NAME) 'inWord'
[09](01, 23)-(01, 24): EQUAL(OP) '='
[09](01, 25)-(01, 29): NAME(NAME) 'True'
[09](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 27): NAME(NAME) 'lettercount'
[10](01, 28)-(01, 30): PLUSEQUAL(OP) '+='
[10](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[10](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 21): NAME(NAME) 'break'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 16): NAME(NAME) 'elif'
[12](01, 17)-(01, 18): LPAR(OP) '('
[12](01, 18)-(01, 19): NAME(NAME) 'i'
[12](01, 20)-(01, 23): NAME(NAME) 'not'
[12](01, 24)-(01, 26): NAME(NAME) 'in'
[12](01, 27)-(01, 38): NAME(NAME) 'alphastring'
[12](01, 39)-(01, 42): NAME(NAME) 'and'
[12](01, 43)-(01, 49): NAME(NAME) 'inWord'
[12](01, 50)-(01, 53): NAME(NAME) 'and'
[12](01, 54)-(01, 65): NAME(NAME) 'lettercount'
[12](01, 66)-(01, 68): GREATEREQUAL(OP) '>='
[12](01, 69)-(01, 70): NUMBER(NUMBER) '2'
[12](01, 70)-(01, 71): RPAR(OP) ')'
[12](01, 72)-(01, 74): NAME(NAME) 'or'
[12](01, 75)-(01, 76): LPAR(OP) '('
[12](01, 76)-(01, 77): NAME(NAME) 'i'
[12](01, 78)-(01, 80): EQEQUAL(OP) '=='
[12](01, 81)-(01, 87): NAME(NAME) 'string'
[12](01, 87)-(01, 88): LSQB(OP) '['
[12](01, 88)-(01, 91): NAME(NAME) 'len'
[12](01, 91)-(01, 92): LPAR(OP) '('
[12](01, 92)-(01, 98): NAME(NAME) 'string'
[12](01, 98)-(01, 99): RPAR(OP) ')'
[12](01, 100)-(01, 101): MINUS(OP) '-'
[12](01, 102)-(01, 103): NUMBER(NUMBER) '1'
[12](01, 103)-(01, 104): RSQB(OP) ']'
[12](01, 105)-(01, 108): NAME(NAME) 'and'
[12](01, 109)-(01, 115): NAME(NAME) 'inWord'
[12](01, 115)-(01, 116): RPAR(OP) ')'
[12](01, 116)-(01, 117): COLON(OP) ':'
[12](01, 117)-(01, 118): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 25): NAME(NAME) 'wordcount'
[13](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[13](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[13](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 27): NAME(NAME) 'lettercount'
[14](01, 28)-(01, 29): EQUAL(OP) '='
[14](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[14](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 22): NAME(NAME) 'inWord'
[15](01, 23)-(01, 24): EQUAL(OP) '='
[15](01, 25)-(01, 30): NAME(NAME) 'False'
[15](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 21): NAME(NAME) 'break'
[16](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 16): NAME(NAME) 'elif'
[17](01, 17)-(01, 18): NAME(NAME) 'i'
[17](01, 19)-(01, 21): EQEQUAL(OP) '=='
[17](01, 22)-(01, 23): NAME(NAME) 'j'
[17](01, 24)-(01, 27): NAME(NAME) 'and'
[17](01, 28)-(01, 34): NAME(NAME) 'inWord'
[17](01, 34)-(01, 35): COLON(OP) ':'
[17](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 27): NAME(NAME) 'lettercount'
[18](01, 28)-(01, 30): PLUSEQUAL(OP) '+='
[18](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[18](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 16): INDENT(INDENT) '                '
[19](01, 16)-(01, 24): NAME(NAME) 'continue'
[19](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 10): NAME(NAME) 'return'
[20](01, 11)-(01, 20): NAME(NAME) 'wordcount'
[20](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 08): NAME(NAME) 'pass'
[21](01, 08)-(01, 09): NEWLINE(NEWLINE)
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

