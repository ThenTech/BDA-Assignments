[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'woord'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 11): NAME(NAME) 'str'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 17): NAME(NAME) 'input'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 19): RPAR(OP) ')'
[01](01, 19)-(01, 20): RPAR(OP) ')'
[01](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): NAME(NAME) 'lengthe'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 13): NAME(NAME) 'len'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 19): NAME(NAME) 'woord'
[02](01, 19)-(01, 20): RPAR(OP) ')'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'i'
[03](01, 01)-(01, 02): EQUAL(OP) '='
[03](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[03](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 05): NAME(NAME) 'while'
[04](01, 06)-(01, 07): NAME(NAME) 'i'
[04](01, 07)-(01, 08): LESS(OP) '<'
[04](01, 08)-(01, 15): NAME(NAME) 'lengthe'
[04](01, 15)-(01, 16): COLON(OP) ':'
[04](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 12): NAME(NAME) 'woord'
[05](01, 12)-(01, 13): LSQB(OP) '['
[05](01, 13)-(01, 14): NAME(NAME) 'i'
[05](01, 14)-(01, 15): RSQB(OP) ']'
[05](01, 15)-(01, 17): NOTEQUAL(OP) '!='
[05](01, 17)-(01, 22): NAME(NAME) 'woord'
[05](01, 22)-(01, 23): LSQB(OP) '['
[05](01, 23)-(01, 30): NAME(NAME) 'lengthe'
[05](01, 30)-(01, 31): MINUS(OP) '-'
[05](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[05](01, 32)-(01, 33): MINUS(OP) '-'
[05](01, 33)-(01, 34): NAME(NAME) 'i'
[05](01, 34)-(01, 35): RSQB(OP) ']'
[05](01, 35)-(01, 36): COLON(OP) ':'
[05](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'print'
[06](01, 13)-(01, 14): LPAR(OP) '('
[06](01, 14)-(01, 19): NAME(NAME) 'woord'
[06](01, 19)-(01, 20): COMMA(OP) ','
[06](01, 21)-(01, 41): STRING(STRING) '"is not a palindrom"'
[06](01, 41)-(01, 42): RPAR(OP) ')'
[06](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 13): NAME(NAME) 'break'
[07](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 08): NAME(NAME) 'elif'
[08](01, 09)-(01, 10): NAME(NAME) 'i'
[08](01, 10)-(01, 11): PLUS(OP) '+'
[08](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[08](01, 12)-(01, 14): EQEQUAL(OP) '=='
[08](01, 14)-(01, 21): NAME(NAME) 'lengthe'
[08](01, 21)-(01, 22): COLON(OP) ':'
[08](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 13): NAME(NAME) 'print'
[09](01, 13)-(01, 14): LPAR(OP) '('
[09](01, 14)-(01, 19): NAME(NAME) 'woord'
[09](01, 19)-(01, 20): COMMA(OP) ','
[09](01, 21)-(01, 38): STRING(STRING) '"is a palindrome"'
[09](01, 38)-(01, 39): RPAR(OP) ')'
[09](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 09): NAME(NAME) 'i'
[10](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[10](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[10](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 08): NAME(NAME) 'else'
[11](01, 08)-(01, 09): COLON(OP) ':'
[11](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 09): NAME(NAME) 'i'
[12](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[12](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[12](01, 12)-(01, 13): NEWLINE(NEWLINE)
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

