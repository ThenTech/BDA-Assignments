[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'convert'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 18): NAME(NAME) 'number'
[00](01, 18)-(01, 19): RPAR(OP) ')'
[00](01, 19)-(01, 20): COLON(OP) ':'
[00](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 10): NAME(NAME) 'len'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 17): NAME(NAME) 'number'
[01](01, 17)-(01, 18): RPAR(OP) ')'
[01](01, 19)-(01, 21): EQEQUAL(OP) '=='
[01](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[01](01, 23)-(01, 24): COLON(OP) ':'
[01](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 18): NAME(NAME) 'int'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 25): NAME(NAME) 'number'
[02](01, 25)-(01, 26): RPAR(OP) ')'
[02](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'else'
[03](01, 08)-(01, 09): COLON(OP) ':'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 22): NAME(NAME) 'convert'
[04](01, 22)-(01, 23): LPAR(OP) '('
[04](01, 23)-(01, 29): NAME(NAME) 'number'
[04](01, 29)-(01, 30): LSQB(OP) '['
[04](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[04](01, 31)-(01, 32): COLON(OP) ':'
[04](01, 32)-(01, 35): NAME(NAME) 'len'
[04](01, 35)-(01, 36): LPAR(OP) '('
[04](01, 36)-(01, 42): NAME(NAME) 'number'
[04](01, 42)-(01, 43): RPAR(OP) ')'
[04](01, 44)-(01, 45): MINUS(OP) '-'
[04](01, 46)-(01, 47): NUMBER(NUMBER) '2'
[04](01, 47)-(01, 48): RSQB(OP) ']'
[04](01, 48)-(01, 49): RPAR(OP) ')'
[04](01, 50)-(01, 51): PLUS(OP) '+'
[04](01, 52)-(01, 55): NAME(NAME) 'int'
[04](01, 55)-(01, 56): LPAR(OP) '('
[04](01, 56)-(01, 62): NAME(NAME) 'number'
[04](01, 62)-(01, 63): LSQB(OP) '['
[04](01, 63)-(01, 66): NAME(NAME) 'len'
[04](01, 66)-(01, 67): LPAR(OP) '('
[04](01, 67)-(01, 73): NAME(NAME) 'number'
[04](01, 73)-(01, 74): RPAR(OP) ')'
[04](01, 75)-(01, 76): MINUS(OP) '-'
[04](01, 77)-(01, 78): NUMBER(NUMBER) '1'
[04](01, 78)-(01, 79): RSQB(OP) ']'
[04](01, 79)-(01, 80): RPAR(OP) ')'
[04](01, 80)-(01, 81): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 08)-(01, 09): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

