[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'rijen'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 11): NAME(NAME) 'int'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 17): NAME(NAME) 'input'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 37): STRING(STRING) '"Geef een aantal: "'
[00](01, 37)-(01, 38): RPAR(OP) ')'
[00](01, 38)-(01, 39): RPAR(OP) ')'
[00](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 07): NAME(NAME) 'kolomen'
[01](01, 08)-(01, 09): EQUAL(OP) '='
[01](01, 10)-(01, 13): NAME(NAME) 'int'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 19): NAME(NAME) 'input'
[01](01, 19)-(01, 20): LPAR(OP) '('
[01](01, 20)-(01, 40): STRING(STRING) '"geeef een aantal: "'
[01](01, 40)-(01, 41): RPAR(OP) ')'
[01](01, 41)-(01, 42): RPAR(OP) ')'
[01](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'a'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 09): NAME(NAME) 'rijen'
[02](01, 10)-(01, 11): STAR(OP) '*'
[02](01, 12)-(01, 19): NAME(NAME) 'kolomen'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'b'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 04)-(01, 05): NUMBER(NUMBER) '1'
[03](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 05): NAME(NAME) 'while'
[05](01, 06)-(01, 07): NAME(NAME) 'b'
[05](01, 08)-(01, 10): LESSEQUAL(OP) '<='
[05](01, 11)-(01, 12): NAME(NAME) 'a'
[05](01, 12)-(01, 13): COLON(OP) ':'
[05](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 06): NAME(NAME) 'if'
[06](01, 07)-(01, 08): NAME(NAME) 'b'
[06](01, 08)-(01, 09): PERCENT(OP) '%'
[06](01, 09)-(01, 14): NAME(NAME) 'rijen'
[06](01, 15)-(01, 17): EQEQUAL(OP) '=='
[06](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[06](01, 19)-(01, 20): COLON(OP) ':'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 13): NAME(NAME) 'print'
[07](01, 13)-(01, 14): LPAR(OP) '('
[07](01, 14)-(01, 15): NAME(NAME) 'b'
[07](01, 15)-(01, 16): RPAR(OP) ')'
[07](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 09): NAME(NAME) 'b'
[08](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[08](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 08): NAME(NAME) 'else'
[09](01, 08)-(01, 09): COLON(OP) ':'
[09](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 13): NAME(NAME) 'print'
[10](01, 13)-(01, 14): LPAR(OP) '('
[10](01, 14)-(01, 15): NAME(NAME) 'b'
[10](01, 15)-(01, 16): COMMA(OP) ','
[10](01, 17)-(01, 20): NAME(NAME) 'end'
[10](01, 20)-(01, 21): EQUAL(OP) '='
[10](01, 21)-(01, 24): STRING(STRING) '" "'
[10](01, 24)-(01, 25): RPAR(OP) ')'
[10](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 09): NAME(NAME) 'b'
[11](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[11](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[11](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

