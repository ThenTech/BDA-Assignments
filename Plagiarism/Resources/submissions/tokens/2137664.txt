[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'for'
[00](01, 04)-(01, 13): NAME(NAME) 'nullvalue'
[00](01, 14)-(01, 16): NAME(NAME) 'in'
[00](01, 17)-(01, 18): LSQB(OP) '['
[00](01, 18)-(01, 19): NAME(NAME) 'a'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 22): NAME(NAME) 'b'
[00](01, 22)-(01, 23): COMMA(OP) ','
[00](01, 24)-(01, 25): NAME(NAME) 'c'
[00](01, 25)-(01, 26): COMMA(OP) ','
[00](01, 27)-(01, 28): NAME(NAME) 'd'
[00](01, 28)-(01, 29): COMMA(OP) ','
[00](01, 30)-(01, 31): NAME(NAME) 'e'
[00](01, 31)-(01, 32): COMMA(OP) ','
[00](01, 33)-(01, 34): NAME(NAME) 'f'
[00](01, 34)-(01, 35): COMMA(OP) ','
[00](01, 36)-(01, 37): NAME(NAME) 'g'
[00](01, 37)-(01, 38): COMMA(OP) ','
[00](01, 39)-(01, 40): NAME(NAME) 'h'
[00](01, 40)-(01, 41): COMMA(OP) ','
[00](01, 42)-(01, 43): NAME(NAME) 'i'
[00](01, 43)-(01, 44): COMMA(OP) ','
[00](01, 45)-(01, 46): NAME(NAME) 'j'
[00](01, 46)-(01, 47): COMMA(OP) ','
[00](01, 48)-(01, 49): NAME(NAME) 'k'
[00](01, 49)-(01, 50): COMMA(OP) ','
[00](01, 51)-(01, 52): NAME(NAME) 'l'
[00](01, 52)-(01, 53): COMMA(OP) ','
[00](01, 54)-(01, 55): NAME(NAME) 'm'
[00](01, 55)-(01, 56): COMMA(OP) ','
[00](01, 57)-(01, 58): NAME(NAME) 'n'
[00](01, 58)-(01, 59): COMMA(OP) ','
[00](01, 60)-(01, 61): NAME(NAME) 'o'
[00](01, 61)-(01, 62): COMMA(OP) ','
[00](01, 63)-(01, 64): NAME(NAME) 'p'
[00](01, 64)-(01, 65): COMMA(OP) ','
[00](01, 66)-(01, 67): NAME(NAME) 'q'
[00](01, 67)-(01, 68): COMMA(OP) ','
[00](01, 69)-(01, 70): NAME(NAME) 'r'
[00](01, 70)-(01, 71): COMMA(OP) ','
[00](01, 72)-(01, 73): NAME(NAME) 's'
[00](01, 73)-(01, 74): COMMA(OP) ','
[00](01, 75)-(01, 76): NAME(NAME) 't'
[00](01, 76)-(01, 77): COMMA(OP) ','
[00](01, 78)-(01, 79): NAME(NAME) 'u'
[00](01, 79)-(01, 80): COMMA(OP) ','
[00](01, 81)-(01, 82): NAME(NAME) 'v'
[00](01, 82)-(01, 83): COMMA(OP) ','
[00](01, 84)-(01, 85): NAME(NAME) 'w'
[00](01, 85)-(01, 86): COMMA(OP) ','
[00](01, 87)-(01, 88): NAME(NAME) 'x'
[00](01, 88)-(01, 89): COMMA(OP) ','
[00](01, 90)-(01, 91): NAME(NAME) 'y'
[00](01, 91)-(01, 92): COMMA(OP) ','
[00](01, 93)-(01, 94): NAME(NAME) 'z'
[00](01, 94)-(01, 95): RSQB(OP) ']'
[00](01, 95)-(01, 96): COLON(OP) ':'
[00](01, 96)-(01, 97): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 13): NAME(NAME) 'nullvalue'
[01](01, 14)-(01, 15): EQUAL(OP) '='
[01](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[01](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): NAME(NAME) 'word'
[02](01, 05)-(01, 06): EQUAL(OP) '='
[02](01, 07)-(01, 12): NAME(NAME) 'input'
[02](01, 12)-(01, 13): LPAR(OP) '('
[02](01, 13)-(01, 14): RPAR(OP) ')'
[02](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'while'
[03](01, 06)-(01, 12): NAME(NAME) 'lengte'
[03](01, 13)-(01, 14): LESS(OP) '<'
[03](01, 15)-(01, 18): NAME(NAME) 'len'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 23): NAME(NAME) 'word'
[03](01, 23)-(01, 24): RPAR(OP) ')'
[03](01, 24)-(01, 25): COLON(OP) ':'
[03](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 13): NAME(NAME) 'value'
[04](01, 14)-(01, 16): NAME(NAME) 'in'
[04](01, 17)-(01, 18): LSQB(OP) '['
[04](01, 18)-(01, 19): NAME(NAME) 'a'
[04](01, 19)-(01, 20): COMMA(OP) ','
[04](01, 21)-(01, 22): NAME(NAME) 'b'
[04](01, 22)-(01, 23): COMMA(OP) ','
[04](01, 24)-(01, 25): NAME(NAME) 'c'
[04](01, 25)-(01, 26): COMMA(OP) ','
[04](01, 27)-(01, 28): NAME(NAME) 'd'
[04](01, 28)-(01, 29): COMMA(OP) ','
[04](01, 30)-(01, 31): NAME(NAME) 'e'
[04](01, 31)-(01, 32): COMMA(OP) ','
[04](01, 33)-(01, 34): NAME(NAME) 'f'
[04](01, 34)-(01, 35): COMMA(OP) ','
[04](01, 36)-(01, 37): NAME(NAME) 'g'
[04](01, 37)-(01, 38): COMMA(OP) ','
[04](01, 39)-(01, 40): NAME(NAME) 'h'
[04](01, 40)-(01, 41): COMMA(OP) ','
[04](01, 42)-(01, 43): NAME(NAME) 'i'
[04](01, 43)-(01, 44): COMMA(OP) ','
[04](01, 45)-(01, 46): NAME(NAME) 'j'
[04](01, 46)-(01, 47): COMMA(OP) ','
[04](01, 48)-(01, 49): NAME(NAME) 'k'
[04](01, 49)-(01, 50): COMMA(OP) ','
[04](01, 51)-(01, 52): NAME(NAME) 'l'
[04](01, 52)-(01, 53): COMMA(OP) ','
[04](01, 54)-(01, 55): NAME(NAME) 'm'
[04](01, 55)-(01, 56): COMMA(OP) ','
[04](01, 57)-(01, 58): NAME(NAME) 'n'
[04](01, 58)-(01, 59): COMMA(OP) ','
[04](01, 60)-(01, 61): NAME(NAME) 'o'
[04](01, 61)-(01, 62): COMMA(OP) ','
[04](01, 63)-(01, 64): NAME(NAME) 'p'
[04](01, 64)-(01, 65): COMMA(OP) ','
[04](01, 66)-(01, 67): NAME(NAME) 'q'
[04](01, 67)-(01, 68): COMMA(OP) ','
[04](01, 69)-(01, 70): NAME(NAME) 'r'
[04](01, 70)-(01, 71): COMMA(OP) ','
[04](01, 72)-(01, 73): NAME(NAME) 's'
[04](01, 73)-(01, 74): COMMA(OP) ','
[04](01, 75)-(01, 76): NAME(NAME) 't'
[04](01, 76)-(01, 77): COMMA(OP) ','
[04](01, 78)-(01, 79): NAME(NAME) 'u'
[04](01, 79)-(01, 80): COMMA(OP) ','
[04](01, 81)-(01, 82): NAME(NAME) 'v'
[04](01, 82)-(01, 83): COMMA(OP) ','
[04](01, 84)-(01, 85): NAME(NAME) 'w'
[04](01, 85)-(01, 86): COMMA(OP) ','
[04](01, 87)-(01, 88): NAME(NAME) 'x'
[04](01, 88)-(01, 89): COMMA(OP) ','
[04](01, 90)-(01, 91): NAME(NAME) 'y'
[04](01, 91)-(01, 92): COMMA(OP) ','
[04](01, 93)-(01, 94): NAME(NAME) 'z'
[04](01, 94)-(01, 95): RSQB(OP) ']'
[04](01, 95)-(01, 96): COLON(OP) ':'
[04](01, 96)-(01, 97): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 15): NAME(NAME) 'word'
[05](01, 15)-(01, 16): LSQB(OP) '['
[05](01, 16)-(01, 19): NAME(NAME) 'len'
[05](01, 19)-(01, 20): LPAR(OP) '('
[05](01, 20)-(01, 24): NAME(NAME) 'word'
[05](01, 24)-(01, 25): RPAR(OP) ')'
[05](01, 26)-(01, 27): MINUS(OP) '-'
[05](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[05](01, 30)-(01, 31): MINUS(OP) '-'
[05](01, 32)-(01, 38): NAME(NAME) 'lengte'
[05](01, 38)-(01, 39): RSQB(OP) ']'
[05](01, 40)-(01, 42): EQEQUAL(OP) '=='
[05](01, 43)-(01, 46): NAME(NAME) 'str'
[05](01, 46)-(01, 47): LPAR(OP) '('
[05](01, 47)-(01, 52): NAME(NAME) 'value'
[05](01, 52)-(01, 53): RPAR(OP) ')'
[05](01, 53)-(01, 54): COLON(OP) ':'
[05](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 17): NAME(NAME) 'value'
[06](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[06](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[06](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'lengte'
[07](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[07](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[07](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 03): NAME(NAME) 'for'
[08](01, 04)-(01, 10): NAME(NAME) 'letter'
[08](01, 11)-(01, 13): NAME(NAME) 'in'
[08](01, 15)-(01, 16): LSQB(OP) '['
[08](01, 16)-(01, 17): NAME(NAME) 'a'
[08](01, 17)-(01, 18): COMMA(OP) ','
[08](01, 19)-(01, 20): NAME(NAME) 'b'
[08](01, 20)-(01, 21): COMMA(OP) ','
[08](01, 22)-(01, 23): NAME(NAME) 'c'
[08](01, 23)-(01, 24): COMMA(OP) ','
[08](01, 25)-(01, 26): NAME(NAME) 'd'
[08](01, 26)-(01, 27): COMMA(OP) ','
[08](01, 28)-(01, 29): NAME(NAME) 'e'
[08](01, 29)-(01, 30): COMMA(OP) ','
[08](01, 31)-(01, 32): NAME(NAME) 'f'
[08](01, 32)-(01, 33): COMMA(OP) ','
[08](01, 34)-(01, 35): NAME(NAME) 'g'
[08](01, 35)-(01, 36): COMMA(OP) ','
[08](01, 37)-(01, 38): NAME(NAME) 'h'
[08](01, 38)-(01, 39): COMMA(OP) ','
[08](01, 40)-(01, 41): NAME(NAME) 'i'
[08](01, 41)-(01, 42): COMMA(OP) ','
[08](01, 43)-(01, 44): NAME(NAME) 'j'
[08](01, 44)-(01, 45): COMMA(OP) ','
[08](01, 46)-(01, 47): NAME(NAME) 'k'
[08](01, 47)-(01, 48): COMMA(OP) ','
[08](01, 49)-(01, 50): NAME(NAME) 'l'
[08](01, 50)-(01, 51): COMMA(OP) ','
[08](01, 52)-(01, 53): NAME(NAME) 'm'
[08](01, 53)-(01, 54): COMMA(OP) ','
[08](01, 55)-(01, 56): NAME(NAME) 'n'
[08](01, 56)-(01, 57): COMMA(OP) ','
[08](01, 58)-(01, 59): NAME(NAME) 'o'
[08](01, 59)-(01, 60): COMMA(OP) ','
[08](01, 61)-(01, 62): NAME(NAME) 'p'
[08](01, 62)-(01, 63): COMMA(OP) ','
[08](01, 64)-(01, 65): NAME(NAME) 'q'
[08](01, 65)-(01, 66): COMMA(OP) ','
[08](01, 67)-(01, 68): NAME(NAME) 'r'
[08](01, 68)-(01, 69): COMMA(OP) ','
[08](01, 70)-(01, 71): NAME(NAME) 's'
[08](01, 71)-(01, 72): COMMA(OP) ','
[08](01, 73)-(01, 74): NAME(NAME) 't'
[08](01, 74)-(01, 75): COMMA(OP) ','
[08](01, 76)-(01, 77): NAME(NAME) 'u'
[08](01, 77)-(01, 78): COMMA(OP) ','
[08](01, 79)-(01, 80): NAME(NAME) 'v'
[08](01, 80)-(01, 81): COMMA(OP) ','
[08](01, 82)-(01, 83): NAME(NAME) 'w'
[08](01, 83)-(01, 84): COMMA(OP) ','
[08](01, 85)-(01, 86): NAME(NAME) 'x'
[08](01, 86)-(01, 87): COMMA(OP) ','
[08](01, 88)-(01, 89): NAME(NAME) 'y'
[08](01, 89)-(01, 90): COMMA(OP) ','
[08](01, 91)-(01, 92): NAME(NAME) 'z'
[08](01, 92)-(01, 93): RSQB(OP) ']'
[08](01, 93)-(01, 94): COLON(OP) ':'
[08](01, 94)-(01, 95): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'print'
[09](01, 09)-(01, 10): LPAR(OP) '('
[09](01, 10)-(01, 13): NAME(NAME) 'str'
[09](01, 13)-(01, 14): LPAR(OP) '('
[09](01, 14)-(01, 20): NAME(NAME) 'letter'
[09](01, 20)-(01, 21): RPAR(OP) ')'
[09](01, 22)-(01, 23): PLUS(OP) '+'
[09](01, 24)-(01, 28): STRING(STRING) '": "'
[09](01, 29)-(01, 30): PLUS(OP) '+'
[09](01, 31)-(01, 37): NAME(NAME) 'letter'
[09](01, 37)-(01, 38): RPAR(OP) ')'
[09](01, 38)-(01, 39): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

