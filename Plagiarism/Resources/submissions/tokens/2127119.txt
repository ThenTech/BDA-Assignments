[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'sum'
[00](01, 04)-(01, 05): EQUAL(OP) '='
[00](01, 06)-(01, 07): LPAR(OP) '('
[00](01, 07)-(01, 10): NAME(NAME) 'int'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 16): NAME(NAME) 'input'
[00](01, 16)-(01, 17): LPAR(OP) '('
[00](01, 17)-(01, 31): STRING(STRING) '"Coins of 1? "'
[00](01, 31)-(01, 32): RPAR(OP) ')'
[00](01, 32)-(01, 33): RPAR(OP) ')'
[00](01, 34)-(01, 35): STAR(OP) '*'
[00](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[00](01, 37)-(01, 38): RPAR(OP) ')'
[00](01, 39)-(01, 40): PLUS(OP) '+'
[00](01, 41)-(01, 42): LPAR(OP) '('
[00](01, 42)-(01, 45): NAME(NAME) 'int'
[00](01, 45)-(01, 46): LPAR(OP) '('
[00](01, 46)-(01, 51): NAME(NAME) 'input'
[00](01, 51)-(01, 52): LPAR(OP) '('
[00](01, 52)-(01, 66): STRING(STRING) '"Coins of 2? "'
[00](01, 66)-(01, 67): RPAR(OP) ')'
[00](01, 67)-(01, 68): RPAR(OP) ')'
[00](01, 69)-(01, 70): STAR(OP) '*'
[00](01, 71)-(01, 72): NUMBER(NUMBER) '2'
[00](01, 72)-(01, 73): RPAR(OP) ')'
[00](01, 74)-(01, 75): PLUS(OP) '+'
[00](01, 76)-(01, 77): LPAR(OP) '('
[00](01, 77)-(01, 80): NAME(NAME) 'int'
[00](01, 80)-(01, 81): LPAR(OP) '('
[00](01, 81)-(01, 86): NAME(NAME) 'input'
[00](01, 86)-(01, 87): LPAR(OP) '('
[00](01, 87)-(01, 101): STRING(STRING) '"Coins of 3? "'
[00](01, 101)-(01, 102): RPAR(OP) ')'
[00](01, 102)-(01, 103): RPAR(OP) ')'
[00](01, 104)-(01, 105): STAR(OP) '*'
[00](01, 106)-(01, 107): NUMBER(NUMBER) '5'
[00](01, 107)-(01, 108): RPAR(OP) ')'
[00](01, 109)-(01, 110): PLUS(OP) '+'
[00](01, 111)-(01, 112): LPAR(OP) '('
[00](01, 112)-(01, 115): NAME(NAME) 'int'
[00](01, 115)-(01, 116): LPAR(OP) '('
[00](01, 116)-(01, 121): NAME(NAME) 'input'
[00](01, 121)-(01, 122): LPAR(OP) '('
[00](01, 122)-(01, 136): STRING(STRING) '"Coins of 4? "'
[00](01, 136)-(01, 137): RPAR(OP) ')'
[00](01, 137)-(01, 138): RPAR(OP) ')'
[00](01, 139)-(01, 140): STAR(OP) '*'
[00](01, 141)-(01, 143): NUMBER(NUMBER) '10'
[00](01, 143)-(01, 144): RPAR(OP) ')'
[00](01, 145)-(01, 146): PLUS(OP) '+'
[00](01, 147)-(01, 148): LPAR(OP) '('
[00](01, 148)-(01, 151): NAME(NAME) 'int'
[00](01, 151)-(01, 152): LPAR(OP) '('
[00](01, 152)-(01, 157): NAME(NAME) 'input'
[00](01, 157)-(01, 158): LPAR(OP) '('
[00](01, 158)-(01, 172): STRING(STRING) '"Coins of 5? "'
[00](01, 172)-(01, 173): RPAR(OP) ')'
[00](01, 173)-(01, 174): RPAR(OP) ')'
[00](01, 175)-(01, 176): STAR(OP) '*'
[00](01, 177)-(01, 179): NUMBER(NUMBER) '20'
[00](01, 179)-(01, 180): RPAR(OP) ')'
[00](01, 180)-(01, 181): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'print'
[01](01, 05)-(01, 06): LPAR(OP) '('
[01](01, 06)-(01, 17): STRING(STRING) '"You have "'
[01](01, 17)-(01, 18): COMMA(OP) ','
[01](01, 19)-(01, 22): NAME(NAME) 'str'
[01](01, 22)-(01, 23): LPAR(OP) '('
[01](01, 23)-(01, 26): NAME(NAME) 'sum'
[01](01, 27)-(01, 29): DOUBLESLASH(OP) '//'
[01](01, 30)-(01, 33): NUMBER(NUMBER) '100'
[01](01, 33)-(01, 34): RPAR(OP) ')'
[01](01, 34)-(01, 35): COMMA(OP) ','
[01](01, 36)-(01, 39): STRING(STRING) '"."'
[01](01, 39)-(01, 40): COMMA(OP) ','
[01](01, 41)-(01, 44): NAME(NAME) 'str'
[01](01, 44)-(01, 45): LPAR(OP) '('
[01](01, 45)-(01, 48): NAME(NAME) 'sum'
[01](01, 49)-(01, 50): PERCENT(OP) '%'
[01](01, 51)-(01, 54): NUMBER(NUMBER) '100'
[01](01, 54)-(01, 55): RPAR(OP) ')'
[01](01, 55)-(01, 56): LSQB(OP) '['
[01](01, 56)-(01, 57): NUMBER(NUMBER) '0'
[01](01, 57)-(01, 58): RSQB(OP) ']'
[01](01, 58)-(01, 59): COMMA(OP) ','
[01](01, 60)-(01, 63): NAME(NAME) 'str'
[01](01, 63)-(01, 64): LPAR(OP) '('
[01](01, 64)-(01, 67): NAME(NAME) 'sum'
[01](01, 68)-(01, 69): PERCENT(OP) '%'
[01](01, 70)-(01, 73): NUMBER(NUMBER) '100'
[01](01, 73)-(01, 74): RPAR(OP) ')'
[01](01, 74)-(01, 75): LSQB(OP) '['
[01](01, 75)-(01, 76): NUMBER(NUMBER) '1'
[01](01, 76)-(01, 77): RSQB(OP) ']'
[01](01, 77)-(01, 78): COMMA(OP) ','
[01](01, 79)-(01, 87): STRING(STRING) '" euro!"'
[01](01, 87)-(01, 88): COMMA(OP) ','
[01](01, 89)-(01, 92): NAME(NAME) 'sep'
[01](01, 92)-(01, 93): EQUAL(OP) '='
[01](01, 93)-(01, 95): STRING(STRING) '""'
[01](01, 95)-(01, 96): RPAR(OP) ')'
[01](01, 96)-(01, 97): NEWLINE(NEWLINE)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

