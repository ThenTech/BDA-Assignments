[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 17): NAME(NAME) 'string'
[00](01, 17)-(01, 18): RPAR(OP) ')'
[00](01, 18)-(01, 19): COLON(OP) ':'
[00](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 09): NAME(NAME) 'index'
[01](01, 10)-(01, 11): EQUAL(OP) '='
[01](01, 12)-(01, 13): MINUS(OP) '-'
[01](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[01](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 13): NAME(NAME) 'oplossing'
[02](01, 14)-(01, 15): EQUAL(OP) '='
[02](01, 16)-(01, 18): STRING(STRING) "''"
[02](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 10): NAME(NAME) 'lengte'
[03](01, 11)-(01, 12): EQUAL(OP) '='
[03](01, 13)-(01, 16): NAME(NAME) 'len'
[03](01, 16)-(01, 17): LPAR(OP) '('
[03](01, 17)-(01, 23): NAME(NAME) 'string'
[03](01, 23)-(01, 24): RPAR(OP) ')'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 13): NAME(NAME) 'teken'
[04](01, 14)-(01, 16): NAME(NAME) 'in'
[04](01, 17)-(01, 23): NAME(NAME) 'string'
[04](01, 23)-(01, 24): COLON(OP) ':'
[04](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 13): NAME(NAME) 'index'
[05](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[05](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[05](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'getal'
[06](01, 14)-(01, 15): EQUAL(OP) '='
[06](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[06](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 16): NAME(NAME) 'index'
[07](01, 17)-(01, 19): EQEQUAL(OP) '=='
[07](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[07](01, 21)-(01, 22): COLON(OP) ':'
[07](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 14): NAME(NAME) 'if'
[08](01, 15)-(01, 21): NAME(NAME) 'lengte'
[08](01, 22)-(01, 23): GREATER(OP) '>'
[08](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[08](01, 25)-(01, 26): COLON(OP) ':'
[08](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 18): NAME(NAME) 'if'
[09](01, 19)-(01, 25): NAME(NAME) 'string'
[09](01, 25)-(01, 26): LSQB(OP) '['
[09](01, 26)-(01, 31): NAME(NAME) 'index'
[09](01, 31)-(01, 32): PLUS(OP) '+'
[09](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[09](01, 33)-(01, 34): RSQB(OP) ']'
[09](01, 35)-(01, 37): EQEQUAL(OP) '=='
[09](01, 38)-(01, 41): STRING(STRING) '"X"'
[09](01, 41)-(01, 42): COLON(OP) ':'
[09](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 20): INDENT(INDENT) '                    '
[10](01, 20)-(01, 25): NAME(NAME) 'getal'
[10](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[10](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[10](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 20): NAME(NAME) 'else'
[11](01, 20)-(01, 21): COLON(OP) ':'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 20): INDENT(INDENT) '                    '
[12](01, 20)-(01, 28): NAME(NAME) 'continue'
[12](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 12): NAME(NAME) 'elif'
[13](01, 13)-(01, 18): NAME(NAME) 'index'
[13](01, 19)-(01, 21): EQEQUAL(OP) '=='
[13](01, 22)-(01, 23): LPAR(OP) '('
[13](01, 23)-(01, 29): NAME(NAME) 'lengte'
[13](01, 30)-(01, 31): MINUS(OP) '-'
[13](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[13](01, 33)-(01, 34): RPAR(OP) ')'
[13](01, 34)-(01, 35): COLON(OP) ':'
[13](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 14): NAME(NAME) 'if'
[14](01, 15)-(01, 21): NAME(NAME) 'string'
[14](01, 21)-(01, 22): LSQB(OP) '['
[14](01, 22)-(01, 27): NAME(NAME) 'index'
[14](01, 27)-(01, 28): MINUS(OP) '-'
[14](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[14](01, 29)-(01, 30): RSQB(OP) ']'
[14](01, 31)-(01, 33): EQEQUAL(OP) '=='
[14](01, 34)-(01, 37): STRING(STRING) '"X"'
[14](01, 37)-(01, 38): COLON(OP) ':'
[14](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 21): NAME(NAME) 'getal'
[15](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[15](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[15](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 12): NAME(NAME) 'else'
[16](01, 12)-(01, 13): COLON(OP) ':'
[16](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 14): NAME(NAME) 'if'
[17](01, 15)-(01, 21): NAME(NAME) 'string'
[17](01, 21)-(01, 22): LSQB(OP) '['
[17](01, 22)-(01, 27): NAME(NAME) 'index'
[17](01, 27)-(01, 28): MINUS(OP) '-'
[17](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[17](01, 29)-(01, 30): RSQB(OP) ']'
[17](01, 31)-(01, 33): EQEQUAL(OP) '=='
[17](01, 34)-(01, 37): STRING(STRING) '"X"'
[17](01, 37)-(01, 38): COLON(OP) ':'
[17](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 21): NAME(NAME) 'getal'
[18](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[18](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[18](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 14): NAME(NAME) 'if'
[19](01, 15)-(01, 21): NAME(NAME) 'string'
[19](01, 21)-(01, 22): LSQB(OP) '['
[19](01, 22)-(01, 27): NAME(NAME) 'index'
[19](01, 27)-(01, 28): PLUS(OP) '+'
[19](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[19](01, 29)-(01, 30): RSQB(OP) ']'
[19](01, 31)-(01, 33): EQEQUAL(OP) '=='
[19](01, 34)-(01, 37): STRING(STRING) '"X"'
[19](01, 37)-(01, 38): COLON(OP) ':'
[19](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 16): INDENT(INDENT) '                '
[20](01, 16)-(01, 21): NAME(NAME) 'getal'
[20](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[20](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[20](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 17): NAME(NAME) 'oplossing'
[21](01, 18)-(01, 19): EQUAL(OP) '='
[21](01, 20)-(01, 29): NAME(NAME) 'oplossing'
[21](01, 30)-(01, 31): PLUS(OP) '+'
[21](01, 32)-(01, 35): NAME(NAME) 'str'
[21](01, 35)-(01, 36): LPAR(OP) '('
[21](01, 36)-(01, 41): NAME(NAME) 'getal'
[21](01, 41)-(01, 42): RPAR(OP) ')'
[21](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 10): NAME(NAME) 'return'
[22](01, 11)-(01, 20): NAME(NAME) 'oplossing'
[22](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 03): NAME(NAME) 'def'
[25](01, 04)-(01, 10): NAME(NAME) 'decode'
[25](01, 10)-(01, 11): LPAR(OP) '('
[25](01, 11)-(01, 17): NAME(NAME) 'string'
[25](01, 17)-(01, 18): RPAR(OP) ')'
[25](01, 18)-(01, 19): COLON(OP) ':'
[25](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 13): NAME(NAME) 'oplossing'
[26](01, 14)-(01, 15): EQUAL(OP) '='
[26](01, 16)-(01, 19): STRING(STRING) "' '"
[26](01, 20)-(01, 21): STAR(OP) '*'
[26](01, 22)-(01, 25): NAME(NAME) 'len'
[26](01, 25)-(01, 26): LPAR(OP) '('
[26](01, 26)-(01, 32): NAME(NAME) 'string'
[26](01, 32)-(01, 33): RPAR(OP) ')'
[26](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 14): NAME(NAME) 'oplossing2'
[27](01, 15)-(01, 16): EQUAL(OP) '='
[27](01, 17)-(01, 20): STRING(STRING) "' '"
[27](01, 21)-(01, 22): STAR(OP) '*'
[27](01, 23)-(01, 26): NAME(NAME) 'len'
[27](01, 26)-(01, 27): LPAR(OP) '('
[27](01, 27)-(01, 33): NAME(NAME) 'string'
[27](01, 33)-(01, 34): RPAR(OP) ')'
[27](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 18): NAME(NAME) 'oplossinglijst'
[28](01, 19)-(01, 20): EQUAL(OP) '='
[28](01, 21)-(01, 22): LSQB(OP) '['
[28](01, 22)-(01, 23): RSQB(OP) ']'
[28](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 09): NAME(NAME) 'index'
[29](01, 10)-(01, 11): EQUAL(OP) '='
[29](01, 12)-(01, 13): MINUS(OP) '-'
[29](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[29](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 07): NAME(NAME) 'for'
[30](01, 08)-(01, 13): NAME(NAME) 'teken'
[30](01, 14)-(01, 16): NAME(NAME) 'in'
[30](01, 17)-(01, 23): NAME(NAME) 'string'
[30](01, 23)-(01, 24): COLON(OP) ':'
[30](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 13): NAME(NAME) 'index'
[31](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[31](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[31](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 10): NAME(NAME) 'if'
[32](01, 11)-(01, 16): NAME(NAME) 'index'
[32](01, 17)-(01, 19): EQEQUAL(OP) '=='
[32](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[32](01, 21)-(01, 22): COLON(OP) ':'
[32](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 12): INDENT(INDENT) '            '
[33](01, 12)-(01, 14): NAME(NAME) 'if'
[33](01, 15)-(01, 20): NAME(NAME) 'teken'
[33](01, 21)-(01, 23): EQEQUAL(OP) '=='
[33](01, 24)-(01, 27): STRING(STRING) '"1"'
[33](01, 27)-(01, 28): COLON(OP) ':'
[33](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 16): INDENT(INDENT) '                '
[34](01, 16)-(01, 25): NAME(NAME) 'oplossing'
[34](01, 25)-(01, 26): LSQB(OP) '['
[34](01, 26)-(01, 31): NAME(NAME) 'index'
[34](01, 31)-(01, 32): PLUS(OP) '+'
[34](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[34](01, 33)-(01, 34): RSQB(OP) ']'
[34](01, 35)-(01, 36): EQUAL(OP) '='
[34](01, 37)-(01, 40): STRING(STRING) '"X"'
[34](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 16): INDENT(INDENT) '                '
[35](01, 16)-(01, 26): NAME(NAME) 'oplossing2'
[35](01, 26)-(01, 27): LSQB(OP) '['
[35](01, 27)-(01, 32): NAME(NAME) 'index'
[35](01, 32)-(01, 33): PLUS(OP) '+'
[35](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[35](01, 34)-(01, 35): RSQB(OP) ']'
[35](01, 36)-(01, 37): EQUAL(OP) '='
[35](01, 38)-(01, 41): STRING(STRING) '"X"'
[35](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 08): INDENT(INDENT) '        '
[36](01, 08)-(01, 12): NAME(NAME) 'elif'
[36](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[36](01, 15)-(01, 16): LESS(OP) '<'
[36](01, 17)-(01, 22): NAME(NAME) 'index'
[36](01, 23)-(01, 24): LESS(OP) '<'
[36](01, 25)-(01, 26): LPAR(OP) '('
[36](01, 26)-(01, 29): NAME(NAME) 'len'
[36](01, 29)-(01, 30): LPAR(OP) '('
[36](01, 30)-(01, 36): NAME(NAME) 'string'
[36](01, 36)-(01, 37): RPAR(OP) ')'
[36](01, 37)-(01, 38): MINUS(OP) '-'
[36](01, 38)-(01, 39): NUMBER(NUMBER) '2'
[36](01, 39)-(01, 40): RPAR(OP) ')'
[36](01, 40)-(01, 41): COLON(OP) ':'
[36](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 12): INDENT(INDENT) '            '
[37](01, 12)-(01, 14): NAME(NAME) 'if'
[37](01, 15)-(01, 20): NAME(NAME) 'teken'
[37](01, 21)-(01, 23): EQEQUAL(OP) '=='
[37](01, 24)-(01, 27): STRING(STRING) '"2"'
[37](01, 27)-(01, 28): COLON(OP) ':'
[37](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 16): INDENT(INDENT) '                '
[38](01, 16)-(01, 25): NAME(NAME) 'oplossing'
[38](01, 25)-(01, 26): LSQB(OP) '['
[38](01, 26)-(01, 31): NAME(NAME) 'index'
[38](01, 31)-(01, 32): MINUS(OP) '-'
[38](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[38](01, 33)-(01, 34): RSQB(OP) ']'
[38](01, 35)-(01, 36): EQUAL(OP) '='
[38](01, 37)-(01, 40): STRING(STRING) '"X"'
[38](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 16): INDENT(INDENT) '                '
[39](01, 16)-(01, 26): NAME(NAME) 'oplossing2'
[39](01, 26)-(01, 27): LSQB(OP) '['
[39](01, 27)-(01, 32): NAME(NAME) 'index'
[39](01, 32)-(01, 33): MINUS(OP) '-'
[39](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[39](01, 34)-(01, 35): RSQB(OP) ']'
[39](01, 36)-(01, 37): EQUAL(OP) '='
[39](01, 38)-(01, 41): STRING(STRING) '"X"'
[39](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 16): INDENT(INDENT) '                '
[40](01, 16)-(01, 25): NAME(NAME) 'oplossing'
[40](01, 25)-(01, 26): LSQB(OP) '['
[40](01, 26)-(01, 31): NAME(NAME) 'index'
[40](01, 31)-(01, 32): PLUS(OP) '+'
[40](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[40](01, 33)-(01, 34): RSQB(OP) ']'
[40](01, 35)-(01, 36): EQUAL(OP) '='
[40](01, 37)-(01, 40): STRING(STRING) '"X"'
[40](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 16): INDENT(INDENT) '                '
[41](01, 16)-(01, 26): NAME(NAME) 'oplossing2'
[41](01, 26)-(01, 27): LSQB(OP) '['
[41](01, 27)-(01, 32): NAME(NAME) 'index'
[41](01, 32)-(01, 33): PLUS(OP) '+'
[41](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[41](01, 34)-(01, 35): RSQB(OP) ']'
[41](01, 36)-(01, 37): EQUAL(OP) '='
[41](01, 38)-(01, 41): STRING(STRING) '"X"'
[41](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 12): INDENT(INDENT) '            '
[42](01, 12)-(01, 14): NAME(NAME) 'if'
[42](01, 15)-(01, 20): NAME(NAME) 'teken'
[42](01, 21)-(01, 23): EQEQUAL(OP) '=='
[42](01, 24)-(01, 27): STRING(STRING) '"1"'
[42](01, 27)-(01, 28): COLON(OP) ':'
[42](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 16): INDENT(INDENT) '                '
[43](01, 16)-(01, 18): NAME(NAME) 'if'
[43](01, 19)-(01, 28): NAME(NAME) 'oplossing'
[43](01, 28)-(01, 29): LSQB(OP) '['
[43](01, 29)-(01, 34): NAME(NAME) 'index'
[43](01, 34)-(01, 35): MINUS(OP) '-'
[43](01, 35)-(01, 36): NUMBER(NUMBER) '1'
[43](01, 36)-(01, 37): RSQB(OP) ']'
[43](01, 38)-(01, 40): EQEQUAL(OP) '=='
[43](01, 41)-(01, 44): STRING(STRING) '" "'
[43](01, 45)-(01, 48): NAME(NAME) 'and'
[43](01, 49)-(01, 58): NAME(NAME) 'oplossing'
[43](01, 58)-(01, 59): LSQB(OP) '['
[43](01, 59)-(01, 64): NAME(NAME) 'index'
[43](01, 64)-(01, 65): PLUS(OP) '+'
[43](01, 65)-(01, 66): NUMBER(NUMBER) '1'
[43](01, 66)-(01, 67): RSQB(OP) ']'
[43](01, 68)-(01, 70): EQEQUAL(OP) '=='
[43](01, 71)-(01, 74): STRING(STRING) '" "'
[43](01, 74)-(01, 75): COLON(OP) ':'
[43](01, 75)-(01, 76): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 20): INDENT(INDENT) '                    '
[44](01, 20)-(01, 29): NAME(NAME) 'oplossing'
[44](01, 29)-(01, 30): LSQB(OP) '['
[44](01, 30)-(01, 35): NAME(NAME) 'index'
[44](01, 35)-(01, 36): PLUS(OP) '+'
[44](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[44](01, 37)-(01, 38): RSQB(OP) ']'
[44](01, 39)-(01, 40): EQUAL(OP) '='
[44](01, 41)-(01, 44): STRING(STRING) '"X"'
[44](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 20): INDENT(INDENT) '                    '
[45](01, 20)-(01, 30): NAME(NAME) 'oplossing2'
[45](01, 30)-(01, 31): LSQB(OP) '['
[45](01, 31)-(01, 36): NAME(NAME) 'index'
[45](01, 36)-(01, 37): MINUS(OP) '-'
[45](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[45](01, 38)-(01, 39): RSQB(OP) ']'
[45](01, 40)-(01, 41): EQUAL(OP) '='
[45](01, 42)-(01, 45): STRING(STRING) '"X"'
[45](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 12)-(01, 13): NL(NL) '\n'
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 04)-(01, 05): NL(NL) '\n'
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 04): INDENT(INDENT) '    '
[48](01, 04)-(01, 06): NAME(NAME) 'if'
[48](01, 07)-(01, 13): NAME(NAME) 'string'
[48](01, 14)-(01, 16): EQEQUAL(OP) '=='
[48](01, 17)-(01, 23): NAME(NAME) 'encode'
[48](01, 23)-(01, 24): LPAR(OP) '('
[48](01, 24)-(01, 33): NAME(NAME) 'oplossing'
[48](01, 33)-(01, 34): RPAR(OP) ')'
[48](01, 34)-(01, 35): COLON(OP) ':'
[48](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 08): INDENT(INDENT) '        '
[49](01, 08)-(01, 22): NAME(NAME) 'oplossinglijst'
[49](01, 22)-(01, 23): DOT(OP) '.'
[49](01, 23)-(01, 29): NAME(NAME) 'append'
[49](01, 29)-(01, 30): LPAR(OP) '('
[49](01, 30)-(01, 39): NAME(NAME) 'oplossing'
[49](01, 39)-(01, 40): RPAR(OP) ')'
[49](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 08): INDENT(INDENT) '        '
[50](01, 08)-(01, 22): NAME(NAME) 'oplossinglijst'
[50](01, 22)-(01, 23): DOT(OP) '.'
[50](01, 23)-(01, 29): NAME(NAME) 'append'
[50](01, 29)-(01, 30): LPAR(OP) '('
[50](01, 30)-(01, 40): NAME(NAME) 'oplossing2'
[50](01, 40)-(01, 41): RPAR(OP) ')'
[50](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 08)-(01, 09): NL(NL) '\n'
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 04): INDENT(INDENT) '    '
[52](01, 04)-(01, 10): NAME(NAME) 'return'
[52](01, 11)-(01, 25): NAME(NAME) 'oplossinglijst'
[52](01, 25)-(01, 26): NEWLINE(NEWLINE)
[52](02, 00)-(02, 00): DEDENT(DEDENT)
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

