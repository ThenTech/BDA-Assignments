[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 04): NAME(NAME) 'year'
[00](01, 05)-(01, 06): EQUAL(OP) '='
[00](01, 07)-(01, 12): NAME(NAME) 'input'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 25): STRING(STRING) '"Year = ?\\n"'
[00](01, 25)-(01, 26): RPAR(OP) ')'
[00](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 02): NAME(NAME) 'if'
[02](01, 03)-(01, 06): NAME(NAME) 'int'
[02](01, 06)-(01, 07): LPAR(OP) '('
[02](01, 07)-(01, 11): NAME(NAME) 'year'
[02](01, 11)-(01, 12): RPAR(OP) ')'
[02](01, 13)-(01, 14): PERCENT(OP) '%'
[02](01, 15)-(01, 16): NUMBER(NUMBER) '4'
[02](01, 17)-(01, 19): NOTEQUAL(OP) '!='
[02](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[02](01, 22)-(01, 24): NAME(NAME) 'or'
[02](01, 25)-(01, 26): LPAR(OP) '('
[02](01, 26)-(01, 29): NAME(NAME) 'int'
[02](01, 29)-(01, 30): LPAR(OP) '('
[02](01, 30)-(01, 34): NAME(NAME) 'year'
[02](01, 34)-(01, 35): RPAR(OP) ')'
[02](01, 36)-(01, 37): PERCENT(OP) '%'
[02](01, 38)-(01, 41): NUMBER(NUMBER) '100'
[02](01, 42)-(01, 44): EQEQUAL(OP) '=='
[02](01, 45)-(01, 46): NUMBER(NUMBER) '0'
[02](01, 47)-(01, 50): NAME(NAME) 'and'
[02](01, 51)-(01, 54): NAME(NAME) 'not'
[02](01, 55)-(01, 58): NAME(NAME) 'int'
[02](01, 58)-(01, 59): LPAR(OP) '('
[02](01, 59)-(01, 63): NAME(NAME) 'year'
[02](01, 63)-(01, 64): RPAR(OP) ')'
[02](01, 65)-(01, 66): PERCENT(OP) '%'
[02](01, 67)-(01, 70): NUMBER(NUMBER) '400'
[02](01, 71)-(01, 73): EQEQUAL(OP) '=='
[02](01, 74)-(01, 75): NUMBER(NUMBER) '0'
[02](01, 75)-(01, 76): RPAR(OP) ')'
[02](01, 76)-(01, 77): COLON(OP) ':'
[02](01, 77)-(01, 78): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'print'
[03](01, 09)-(01, 10): LPAR(OP) '('
[03](01, 10)-(01, 14): NAME(NAME) 'year'
[03](01, 15)-(01, 16): PLUS(OP) '+'
[03](01, 17)-(01, 38): STRING(STRING) '" is not a leap year"'
[03](01, 38)-(01, 39): RPAR(OP) ')'
[03](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): NAME(NAME) 'else'
[04](01, 04)-(01, 05): COLON(OP) ':'
[04](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'print'
[05](01, 09)-(01, 10): LPAR(OP) '('
[05](01, 10)-(01, 14): NAME(NAME) 'year'
[05](01, 15)-(01, 16): PLUS(OP) '+'
[05](01, 17)-(01, 34): STRING(STRING) '" is a leap year"'
[05](01, 34)-(01, 35): RPAR(OP) ')'
[05](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

