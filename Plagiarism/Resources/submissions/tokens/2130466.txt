[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 08): NAME(NAME) 'response'
[00](01, 09)-(01, 10): EQUAL(OP) '='
[00](01, 11)-(01, 14): NAME(NAME) 'int'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 20): NAME(NAME) 'input'
[00](01, 20)-(01, 21): LPAR(OP) '('
[00](01, 21)-(01, 22): RPAR(OP) ')'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): NAME(NAME) 'faculty'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 11): NUMBER(NUMBER) '1'
[02](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 10): NAME(NAME) 'facultySum'
[03](01, 11)-(01, 12): EQUAL(OP) '='
[03](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[03](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'for'
[05](01, 04)-(01, 10): NAME(NAME) 'valueX'
[05](01, 11)-(01, 13): NAME(NAME) 'in'
[05](01, 14)-(01, 19): NAME(NAME) 'range'
[05](01, 19)-(01, 20): LPAR(OP) '('
[05](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[05](01, 21)-(01, 22): COMMA(OP) ','
[05](01, 23)-(01, 31): NAME(NAME) 'response'
[05](01, 32)-(01, 33): PLUS(OP) '+'
[05](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[05](01, 35)-(01, 36): RPAR(OP) ')'
[05](01, 36)-(01, 37): COLON(OP) ':'
[05](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 14): NAME(NAME) 'valueY'
[06](01, 15)-(01, 17): NAME(NAME) 'in'
[06](01, 18)-(01, 23): NAME(NAME) 'range'
[06](01, 23)-(01, 24): LPAR(OP) '('
[06](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[06](01, 25)-(01, 26): COMMA(OP) ','
[06](01, 27)-(01, 33): NAME(NAME) 'valueX'
[06](01, 34)-(01, 35): PLUS(OP) '+'
[06](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[06](01, 37)-(01, 38): RPAR(OP) ')'
[06](01, 38)-(01, 39): COLON(OP) ':'
[06](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 15): NAME(NAME) 'faculty'
[07](01, 16)-(01, 18): STAREQUAL(OP) '*='
[07](01, 19)-(01, 25): NAME(NAME) 'valueY'
[07](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 14): NAME(NAME) 'facultySum'
[08](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[08](01, 18)-(01, 25): NAME(NAME) 'faculty'
[08](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 11): NAME(NAME) 'faculty'
[09](01, 12)-(01, 13): EQUAL(OP) '='
[09](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[09](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 04)-(01, 05): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 05): NAME(NAME) 'print'
[11](01, 05)-(01, 06): LPAR(OP) '('
[11](01, 06)-(01, 09): NAME(NAME) 'int'
[11](01, 09)-(01, 10): LPAR(OP) '('
[11](01, 10)-(01, 20): NAME(NAME) 'facultySum'
[11](01, 20)-(01, 21): RPAR(OP) ')'
[11](01, 21)-(01, 22): RPAR(OP) ')'
[11](01, 22)-(01, 23): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

