[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'import'
[00](01, 07)-(01, 13): NAME(NAME) 'string'
[00](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[03](01, 26)-(01, 27): LPAR(OP) '('
[03](01, 27)-(01, 35): NAME(NAME) 'sentence'
[03](01, 35)-(01, 36): RPAR(OP) ')'
[03](01, 36)-(01, 37): COLON(OP) ':'
[03](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 14): NAME(NAME) 'new_string'
[04](01, 15)-(01, 16): EQUAL(OP) '='
[04](01, 17)-(01, 19): STRING(STRING) '""'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 18): NAME(NAME) 'reverse_string'
[05](01, 19)-(01, 20): EQUAL(OP) '='
[05](01, 21)-(01, 23): STRING(STRING) '""'
[05](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 12): NAME(NAME) 'char'
[06](01, 13)-(01, 15): NAME(NAME) 'in'
[06](01, 16)-(01, 24): NAME(NAME) 'sentence'
[06](01, 24)-(01, 25): COLON(OP) ':'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 15): NAME(NAME) 'char'
[07](01, 16)-(01, 19): NAME(NAME) 'not'
[07](01, 20)-(01, 22): NAME(NAME) 'in'
[07](01, 23)-(01, 29): NAME(NAME) 'string'
[07](01, 29)-(01, 30): DOT(OP) '.'
[07](01, 30)-(01, 41): NAME(NAME) 'punctuation'
[07](01, 42)-(01, 45): NAME(NAME) 'and'
[07](01, 46)-(01, 50): NAME(NAME) 'char'
[07](01, 51)-(01, 54): NAME(NAME) 'not'
[07](01, 55)-(01, 57): NAME(NAME) 'in'
[07](01, 58)-(01, 69): STRING(STRING) '"""“”’“”"""'
[07](01, 69)-(01, 70): COLON(OP) ':'
[07](01, 70)-(01, 71): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 22): NAME(NAME) 'new_string'
[08](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[08](01, 26)-(01, 30): NAME(NAME) 'char'
[08](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 14): NAME(NAME) 'new_string'
[09](01, 15)-(01, 16): EQUAL(OP) '='
[09](01, 17)-(01, 27): NAME(NAME) 'new_string'
[09](01, 27)-(01, 28): DOT(OP) '.'
[09](01, 28)-(01, 33): NAME(NAME) 'lower'
[09](01, 33)-(01, 34): LPAR(OP) '('
[09](01, 34)-(01, 35): RPAR(OP) ')'
[09](01, 35)-(01, 36): DOT(OP) '.'
[09](01, 36)-(01, 43): NAME(NAME) 'replace'
[09](01, 43)-(01, 44): LPAR(OP) '('
[09](01, 44)-(01, 47): STRING(STRING) '" "'
[09](01, 47)-(01, 48): COMMA(OP) ','
[09](01, 49)-(01, 51): STRING(STRING) '""'
[09](01, 51)-(01, 52): RPAR(OP) ')'
[09](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 07): NAME(NAME) 'for'
[10](01, 08)-(01, 09): NAME(NAME) 'i'
[10](01, 10)-(01, 12): NAME(NAME) 'in'
[10](01, 13)-(01, 18): NAME(NAME) 'range'
[10](01, 18)-(01, 19): LPAR(OP) '('
[10](01, 19)-(01, 22): NAME(NAME) 'len'
[10](01, 22)-(01, 23): LPAR(OP) '('
[10](01, 23)-(01, 33): NAME(NAME) 'new_string'
[10](01, 33)-(01, 34): RPAR(OP) ')'
[10](01, 34)-(01, 35): RPAR(OP) ')'
[10](01, 35)-(01, 36): COLON(OP) ':'
[10](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 22): NAME(NAME) 'reverse_string'
[11](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[11](01, 26)-(01, 36): NAME(NAME) 'new_string'
[11](01, 36)-(01, 37): LSQB(OP) '['
[11](01, 37)-(01, 40): NAME(NAME) 'len'
[11](01, 40)-(01, 41): LPAR(OP) '('
[11](01, 41)-(01, 51): NAME(NAME) 'new_string'
[11](01, 51)-(01, 52): RPAR(OP) ')'
[11](01, 53)-(01, 54): MINUS(OP) '-'
[11](01, 55)-(01, 56): NUMBER(NUMBER) '1'
[11](01, 57)-(01, 58): MINUS(OP) '-'
[11](01, 59)-(01, 60): NAME(NAME) 'i'
[11](01, 60)-(01, 61): RSQB(OP) ']'
[11](01, 61)-(01, 62): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 06): NAME(NAME) 'if'
[12](01, 07)-(01, 17): NAME(NAME) 'new_string'
[12](01, 18)-(01, 20): EQEQUAL(OP) '=='
[12](01, 21)-(01, 35): NAME(NAME) 'reverse_string'
[12](01, 35)-(01, 36): COLON(OP) ':'
[12](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 14): NAME(NAME) 'return'
[13](01, 15)-(01, 19): NAME(NAME) 'True'
[13](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 10): NAME(NAME) 'return'
[14](01, 11)-(01, 16): NAME(NAME) 'False'
[14](01, 16)-(01, 17): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

