[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 17): NAME(NAME) 'string'
[00](01, 17)-(01, 18): COMMA(OP) ','
[00](01, 19)-(01, 20): NAME(NAME) 'n'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): COLON(OP) ':'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 14): NAME(NAME) 'new_string'
[01](01, 15)-(01, 16): EQUAL(OP) '='
[01](01, 17)-(01, 19): STRING(STRING) '""'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 12): NAME(NAME) 'division'
[02](01, 13)-(01, 14): EQUAL(OP) '='
[02](01, 15)-(01, 16): LPAR(OP) '('
[02](01, 16)-(01, 17): NAME(NAME) 'n'
[02](01, 18)-(01, 20): DOUBLESLASH(OP) '//'
[02](01, 21)-(01, 23): NUMBER(NUMBER) '27'
[02](01, 23)-(01, 24): RPAR(OP) ')'
[02](01, 25)-(01, 26): STAR(OP) '*'
[02](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 05): NAME(NAME) 'i'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 08): NAME(NAME) 'n'
[04](01, 09)-(01, 10): LESS(OP) '<'
[04](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[04](01, 12)-(01, 13): COLON(OP) ':'
[04](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 11): EQUAL(OP) '='
[05](01, 12)-(01, 13): MINUS(OP) '-'
[05](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[05](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 14): NAME(NAME) 'letter'
[06](01, 15)-(01, 17): NAME(NAME) 'in'
[06](01, 18)-(01, 24): NAME(NAME) 'string'
[06](01, 24)-(01, 25): COLON(OP) ':'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 14): NAME(NAME) 'number'
[07](01, 15)-(01, 16): EQUAL(OP) '='
[07](01, 17)-(01, 20): NAME(NAME) 'ord'
[07](01, 20)-(01, 21): LPAR(OP) '('
[07](01, 21)-(01, 27): NAME(NAME) 'letter'
[07](01, 27)-(01, 28): RPAR(OP) ')'
[07](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 18): NAME(NAME) 'new_number'
[08](01, 19)-(01, 20): EQUAL(OP) '='
[08](01, 21)-(01, 27): NAME(NAME) 'number'
[08](01, 28)-(01, 29): PLUS(OP) '+'
[08](01, 30)-(01, 31): NAME(NAME) 'n'
[08](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 17): NAME(NAME) 'number'
[09](01, 18)-(01, 19): LESS(OP) '<'
[09](01, 20)-(01, 22): NUMBER(NUMBER) '97'
[09](01, 23)-(01, 25): NAME(NAME) 'or'
[09](01, 26)-(01, 32): NAME(NAME) 'number'
[09](01, 33)-(01, 34): GREATER(OP) '>'
[09](01, 35)-(01, 38): NUMBER(NUMBER) '123'
[09](01, 38)-(01, 39): COLON(OP) ':'
[09](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 22): NAME(NAME) 'new_string'
[10](01, 23)-(01, 24): EQUAL(OP) '='
[10](01, 25)-(01, 35): NAME(NAME) 'new_string'
[10](01, 36)-(01, 37): PLUS(OP) '+'
[10](01, 38)-(01, 44): NAME(NAME) 'letter'
[10](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 20): NAME(NAME) 'continue'
[11](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 10): NAME(NAME) 'if'
[12](01, 11)-(01, 21): NAME(NAME) 'new_number'
[12](01, 22)-(01, 23): GREATER(OP) '>'
[12](01, 24)-(01, 27): NUMBER(NUMBER) '122'
[12](01, 27)-(01, 28): COLON(OP) ':'
[12](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 22): NAME(NAME) 'new_number'
[13](01, 23)-(01, 24): EQUAL(OP) '='
[13](01, 25)-(01, 35): NAME(NAME) 'new_number'
[13](01, 36)-(01, 37): MINUS(OP) '-'
[13](01, 38)-(01, 39): LPAR(OP) '('
[13](01, 39)-(01, 41): NUMBER(NUMBER) '26'
[13](01, 42)-(01, 43): STAR(OP) '*'
[13](01, 44)-(01, 45): NAME(NAME) 'i'
[13](01, 45)-(01, 46): RPAR(OP) ')'
[13](01, 47)-(01, 48): MINUS(OP) '-'
[13](01, 49)-(01, 57): NAME(NAME) 'division'
[13](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 22): NAME(NAME) 'new_letter'
[14](01, 23)-(01, 24): EQUAL(OP) '='
[14](01, 25)-(01, 28): NAME(NAME) 'chr'
[14](01, 28)-(01, 29): LPAR(OP) '('
[14](01, 29)-(01, 39): NAME(NAME) 'new_number'
[14](01, 39)-(01, 40): RPAR(OP) ')'
[14](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 22): NAME(NAME) 'new_string'
[15](01, 23)-(01, 24): EQUAL(OP) '='
[15](01, 25)-(01, 35): NAME(NAME) 'new_string'
[15](01, 36)-(01, 37): PLUS(OP) '+'
[15](01, 38)-(01, 48): NAME(NAME) 'new_letter'
[15](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 12): NAME(NAME) 'else'
[16](01, 12)-(01, 13): COLON(OP) ':'
[16](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 22): NAME(NAME) 'new_letter'
[17](01, 23)-(01, 24): EQUAL(OP) '='
[17](01, 25)-(01, 28): NAME(NAME) 'chr'
[17](01, 28)-(01, 29): LPAR(OP) '('
[17](01, 29)-(01, 39): NAME(NAME) 'new_number'
[17](01, 39)-(01, 40): RPAR(OP) ')'
[17](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 22): NAME(NAME) 'new_string'
[18](01, 23)-(01, 24): EQUAL(OP) '='
[18](01, 25)-(01, 35): NAME(NAME) 'new_string'
[18](01, 36)-(01, 37): PLUS(OP) '+'
[18](01, 38)-(01, 48): NAME(NAME) 'new_letter'
[18](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 10): NAME(NAME) 'return'
[19](01, 11)-(01, 21): NAME(NAME) 'new_string'
[19](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 03): NAME(NAME) 'def'
[21](01, 04)-(01, 10): NAME(NAME) 'decode'
[21](01, 10)-(01, 11): LPAR(OP) '('
[21](01, 11)-(01, 17): NAME(NAME) 'string'
[21](01, 17)-(01, 18): COMMA(OP) ','
[21](01, 19)-(01, 20): NAME(NAME) 'n'
[21](01, 20)-(01, 21): RPAR(OP) ')'
[21](01, 21)-(01, 22): COLON(OP) ':'
[21](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 14): NAME(NAME) 'old_string'
[22](01, 15)-(01, 16): EQUAL(OP) '='
[22](01, 17)-(01, 19): STRING(STRING) '""'
[22](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 07): NAME(NAME) 'for'
[23](01, 08)-(01, 14): NAME(NAME) 'letter'
[23](01, 15)-(01, 17): NAME(NAME) 'in'
[23](01, 18)-(01, 24): NAME(NAME) 'string'
[23](01, 24)-(01, 25): COLON(OP) ':'
[23](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 14): NAME(NAME) 'number'
[24](01, 15)-(01, 16): EQUAL(OP) '='
[24](01, 17)-(01, 20): NAME(NAME) 'ord'
[24](01, 20)-(01, 21): LPAR(OP) '('
[24](01, 21)-(01, 27): NAME(NAME) 'letter'
[24](01, 27)-(01, 28): RPAR(OP) ')'
[24](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 08): INDENT(INDENT) '        '
[25](01, 08)-(01, 18): NAME(NAME) 'old_number'
[25](01, 19)-(01, 20): EQUAL(OP) '='
[25](01, 21)-(01, 27): NAME(NAME) 'number'
[25](01, 28)-(01, 29): MINUS(OP) '-'
[25](01, 30)-(01, 31): NAME(NAME) 'n'
[25](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 08): INDENT(INDENT) '        '
[26](01, 08)-(01, 10): NAME(NAME) 'if'
[26](01, 11)-(01, 21): NAME(NAME) 'old_number'
[26](01, 22)-(01, 23): LESS(OP) '<'
[26](01, 24)-(01, 26): NUMBER(NUMBER) '97'
[26](01, 26)-(01, 27): COLON(OP) ':'
[26](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 12): INDENT(INDENT) '            '
[27](01, 12)-(01, 22): NAME(NAME) 'old_number'
[27](01, 23)-(01, 24): EQUAL(OP) '='
[27](01, 25)-(01, 35): NAME(NAME) 'old_number'
[27](01, 36)-(01, 37): PLUS(OP) '+'
[27](01, 38)-(01, 40): NUMBER(NUMBER) '26'
[27](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 22): NAME(NAME) 'old_letter'
[28](01, 23)-(01, 24): EQUAL(OP) '='
[28](01, 25)-(01, 28): NAME(NAME) 'chr'
[28](01, 28)-(01, 29): LPAR(OP) '('
[28](01, 29)-(01, 39): NAME(NAME) 'old_number'
[28](01, 39)-(01, 40): RPAR(OP) ')'
[28](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 12): INDENT(INDENT) '            '
[29](01, 12)-(01, 22): NAME(NAME) 'old_string'
[29](01, 23)-(01, 24): EQUAL(OP) '='
[29](01, 25)-(01, 35): NAME(NAME) 'old_string'
[29](01, 36)-(01, 37): PLUS(OP) '+'
[29](01, 38)-(01, 48): NAME(NAME) 'old_letter'
[29](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 12): NAME(NAME) 'else'
[30](01, 12)-(01, 13): COLON(OP) ':'
[30](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 22): NAME(NAME) 'old_letter'
[31](01, 23)-(01, 24): EQUAL(OP) '='
[31](01, 25)-(01, 28): NAME(NAME) 'chr'
[31](01, 28)-(01, 29): LPAR(OP) '('
[31](01, 29)-(01, 39): NAME(NAME) 'old_number'
[31](01, 39)-(01, 40): RPAR(OP) ')'
[31](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 22): NAME(NAME) 'old_string'
[32](01, 23)-(01, 24): EQUAL(OP) '='
[32](01, 25)-(01, 35): NAME(NAME) 'old_string'
[32](01, 36)-(01, 37): PLUS(OP) '+'
[32](01, 38)-(01, 48): NAME(NAME) 'old_letter'
[32](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 10): NAME(NAME) 'return'
[33](01, 11)-(01, 21): NAME(NAME) 'old_string'
[33](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 01): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 01): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

