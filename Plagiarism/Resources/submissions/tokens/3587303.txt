[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): COMMA(OP) ','
[00](01, 14)-(01, 15): NAME(NAME) 'n'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 14): NAME(NAME) 'tempString'
[01](01, 15)-(01, 16): EQUAL(OP) '='
[01](01, 17)-(01, 19): STRING(STRING) '""'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 14): NAME(NAME) 's'
[02](01, 14)-(01, 15): COLON(OP) ':'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 14): STRING(STRING) "'a'"
[03](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[03](01, 18)-(01, 19): NAME(NAME) 'i'
[03](01, 19)-(01, 20): DOT(OP) '.'
[03](01, 20)-(01, 25): NAME(NAME) 'lower'
[03](01, 25)-(01, 26): LPAR(OP) '('
[03](01, 26)-(01, 27): RPAR(OP) ')'
[03](01, 28)-(01, 30): LESSEQUAL(OP) '<='
[03](01, 31)-(01, 34): STRING(STRING) "'z'"
[03](01, 34)-(01, 35): COLON(OP) ':'
[03](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 22): NAME(NAME) 'tempString'
[04](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[04](01, 26)-(01, 29): NAME(NAME) 'chr'
[04](01, 29)-(01, 30): LPAR(OP) '('
[04](01, 30)-(01, 33): NAME(NAME) 'ord'
[04](01, 33)-(01, 34): LPAR(OP) '('
[04](01, 34)-(01, 35): NAME(NAME) 'i'
[04](01, 35)-(01, 36): RPAR(OP) ')'
[04](01, 37)-(01, 38): PLUS(OP) '+'
[04](01, 39)-(01, 40): LPAR(OP) '('
[04](01, 40)-(01, 41): NAME(NAME) 'n'
[04](01, 42)-(01, 43): PERCENT(OP) '%'
[04](01, 44)-(01, 46): NUMBER(NUMBER) '26'
[04](01, 46)-(01, 47): RPAR(OP) ')'
[04](01, 47)-(01, 48): RPAR(OP) ')'
[04](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 12): NAME(NAME) 'else'
[05](01, 12)-(01, 13): COLON(OP) ':'
[05](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 22): NAME(NAME) 'tempString'
[06](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[06](01, 26)-(01, 27): NAME(NAME) 'i'
[06](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'return'
[07](01, 11)-(01, 21): NAME(NAME) 'tempString'
[07](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 03): NAME(NAME) 'def'
[10](01, 04)-(01, 10): NAME(NAME) 'decode'
[10](01, 10)-(01, 11): LPAR(OP) '('
[10](01, 11)-(01, 12): NAME(NAME) 's'
[10](01, 12)-(01, 13): COMMA(OP) ','
[10](01, 14)-(01, 15): NAME(NAME) 'n'
[10](01, 15)-(01, 16): RPAR(OP) ')'
[10](01, 16)-(01, 17): COLON(OP) ':'
[10](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 14): NAME(NAME) 'tempString'
[11](01, 15)-(01, 16): EQUAL(OP) '='
[11](01, 17)-(01, 19): STRING(STRING) '""'
[11](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 07): NAME(NAME) 'for'
[12](01, 08)-(01, 09): NAME(NAME) 'i'
[12](01, 10)-(01, 12): NAME(NAME) 'in'
[12](01, 13)-(01, 14): NAME(NAME) 's'
[12](01, 14)-(01, 15): COLON(OP) ':'
[12](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 18): NAME(NAME) 'tempString'
[13](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[13](01, 22)-(01, 25): NAME(NAME) 'chr'
[13](01, 25)-(01, 26): LPAR(OP) '('
[13](01, 26)-(01, 27): LPAR(OP) '('
[13](01, 27)-(01, 30): NAME(NAME) 'ord'
[13](01, 30)-(01, 31): LPAR(OP) '('
[13](01, 31)-(01, 32): NAME(NAME) 'i'
[13](01, 32)-(01, 33): RPAR(OP) ')'
[13](01, 34)-(01, 35): MINUS(OP) '-'
[13](01, 36)-(01, 37): NAME(NAME) 'n'
[13](01, 37)-(01, 38): RPAR(OP) ')'
[13](01, 39)-(01, 40): PERCENT(OP) '%'
[13](01, 41)-(01, 43): NUMBER(NUMBER) '26'
[13](01, 43)-(01, 44): RPAR(OP) ')'
[13](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 10): NAME(NAME) 'return'
[14](01, 11)-(01, 21): NAME(NAME) 'tempString'
[14](01, 21)-(01, 22): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

