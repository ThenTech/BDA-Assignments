[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 07): NAME(NAME) 'alfabet'
[00](01, 08)-(01, 09): EQUAL(OP) '='
[00](01, 10)-(01, 65): STRING(STRING) '"azertyuiopqsdfghjklmw<xcvbnAZERTYUIOPMLKJHGFDSQWXCVBN"'
[00](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'cijfer'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 21): STRING(STRING) '"1234567890"'
[01](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 15): NAME(NAME) 'count_words'
[03](01, 15)-(01, 16): LPAR(OP) '('
[03](01, 16)-(01, 22): NAME(NAME) 'string'
[03](01, 22)-(01, 23): RPAR(OP) ')'
[03](01, 23)-(01, 24): COLON(OP) ':'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 13): NAME(NAME) 'string'
[04](01, 14)-(01, 16): EQEQUAL(OP) '=='
[04](01, 17)-(01, 20): STRING(STRING) '" "'
[04](01, 21)-(01, 23): NAME(NAME) 'or'
[04](01, 24)-(01, 30): NAME(NAME) 'string'
[04](01, 31)-(01, 33): EQEQUAL(OP) '=='
[04](01, 34)-(01, 36): STRING(STRING) '""'
[04](01, 37)-(01, 39): NAME(NAME) 'or'
[04](01, 40)-(01, 46): NAME(NAME) 'string'
[04](01, 47)-(01, 49): NAME(NAME) 'in'
[04](01, 50)-(01, 56): NAME(NAME) 'cijfer'
[04](01, 56)-(01, 57): COLON(OP) ':'
[04](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 14): NAME(NAME) 'return'
[05](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[05](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 11): NAME(NAME) 'positie'
[06](01, 12)-(01, 13): EQUAL(OP) '='
[06](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[06](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 18): NAME(NAME) 'aantal_woorden'
[07](01, 19)-(01, 20): EQUAL(OP) '='
[07](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[07](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 11): NAME(NAME) 'pol_oud'
[08](01, 12)-(01, 13): EQUAL(OP) '='
[08](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[08](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 13): NAME(NAME) 'pol_nieuw'
[09](01, 14)-(01, 15): EQUAL(OP) '='
[09](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[09](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 09): NAME(NAME) 'while'
[10](01, 10)-(01, 17): NAME(NAME) 'positie'
[10](01, 18)-(01, 19): LESS(OP) '<'
[10](01, 20)-(01, 23): NAME(NAME) 'len'
[10](01, 23)-(01, 24): LPAR(OP) '('
[10](01, 24)-(01, 30): NAME(NAME) 'string'
[10](01, 30)-(01, 31): RPAR(OP) ')'
[10](01, 31)-(01, 32): COLON(OP) ':'
[10](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 17): NAME(NAME) 'string'
[11](01, 17)-(01, 18): LSQB(OP) '['
[11](01, 18)-(01, 25): NAME(NAME) 'positie'
[11](01, 25)-(01, 26): RSQB(OP) ']'
[11](01, 27)-(01, 30): NAME(NAME) 'not'
[11](01, 31)-(01, 33): NAME(NAME) 'in'
[11](01, 34)-(01, 41): NAME(NAME) 'alfabet'
[11](01, 42)-(01, 44): NAME(NAME) 'or'
[11](01, 45)-(01, 51): NAME(NAME) 'string'
[11](01, 52)-(01, 54): EQEQUAL(OP) '=='
[11](01, 55)-(01, 58): STRING(STRING) '" "'
[11](01, 58)-(01, 59): COLON(OP) ':'
[11](01, 59)-(01, 60): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 11): INDENT(INDENT) '           '
[12](01, 11)-(01, 20): NAME(NAME) 'pol_nieuw'
[12](01, 21)-(01, 22): EQUAL(OP) '='
[12](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[12](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 12): NAME(NAME) 'elif'
[13](01, 13)-(01, 19): NAME(NAME) 'string'
[13](01, 19)-(01, 20): LSQB(OP) '['
[13](01, 20)-(01, 27): NAME(NAME) 'positie'
[13](01, 27)-(01, 28): RSQB(OP) ']'
[13](01, 29)-(01, 31): NAME(NAME) 'in'
[13](01, 32)-(01, 39): NAME(NAME) 'alfabet'
[13](01, 39)-(01, 40): COLON(OP) ':'
[13](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 21): NAME(NAME) 'pol_nieuw'
[14](01, 22)-(01, 23): EQUAL(OP) '='
[14](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[14](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 10): NAME(NAME) 'if'
[16](01, 11)-(01, 18): NAME(NAME) 'pol_oud'
[16](01, 19)-(01, 21): NOTEQUAL(OP) '!='
[16](01, 22)-(01, 31): NAME(NAME) 'pol_nieuw'
[16](01, 31)-(01, 32): COLON(OP) ':'
[16](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 26): NAME(NAME) 'aantal_woorden'
[17](01, 27)-(01, 28): EQUAL(OP) '='
[17](01, 29)-(01, 43): NAME(NAME) 'aantal_woorden'
[17](01, 44)-(01, 45): PLUS(OP) '+'
[17](01, 46)-(01, 47): NUMBER(NUMBER) '1'
[17](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 15): NAME(NAME) 'positie'
[18](01, 16)-(01, 17): EQUAL(OP) '='
[18](01, 18)-(01, 25): NAME(NAME) 'positie'
[18](01, 26)-(01, 27): PLUS(OP) '+'
[18](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[18](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 15): NAME(NAME) 'pol_oud'
[19](01, 16)-(01, 17): EQUAL(OP) '='
[19](01, 18)-(01, 27): NAME(NAME) 'pol_nieuw'
[19](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 10): NAME(NAME) 'return'
[20](01, 11)-(01, 25): NAME(NAME) 'aantal_woorden'
[20](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 11): NAME(NAME) 'count_words'
[22](01, 11)-(01, 12): LPAR(OP) '('
[22](01, 12)-(01, 32): STRING(STRING) '"five 6 seven,eight"'
[22](01, 32)-(01, 33): RPAR(OP) ')'
[22](01, 33)-(01, 34): NEWLINE(NEWLINE)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

