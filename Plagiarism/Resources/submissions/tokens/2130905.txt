[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'coins'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 11): NAME(NAME) 'int'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 17): NAME(NAME) 'input'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 31): STRING(STRING) '"Coins = ?\\n"'
[00](01, 31)-(01, 32): RPAR(OP) ')'
[00](01, 32)-(01, 33): RPAR(OP) ')'
[00](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): NAME(NAME) 'tosubstr'
[02](01, 09)-(01, 10): EQUAL(OP) '='
[02](01, 11)-(01, 14): NAME(NAME) 'int'
[02](01, 14)-(01, 15): LPAR(OP) '('
[02](01, 15)-(01, 16): LPAR(OP) '('
[02](01, 16)-(01, 21): NAME(NAME) 'coins'
[02](01, 22)-(01, 23): MINUS(OP) '-'
[02](01, 24)-(01, 25): LPAR(OP) '('
[02](01, 25)-(01, 30): NAME(NAME) 'coins'
[02](01, 31)-(01, 32): PERCENT(OP) '%'
[02](01, 33)-(01, 36): NUMBER(NUMBER) '200'
[02](01, 36)-(01, 37): RPAR(OP) ')'
[02](01, 37)-(01, 38): RPAR(OP) ')'
[02](01, 38)-(01, 39): SLASH(OP) '/'
[02](01, 39)-(01, 42): NUMBER(NUMBER) '200'
[02](01, 42)-(01, 43): RPAR(OP) ')'
[02](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'print'
[03](01, 05)-(01, 06): LPAR(OP) '('
[03](01, 06)-(01, 17): STRING(STRING) '"2-euros: "'
[03](01, 18)-(01, 19): PLUS(OP) '+'
[03](01, 20)-(01, 23): NAME(NAME) 'str'
[03](01, 23)-(01, 24): LPAR(OP) '('
[03](01, 24)-(01, 32): NAME(NAME) 'tosubstr'
[03](01, 32)-(01, 33): RPAR(OP) ')'
[03](01, 33)-(01, 34): RPAR(OP) ')'
[03](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 05): NAME(NAME) 'coins'
[04](01, 06)-(01, 08): MINEQUAL(OP) '-='
[04](01, 09)-(01, 17): NAME(NAME) 'tosubstr'
[04](01, 17)-(01, 18): STAR(OP) '*'
[04](01, 18)-(01, 21): NUMBER(NUMBER) '200'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): NAME(NAME) 'tosubstr'
[06](01, 09)-(01, 10): EQUAL(OP) '='
[06](01, 11)-(01, 14): NAME(NAME) 'int'
[06](01, 14)-(01, 15): LPAR(OP) '('
[06](01, 15)-(01, 16): LPAR(OP) '('
[06](01, 16)-(01, 21): NAME(NAME) 'coins'
[06](01, 22)-(01, 23): MINUS(OP) '-'
[06](01, 24)-(01, 25): LPAR(OP) '('
[06](01, 25)-(01, 30): NAME(NAME) 'coins'
[06](01, 31)-(01, 32): PERCENT(OP) '%'
[06](01, 33)-(01, 36): NUMBER(NUMBER) '100'
[06](01, 36)-(01, 37): RPAR(OP) ')'
[06](01, 37)-(01, 38): RPAR(OP) ')'
[06](01, 38)-(01, 39): SLASH(OP) '/'
[06](01, 39)-(01, 42): NUMBER(NUMBER) '100'
[06](01, 42)-(01, 43): RPAR(OP) ')'
[06](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 05): NAME(NAME) 'print'
[07](01, 05)-(01, 06): LPAR(OP) '('
[07](01, 06)-(01, 17): STRING(STRING) '"1-euros: "'
[07](01, 18)-(01, 19): PLUS(OP) '+'
[07](01, 20)-(01, 23): NAME(NAME) 'str'
[07](01, 23)-(01, 24): LPAR(OP) '('
[07](01, 24)-(01, 32): NAME(NAME) 'tosubstr'
[07](01, 32)-(01, 33): RPAR(OP) ')'
[07](01, 33)-(01, 34): RPAR(OP) ')'
[07](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 05): NAME(NAME) 'coins'
[08](01, 06)-(01, 08): MINEQUAL(OP) '-='
[08](01, 09)-(01, 17): NAME(NAME) 'tosubstr'
[08](01, 17)-(01, 18): STAR(OP) '*'
[08](01, 18)-(01, 21): NUMBER(NUMBER) '100'
[08](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): NAME(NAME) 'tosubstr'
[10](01, 09)-(01, 10): EQUAL(OP) '='
[10](01, 11)-(01, 14): NAME(NAME) 'int'
[10](01, 14)-(01, 15): LPAR(OP) '('
[10](01, 15)-(01, 16): LPAR(OP) '('
[10](01, 16)-(01, 21): NAME(NAME) 'coins'
[10](01, 22)-(01, 23): MINUS(OP) '-'
[10](01, 24)-(01, 25): LPAR(OP) '('
[10](01, 25)-(01, 30): NAME(NAME) 'coins'
[10](01, 31)-(01, 32): PERCENT(OP) '%'
[10](01, 33)-(01, 35): NUMBER(NUMBER) '50'
[10](01, 35)-(01, 36): RPAR(OP) ')'
[10](01, 36)-(01, 37): RPAR(OP) ')'
[10](01, 37)-(01, 38): SLASH(OP) '/'
[10](01, 38)-(01, 40): NUMBER(NUMBER) '50'
[10](01, 40)-(01, 41): RPAR(OP) ')'
[10](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 05): NAME(NAME) 'print'
[11](01, 05)-(01, 06): LPAR(OP) '('
[11](01, 06)-(01, 19): STRING(STRING) '"50c-euros: "'
[11](01, 20)-(01, 21): PLUS(OP) '+'
[11](01, 22)-(01, 25): NAME(NAME) 'str'
[11](01, 25)-(01, 26): LPAR(OP) '('
[11](01, 26)-(01, 34): NAME(NAME) 'tosubstr'
[11](01, 34)-(01, 35): RPAR(OP) ')'
[11](01, 35)-(01, 36): RPAR(OP) ')'
[11](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 05): NAME(NAME) 'coins'
[12](01, 06)-(01, 08): MINEQUAL(OP) '-='
[12](01, 09)-(01, 17): NAME(NAME) 'tosubstr'
[12](01, 17)-(01, 18): STAR(OP) '*'
[12](01, 18)-(01, 20): NUMBER(NUMBER) '50'
[12](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): NAME(NAME) 'tosubstr'
[14](01, 09)-(01, 10): EQUAL(OP) '='
[14](01, 11)-(01, 14): NAME(NAME) 'int'
[14](01, 14)-(01, 15): LPAR(OP) '('
[14](01, 15)-(01, 16): LPAR(OP) '('
[14](01, 16)-(01, 21): NAME(NAME) 'coins'
[14](01, 22)-(01, 23): MINUS(OP) '-'
[14](01, 24)-(01, 25): LPAR(OP) '('
[14](01, 25)-(01, 30): NAME(NAME) 'coins'
[14](01, 31)-(01, 32): PERCENT(OP) '%'
[14](01, 33)-(01, 35): NUMBER(NUMBER) '20'
[14](01, 35)-(01, 36): RPAR(OP) ')'
[14](01, 36)-(01, 37): RPAR(OP) ')'
[14](01, 37)-(01, 38): SLASH(OP) '/'
[14](01, 38)-(01, 40): NUMBER(NUMBER) '20'
[14](01, 40)-(01, 41): RPAR(OP) ')'
[14](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 05): NAME(NAME) 'print'
[15](01, 05)-(01, 06): LPAR(OP) '('
[15](01, 06)-(01, 19): STRING(STRING) '"20c-euros: "'
[15](01, 20)-(01, 21): PLUS(OP) '+'
[15](01, 22)-(01, 25): NAME(NAME) 'str'
[15](01, 25)-(01, 26): LPAR(OP) '('
[15](01, 26)-(01, 34): NAME(NAME) 'tosubstr'
[15](01, 34)-(01, 35): RPAR(OP) ')'
[15](01, 35)-(01, 36): RPAR(OP) ')'
[15](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 05): NAME(NAME) 'coins'
[16](01, 06)-(01, 08): MINEQUAL(OP) '-='
[16](01, 09)-(01, 17): NAME(NAME) 'tosubstr'
[16](01, 17)-(01, 18): STAR(OP) '*'
[16](01, 18)-(01, 20): NUMBER(NUMBER) '20'
[16](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): NAME(NAME) 'tosubstr'
[18](01, 09)-(01, 10): EQUAL(OP) '='
[18](01, 11)-(01, 14): NAME(NAME) 'int'
[18](01, 14)-(01, 15): LPAR(OP) '('
[18](01, 15)-(01, 16): LPAR(OP) '('
[18](01, 16)-(01, 21): NAME(NAME) 'coins'
[18](01, 22)-(01, 23): MINUS(OP) '-'
[18](01, 24)-(01, 25): LPAR(OP) '('
[18](01, 25)-(01, 30): NAME(NAME) 'coins'
[18](01, 31)-(01, 32): PERCENT(OP) '%'
[18](01, 33)-(01, 35): NUMBER(NUMBER) '10'
[18](01, 35)-(01, 36): RPAR(OP) ')'
[18](01, 36)-(01, 37): RPAR(OP) ')'
[18](01, 37)-(01, 38): SLASH(OP) '/'
[18](01, 38)-(01, 40): NUMBER(NUMBER) '10'
[18](01, 40)-(01, 41): RPAR(OP) ')'
[18](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 05): NAME(NAME) 'print'
[19](01, 05)-(01, 06): LPAR(OP) '('
[19](01, 06)-(01, 19): STRING(STRING) '"10c-euros: "'
[19](01, 20)-(01, 21): PLUS(OP) '+'
[19](01, 22)-(01, 25): NAME(NAME) 'str'
[19](01, 25)-(01, 26): LPAR(OP) '('
[19](01, 26)-(01, 34): NAME(NAME) 'tosubstr'
[19](01, 34)-(01, 35): RPAR(OP) ')'
[19](01, 35)-(01, 36): RPAR(OP) ')'
[19](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 05): NAME(NAME) 'coins'
[20](01, 06)-(01, 08): MINEQUAL(OP) '-='
[20](01, 09)-(01, 17): NAME(NAME) 'tosubstr'
[20](01, 17)-(01, 18): STAR(OP) '*'
[20](01, 18)-(01, 20): NUMBER(NUMBER) '10'
[20](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): NAME(NAME) 'tosubstr'
[22](01, 09)-(01, 10): EQUAL(OP) '='
[22](01, 11)-(01, 14): NAME(NAME) 'int'
[22](01, 14)-(01, 15): LPAR(OP) '('
[22](01, 15)-(01, 16): LPAR(OP) '('
[22](01, 16)-(01, 21): NAME(NAME) 'coins'
[22](01, 22)-(01, 23): MINUS(OP) '-'
[22](01, 24)-(01, 25): LPAR(OP) '('
[22](01, 25)-(01, 30): NAME(NAME) 'coins'
[22](01, 31)-(01, 32): PERCENT(OP) '%'
[22](01, 33)-(01, 34): NUMBER(NUMBER) '5'
[22](01, 34)-(01, 35): RPAR(OP) ')'
[22](01, 35)-(01, 36): RPAR(OP) ')'
[22](01, 36)-(01, 37): SLASH(OP) '/'
[22](01, 37)-(01, 38): NUMBER(NUMBER) '5'
[22](01, 38)-(01, 39): RPAR(OP) ')'
[22](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 05): NAME(NAME) 'print'
[23](01, 05)-(01, 06): LPAR(OP) '('
[23](01, 06)-(01, 18): STRING(STRING) '"5c-euros: "'
[23](01, 19)-(01, 20): PLUS(OP) '+'
[23](01, 21)-(01, 24): NAME(NAME) 'str'
[23](01, 24)-(01, 25): LPAR(OP) '('
[23](01, 25)-(01, 33): NAME(NAME) 'tosubstr'
[23](01, 33)-(01, 34): RPAR(OP) ')'
[23](01, 34)-(01, 35): RPAR(OP) ')'
[23](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 05): NAME(NAME) 'coins'
[24](01, 06)-(01, 08): MINEQUAL(OP) '-='
[24](01, 09)-(01, 17): NAME(NAME) 'tosubstr'
[24](01, 17)-(01, 18): STAR(OP) '*'
[24](01, 18)-(01, 19): NUMBER(NUMBER) '5'
[24](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 08): NAME(NAME) 'tosubstr'
[26](01, 09)-(01, 10): EQUAL(OP) '='
[26](01, 11)-(01, 14): NAME(NAME) 'int'
[26](01, 14)-(01, 15): LPAR(OP) '('
[26](01, 15)-(01, 16): LPAR(OP) '('
[26](01, 16)-(01, 21): NAME(NAME) 'coins'
[26](01, 22)-(01, 23): MINUS(OP) '-'
[26](01, 24)-(01, 25): LPAR(OP) '('
[26](01, 25)-(01, 30): NAME(NAME) 'coins'
[26](01, 31)-(01, 32): PERCENT(OP) '%'
[26](01, 33)-(01, 34): NUMBER(NUMBER) '2'
[26](01, 34)-(01, 35): RPAR(OP) ')'
[26](01, 35)-(01, 36): RPAR(OP) ')'
[26](01, 36)-(01, 37): SLASH(OP) '/'
[26](01, 37)-(01, 38): NUMBER(NUMBER) '2'
[26](01, 38)-(01, 39): RPAR(OP) ')'
[26](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 05): NAME(NAME) 'print'
[27](01, 05)-(01, 06): LPAR(OP) '('
[27](01, 06)-(01, 18): STRING(STRING) '"2c-euros: "'
[27](01, 19)-(01, 20): PLUS(OP) '+'
[27](01, 21)-(01, 24): NAME(NAME) 'str'
[27](01, 24)-(01, 25): LPAR(OP) '('
[27](01, 25)-(01, 33): NAME(NAME) 'tosubstr'
[27](01, 33)-(01, 34): RPAR(OP) ')'
[27](01, 34)-(01, 35): RPAR(OP) ')'
[27](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 05): NAME(NAME) 'coins'
[28](01, 06)-(01, 08): MINEQUAL(OP) '-='
[28](01, 09)-(01, 17): NAME(NAME) 'tosubstr'
[28](01, 17)-(01, 18): STAR(OP) '*'
[28](01, 18)-(01, 19): NUMBER(NUMBER) '2'
[28](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): NAME(NAME) 'tosubstr'
[30](01, 09)-(01, 10): EQUAL(OP) '='
[30](01, 11)-(01, 14): NAME(NAME) 'int'
[30](01, 14)-(01, 15): LPAR(OP) '('
[30](01, 15)-(01, 16): LPAR(OP) '('
[30](01, 16)-(01, 21): NAME(NAME) 'coins'
[30](01, 22)-(01, 23): MINUS(OP) '-'
[30](01, 24)-(01, 25): LPAR(OP) '('
[30](01, 25)-(01, 30): NAME(NAME) 'coins'
[30](01, 31)-(01, 32): PERCENT(OP) '%'
[30](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[30](01, 34)-(01, 35): RPAR(OP) ')'
[30](01, 35)-(01, 36): RPAR(OP) ')'
[30](01, 36)-(01, 37): SLASH(OP) '/'
[30](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[30](01, 38)-(01, 39): RPAR(OP) ')'
[30](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 05): NAME(NAME) 'print'
[31](01, 05)-(01, 06): LPAR(OP) '('
[31](01, 06)-(01, 18): STRING(STRING) '"1c-euros: "'
[31](01, 19)-(01, 20): PLUS(OP) '+'
[31](01, 21)-(01, 24): NAME(NAME) 'str'
[31](01, 24)-(01, 25): LPAR(OP) '('
[31](01, 25)-(01, 33): NAME(NAME) 'tosubstr'
[31](01, 33)-(01, 34): RPAR(OP) ')'
[31](01, 34)-(01, 35): RPAR(OP) ')'
[31](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 05): NAME(NAME) 'coins'
[32](01, 06)-(01, 08): MINEQUAL(OP) '-='
[32](01, 09)-(01, 17): NAME(NAME) 'tosubstr'
[32](01, 17)-(01, 18): STAR(OP) '*'
[32](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[32](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

