[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 04): NAME(NAME) 'word'
[00](01, 05)-(01, 06): EQUAL(OP) '='
[00](01, 07)-(01, 12): NAME(NAME) 'input'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 20): STRING(STRING) "'Word?'"
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 08): NAME(NAME) 'alphabet'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 39): STRING(STRING) "'abcdefghijklmnopqrstuvwxyz'"
[01](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'i'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 07): NAME(NAME) 'len'
[02](01, 07)-(01, 08): LPAR(OP) '('
[02](01, 08)-(01, 12): NAME(NAME) 'word'
[02](01, 12)-(01, 13): RPAR(OP) ')'
[02](01, 14)-(01, 15): MINUS(OP) '-'
[02](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[02](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'q'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[03](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'for'
[05](01, 04)-(01, 05): NAME(NAME) 'k'
[05](01, 06)-(01, 08): NAME(NAME) 'in'
[05](01, 09)-(01, 14): NAME(NAME) 'range'
[05](01, 14)-(01, 15): LPAR(OP) '('
[05](01, 15)-(01, 18): NAME(NAME) 'len'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 27): NAME(NAME) 'alphabet'
[05](01, 27)-(01, 28): RPAR(OP) ')'
[05](01, 28)-(01, 29): RPAR(OP) ')'
[05](01, 29)-(01, 30): COLON(OP) ':'
[05](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'while'
[06](01, 10)-(01, 11): NAME(NAME) 'i'
[06](01, 12)-(01, 14): GREATEREQUAL(OP) '>='
[06](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[06](01, 16)-(01, 17): COLON(OP) ':'
[06](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 15): NAME(NAME) 'word'
[07](01, 15)-(01, 16): LSQB(OP) '['
[07](01, 16)-(01, 17): NAME(NAME) 'i'
[07](01, 17)-(01, 18): RSQB(OP) ']'
[07](01, 19)-(01, 21): EQEQUAL(OP) '=='
[07](01, 22)-(01, 30): NAME(NAME) 'alphabet'
[07](01, 30)-(01, 31): LSQB(OP) '['
[07](01, 31)-(01, 32): NAME(NAME) 'k'
[07](01, 32)-(01, 33): RSQB(OP) ']'
[07](01, 33)-(01, 34): COLON(OP) ':'
[07](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 13): NAME(NAME) 'q'
[08](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[08](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[08](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 09): NAME(NAME) 'i'
[09](01, 10)-(01, 12): MINEQUAL(OP) '-='
[09](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[09](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 09): NAME(NAME) 'print'
[10](01, 09)-(01, 10): LPAR(OP) '('
[10](01, 10)-(01, 18): NAME(NAME) 'alphabet'
[10](01, 18)-(01, 19): LSQB(OP) '['
[10](01, 19)-(01, 20): NAME(NAME) 'k'
[10](01, 20)-(01, 21): RSQB(OP) ']'
[10](01, 21)-(01, 22): COMMA(OP) ','
[10](01, 23)-(01, 26): STRING(STRING) "':'"
[10](01, 26)-(01, 27): COMMA(OP) ','
[10](01, 28)-(01, 31): STRING(STRING) "' '"
[10](01, 31)-(01, 32): COMMA(OP) ','
[10](01, 33)-(01, 34): NAME(NAME) 'q'
[10](01, 34)-(01, 35): COMMA(OP) ','
[10](01, 36)-(01, 39): NAME(NAME) 'sep'
[10](01, 39)-(01, 40): EQUAL(OP) '='
[10](01, 40)-(01, 42): STRING(STRING) "''"
[10](01, 42)-(01, 43): RPAR(OP) ')'
[10](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 05): NAME(NAME) 'i'
[11](01, 06)-(01, 07): EQUAL(OP) '='
[11](01, 08)-(01, 11): NAME(NAME) 'len'
[11](01, 11)-(01, 12): LPAR(OP) '('
[11](01, 12)-(01, 16): NAME(NAME) 'word'
[11](01, 16)-(01, 17): RPAR(OP) ')'
[11](01, 18)-(01, 19): MINUS(OP) '-'
[11](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 05): NAME(NAME) 'q'
[12](01, 06)-(01, 07): EQUAL(OP) '='
[12](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[12](01, 09)-(01, 10): NEWLINE(NEWLINE)
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

