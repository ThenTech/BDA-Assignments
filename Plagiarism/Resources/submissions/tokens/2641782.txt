[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'unique_elements'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 22): NAME(NAME) 'mx'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 16): NAME(NAME) 'element_list'
[01](01, 17)-(01, 18): EQUAL(OP) '='
[01](01, 18)-(01, 19): LSQB(OP) '['
[01](01, 19)-(01, 20): RSQB(OP) ']'
[01](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 22): NAME(NAME) 'len'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 25): NAME(NAME) 'mx'
[02](01, 25)-(01, 26): RPAR(OP) ')'
[02](01, 26)-(01, 27): RPAR(OP) ')'
[02](01, 27)-(01, 28): COLON(OP) ':'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 11): NAME(NAME) 'for'
[03](01, 12)-(01, 13): NAME(NAME) 'j'
[03](01, 14)-(01, 16): NAME(NAME) 'in'
[03](01, 17)-(01, 22): NAME(NAME) 'range'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 26): NAME(NAME) 'len'
[03](01, 26)-(01, 27): LPAR(OP) '('
[03](01, 27)-(01, 29): NAME(NAME) 'mx'
[03](01, 29)-(01, 30): RPAR(OP) ')'
[03](01, 30)-(01, 31): RPAR(OP) ')'
[03](01, 31)-(01, 32): COLON(OP) ':'
[03](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 24): NAME(NAME) 'element_list'
[04](01, 24)-(01, 25): DOT(OP) '.'
[04](01, 25)-(01, 31): NAME(NAME) 'append'
[04](01, 31)-(01, 32): LPAR(OP) '('
[04](01, 32)-(01, 34): NAME(NAME) 'mx'
[04](01, 34)-(01, 35): LSQB(OP) '['
[04](01, 35)-(01, 36): NAME(NAME) 'i'
[04](01, 36)-(01, 37): RSQB(OP) ']'
[04](01, 37)-(01, 38): LSQB(OP) '['
[04](01, 38)-(01, 39): NAME(NAME) 'j'
[04](01, 39)-(01, 40): RSQB(OP) ']'
[04](01, 40)-(01, 41): RPAR(OP) ')'
[04](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 12): NAME(NAME) 'in'
[05](01, 13)-(01, 18): NAME(NAME) 'range'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 22): NAME(NAME) 'len'
[05](01, 22)-(01, 23): LPAR(OP) '('
[05](01, 23)-(01, 35): NAME(NAME) 'element_list'
[05](01, 35)-(01, 36): RPAR(OP) ')'
[05](01, 36)-(01, 37): RPAR(OP) ')'
[05](01, 37)-(01, 38): COLON(OP) ':'
[05](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'count'
[06](01, 14)-(01, 15): EQUAL(OP) '='
[06](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[06](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 11): NAME(NAME) 'for'
[07](01, 12)-(01, 13): NAME(NAME) 'j'
[07](01, 14)-(01, 16): NAME(NAME) 'in'
[07](01, 17)-(01, 22): NAME(NAME) 'range'
[07](01, 22)-(01, 23): LPAR(OP) '('
[07](01, 23)-(01, 26): NAME(NAME) 'len'
[07](01, 26)-(01, 27): LPAR(OP) '('
[07](01, 27)-(01, 39): NAME(NAME) 'element_list'
[07](01, 39)-(01, 40): RPAR(OP) ')'
[07](01, 40)-(01, 41): RPAR(OP) ')'
[07](01, 41)-(01, 42): COLON(OP) ':'
[07](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 14): NAME(NAME) 'if'
[08](01, 15)-(01, 27): NAME(NAME) 'element_list'
[08](01, 27)-(01, 28): LSQB(OP) '['
[08](01, 28)-(01, 29): NAME(NAME) 'i'
[08](01, 29)-(01, 30): RSQB(OP) ']'
[08](01, 31)-(01, 33): EQEQUAL(OP) '=='
[08](01, 34)-(01, 46): NAME(NAME) 'element_list'
[08](01, 46)-(01, 47): LSQB(OP) '['
[08](01, 47)-(01, 48): NAME(NAME) 'j'
[08](01, 48)-(01, 49): RSQB(OP) ']'
[08](01, 49)-(01, 50): COLON(OP) ':'
[08](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 21): NAME(NAME) 'count'
[09](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[09](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 14): NAME(NAME) 'if'
[10](01, 15)-(01, 20): NAME(NAME) 'count'
[10](01, 21)-(01, 23): EQEQUAL(OP) '=='
[10](01, 24)-(01, 25): NUMBER(NUMBER) '2'
[10](01, 25)-(01, 26): COLON(OP) ':'
[10](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 22): NAME(NAME) 'return'
[11](01, 23)-(01, 28): NAME(NAME) 'False'
[11](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 10): NAME(NAME) 'return'
[12](01, 11)-(01, 15): NAME(NAME) 'True'
[12](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 03): NAME(NAME) 'def'
[14](01, 04)-(01, 13): NAME(NAME) 'check_sum'
[14](01, 13)-(01, 14): LPAR(OP) '('
[14](01, 14)-(01, 16): NAME(NAME) 'mx'
[14](01, 16)-(01, 17): RPAR(OP) ')'
[14](01, 17)-(01, 18): COLON(OP) ':'
[14](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'som'
[15](01, 08)-(01, 09): EQUAL(OP) '='
[15](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[15](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 07): NAME(NAME) 'for'
[16](01, 08)-(01, 09): NAME(NAME) 'j'
[16](01, 10)-(01, 12): NAME(NAME) 'in'
[16](01, 13)-(01, 18): NAME(NAME) 'range'
[16](01, 18)-(01, 19): LPAR(OP) '('
[16](01, 19)-(01, 22): NAME(NAME) 'len'
[16](01, 22)-(01, 23): LPAR(OP) '('
[16](01, 23)-(01, 25): NAME(NAME) 'mx'
[16](01, 25)-(01, 26): RPAR(OP) ')'
[16](01, 26)-(01, 27): RPAR(OP) ')'
[16](01, 27)-(01, 28): COLON(OP) ':'
[16](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 11): NAME(NAME) 'som'
[17](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[17](01, 15)-(01, 17): NAME(NAME) 'mx'
[17](01, 17)-(01, 18): LSQB(OP) '['
[17](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[17](01, 19)-(01, 20): RSQB(OP) ']'
[17](01, 20)-(01, 21): LSQB(OP) '['
[17](01, 21)-(01, 22): NAME(NAME) 'j'
[17](01, 22)-(01, 23): RSQB(OP) ']'
[17](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 10): NAME(NAME) 'return'
[18](01, 11)-(01, 14): NAME(NAME) 'som'
[18](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 08)-(01, 09): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 03): NAME(NAME) 'def'
[21](01, 04)-(01, 10): NAME(NAME) 'sommen'
[21](01, 10)-(01, 11): LPAR(OP) '('
[21](01, 11)-(01, 13): NAME(NAME) 'mx'
[21](01, 13)-(01, 14): RPAR(OP) ')'
[21](01, 14)-(01, 15): COLON(OP) ':'
[21](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 12): NAME(NAME) 'checksum'
[22](01, 13)-(01, 14): EQUAL(OP) '='
[22](01, 15)-(01, 24): NAME(NAME) 'check_sum'
[22](01, 24)-(01, 25): LPAR(OP) '('
[22](01, 25)-(01, 27): NAME(NAME) 'mx'
[22](01, 27)-(01, 28): RPAR(OP) ')'
[22](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 04)-(01, 05): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 07): NAME(NAME) 'for'
[24](01, 08)-(01, 09): NAME(NAME) 'i'
[24](01, 10)-(01, 12): NAME(NAME) 'in'
[24](01, 13)-(01, 18): NAME(NAME) 'range'
[24](01, 18)-(01, 19): LPAR(OP) '('
[24](01, 19)-(01, 22): NAME(NAME) 'len'
[24](01, 22)-(01, 23): LPAR(OP) '('
[24](01, 23)-(01, 25): NAME(NAME) 'mx'
[24](01, 25)-(01, 26): RPAR(OP) ')'
[24](01, 26)-(01, 27): RPAR(OP) ')'
[24](01, 27)-(01, 28): COLON(OP) ':'
[24](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 08): INDENT(INDENT) '        '
[25](01, 08)-(01, 12): NAME(NAME) 'som1'
[25](01, 13)-(01, 14): EQUAL(OP) '='
[25](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[25](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 08): INDENT(INDENT) '        '
[26](01, 08)-(01, 12): NAME(NAME) 'som2'
[26](01, 13)-(01, 14): EQUAL(OP) '='
[26](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[26](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 11): NAME(NAME) 'for'
[27](01, 12)-(01, 13): NAME(NAME) 'j'
[27](01, 14)-(01, 16): NAME(NAME) 'in'
[27](01, 17)-(01, 22): NAME(NAME) 'range'
[27](01, 22)-(01, 23): LPAR(OP) '('
[27](01, 23)-(01, 26): NAME(NAME) 'len'
[27](01, 26)-(01, 27): LPAR(OP) '('
[27](01, 27)-(01, 29): NAME(NAME) 'mx'
[27](01, 29)-(01, 30): RPAR(OP) ')'
[27](01, 30)-(01, 31): RPAR(OP) ')'
[27](01, 31)-(01, 32): COLON(OP) ':'
[27](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 16): NAME(NAME) 'som1'
[28](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[28](01, 20)-(01, 22): NAME(NAME) 'mx'
[28](01, 22)-(01, 23): LSQB(OP) '['
[28](01, 23)-(01, 24): NAME(NAME) 'i'
[28](01, 24)-(01, 25): RSQB(OP) ']'
[28](01, 25)-(01, 26): LSQB(OP) '['
[28](01, 26)-(01, 27): NAME(NAME) 'j'
[28](01, 27)-(01, 28): RSQB(OP) ']'
[28](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 12): INDENT(INDENT) '            '
[29](01, 12)-(01, 16): NAME(NAME) 'som2'
[29](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[29](01, 20)-(01, 22): NAME(NAME) 'mx'
[29](01, 22)-(01, 23): LSQB(OP) '['
[29](01, 23)-(01, 24): NAME(NAME) 'j'
[29](01, 24)-(01, 25): RSQB(OP) ']'
[29](01, 25)-(01, 26): LSQB(OP) '['
[29](01, 26)-(01, 27): NAME(NAME) 'i'
[29](01, 27)-(01, 28): RSQB(OP) ']'
[29](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 10): NAME(NAME) 'if'
[30](01, 11)-(01, 15): NAME(NAME) 'som1'
[30](01, 16)-(01, 18): NOTEQUAL(OP) '!='
[30](01, 19)-(01, 27): NAME(NAME) 'checksum'
[30](01, 28)-(01, 30): NAME(NAME) 'or'
[30](01, 31)-(01, 35): NAME(NAME) 'som2'
[30](01, 36)-(01, 38): NOTEQUAL(OP) '!='
[30](01, 39)-(01, 47): NAME(NAME) 'checksum'
[30](01, 47)-(01, 48): COLON(OP) ':'
[30](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 18): NAME(NAME) 'return'
[31](01, 19)-(01, 24): NAME(NAME) 'False'
[31](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 12)-(01, 13): NL(NL) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 08): NAME(NAME) 'som3'
[33](01, 09)-(01, 10): EQUAL(OP) '='
[33](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[33](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 08): NAME(NAME) 'som4'
[34](01, 09)-(01, 10): EQUAL(OP) '='
[34](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[34](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 04): INDENT(INDENT) '    '
[35](01, 04)-(01, 07): NAME(NAME) 'for'
[35](01, 08)-(01, 09): NAME(NAME) 'i'
[35](01, 10)-(01, 12): NAME(NAME) 'in'
[35](01, 13)-(01, 18): NAME(NAME) 'range'
[35](01, 18)-(01, 19): LPAR(OP) '('
[35](01, 19)-(01, 22): NAME(NAME) 'len'
[35](01, 22)-(01, 23): LPAR(OP) '('
[35](01, 23)-(01, 25): NAME(NAME) 'mx'
[35](01, 25)-(01, 26): RPAR(OP) ')'
[35](01, 26)-(01, 27): RPAR(OP) ')'
[35](01, 27)-(01, 28): COLON(OP) ':'
[35](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 08): INDENT(INDENT) '        '
[36](01, 08)-(01, 12): NAME(NAME) 'som3'
[36](01, 13)-(01, 15): PLUSEQUAL(OP) '+='
[36](01, 16)-(01, 18): NAME(NAME) 'mx'
[36](01, 18)-(01, 19): LSQB(OP) '['
[36](01, 19)-(01, 20): NAME(NAME) 'i'
[36](01, 20)-(01, 21): RSQB(OP) ']'
[36](01, 21)-(01, 22): LSQB(OP) '['
[36](01, 22)-(01, 23): NAME(NAME) 'i'
[36](01, 23)-(01, 24): RSQB(OP) ']'
[36](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 08): INDENT(INDENT) '        '
[37](01, 08)-(01, 12): NAME(NAME) 'som4'
[37](01, 13)-(01, 15): PLUSEQUAL(OP) '+='
[37](01, 16)-(01, 18): NAME(NAME) 'mx'
[37](01, 18)-(01, 19): LSQB(OP) '['
[37](01, 19)-(01, 22): NAME(NAME) 'len'
[37](01, 22)-(01, 23): LPAR(OP) '('
[37](01, 23)-(01, 25): NAME(NAME) 'mx'
[37](01, 25)-(01, 26): RPAR(OP) ')'
[37](01, 27)-(01, 28): MINUS(OP) '-'
[37](01, 29)-(01, 30): NAME(NAME) 'i'
[37](01, 31)-(01, 32): MINUS(OP) '-'
[37](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[37](01, 34)-(01, 35): RSQB(OP) ']'
[37](01, 35)-(01, 36): LSQB(OP) '['
[37](01, 36)-(01, 39): NAME(NAME) 'len'
[37](01, 39)-(01, 40): LPAR(OP) '('
[37](01, 40)-(01, 42): NAME(NAME) 'mx'
[37](01, 42)-(01, 43): RPAR(OP) ')'
[37](01, 44)-(01, 45): MINUS(OP) '-'
[37](01, 45)-(01, 46): NAME(NAME) 'i'
[37](01, 47)-(01, 48): MINUS(OP) '-'
[37](01, 49)-(01, 50): NUMBER(NUMBER) '1'
[37](01, 50)-(01, 51): RSQB(OP) ']'
[37](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 06): NAME(NAME) 'if'
[38](01, 07)-(01, 11): NAME(NAME) 'som3'
[38](01, 12)-(01, 14): NOTEQUAL(OP) '!='
[38](01, 15)-(01, 23): NAME(NAME) 'checksum'
[38](01, 24)-(01, 26): NAME(NAME) 'or'
[38](01, 27)-(01, 31): NAME(NAME) 'som4'
[38](01, 32)-(01, 34): NOTEQUAL(OP) '!='
[38](01, 35)-(01, 43): NAME(NAME) 'checksum'
[38](01, 43)-(01, 44): COLON(OP) ':'
[38](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 08): INDENT(INDENT) '        '
[39](01, 08)-(01, 14): NAME(NAME) 'return'
[39](01, 15)-(01, 20): NAME(NAME) 'False'
[39](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 04): INDENT(INDENT) '    '
[40](01, 04)-(01, 10): NAME(NAME) 'return'
[40](01, 11)-(01, 15): NAME(NAME) 'True'
[40](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 08)-(01, 09): NL(NL) '\n'
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 08)-(01, 09): NL(NL) '\n'
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 03): NAME(NAME) 'def'
[43](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[43](01, 19)-(01, 20): LPAR(OP) '('
[43](01, 20)-(01, 26): NAME(NAME) 'matrix'
[43](01, 26)-(01, 27): RPAR(OP) ')'
[43](01, 27)-(01, 28): COLON(OP) ':'
[43](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 04): INDENT(INDENT) '    '
[44](01, 04)-(01, 06): NAME(NAME) 'if'
[44](01, 07)-(01, 10): NAME(NAME) 'len'
[44](01, 10)-(01, 11): LPAR(OP) '('
[44](01, 11)-(01, 17): NAME(NAME) 'matrix'
[44](01, 17)-(01, 18): RPAR(OP) ')'
[44](01, 19)-(01, 20): PERCENT(OP) '%'
[44](01, 21)-(01, 22): NUMBER(NUMBER) '2'
[44](01, 23)-(01, 25): NOTEQUAL(OP) '!='
[44](01, 26)-(01, 27): NUMBER(NUMBER) '0'
[44](01, 27)-(01, 28): COLON(OP) ':'
[44](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 08): INDENT(INDENT) '        '
[45](01, 08)-(01, 14): NAME(NAME) 'return'
[45](01, 15)-(01, 20): NAME(NAME) 'False'
[45](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 04): INDENT(INDENT) '    '
[46](01, 04)-(01, 06): NAME(NAME) 'if'
[46](01, 07)-(01, 22): NAME(NAME) 'unique_elements'
[46](01, 22)-(01, 23): LPAR(OP) '('
[46](01, 23)-(01, 29): NAME(NAME) 'matrix'
[46](01, 29)-(01, 30): RPAR(OP) ')'
[46](01, 31)-(01, 34): NAME(NAME) 'and'
[46](01, 35)-(01, 41): NAME(NAME) 'sommen'
[46](01, 41)-(01, 42): LPAR(OP) '('
[46](01, 42)-(01, 48): NAME(NAME) 'matrix'
[46](01, 48)-(01, 49): RPAR(OP) ')'
[46](01, 49)-(01, 50): COLON(OP) ':'
[46](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 08): INDENT(INDENT) '        '
[47](01, 08)-(01, 14): NAME(NAME) 'return'
[47](01, 15)-(01, 19): NAME(NAME) 'True'
[47](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 04): INDENT(INDENT) '    '
[48](01, 04)-(01, 10): NAME(NAME) 'return'
[48](01, 11)-(01, 16): NAME(NAME) 'False'
[48](01, 16)-(01, 17): NEWLINE(NEWLINE)
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

