[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'dag'
[00](01, 04)-(01, 05): EQUAL(OP) '='
[00](01, 06)-(01, 09): NAME(NAME) 'int'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 15): NAME(NAME) 'input'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 47): STRING(STRING) '"Op welke dag ben je geboren? "'
[00](01, 47)-(01, 48): RPAR(OP) ')'
[00](01, 48)-(01, 49): RPAR(OP) ')'
[00](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'maand'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 11): NAME(NAME) 'int'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 17): NAME(NAME) 'input'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 51): STRING(STRING) '"in welke maand ben je geboren? "'
[01](01, 51)-(01, 52): RPAR(OP) ')'
[01](01, 52)-(01, 53): RPAR(OP) ')'
[01](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): NAME(NAME) 'jaar'
[02](01, 05)-(01, 06): EQUAL(OP) '='
[02](01, 07)-(01, 10): NAME(NAME) 'int'
[02](01, 10)-(01, 11): LPAR(OP) '('
[02](01, 11)-(01, 16): NAME(NAME) 'input'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 48): STRING(STRING) '"in welk jaar ben je geboren? "'
[02](01, 48)-(01, 49): RPAR(OP) ')'
[02](01, 49)-(01, 50): RPAR(OP) ')'
[02](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 10): NAME(NAME) 'dagVandaag'
[04](01, 11)-(01, 12): EQUAL(OP) '='
[04](01, 13)-(01, 16): NAME(NAME) 'int'
[04](01, 16)-(01, 17): LPAR(OP) '('
[04](01, 17)-(01, 22): NAME(NAME) 'input'
[04](01, 22)-(01, 23): LPAR(OP) '('
[04](01, 23)-(01, 51): STRING(STRING) '"welke dag is het vandaag? "'
[04](01, 51)-(01, 52): RPAR(OP) ')'
[04](01, 52)-(01, 53): RPAR(OP) ')'
[04](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): NAME(NAME) 'maandVandaag'
[05](01, 13)-(01, 14): EQUAL(OP) '='
[05](01, 15)-(01, 18): NAME(NAME) 'int'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 24): NAME(NAME) 'input'
[05](01, 24)-(01, 25): LPAR(OP) '('
[05](01, 25)-(01, 55): STRING(STRING) '"Welke maand is het vandaag? "'
[05](01, 55)-(01, 56): RPAR(OP) ')'
[05](01, 56)-(01, 57): RPAR(OP) ')'
[05](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 11): NAME(NAME) 'jaarVandaag'
[06](01, 12)-(01, 13): EQUAL(OP) '='
[06](01, 14)-(01, 17): NAME(NAME) 'int'
[06](01, 17)-(01, 18): LPAR(OP) '('
[06](01, 18)-(01, 23): NAME(NAME) 'input'
[06](01, 23)-(01, 24): LPAR(OP) '('
[06](01, 24)-(01, 52): STRING(STRING) '"Welk jaar is het vandaag? "'
[06](01, 52)-(01, 53): RPAR(OP) ')'
[06](01, 53)-(01, 54): RPAR(OP) ')'
[06](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): NAME(NAME) 'leeftijd'
[08](01, 09)-(01, 10): EQUAL(OP) '='
[08](01, 11)-(01, 12): MINUS(OP) '-'
[08](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 02): NAME(NAME) 'if'
[10](01, 03)-(01, 14): NAME(NAME) 'jaarVandaag'
[10](01, 15)-(01, 17): GREATEREQUAL(OP) '>='
[10](01, 18)-(01, 22): NAME(NAME) 'jaar'
[10](01, 22)-(01, 23): COLON(OP) ':'
[10](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 12): NAME(NAME) 'leeftijd'
[11](01, 13)-(01, 14): EQUAL(OP) '='
[11](01, 15)-(01, 26): NAME(NAME) 'jaarVandaag'
[11](01, 27)-(01, 28): MINUS(OP) '-'
[11](01, 29)-(01, 33): NAME(NAME) 'jaar'
[11](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 06): NAME(NAME) 'if'
[12](01, 07)-(01, 19): NAME(NAME) 'maandVandaag'
[12](01, 20)-(01, 22): GREATEREQUAL(OP) '>='
[12](01, 23)-(01, 28): NAME(NAME) 'maand'
[12](01, 28)-(01, 29): COLON(OP) ':'
[12](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 21): NAME(NAME) 'dagVandaag'
[13](01, 22)-(01, 24): GREATEREQUAL(OP) '>='
[13](01, 25)-(01, 28): NAME(NAME) 'dag'
[13](01, 28)-(01, 29): COLON(OP) ':'
[13](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 20): NAME(NAME) 'leeftijd'
[14](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[14](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[14](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 17): NAME(NAME) 'print'
[15](01, 17)-(01, 18): LPAR(OP) '('
[15](01, 18)-(01, 26): NAME(NAME) 'leeftijd'
[15](01, 26)-(01, 27): RPAR(OP) ')'
[15](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 12): NAME(NAME) 'else'
[16](01, 12)-(01, 13): COLON(OP) ':'
[16](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 17): NAME(NAME) 'print'
[17](01, 17)-(01, 18): LPAR(OP) '('
[17](01, 18)-(01, 26): NAME(NAME) 'leeftijd'
[17](01, 26)-(01, 27): RPAR(OP) ')'
[17](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 08): NAME(NAME) 'else'
[18](01, 08)-(01, 09): COLON(OP) ':'
[18](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 13): NAME(NAME) 'print'
[19](01, 13)-(01, 14): LPAR(OP) '('
[19](01, 14)-(01, 22): NAME(NAME) 'leeftijd'
[19](01, 22)-(01, 23): RPAR(OP) ')'
[19](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): NAME(NAME) 'else'
[20](01, 04)-(01, 05): COLON(OP) ':'
[20](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 09): NAME(NAME) 'print'
[21](01, 09)-(01, 10): LPAR(OP) '('
[21](01, 10)-(01, 45): STRING(STRING) '"De ingegeven leeftijd klopt niet."'
[21](01, 45)-(01, 46): RPAR(OP) ')'
[21](01, 46)-(01, 47): NEWLINE(NEWLINE)
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

