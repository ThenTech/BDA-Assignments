[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'n'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 15): STRING(STRING) '"oke"'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 12): NAME(NAME) 'mogelijkheid'
[01](01, 13)-(01, 14): EQUAL(OP) '='
[01](01, 15)-(01, 17): STRING(STRING) '""'
[01](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 24): NAME(NAME) 'mogelijkecombinaties'
[03](01, 24)-(01, 25): LPAR(OP) '('
[03](01, 25)-(01, 37): NAME(NAME) 'mogelijkheid'
[03](01, 37)-(01, 38): COMMA(OP) ','
[03](01, 38)-(01, 39): NAME(NAME) 'n'
[03](01, 39)-(01, 40): RPAR(OP) ')'
[03](01, 40)-(01, 41): COLON(OP) ':'
[03](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 10): NAME(NAME) 'int'
[04](01, 10)-(01, 11): LPAR(OP) '('
[04](01, 11)-(01, 12): NAME(NAME) 'n'
[04](01, 12)-(01, 13): RPAR(OP) ')'
[04](01, 14)-(01, 15): GREATER(OP) '>'
[04](01, 16)-(01, 19): NAME(NAME) 'len'
[04](01, 19)-(01, 20): LPAR(OP) '('
[04](01, 20)-(01, 32): NAME(NAME) 'mogelijkheid'
[04](01, 32)-(01, 33): RPAR(OP) ')'
[04](01, 33)-(01, 34): COLON(OP) ':'
[04](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 20): NAME(NAME) 'mogelijkheid'
[05](01, 21)-(01, 22): EQUAL(OP) '='
[05](01, 23)-(01, 43): NAME(NAME) 'mogelijkecombinaties'
[05](01, 43)-(01, 44): LPAR(OP) '('
[05](01, 44)-(01, 56): NAME(NAME) 'mogelijkheid'
[05](01, 56)-(01, 57): PLUS(OP) '+'
[05](01, 57)-(01, 60): STRING(STRING) '"A"'
[05](01, 60)-(01, 61): COMMA(OP) ','
[05](01, 61)-(01, 62): NAME(NAME) 'n'
[05](01, 62)-(01, 63): MINUS(OP) '-'
[05](01, 63)-(01, 64): NUMBER(NUMBER) '1'
[05](01, 64)-(01, 65): RPAR(OP) ')'
[05](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 08)-(01, 09): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 20): NAME(NAME) 'mogelijkheid'
[08](01, 21)-(01, 22): EQUAL(OP) '='
[08](01, 23)-(01, 43): NAME(NAME) 'mogelijkecombinaties'
[08](01, 43)-(01, 44): LPAR(OP) '('
[08](01, 44)-(01, 56): NAME(NAME) 'mogelijkheid'
[08](01, 56)-(01, 57): PLUS(OP) '+'
[08](01, 57)-(01, 60): STRING(STRING) '"C"'
[08](01, 60)-(01, 61): COMMA(OP) ','
[08](01, 61)-(01, 62): NAME(NAME) 'n'
[08](01, 62)-(01, 63): MINUS(OP) '-'
[08](01, 63)-(01, 64): NUMBER(NUMBER) '1'
[08](01, 64)-(01, 65): RPAR(OP) ')'
[08](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 20): NAME(NAME) 'mogelijkheid'
[11](01, 21)-(01, 22): EQUAL(OP) '='
[11](01, 23)-(01, 43): NAME(NAME) 'mogelijkecombinaties'
[11](01, 43)-(01, 44): LPAR(OP) '('
[11](01, 44)-(01, 56): NAME(NAME) 'mogelijkheid'
[11](01, 56)-(01, 57): PLUS(OP) '+'
[11](01, 57)-(01, 60): STRING(STRING) '"G"'
[11](01, 60)-(01, 61): COMMA(OP) ','
[11](01, 61)-(01, 62): NAME(NAME) 'n'
[11](01, 62)-(01, 63): MINUS(OP) '-'
[11](01, 63)-(01, 64): NUMBER(NUMBER) '1'
[11](01, 64)-(01, 65): RPAR(OP) ')'
[11](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 01)-(01, 02): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 20): NAME(NAME) 'mogelijkheid'
[14](01, 21)-(01, 22): EQUAL(OP) '='
[14](01, 23)-(01, 43): NAME(NAME) 'mogelijkecombinaties'
[14](01, 43)-(01, 44): LPAR(OP) '('
[14](01, 44)-(01, 56): NAME(NAME) 'mogelijkheid'
[14](01, 56)-(01, 57): PLUS(OP) '+'
[14](01, 57)-(01, 60): STRING(STRING) '"T"'
[14](01, 60)-(01, 61): COMMA(OP) ','
[14](01, 61)-(01, 62): NAME(NAME) 'n'
[14](01, 62)-(01, 63): MINUS(OP) '-'
[14](01, 63)-(01, 64): NUMBER(NUMBER) '1'
[14](01, 64)-(01, 65): RPAR(OP) ')'
[14](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 08)-(01, 09): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 08)-(01, 09): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 06): NAME(NAME) 'if'
[19](01, 07)-(01, 10): NAME(NAME) 'int'
[19](01, 10)-(01, 11): LPAR(OP) '('
[19](01, 11)-(01, 12): NAME(NAME) 'n'
[19](01, 12)-(01, 13): RPAR(OP) ')'
[19](01, 13)-(01, 15): EQEQUAL(OP) '=='
[19](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[19](01, 17)-(01, 18): COLON(OP) ':'
[19](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 13): NAME(NAME) 'print'
[20](01, 14)-(01, 15): LPAR(OP) '('
[20](01, 15)-(01, 27): NAME(NAME) 'mogelijkheid'
[20](01, 27)-(01, 28): RPAR(OP) ')'
[20](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 08)-(01, 09): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 08)-(01, 09): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 20): NAME(NAME) 'mogelijkecombinaties'
[23](01, 20)-(01, 21): LPAR(OP) '('
[23](01, 21)-(01, 33): NAME(NAME) 'mogelijkheid'
[23](01, 33)-(01, 34): COMMA(OP) ','
[23](01, 34)-(01, 35): NAME(NAME) 'n'
[23](01, 35)-(01, 36): RPAR(OP) ')'
[23](01, 36)-(01, 37): NEWLINE(NEWLINE)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

