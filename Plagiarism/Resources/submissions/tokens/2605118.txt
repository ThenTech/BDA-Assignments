[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[00](01, 26)-(01, 27): LPAR(OP) '('
[00](01, 27)-(01, 35): NAME(NAME) 'sentence'
[00](01, 35)-(01, 36): RPAR(OP) ')'
[00](01, 36)-(01, 37): COLON(OP) ':'
[00](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 19): NAME(NAME) 'sentence_filter'
[01](01, 20)-(01, 21): EQUAL(OP) '='
[01](01, 22)-(01, 24): STRING(STRING) '""'
[01](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 22): NAME(NAME) 'len'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 31): NAME(NAME) 'sentence'
[02](01, 31)-(01, 32): RPAR(OP) ')'
[02](01, 32)-(01, 33): RPAR(OP) ')'
[02](01, 33)-(01, 34): COLON(OP) ':'
[02](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 19): NAME(NAME) 'sentence'
[03](01, 20)-(01, 22): NAME(NAME) 'in'
[03](01, 23)-(01, 30): NAME(NAME) 'alfabet'
[03](01, 30)-(01, 31): COLON(OP) ':'
[03](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 27): NAME(NAME) 'sentence_filter'
[04](01, 28)-(01, 30): PLUSEQUAL(OP) '+='
[04](01, 31)-(01, 39): NAME(NAME) 'sentence'
[04](01, 39)-(01, 40): LSQB(OP) '['
[04](01, 40)-(01, 41): NAME(NAME) 'i'
[04](01, 41)-(01, 42): RSQB(OP) ']'
[04](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 12): NAME(NAME) 'in'
[05](01, 13)-(01, 18): NAME(NAME) 'range'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 34): NAME(NAME) 'sentence_filter'
[05](01, 35)-(01, 37): DOUBLESLASH(OP) '//'
[05](01, 38)-(01, 39): NUMBER(NUMBER) '2'
[05](01, 39)-(01, 40): RPAR(OP) ')'
[05](01, 40)-(01, 41): COLON(OP) ':'
[05](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 26): NAME(NAME) 'sentence_filter'
[06](01, 26)-(01, 27): LSQB(OP) '['
[06](01, 27)-(01, 28): NAME(NAME) 'i'
[06](01, 28)-(01, 29): RSQB(OP) ']'
[06](01, 30)-(01, 32): NOTEQUAL(OP) '!='
[06](01, 33)-(01, 48): NAME(NAME) 'sentence_filter'
[06](01, 48)-(01, 49): LSQB(OP) '['
[06](01, 49)-(01, 52): NAME(NAME) 'len'
[06](01, 52)-(01, 53): LPAR(OP) '('
[06](01, 53)-(01, 68): NAME(NAME) 'sentence_filter'
[06](01, 68)-(01, 69): RPAR(OP) ')'
[06](01, 69)-(01, 70): MINUS(OP) '-'
[06](01, 70)-(01, 71): NAME(NAME) 'i'
[06](01, 71)-(01, 72): MINUS(OP) '-'
[06](01, 72)-(01, 73): NUMBER(NUMBER) '1'
[06](01, 73)-(01, 74): RSQB(OP) ']'
[06](01, 74)-(01, 75): COLON(OP) ':'
[06](01, 75)-(01, 76): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'return'
[07](01, 19)-(01, 24): NAME(NAME) 'False'
[07](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 14): NAME(NAME) 'return'
[08](01, 15)-(01, 19): NAME(NAME) 'True'
[08](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 07): NAME(NAME) 'alfabet'
[09](01, 08)-(01, 09): EQUAL(OP) '='
[09](01, 10)-(01, 38): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[09](01, 38)-(01, 39): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

