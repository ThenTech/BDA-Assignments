[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'x'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 10): STRING(STRING) '""'
[01](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 05): NAME(NAME) 'i'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[02](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'while'
[03](01, 10)-(01, 11): NAME(NAME) 'i'
[03](01, 12)-(01, 13): LESS(OP) '<'
[03](01, 14)-(01, 17): NAME(NAME) 'len'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 24): NAME(NAME) 'corpus'
[03](01, 24)-(01, 25): RPAR(OP) ')'
[03](01, 25)-(01, 26): COLON(OP) ':'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'slice'
[04](01, 14)-(01, 15): EQUAL(OP) '='
[04](01, 16)-(01, 17): NAME(NAME) 's'
[04](01, 17)-(01, 18): LSQB(OP) '['
[04](01, 18)-(01, 19): NAME(NAME) 'i'
[04](01, 19)-(01, 20): COLON(OP) ':'
[04](01, 20)-(01, 21): NAME(NAME) 'i'
[04](01, 21)-(01, 22): PLUS(OP) '+'
[04](01, 22)-(01, 25): NAME(NAME) 'len'
[04](01, 25)-(01, 26): LPAR(OP) '('
[04](01, 26)-(01, 33): NAME(NAME) 'pattern'
[04](01, 33)-(01, 34): RPAR(OP) ')'
[04](01, 34)-(01, 35): RSQB(OP) ']'
[04](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 16): NAME(NAME) 'slice'
[05](01, 17)-(01, 19): NOTEQUAL(OP) '!='
[05](01, 20)-(01, 27): NAME(NAME) 'pattern'
[05](01, 27)-(01, 28): COLON(OP) ':'
[05](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 13): NAME(NAME) 'x'
[06](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[06](01, 17)-(01, 18): NAME(NAME) 's'
[06](01, 18)-(01, 19): LSQB(OP) '['
[06](01, 19)-(01, 20): NAME(NAME) 'i'
[06](01, 20)-(01, 21): RSQB(OP) ']'
[06](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 13): NAME(NAME) 'i'
[07](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[07](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'else'
[08](01, 12)-(01, 13): COLON(OP) ':'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 13): NAME(NAME) 'x'
[09](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[09](01, 17)-(01, 28): NAME(NAME) 'replacement'
[09](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 13): NAME(NAME) 'i'
[10](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[10](01, 17)-(01, 20): NAME(NAME) 'len'
[10](01, 20)-(01, 21): LPAR(OP) '('
[10](01, 21)-(01, 28): NAME(NAME) 'pattern'
[10](01, 28)-(01, 29): RPAR(OP) ')'
[10](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'return'
[11](01, 11)-(01, 12): NAME(NAME) 'x'
[11](01, 12)-(01, 13): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

