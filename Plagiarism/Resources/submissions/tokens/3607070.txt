[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'n'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 07): NAME(NAME) 'int'
[02](01, 07)-(01, 08): LPAR(OP) '('
[02](01, 08)-(01, 13): NAME(NAME) 'input'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 15): RPAR(OP) ')'
[02](01, 15)-(01, 16): RPAR(OP) ')'
[02](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'def'
[04](01, 04)-(01, 09): NAME(NAME) 'recur'
[04](01, 09)-(01, 10): LPAR(OP) '('
[04](01, 10)-(01, 18): NAME(NAME) 'elements'
[04](01, 18)-(01, 19): COMMA(OP) ','
[04](01, 20)-(01, 26): NAME(NAME) 'result'
[04](01, 26)-(01, 27): COMMA(OP) ','
[04](01, 28)-(01, 29): NAME(NAME) 'n'
[04](01, 29)-(01, 30): RPAR(OP) ')'
[04](01, 30)-(01, 31): COLON(OP) ':'
[04](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 10): NAME(NAME) 'len'
[05](01, 10)-(01, 11): LPAR(OP) '('
[05](01, 11)-(01, 17): NAME(NAME) 'result'
[05](01, 17)-(01, 18): RPAR(OP) ')'
[05](01, 19)-(01, 21): EQEQUAL(OP) '=='
[05](01, 22)-(01, 23): NAME(NAME) 'n'
[05](01, 23)-(01, 24): COLON(OP) ':'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'print'
[06](01, 13)-(01, 14): LPAR(OP) '('
[06](01, 14)-(01, 20): NAME(NAME) 'result'
[06](01, 20)-(01, 21): RPAR(OP) ')'
[06](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 14): NAME(NAME) 'return'
[07](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 04)-(01, 05): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'recur'
[09](01, 09)-(01, 10): LPAR(OP) '('
[09](01, 10)-(01, 18): NAME(NAME) 'elements'
[09](01, 18)-(01, 19): COMMA(OP) ','
[09](01, 20)-(01, 26): NAME(NAME) 'result'
[09](01, 27)-(01, 28): PLUS(OP) '+'
[09](01, 29)-(01, 37): NAME(NAME) 'elements'
[09](01, 37)-(01, 38): LSQB(OP) '['
[09](01, 38)-(01, 39): NUMBER(NUMBER) '0'
[09](01, 39)-(01, 40): RSQB(OP) ']'
[09](01, 40)-(01, 41): COMMA(OP) ','
[09](01, 42)-(01, 43): NAME(NAME) 'n'
[09](01, 43)-(01, 44): RPAR(OP) ')'
[09](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 06): NAME(NAME) 'if'
[10](01, 07)-(01, 10): NAME(NAME) 'len'
[10](01, 10)-(01, 11): LPAR(OP) '('
[10](01, 11)-(01, 19): NAME(NAME) 'elements'
[10](01, 19)-(01, 20): RPAR(OP) ')'
[10](01, 21)-(01, 22): GREATER(OP) '>'
[10](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[10](01, 24)-(01, 25): COLON(OP) ':'
[10](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 13): NAME(NAME) 'recur'
[11](01, 13)-(01, 14): LPAR(OP) '('
[11](01, 14)-(01, 22): NAME(NAME) 'elements'
[11](01, 22)-(01, 23): LSQB(OP) '['
[11](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[11](01, 24)-(01, 25): COLON(OP) ':'
[11](01, 25)-(01, 26): RSQB(OP) ']'
[11](01, 26)-(01, 27): COMMA(OP) ','
[11](01, 28)-(01, 34): NAME(NAME) 'result'
[11](01, 34)-(01, 35): COMMA(OP) ','
[11](01, 36)-(01, 37): NAME(NAME) 'n'
[11](01, 37)-(01, 38): RPAR(OP) ')'
[11](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 05): NAME(NAME) 'recur'
[14](01, 05)-(01, 06): LPAR(OP) '('
[14](01, 06)-(01, 12): STRING(STRING) '"ACGT"'
[14](01, 12)-(01, 13): COMMA(OP) ','
[14](01, 14)-(01, 16): STRING(STRING) '""'
[14](01, 16)-(01, 17): COMMA(OP) ','
[14](01, 18)-(01, 19): NAME(NAME) 'n'
[14](01, 19)-(01, 20): RPAR(OP) ')'
[14](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

