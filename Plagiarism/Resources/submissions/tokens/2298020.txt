[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 17): NAME(NAME) 'lucky_numbers'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 24): NAME(NAME) 'length'
[00](01, 24)-(01, 25): RPAR(OP) ')'
[00](01, 25)-(01, 26): COLON(OP) ':'
[00](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'numbers'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 15): LSQB(OP) '['
[01](01, 15)-(01, 21): NAME(NAME) 'number'
[01](01, 22)-(01, 25): NAME(NAME) 'for'
[01](01, 26)-(01, 32): NAME(NAME) 'number'
[01](01, 33)-(01, 35): NAME(NAME) 'in'
[01](01, 36)-(01, 41): NAME(NAME) 'range'
[01](01, 41)-(01, 42): LPAR(OP) '('
[01](01, 42)-(01, 43): NUMBER(NUMBER) '1'
[01](01, 43)-(01, 44): COMMA(OP) ','
[01](01, 45)-(01, 51): NAME(NAME) 'length'
[01](01, 52)-(01, 53): PLUS(OP) '+'
[01](01, 54)-(01, 55): NUMBER(NUMBER) '1'
[01](01, 55)-(01, 56): RPAR(OP) ')'
[01](01, 56)-(01, 57): RSQB(OP) ']'
[01](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'print'
[02](01, 09)-(01, 10): LPAR(OP) '('
[02](01, 10)-(01, 17): NAME(NAME) 'numbers'
[02](01, 17)-(01, 18): RPAR(OP) ')'
[02](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 11): NAME(NAME) 'counter'
[03](01, 12)-(01, 13): EQUAL(OP) '='
[03](01, 14)-(01, 15): NUMBER(NUMBER) '2'
[03](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 15): NAME(NAME) 'element'
[04](01, 16)-(01, 18): NAME(NAME) 'in'
[04](01, 19)-(01, 24): NAME(NAME) 'range'
[04](01, 24)-(01, 25): LPAR(OP) '('
[04](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[04](01, 26)-(01, 27): COMMA(OP) ','
[04](01, 28)-(01, 34): NAME(NAME) 'length'
[04](01, 34)-(01, 35): RPAR(OP) ')'
[04](01, 35)-(01, 36): COLON(OP) ':'
[04](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 14): NAME(NAME) 'len'
[06](01, 14)-(01, 15): LPAR(OP) '('
[06](01, 15)-(01, 22): NAME(NAME) 'numbers'
[06](01, 22)-(01, 23): RPAR(OP) ')'
[06](01, 24)-(01, 25): LESS(OP) '<'
[06](01, 26)-(01, 33): NAME(NAME) 'element'
[06](01, 33)-(01, 34): COLON(OP) ':'
[06](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 17): NAME(NAME) 'break'
[07](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 18): NAME(NAME) 'newCounter'
[09](01, 19)-(01, 20): EQUAL(OP) '='
[09](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[09](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'length'
[10](01, 15)-(01, 16): EQUAL(OP) '='
[10](01, 17)-(01, 20): NAME(NAME) 'len'
[10](01, 20)-(01, 21): LPAR(OP) '('
[10](01, 21)-(01, 28): NAME(NAME) 'numbers'
[10](01, 28)-(01, 29): RPAR(OP) ')'
[10](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 11): NAME(NAME) 'for'
[11](01, 12)-(01, 16): NAME(NAME) 'item'
[11](01, 17)-(01, 19): NAME(NAME) 'in'
[11](01, 20)-(01, 25): NAME(NAME) 'range'
[11](01, 25)-(01, 26): LPAR(OP) '('
[11](01, 26)-(01, 33): NAME(NAME) 'counter'
[11](01, 33)-(01, 34): COMMA(OP) ','
[11](01, 35)-(01, 41): NAME(NAME) 'length'
[11](01, 42)-(01, 43): PLUS(OP) '+'
[11](01, 44)-(01, 45): NUMBER(NUMBER) '1'
[11](01, 45)-(01, 46): COMMA(OP) ','
[11](01, 47)-(01, 54): NAME(NAME) 'counter'
[11](01, 54)-(01, 55): RPAR(OP) ')'
[11](01, 55)-(01, 56): COLON(OP) ':'
[11](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 15): NAME(NAME) 'del'
[12](01, 16)-(01, 23): NAME(NAME) 'numbers'
[12](01, 23)-(01, 24): LSQB(OP) '['
[12](01, 24)-(01, 28): NAME(NAME) 'item'
[12](01, 29)-(01, 30): MINUS(OP) '-'
[12](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[12](01, 33)-(01, 34): MINUS(OP) '-'
[12](01, 35)-(01, 45): NAME(NAME) 'newCounter'
[12](01, 45)-(01, 46): RSQB(OP) ']'
[12](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 22): NAME(NAME) 'newCounter'
[13](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[13](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[13](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 15): NAME(NAME) 'counter'
[15](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[15](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[15](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 10): NAME(NAME) 'return'
[16](01, 11)-(01, 18): NAME(NAME) 'numbers'
[16](01, 18)-(01, 19): NEWLINE(NEWLINE)
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

