[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 24): NAME(NAME) 'convert_to_uppercase'
[00](01, 24)-(01, 25): LPAR(OP) '('
[00](01, 25)-(01, 26): NAME(NAME) 's'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 07): NAME(NAME) 'for'
[01](01, 08)-(01, 09): NAME(NAME) 'x'
[01](01, 10)-(01, 12): NAME(NAME) 'in'
[01](01, 13)-(01, 14): NAME(NAME) 's'
[01](01, 14)-(01, 15): COLON(OP) ':'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 10): NAME(NAME) 'if'
[02](01, 11)-(01, 14): STRING(STRING) "'a'"
[02](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[02](01, 18)-(01, 19): NAME(NAME) 'x'
[02](01, 20)-(01, 22): LESSEQUAL(OP) '<='
[02](01, 23)-(01, 26): STRING(STRING) "'z'"
[02](01, 26)-(01, 27): COLON(OP) ':'
[02](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 12): INDENT(INDENT) '            '
[03](01, 12)-(01, 13): NAME(NAME) 'y'
[03](01, 14)-(01, 15): EQUAL(OP) '='
[03](01, 16)-(01, 19): NAME(NAME) 'chr'
[03](01, 19)-(01, 20): LPAR(OP) '('
[03](01, 20)-(01, 23): NAME(NAME) 'ord'
[03](01, 23)-(01, 24): LPAR(OP) '('
[03](01, 24)-(01, 25): NAME(NAME) 'x'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 27)-(01, 28): MINUS(OP) '-'
[03](01, 29)-(01, 32): NAME(NAME) 'ord'
[03](01, 32)-(01, 33): LPAR(OP) '('
[03](01, 33)-(01, 36): STRING(STRING) "'a'"
[03](01, 36)-(01, 37): RPAR(OP) ')'
[03](01, 38)-(01, 39): PLUS(OP) '+'
[03](01, 40)-(01, 43): NAME(NAME) 'ord'
[03](01, 43)-(01, 44): LPAR(OP) '('
[03](01, 44)-(01, 47): STRING(STRING) "'A'"
[03](01, 47)-(01, 48): RPAR(OP) ')'
[03](01, 48)-(01, 49): RPAR(OP) ')'
[03](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 17): NAME(NAME) 'print'
[04](01, 17)-(01, 18): LPAR(OP) '('
[04](01, 18)-(01, 19): NAME(NAME) 'y'
[04](01, 19)-(01, 20): COMMA(OP) ','
[04](01, 21)-(01, 24): NAME(NAME) 'end'
[04](01, 24)-(01, 25): EQUAL(OP) '='
[04](01, 25)-(01, 27): STRING(STRING) '""'
[04](01, 27)-(01, 28): RPAR(OP) ')'
[04](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 12): NAME(NAME) 'else'
[05](01, 12)-(01, 13): COLON(OP) ':'
[05](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 17): NAME(NAME) 'print'
[06](01, 17)-(01, 18): LPAR(OP) '('
[06](01, 18)-(01, 19): NAME(NAME) 'x'
[06](01, 19)-(01, 20): COMMA(OP) ','
[06](01, 21)-(01, 24): NAME(NAME) 'end'
[06](01, 24)-(01, 25): EQUAL(OP) '='
[06](01, 25)-(01, 27): STRING(STRING) '""'
[06](01, 27)-(01, 28): RPAR(OP) ')'
[06](01, 28)-(01, 29): NEWLINE(NEWLINE)
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

