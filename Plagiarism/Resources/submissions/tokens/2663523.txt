[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[01](01, 22)-(01, 23): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): NAME(NAME) 'inputstr'
[02](01, 09)-(01, 10): EQUAL(OP) '='
[02](01, 11)-(01, 16): NAME(NAME) 'input'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 34): STRING(STRING) '"word?/sentence?"'
[02](01, 34)-(01, 35): RPAR(OP) ')'
[02](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 09): NAME(NAME) 'inputstr2'
[03](01, 10)-(01, 11): EQUAL(OP) '='
[03](01, 12)-(01, 17): NAME(NAME) 'input'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 35): STRING(STRING) '"word?/sentence?"'
[03](01, 35)-(01, 36): RPAR(OP) ')'
[03](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 07): NAME(NAME) 'letters'
[04](01, 08)-(01, 09): EQUAL(OP) '='
[04](01, 10)-(01, 38): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[04](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 05): NAME(NAME) 'list1'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 07)-(01, 08): LSQB(OP) '['
[05](01, 08)-(01, 09): RSQB(OP) ']'
[05](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 03): NAME(NAME) 'for'
[06](01, 04)-(01, 14): NAME(NAME) 'characters'
[06](01, 15)-(01, 17): NAME(NAME) 'in'
[06](01, 18)-(01, 25): NAME(NAME) 'letters'
[06](01, 25)-(01, 26): COLON(OP) ':'
[06](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 06): NAME(NAME) 'if'
[07](01, 07)-(01, 17): NAME(NAME) 'characters'
[07](01, 18)-(01, 20): NAME(NAME) 'in'
[07](01, 21)-(01, 29): NAME(NAME) 'inputstr'
[07](01, 29)-(01, 30): COLON(OP) ':'
[07](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 17): NAME(NAME) 'countchar'
[08](01, 18)-(01, 19): EQUAL(OP) '='
[08](01, 20)-(01, 28): NAME(NAME) 'inputstr'
[08](01, 28)-(01, 29): DOT(OP) '.'
[08](01, 29)-(01, 34): NAME(NAME) 'count'
[08](01, 34)-(01, 35): LPAR(OP) '('
[08](01, 35)-(01, 45): NAME(NAME) 'characters'
[08](01, 45)-(01, 46): RPAR(OP) ')'
[08](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 13): NAME(NAME) 'list1'
[09](01, 13)-(01, 14): DOT(OP) '.'
[09](01, 14)-(01, 20): NAME(NAME) 'append'
[09](01, 20)-(01, 21): LPAR(OP) '('
[09](01, 21)-(01, 30): NAME(NAME) 'countchar'
[09](01, 30)-(01, 31): RPAR(OP) ')'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 08): NAME(NAME) 'else'
[10](01, 08)-(01, 09): COLON(OP) ':'
[10](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 13): NAME(NAME) 'list1'
[11](01, 13)-(01, 14): DOT(OP) '.'
[11](01, 14)-(01, 20): NAME(NAME) 'append'
[11](01, 20)-(01, 21): LPAR(OP) '('
[11](01, 21)-(01, 24): STRING(STRING) "'0'"
[11](01, 24)-(01, 25): RPAR(OP) ')'
[11](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 05): NAME(NAME) 'list2'
[12](01, 06)-(01, 07): EQUAL(OP) '='
[12](01, 08)-(01, 09): LSQB(OP) '['
[12](01, 09)-(01, 10): RSQB(OP) ']'
[12](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 03): NAME(NAME) 'for'
[13](01, 04)-(01, 14): NAME(NAME) 'characters'
[13](01, 15)-(01, 17): NAME(NAME) 'in'
[13](01, 18)-(01, 25): NAME(NAME) 'letters'
[13](01, 25)-(01, 26): COLON(OP) ':'
[13](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 06): NAME(NAME) 'if'
[14](01, 07)-(01, 17): NAME(NAME) 'characters'
[14](01, 18)-(01, 20): NAME(NAME) 'in'
[14](01, 21)-(01, 29): NAME(NAME) 'inputstr'
[14](01, 29)-(01, 30): COLON(OP) ':'
[14](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 18): NAME(NAME) 'countchar2'
[15](01, 19)-(01, 20): EQUAL(OP) '='
[15](01, 21)-(01, 29): NAME(NAME) 'inputstr'
[15](01, 29)-(01, 30): DOT(OP) '.'
[15](01, 30)-(01, 35): NAME(NAME) 'count'
[15](01, 35)-(01, 36): LPAR(OP) '('
[15](01, 36)-(01, 46): NAME(NAME) 'characters'
[15](01, 46)-(01, 47): RPAR(OP) ')'
[15](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 13): NAME(NAME) 'list2'
[16](01, 13)-(01, 14): DOT(OP) '.'
[16](01, 14)-(01, 20): NAME(NAME) 'append'
[16](01, 20)-(01, 21): LPAR(OP) '('
[16](01, 21)-(01, 31): NAME(NAME) 'countchar2'
[16](01, 31)-(01, 32): RPAR(OP) ')'
[16](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 08): NAME(NAME) 'else'
[17](01, 08)-(01, 09): COLON(OP) ':'
[17](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 13): NAME(NAME) 'list2'
[18](01, 13)-(01, 14): DOT(OP) '.'
[18](01, 14)-(01, 20): NAME(NAME) 'append'
[18](01, 20)-(01, 21): LPAR(OP) '('
[18](01, 21)-(01, 24): STRING(STRING) "'0'"
[18](01, 24)-(01, 25): RPAR(OP) ')'
[18](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 02): NAME(NAME) 'if'
[19](01, 03)-(01, 08): NAME(NAME) 'list1'
[19](01, 09)-(01, 11): EQEQUAL(OP) '=='
[19](01, 12)-(01, 17): NAME(NAME) 'list2'
[19](01, 17)-(01, 18): COLON(OP) ':'
[19](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 09): NAME(NAME) 'print'
[20](01, 09)-(01, 10): LPAR(OP) '('
[20](01, 10)-(01, 18): NAME(NAME) 'inputstr'
[20](01, 18)-(01, 19): COMMA(OP) ','
[20](01, 20)-(01, 25): STRING(STRING) "'and'"
[20](01, 25)-(01, 26): COMMA(OP) ','
[20](01, 27)-(01, 36): NAME(NAME) 'inputstr2'
[20](01, 36)-(01, 37): COMMA(OP) ','
[20](01, 38)-(01, 52): STRING(STRING) "'are anagrams'"
[20](01, 52)-(01, 53): RPAR(OP) ')'
[20](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): NAME(NAME) 'else'
[21](01, 04)-(01, 05): COLON(OP) ':'
[21](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 09): NAME(NAME) 'print'
[22](01, 09)-(01, 10): LPAR(OP) '('
[22](01, 10)-(01, 18): NAME(NAME) 'inputstr'
[22](01, 18)-(01, 19): COMMA(OP) ','
[22](01, 20)-(01, 25): STRING(STRING) "'and'"
[22](01, 25)-(01, 26): COMMA(OP) ','
[22](01, 27)-(01, 36): NAME(NAME) 'inputstr2'
[22](01, 36)-(01, 37): COMMA(OP) ','
[22](01, 38)-(01, 56): STRING(STRING) "'are not anagrams'"
[22](01, 56)-(01, 57): RPAR(OP) ')'
[22](01, 57)-(01, 58): NEWLINE(NEWLINE)
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

