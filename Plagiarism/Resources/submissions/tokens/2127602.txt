[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 121): COMMENT(COMMENT) '#submision one was much cleaner and shorter but the unit tests flagged it as wrong because of trailing zeros in the float'
[00](01, 121)-(01, 122): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 144): COMMENT(COMMENT) "#can't seem to figure out why it isn't executing right. on my pc it works, and the python tutor of the site won't load atm (maintenance on site)"
[01](01, 144)-(01, 145): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 47): COMMENT(COMMENT) '#used a different solution that is a bit easier'
[02](01, 47)-(01, 48): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 10): NAME(NAME) 'coinsOfOne'
[03](01, 11)-(01, 12): EQUAL(OP) '='
[03](01, 13)-(01, 16): NAME(NAME) 'int'
[03](01, 16)-(01, 17): LPAR(OP) '('
[03](01, 17)-(01, 22): NAME(NAME) 'input'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 24): RPAR(OP) ')'
[03](01, 24)-(01, 25): RPAR(OP) ')'
[03](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 10): NAME(NAME) 'coinsOfTwo'
[04](01, 11)-(01, 12): EQUAL(OP) '='
[04](01, 13)-(01, 16): NAME(NAME) 'int'
[04](01, 16)-(01, 17): LPAR(OP) '('
[04](01, 17)-(01, 22): NAME(NAME) 'input'
[04](01, 22)-(01, 23): LPAR(OP) '('
[04](01, 23)-(01, 24): RPAR(OP) ')'
[04](01, 24)-(01, 25): RPAR(OP) ')'
[04](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 11): NAME(NAME) 'coinsOfFive'
[05](01, 12)-(01, 13): EQUAL(OP) '='
[05](01, 14)-(01, 17): NAME(NAME) 'int'
[05](01, 17)-(01, 18): LPAR(OP) '('
[05](01, 18)-(01, 23): NAME(NAME) 'input'
[05](01, 23)-(01, 24): LPAR(OP) '('
[05](01, 24)-(01, 25): RPAR(OP) ')'
[05](01, 25)-(01, 26): RPAR(OP) ')'
[05](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 10): NAME(NAME) 'coinsOfTen'
[06](01, 11)-(01, 12): EQUAL(OP) '='
[06](01, 13)-(01, 16): NAME(NAME) 'int'
[06](01, 16)-(01, 17): LPAR(OP) '('
[06](01, 17)-(01, 22): NAME(NAME) 'input'
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 24): RPAR(OP) ')'
[06](01, 24)-(01, 25): RPAR(OP) ')'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 13): NAME(NAME) 'coinsOfTwenty'
[07](01, 14)-(01, 15): EQUAL(OP) '='
[07](01, 16)-(01, 19): NAME(NAME) 'int'
[07](01, 19)-(01, 20): LPAR(OP) '('
[07](01, 20)-(01, 25): NAME(NAME) 'input'
[07](01, 25)-(01, 26): LPAR(OP) '('
[07](01, 26)-(01, 27): RPAR(OP) ')'
[07](01, 27)-(01, 28): RPAR(OP) ')'
[07](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 10): NAME(NAME) 'MoneyOwned'
[09](01, 11)-(01, 12): EQUAL(OP) '='
[09](01, 13)-(01, 14): LPAR(OP) '('
[09](01, 14)-(01, 27): NAME(NAME) 'coinsOfTwenty'
[09](01, 27)-(01, 28): STAR(OP) '*'
[09](01, 28)-(01, 30): NUMBER(NUMBER) '20'
[09](01, 30)-(01, 31): RPAR(OP) ')'
[09](01, 31)-(01, 32): PLUS(OP) '+'
[09](01, 32)-(01, 33): LPAR(OP) '('
[09](01, 33)-(01, 43): NAME(NAME) 'coinsOfTen'
[09](01, 43)-(01, 44): STAR(OP) '*'
[09](01, 44)-(01, 46): NUMBER(NUMBER) '10'
[09](01, 46)-(01, 47): RPAR(OP) ')'
[09](01, 47)-(01, 48): PLUS(OP) '+'
[09](01, 48)-(01, 49): LPAR(OP) '('
[09](01, 49)-(01, 60): NAME(NAME) 'coinsOfFive'
[09](01, 60)-(01, 61): STAR(OP) '*'
[09](01, 61)-(01, 62): NUMBER(NUMBER) '5'
[09](01, 62)-(01, 63): RPAR(OP) ')'
[09](01, 63)-(01, 64): PLUS(OP) '+'
[09](01, 64)-(01, 65): LPAR(OP) '('
[09](01, 65)-(01, 75): NAME(NAME) 'coinsOfTwo'
[09](01, 75)-(01, 76): STAR(OP) '*'
[09](01, 76)-(01, 77): NUMBER(NUMBER) '2'
[09](01, 77)-(01, 78): RPAR(OP) ')'
[09](01, 78)-(01, 79): PLUS(OP) '+'
[09](01, 79)-(01, 89): NAME(NAME) 'coinsOfOne'
[09](01, 89)-(01, 90): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 10): NAME(NAME) 'eurosOwned'
[10](01, 11)-(01, 12): EQUAL(OP) '='
[10](01, 13)-(01, 16): NAME(NAME) 'int'
[10](01, 16)-(01, 17): LPAR(OP) '('
[10](01, 17)-(01, 27): NAME(NAME) 'MoneyOwned'
[10](01, 28)-(01, 29): SLASH(OP) '/'
[10](01, 30)-(01, 33): NUMBER(NUMBER) '100'
[10](01, 33)-(01, 34): RPAR(OP) ')'
[10](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 10): NAME(NAME) 'centsOwned'
[12](01, 11)-(01, 12): EQUAL(OP) '='
[12](01, 13)-(01, 16): NAME(NAME) 'int'
[12](01, 16)-(01, 17): LPAR(OP) '('
[12](01, 17)-(01, 27): NAME(NAME) 'MoneyOwned'
[12](01, 28)-(01, 29): MINUS(OP) '-'
[12](01, 30)-(01, 31): LPAR(OP) '('
[12](01, 31)-(01, 41): NAME(NAME) 'eurosOwned'
[12](01, 42)-(01, 43): STAR(OP) '*'
[12](01, 44)-(01, 47): NUMBER(NUMBER) '100'
[12](01, 47)-(01, 48): RPAR(OP) ')'
[12](01, 48)-(01, 49): RPAR(OP) ')'
[12](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 14): NAME(NAME) 'centsTensOwned'
[14](01, 15)-(01, 16): EQUAL(OP) '='
[14](01, 17)-(01, 20): NAME(NAME) 'int'
[14](01, 20)-(01, 21): LPAR(OP) '('
[14](01, 21)-(01, 31): NAME(NAME) 'centsOwned'
[14](01, 32)-(01, 33): SLASH(OP) '/'
[14](01, 34)-(01, 36): NUMBER(NUMBER) '10'
[14](01, 36)-(01, 37): RPAR(OP) ')'
[14](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): NAME(NAME) 'centsSingleOwned'
[15](01, 17)-(01, 18): EQUAL(OP) '='
[15](01, 19)-(01, 22): NAME(NAME) 'int'
[15](01, 22)-(01, 23): LPAR(OP) '('
[15](01, 23)-(01, 33): NAME(NAME) 'centsOwned'
[15](01, 34)-(01, 35): MINUS(OP) '-'
[15](01, 36)-(01, 37): LPAR(OP) '('
[15](01, 37)-(01, 51): NAME(NAME) 'centsTensOwned'
[15](01, 52)-(01, 53): STAR(OP) '*'
[15](01, 54)-(01, 56): NUMBER(NUMBER) '10'
[15](01, 56)-(01, 57): RPAR(OP) ')'
[15](01, 57)-(01, 58): RPAR(OP) ')'
[15](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 10): NAME(NAME) 'outputText'
[17](01, 11)-(01, 12): EQUAL(OP) '='
[17](01, 13)-(01, 16): NAME(NAME) 'str'
[17](01, 16)-(01, 17): LPAR(OP) '('
[17](01, 17)-(01, 27): NAME(NAME) 'eurosOwned'
[17](01, 27)-(01, 28): RPAR(OP) ')'
[17](01, 29)-(01, 30): PLUS(OP) '+'
[17](01, 31)-(01, 34): STRING(STRING) '"."'
[17](01, 35)-(01, 36): PLUS(OP) '+'
[17](01, 37)-(01, 40): NAME(NAME) 'str'
[17](01, 40)-(01, 41): LPAR(OP) '('
[17](01, 41)-(01, 55): NAME(NAME) 'centsTensOwned'
[17](01, 55)-(01, 56): RPAR(OP) ')'
[17](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 02): NAME(NAME) 'if'
[19](01, 03)-(01, 06): NAME(NAME) 'int'
[19](01, 06)-(01, 07): LPAR(OP) '('
[19](01, 07)-(01, 23): NAME(NAME) 'centsSingleOwned'
[19](01, 23)-(01, 24): RPAR(OP) ')'
[19](01, 25)-(01, 26): GREATER(OP) '>'
[19](01, 27)-(01, 28): NUMBER(NUMBER) '0'
[19](01, 28)-(01, 29): COLON(OP) ':'
[19](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 14): NAME(NAME) 'outputText'
[20](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[20](01, 18)-(01, 21): NAME(NAME) 'str'
[20](01, 21)-(01, 22): LPAR(OP) '('
[20](01, 22)-(01, 38): NAME(NAME) 'centsSingleOwned'
[20](01, 38)-(01, 39): RPAR(OP) ')'
[20](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 05): NAME(NAME) 'print'
[22](01, 05)-(01, 06): LPAR(OP) '('
[22](01, 06)-(01, 17): STRING(STRING) '"You have "'
[22](01, 17)-(01, 18): COMMA(OP) ','
[22](01, 19)-(01, 29): NAME(NAME) 'outputText'
[22](01, 29)-(01, 30): COMMA(OP) ','
[22](01, 31)-(01, 39): STRING(STRING) '" euro!"'
[22](01, 39)-(01, 40): COMMA(OP) ','
[22](01, 41)-(01, 44): NAME(NAME) 'sep'
[22](01, 44)-(01, 45): EQUAL(OP) '='
[22](01, 45)-(01, 47): STRING(STRING) '""'
[22](01, 47)-(01, 48): RPAR(OP) ')'
[22](01, 48)-(01, 49): NEWLINE(NEWLINE)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

