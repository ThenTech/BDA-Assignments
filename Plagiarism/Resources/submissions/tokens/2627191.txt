[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'merge_lists'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 21): NAME(NAME) 'list1'
[00](01, 21)-(01, 22): COMMA(OP) ','
[00](01, 23)-(01, 28): NAME(NAME) 'list2'
[00](01, 28)-(01, 29): RPAR(OP) ')'
[00](01, 29)-(01, 30): COLON(OP) ':'
[00](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 10): NAME(NAME) 'not'
[01](01, 11)-(01, 14): NAME(NAME) 'len'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 20): NAME(NAME) 'list1'
[01](01, 20)-(01, 21): RPAR(OP) ')'
[01](01, 22)-(01, 24): LESSEQUAL(OP) '<='
[01](01, 25)-(01, 28): NAME(NAME) 'len'
[01](01, 28)-(01, 29): LPAR(OP) '('
[01](01, 29)-(01, 34): NAME(NAME) 'list2'
[01](01, 34)-(01, 35): RPAR(OP) ')'
[01](01, 35)-(01, 36): COLON(OP) ':'
[01](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 13): NAME(NAME) 'list3'
[02](01, 14)-(01, 15): EQUAL(OP) '='
[02](01, 16)-(01, 21): NAME(NAME) 'list2'
[02](01, 21)-(01, 22): LSQB(OP) '['
[02](01, 22)-(01, 23): COLON(OP) ':'
[02](01, 23)-(01, 24): RSQB(OP) ']'
[02](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 13): NAME(NAME) 'list2'
[03](01, 14)-(01, 15): EQUAL(OP) '='
[03](01, 16)-(01, 21): NAME(NAME) 'list1'
[03](01, 21)-(01, 22): LSQB(OP) '['
[03](01, 22)-(01, 23): COLON(OP) ':'
[03](01, 23)-(01, 24): RSQB(OP) ']'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'list1'
[04](01, 14)-(01, 15): EQUAL(OP) '='
[04](01, 16)-(01, 21): NAME(NAME) 'list3'
[04](01, 21)-(01, 22): LSQB(OP) '['
[04](01, 22)-(01, 23): COLON(OP) ':'
[04](01, 23)-(01, 24): RSQB(OP) ']'
[04](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 04)-(01, 05): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 14): NAME(NAME) 'mergedlist'
[07](01, 15)-(01, 16): EQUAL(OP) '='
[07](01, 17)-(01, 18): LSQB(OP) '['
[07](01, 18)-(01, 19): RSQB(OP) ']'
[07](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 14): NAME(NAME) 'l1_counter'
[08](01, 15)-(01, 16): EQUAL(OP) '='
[08](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[08](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 14): NAME(NAME) 'l2_counter'
[09](01, 15)-(01, 16): EQUAL(OP) '='
[09](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[09](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 09): NAME(NAME) 'while'
[11](01, 10)-(01, 20): NAME(NAME) 'l1_counter'
[11](01, 21)-(01, 22): LESS(OP) '<'
[11](01, 23)-(01, 26): NAME(NAME) 'len'
[11](01, 26)-(01, 27): LPAR(OP) '('
[11](01, 27)-(01, 32): NAME(NAME) 'list1'
[11](01, 32)-(01, 33): RPAR(OP) ')'
[11](01, 33)-(01, 34): COLON(OP) ':'
[11](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 10): NAME(NAME) 'if'
[12](01, 11)-(01, 16): NAME(NAME) 'list1'
[12](01, 16)-(01, 17): LSQB(OP) '['
[12](01, 17)-(01, 27): NAME(NAME) 'l1_counter'
[12](01, 27)-(01, 28): RSQB(OP) ']'
[12](01, 29)-(01, 30): LESS(OP) '<'
[12](01, 31)-(01, 36): NAME(NAME) 'list2'
[12](01, 36)-(01, 37): LSQB(OP) '['
[12](01, 37)-(01, 47): NAME(NAME) 'l2_counter'
[12](01, 47)-(01, 48): RSQB(OP) ']'
[12](01, 48)-(01, 49): COLON(OP) ':'
[12](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 22): NAME(NAME) 'mergedlist'
[13](01, 22)-(01, 23): DOT(OP) '.'
[13](01, 23)-(01, 29): NAME(NAME) 'append'
[13](01, 29)-(01, 30): LSQB(OP) '['
[13](01, 30)-(01, 40): NAME(NAME) 'l1_counter'
[13](01, 40)-(01, 41): RSQB(OP) ']'
[13](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 22): NAME(NAME) 'l1_counter'
[14](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[14](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[14](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 12): NAME(NAME) 'else'
[15](01, 12)-(01, 13): COLON(OP) ':'
[15](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 22): NAME(NAME) 'mergedlist'
[16](01, 22)-(01, 23): DOT(OP) '.'
[16](01, 23)-(01, 29): NAME(NAME) 'append'
[16](01, 29)-(01, 30): LSQB(OP) '['
[16](01, 30)-(01, 40): NAME(NAME) 'l2_counter'
[16](01, 40)-(01, 41): RSQB(OP) ']'
[16](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 22): NAME(NAME) 'l2_counter'
[17](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[17](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[17](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 12)-(01, 13): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 07): NAME(NAME) 'for'
[19](01, 08)-(01, 12): NAME(NAME) 'item'
[19](01, 13)-(01, 15): NAME(NAME) 'in'
[19](01, 16)-(01, 21): NAME(NAME) 'list2'
[19](01, 21)-(01, 22): LSQB(OP) '['
[19](01, 22)-(01, 32): NAME(NAME) 'l2_counter'
[19](01, 32)-(01, 33): COLON(OP) ':'
[19](01, 33)-(01, 34): RSQB(OP) ']'
[19](01, 34)-(01, 35): COLON(OP) ':'
[19](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 18): NAME(NAME) 'mergedlist'
[20](01, 18)-(01, 19): DOT(OP) '.'
[20](01, 19)-(01, 25): NAME(NAME) 'append'
[20](01, 25)-(01, 26): LPAR(OP) '('
[20](01, 26)-(01, 30): NAME(NAME) 'item'
[20](01, 30)-(01, 31): RPAR(OP) ')'
[20](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 08)-(01, 09): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 03): NAME(NAME) 'def'
[24](01, 04)-(01, 14): NAME(NAME) 'merge_sort'
[24](01, 14)-(01, 15): LPAR(OP) '('
[24](01, 15)-(01, 16): NAME(NAME) 'l'
[24](01, 16)-(01, 17): RPAR(OP) ')'
[24](01, 17)-(01, 18): COLON(OP) ':'
[24](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 06): NAME(NAME) 'if'
[25](01, 07)-(01, 10): NAME(NAME) 'len'
[25](01, 10)-(01, 11): LPAR(OP) '('
[25](01, 11)-(01, 12): NAME(NAME) 'l'
[25](01, 12)-(01, 13): RPAR(OP) ')'
[25](01, 14)-(01, 16): LESSEQUAL(OP) '<='
[25](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[25](01, 18)-(01, 19): COLON(OP) ':'
[25](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 08): INDENT(INDENT) '        '
[26](01, 08)-(01, 14): NAME(NAME) 'return'
[26](01, 15)-(01, 16): NAME(NAME) 'l'
[26](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 06): NAME(NAME) 'if'
[27](01, 07)-(01, 10): NAME(NAME) 'len'
[27](01, 10)-(01, 11): LPAR(OP) '('
[27](01, 11)-(01, 12): NAME(NAME) 'l'
[27](01, 12)-(01, 13): RPAR(OP) ')'
[27](01, 14)-(01, 16): EQEQUAL(OP) '=='
[27](01, 17)-(01, 18): NUMBER(NUMBER) '2'
[27](01, 18)-(01, 19): COLON(OP) ':'
[27](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 08): INDENT(INDENT) '        '
[28](01, 08)-(01, 09): NAME(NAME) 'l'
[28](01, 10)-(01, 11): EQUAL(OP) '='
[28](01, 12)-(01, 13): NAME(NAME) 'l'
[28](01, 13)-(01, 14): DOT(OP) '.'
[28](01, 14)-(01, 18): NAME(NAME) 'sort'
[28](01, 18)-(01, 19): LPAR(OP) '('
[28](01, 19)-(01, 20): RPAR(OP) ')'
[28](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 14): NAME(NAME) 'return'
[29](01, 15)-(01, 16): NAME(NAME) 'l'
[29](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 08): NAME(NAME) 'else'
[30](01, 08)-(01, 09): COLON(OP) ':'
[30](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 12): NAME(NAME) 'half'
[31](01, 13)-(01, 14): EQUAL(OP) '='
[31](01, 15)-(01, 16): LPAR(OP) '('
[31](01, 16)-(01, 19): NAME(NAME) 'len'
[31](01, 19)-(01, 20): LPAR(OP) '('
[31](01, 20)-(01, 21): NAME(NAME) 'l'
[31](01, 21)-(01, 22): RPAR(OP) ')'
[31](01, 22)-(01, 24): DOUBLESLASH(OP) '//'
[31](01, 24)-(01, 25): NUMBER(NUMBER) '2'
[31](01, 25)-(01, 26): RPAR(OP) ')'
[31](01, 27)-(01, 28): MINUS(OP) '-'
[31](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[31](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 18): NAME(NAME) 'first_half'
[32](01, 19)-(01, 20): EQUAL(OP) '='
[32](01, 21)-(01, 31): NAME(NAME) 'merge_sort'
[32](01, 31)-(01, 32): LPAR(OP) '('
[32](01, 32)-(01, 33): NAME(NAME) 'l'
[32](01, 33)-(01, 34): LSQB(OP) '['
[32](01, 34)-(01, 35): COLON(OP) ':'
[32](01, 35)-(01, 39): NAME(NAME) 'half'
[32](01, 39)-(01, 40): RSQB(OP) ']'
[32](01, 40)-(01, 41): RPAR(OP) ')'
[32](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 19): NAME(NAME) 'second_half'
[33](01, 20)-(01, 21): EQUAL(OP) '='
[33](01, 22)-(01, 32): NAME(NAME) 'merge_sort'
[33](01, 32)-(01, 33): LPAR(OP) '('
[33](01, 33)-(01, 34): NAME(NAME) 'l'
[33](01, 34)-(01, 35): LSQB(OP) '['
[33](01, 35)-(01, 39): NAME(NAME) 'half'
[33](01, 39)-(01, 40): COLON(OP) ':'
[33](01, 40)-(01, 41): RSQB(OP) ']'
[33](01, 41)-(01, 42): RPAR(OP) ')'
[33](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 08): INDENT(INDENT) '        '
[34](01, 08)-(01, 14): NAME(NAME) 'return'
[34](01, 15)-(01, 26): NAME(NAME) 'merge_lists'
[34](01, 26)-(01, 27): LPAR(OP) '('
[34](01, 27)-(01, 37): NAME(NAME) 'first_half'
[34](01, 37)-(01, 38): COMMA(OP) ','
[34](01, 39)-(01, 50): NAME(NAME) 'second_half'
[34](01, 50)-(01, 51): RPAR(OP) ')'
[34](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 08)-(01, 09): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 08)-(01, 09): NL(NL) '\n'
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 04)-(01, 05): NL(NL) '\n'
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

