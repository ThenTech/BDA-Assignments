[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 11): NAME(NAME) 'punctuation'
[00](01, 12)-(01, 13): EQUAL(OP) '='
[00](01, 14)-(01, 61): STRING(STRING) '"!\\"#$%&\'()*+,-./:;<=>?@[\\\\]^_`{|}~0123456789 "'
[00](01, 61)-(01, 62): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'def'
[02](01, 04)-(01, 22): NAME(NAME) 'remove_punctuation'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 31): NAME(NAME) 'sentence'
[02](01, 31)-(01, 32): RPAR(OP) ')'
[02](01, 32)-(01, 33): COLON(OP) ':'
[02](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 16): NAME(NAME) 's_sans_punct'
[04](01, 17)-(01, 18): EQUAL(OP) '='
[04](01, 19)-(01, 21): STRING(STRING) '""'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 14): NAME(NAME) 'letter'
[05](01, 15)-(01, 17): NAME(NAME) 'in'
[05](01, 18)-(01, 26): NAME(NAME) 'sentence'
[05](01, 26)-(01, 27): COLON(OP) ':'
[05](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 17): NAME(NAME) 'letter'
[06](01, 18)-(01, 21): NAME(NAME) 'not'
[06](01, 22)-(01, 24): NAME(NAME) 'in'
[06](01, 25)-(01, 36): NAME(NAME) 'punctuation'
[06](01, 36)-(01, 37): COLON(OP) ':'
[06](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 24): NAME(NAME) 's_sans_punct'
[07](01, 25)-(01, 27): PLUSEQUAL(OP) '+='
[07](01, 28)-(01, 34): NAME(NAME) 'letter'
[07](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'else'
[08](01, 12)-(01, 13): COLON(OP) ':'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 24): NAME(NAME) 's_sans_punct'
[09](01, 25)-(01, 27): PLUSEQUAL(OP) '+='
[09](01, 28)-(01, 31): STRING(STRING) '" "'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'return'
[10](01, 11)-(01, 23): NAME(NAME) 's_sans_punct'
[10](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 03): NAME(NAME) 'def'
[13](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[13](01, 26)-(01, 27): LPAR(OP) '('
[13](01, 27)-(01, 35): NAME(NAME) 'sentence'
[13](01, 35)-(01, 36): RPAR(OP) ')'
[13](01, 36)-(01, 37): COLON(OP) ':'
[13](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 05): NAME(NAME) 'n'
[14](01, 06)-(01, 07): EQUAL(OP) '='
[14](01, 08)-(01, 11): NAME(NAME) 'len'
[14](01, 11)-(01, 12): LPAR(OP) '('
[14](01, 12)-(01, 20): NAME(NAME) 'sentence'
[14](01, 20)-(01, 21): RPAR(OP) ')'
[14](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 05): NAME(NAME) 'x'
[15](01, 06)-(01, 07): EQUAL(OP) '='
[15](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[15](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 06): NAME(NAME) 'if'
[16](01, 07)-(01, 15): NAME(NAME) 'sentence'
[16](01, 15)-(01, 16): LSQB(OP) '['
[16](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[16](01, 17)-(01, 18): RSQB(OP) ']'
[16](01, 19)-(01, 21): EQEQUAL(OP) '=='
[16](01, 22)-(01, 30): NAME(NAME) 'sentence'
[16](01, 30)-(01, 31): LSQB(OP) '['
[16](01, 31)-(01, 32): NAME(NAME) 'n'
[16](01, 33)-(01, 34): MINUS(OP) '-'
[16](01, 35)-(01, 36): NUMBER(NUMBER) '1'
[16](01, 36)-(01, 37): RSQB(OP) ']'
[16](01, 37)-(01, 38): COLON(OP) ':'
[16](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 10): NAME(NAME) 'if'
[17](01, 11)-(01, 19): NAME(NAME) 'sentence'
[17](01, 19)-(01, 20): LSQB(OP) '['
[17](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[17](01, 22)-(01, 23): PLUS(OP) '+'
[17](01, 24)-(01, 25): NAME(NAME) 'x'
[17](01, 25)-(01, 26): RSQB(OP) ']'
[17](01, 27)-(01, 29): EQEQUAL(OP) '=='
[17](01, 30)-(01, 38): NAME(NAME) 'sentence'
[17](01, 38)-(01, 39): LSQB(OP) '['
[17](01, 39)-(01, 40): NAME(NAME) 'n'
[17](01, 41)-(01, 42): MINUS(OP) '-'
[17](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[17](01, 45)-(01, 46): MINUS(OP) '-'
[17](01, 47)-(01, 48): NAME(NAME) 'x'
[17](01, 48)-(01, 49): RSQB(OP) ']'
[17](01, 49)-(01, 50): COLON(OP) ':'
[17](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 17): NAME(NAME) 'print'
[18](01, 17)-(01, 18): LPAR(OP) '('
[18](01, 18)-(01, 24): STRING(STRING) '"True"'
[18](01, 24)-(01, 25): RPAR(OP) ')'
[18](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 08): NAME(NAME) 'else'
[19](01, 08)-(01, 09): COLON(OP) ':'
[19](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 13): NAME(NAME) 'print'
[20](01, 13)-(01, 14): LPAR(OP) '('
[20](01, 14)-(01, 21): STRING(STRING) '"False"'
[20](01, 21)-(01, 22): RPAR(OP) ')'
[20](01, 22)-(01, 23): NEWLINE(NEWLINE)
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

