[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 's'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 07): NAME(NAME) 'str'
[00](01, 07)-(01, 08): LPAR(OP) '('
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 30): STRING(STRING) '"Enter a word: "'
[00](01, 30)-(01, 31): RPAR(OP) ')'
[00](01, 31)-(01, 32): RPAR(OP) ')'
[00](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'for'
[01](01, 04)-(01, 05): NAME(NAME) 'i'
[01](01, 06)-(01, 08): NAME(NAME) 'in'
[01](01, 09)-(01, 14): NAME(NAME) 'range'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[01](01, 16)-(01, 17): COMMA(OP) ','
[01](01, 18)-(01, 21): NAME(NAME) 'len'
[01](01, 21)-(01, 22): LPAR(OP) '('
[01](01, 22)-(01, 23): NAME(NAME) 's'
[01](01, 23)-(01, 24): RPAR(OP) ')'
[01](01, 24)-(01, 25): RPAR(OP) ')'
[01](01, 25)-(01, 26): COLON(OP) ':'
[01](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 08): NAME(NAME) 's'
[02](01, 08)-(01, 09): LSQB(OP) '['
[02](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[02](01, 10)-(01, 11): RSQB(OP) ']'
[02](01, 12)-(01, 14): EQEQUAL(OP) '=='
[02](01, 15)-(01, 16): NAME(NAME) 's'
[02](01, 16)-(01, 17): LSQB(OP) '['
[02](01, 17)-(01, 20): NAME(NAME) 'len'
[02](01, 20)-(01, 21): LPAR(OP) '('
[02](01, 21)-(01, 22): NAME(NAME) 's'
[02](01, 22)-(01, 23): RPAR(OP) ')'
[02](01, 24)-(01, 25): MINUS(OP) '-'
[02](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[02](01, 28)-(01, 29): MINUS(OP) '-'
[02](01, 30)-(01, 31): NAME(NAME) 'i'
[02](01, 31)-(01, 32): RSQB(OP) ']'
[02](01, 32)-(01, 33): COLON(OP) ':'
[02](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 09): NAME(NAME) 'v'
[03](01, 10)-(01, 11): EQUAL(OP) '='
[03](01, 12)-(01, 16): NAME(NAME) 'True'
[03](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 08): NAME(NAME) 'else'
[04](01, 08)-(01, 09): COLON(OP) ':'
[04](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 09): NAME(NAME) 'v'
[05](01, 10)-(01, 11): EQUAL(OP) '='
[05](01, 12)-(01, 17): NAME(NAME) 'False'
[05](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'break'
[06](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 02): NAME(NAME) 'if'
[08](01, 03)-(01, 04): NAME(NAME) 'v'
[08](01, 05)-(01, 07): EQEQUAL(OP) '=='
[08](01, 08)-(01, 12): NAME(NAME) 'True'
[08](01, 12)-(01, 13): COLON(OP) ':'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'print'
[09](01, 09)-(01, 10): LPAR(OP) '('
[09](01, 10)-(01, 11): NAME(NAME) 's'
[09](01, 11)-(01, 12): COMMA(OP) ','
[09](01, 13)-(01, 30): STRING(STRING) '"is a palindrome"'
[09](01, 30)-(01, 31): RPAR(OP) ')'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): NAME(NAME) 'else'
[10](01, 04)-(01, 05): COLON(OP) ':'
[10](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 09): NAME(NAME) 'print'
[11](01, 09)-(01, 10): LPAR(OP) '('
[11](01, 10)-(01, 11): NAME(NAME) 's'
[11](01, 11)-(01, 12): COMMA(OP) ','
[11](01, 13)-(01, 34): STRING(STRING) '"is not a palindrome"'
[11](01, 34)-(01, 35): RPAR(OP) ')'
[11](01, 35)-(01, 36): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

