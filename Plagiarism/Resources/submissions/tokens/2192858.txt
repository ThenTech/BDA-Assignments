[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 14): NAME(NAME) 'palindrome'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 18): NAME(NAME) 'lel'
[00](01, 18)-(01, 19): RPAR(OP) ')'
[00](01, 19)-(01, 20): COLON(OP) ':'
[00](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): INDENT(INDENT) '\t'
[01](01, 01)-(01, 08): NAME(NAME) 'alfabet'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 65): STRING(STRING) '"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"'
[01](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): INDENT(INDENT) '\t'
[02](01, 01)-(01, 14): NAME(NAME) 'zonder_tekens'
[02](01, 15)-(01, 16): EQUAL(OP) '='
[02](01, 17)-(01, 19): STRING(STRING) '""'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): INDENT(INDENT) '\t'
[03](01, 01)-(01, 04): NAME(NAME) 'for'
[03](01, 05)-(01, 06): NAME(NAME) 'x'
[03](01, 07)-(01, 09): NAME(NAME) 'in'
[03](01, 10)-(01, 13): NAME(NAME) 'lel'
[03](01, 13)-(01, 14): COLON(OP) ':'
[03](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[04](01, 02)-(01, 04): NAME(NAME) 'if'
[04](01, 05)-(01, 06): NAME(NAME) 'x'
[04](01, 07)-(01, 09): NAME(NAME) 'in'
[04](01, 10)-(01, 17): NAME(NAME) 'alfabet'
[04](01, 17)-(01, 18): COLON(OP) ':'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): INDENT(INDENT) '\t\t\t'
[05](01, 03)-(01, 16): NAME(NAME) 'zonder_tekens'
[05](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[05](01, 20)-(01, 21): NAME(NAME) 'x'
[05](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): INDENT(INDENT) '\t'
[06](01, 01)-(01, 06): NAME(NAME) 'hoofd'
[06](01, 07)-(01, 08): EQUAL(OP) '='
[06](01, 09)-(01, 22): NAME(NAME) 'zonder_tekens'
[06](01, 22)-(01, 23): DOT(OP) '.'
[06](01, 23)-(01, 28): NAME(NAME) 'upper'
[06](01, 28)-(01, 29): LPAR(OP) '('
[06](01, 29)-(01, 30): RPAR(OP) ')'
[06](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): INDENT(INDENT) '\t'
[07](01, 01)-(01, 07): NAME(NAME) 'return'
[07](01, 08)-(01, 13): NAME(NAME) 'hoofd'
[07](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 01)-(01, 02): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'def'
[09](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[09](01, 26)-(01, 27): LPAR(OP) '('
[09](01, 27)-(01, 35): NAME(NAME) 'sentence'
[09](01, 35)-(01, 36): RPAR(OP) ')'
[09](01, 36)-(01, 37): COLON(OP) ':'
[09](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): INDENT(INDENT) '\t'
[10](01, 01)-(01, 12): NAME(NAME) 'palindrome1'
[10](01, 13)-(01, 14): EQUAL(OP) '='
[10](01, 15)-(01, 17): STRING(STRING) '""'
[10](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): INDENT(INDENT) '\t'
[11](01, 01)-(01, 04): NAME(NAME) 'lel'
[11](01, 05)-(01, 06): EQUAL(OP) '='
[11](01, 07)-(01, 17): NAME(NAME) 'palindrome'
[11](01, 17)-(01, 18): LPAR(OP) '('
[11](01, 18)-(01, 26): NAME(NAME) 'sentence'
[11](01, 26)-(01, 27): RPAR(OP) ')'
[11](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): INDENT(INDENT) '\t'
[12](01, 01)-(01, 04): NAME(NAME) 'for'
[12](01, 05)-(01, 06): NAME(NAME) 'i'
[12](01, 07)-(01, 09): NAME(NAME) 'in'
[12](01, 10)-(01, 15): NAME(NAME) 'range'
[12](01, 15)-(01, 16): LPAR(OP) '('
[12](01, 16)-(01, 19): NAME(NAME) 'len'
[12](01, 19)-(01, 20): LPAR(OP) '('
[12](01, 20)-(01, 23): NAME(NAME) 'lel'
[12](01, 23)-(01, 24): RPAR(OP) ')'
[12](01, 24)-(01, 25): COMMA(OP) ','
[12](01, 26)-(01, 27): NUMBER(NUMBER) '0'
[12](01, 27)-(01, 28): COMMA(OP) ','
[12](01, 29)-(01, 30): MINUS(OP) '-'
[12](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[12](01, 31)-(01, 32): RPAR(OP) ')'
[12](01, 32)-(01, 33): COLON(OP) ':'
[12](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[13](01, 02)-(01, 13): NAME(NAME) 'palindrome1'
[13](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[13](01, 17)-(01, 20): NAME(NAME) 'lel'
[13](01, 20)-(01, 21): LSQB(OP) '['
[13](01, 21)-(01, 22): NAME(NAME) 'i'
[13](01, 23)-(01, 24): MINUS(OP) '-'
[13](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[13](01, 26)-(01, 27): RSQB(OP) ']'
[13](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): INDENT(INDENT) '\t'
[14](01, 01)-(01, 03): NAME(NAME) 'if'
[14](01, 04)-(01, 15): NAME(NAME) 'palindrome1'
[14](01, 16)-(01, 18): EQEQUAL(OP) '=='
[14](01, 19)-(01, 22): NAME(NAME) 'lel'
[14](01, 22)-(01, 23): COLON(OP) ':'
[14](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[15](01, 02)-(01, 08): NAME(NAME) 'return'
[15](01, 09)-(01, 13): NAME(NAME) 'True'
[15](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): INDENT(INDENT) '\t'
[16](01, 01)-(01, 05): NAME(NAME) 'else'
[16](01, 05)-(01, 06): COLON(OP) ':'
[16](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[17](01, 02)-(01, 08): NAME(NAME) 'return'
[17](01, 09)-(01, 14): NAME(NAME) 'False'
[17](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

