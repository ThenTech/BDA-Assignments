[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 12): NAME(NAME) 'is_prime'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 14): NAME(NAME) 'x'
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): COLON(OP) ':'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): NAME(NAME) 'x'
[01](01, 09)-(01, 10): LESS(OP) '<'
[01](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[01](01, 12)-(01, 13): COLON(OP) ':'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 20): NAME(NAME) 'False'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'elif'
[03](01, 09)-(01, 10): NAME(NAME) 'x'
[03](01, 11)-(01, 13): EQEQUAL(OP) '=='
[03](01, 14)-(01, 15): NUMBER(NUMBER) '3'
[03](01, 16)-(01, 18): NAME(NAME) 'or'
[03](01, 19)-(01, 20): NAME(NAME) 'x'
[03](01, 21)-(01, 23): EQEQUAL(OP) '=='
[03](01, 24)-(01, 25): NUMBER(NUMBER) '2'
[03](01, 25)-(01, 26): COLON(OP) ':'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 19): NAME(NAME) 'True'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'elif'
[05](01, 09)-(01, 10): NAME(NAME) 'x'
[05](01, 11)-(01, 13): EQEQUAL(OP) '=='
[05](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[05](01, 15)-(01, 16): COLON(OP) ':'
[05](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 14): NAME(NAME) 'return'
[06](01, 15)-(01, 20): NAME(NAME) 'False'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 08): NAME(NAME) 'elif'
[07](01, 09)-(01, 10): NAME(NAME) 'x'
[07](01, 11)-(01, 12): LESS(OP) '<'
[07](01, 13)-(01, 15): NUMBER(NUMBER) '10'
[07](01, 15)-(01, 16): COLON(OP) ':'
[07](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 12): LPAR(OP) '('
[08](01, 12)-(01, 13): NAME(NAME) 'x'
[08](01, 14)-(01, 15): PERCENT(OP) '%'
[08](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[08](01, 18)-(01, 20): EQEQUAL(OP) '=='
[08](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[08](01, 22)-(01, 23): RPAR(OP) ')'
[08](01, 24)-(01, 27): NAME(NAME) 'and'
[08](01, 28)-(01, 29): LPAR(OP) '('
[08](01, 29)-(01, 30): NAME(NAME) 'x'
[08](01, 31)-(01, 32): PERCENT(OP) '%'
[08](01, 33)-(01, 34): NAME(NAME) 'x'
[08](01, 35)-(01, 37): EQEQUAL(OP) '=='
[08](01, 38)-(01, 39): NUMBER(NUMBER) '0'
[08](01, 39)-(01, 40): RPAR(OP) ')'
[08](01, 40)-(01, 41): COLON(OP) ':'
[08](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 18): NAME(NAME) 'return'
[09](01, 19)-(01, 20): LPAR(OP) '('
[09](01, 20)-(01, 21): NAME(NAME) 'x'
[09](01, 22)-(01, 23): PERCENT(OP) '%'
[09](01, 24)-(01, 25): NUMBER(NUMBER) '2'
[09](01, 26)-(01, 28): NOTEQUAL(OP) '!='
[09](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[09](01, 30)-(01, 31): RPAR(OP) ')'
[09](01, 32)-(01, 35): NAME(NAME) 'and'
[09](01, 36)-(01, 37): LPAR(OP) '('
[09](01, 37)-(01, 38): NAME(NAME) 'x'
[09](01, 39)-(01, 40): PERCENT(OP) '%'
[09](01, 41)-(01, 42): NUMBER(NUMBER) '3'
[09](01, 43)-(01, 45): NOTEQUAL(OP) '!='
[09](01, 46)-(01, 47): NUMBER(NUMBER) '0'
[09](01, 47)-(01, 48): RPAR(OP) ')'
[09](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 08): NAME(NAME) 'else'
[10](01, 08)-(01, 09): COLON(OP) ':'
[10](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 12): LPAR(OP) '('
[11](01, 12)-(01, 13): NAME(NAME) 'x'
[11](01, 14)-(01, 15): PERCENT(OP) '%'
[11](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[11](01, 18)-(01, 20): EQEQUAL(OP) '=='
[11](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[11](01, 22)-(01, 23): RPAR(OP) ')'
[11](01, 24)-(01, 27): NAME(NAME) 'and'
[11](01, 28)-(01, 29): LPAR(OP) '('
[11](01, 29)-(01, 30): NAME(NAME) 'x'
[11](01, 31)-(01, 32): PERCENT(OP) '%'
[11](01, 33)-(01, 34): NAME(NAME) 'x'
[11](01, 35)-(01, 37): EQEQUAL(OP) '=='
[11](01, 38)-(01, 39): NUMBER(NUMBER) '0'
[11](01, 39)-(01, 40): RPAR(OP) ')'
[11](01, 40)-(01, 41): COLON(OP) ':'
[11](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 18): NAME(NAME) 'return'
[12](01, 19)-(01, 20): LPAR(OP) '('
[12](01, 20)-(01, 21): NAME(NAME) 'x'
[12](01, 22)-(01, 23): PERCENT(OP) '%'
[12](01, 24)-(01, 25): NUMBER(NUMBER) '2'
[12](01, 26)-(01, 28): NOTEQUAL(OP) '!='
[12](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[12](01, 30)-(01, 31): RPAR(OP) ')'
[12](01, 32)-(01, 35): NAME(NAME) 'and'
[12](01, 36)-(01, 37): LPAR(OP) '('
[12](01, 37)-(01, 38): NAME(NAME) 'x'
[12](01, 39)-(01, 40): PERCENT(OP) '%'
[12](01, 41)-(01, 42): NUMBER(NUMBER) '3'
[12](01, 43)-(01, 45): NOTEQUAL(OP) '!='
[12](01, 46)-(01, 47): NUMBER(NUMBER) '0'
[12](01, 47)-(01, 48): RPAR(OP) ')'
[12](01, 49)-(01, 52): NAME(NAME) 'and'
[12](01, 53)-(01, 54): LPAR(OP) '('
[12](01, 54)-(01, 55): NAME(NAME) 'x'
[12](01, 56)-(01, 57): PERCENT(OP) '%'
[12](01, 58)-(01, 59): NUMBER(NUMBER) '5'
[12](01, 60)-(01, 62): NOTEQUAL(OP) '!='
[12](01, 63)-(01, 64): NUMBER(NUMBER) '0'
[12](01, 64)-(01, 65): RPAR(OP) ')'
[12](01, 66)-(01, 69): NAME(NAME) 'and'
[12](01, 70)-(01, 71): LPAR(OP) '('
[12](01, 71)-(01, 72): NAME(NAME) 'x'
[12](01, 73)-(01, 74): PERCENT(OP) '%'
[12](01, 75)-(01, 76): NUMBER(NUMBER) '7'
[12](01, 77)-(01, 79): NOTEQUAL(OP) '!='
[12](01, 80)-(01, 81): NUMBER(NUMBER) '0'
[12](01, 81)-(01, 82): RPAR(OP) ')'
[12](01, 82)-(01, 83): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 03): NAME(NAME) 'def'
[14](01, 04)-(01, 19): NAME(NAME) 'all_primes_upto'
[14](01, 19)-(01, 20): LPAR(OP) '('
[14](01, 20)-(01, 21): NAME(NAME) 'x'
[14](01, 21)-(01, 22): RPAR(OP) ')'
[14](01, 22)-(01, 23): COLON(OP) ':'
[14](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'for'
[15](01, 08)-(01, 10): NAME(NAME) 'el'
[15](01, 11)-(01, 13): NAME(NAME) 'in'
[15](01, 14)-(01, 19): NAME(NAME) 'range'
[15](01, 19)-(01, 20): LPAR(OP) '('
[15](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[15](01, 21)-(01, 22): COMMA(OP) ','
[15](01, 22)-(01, 23): NAME(NAME) 'x'
[15](01, 23)-(01, 24): PLUS(OP) '+'
[15](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[15](01, 25)-(01, 26): RPAR(OP) ')'
[15](01, 26)-(01, 27): COLON(OP) ':'
[15](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 12): NAME(NAME) 'antw'
[16](01, 14)-(01, 15): EQUAL(OP) '='
[16](01, 16)-(01, 24): NAME(NAME) 'is_prime'
[16](01, 24)-(01, 25): LPAR(OP) '('
[16](01, 25)-(01, 27): NAME(NAME) 'el'
[16](01, 27)-(01, 28): RPAR(OP) ')'
[16](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 10): NAME(NAME) 'if'
[17](01, 11)-(01, 15): NAME(NAME) 'antw'
[17](01, 16)-(01, 18): NAME(NAME) 'is'
[17](01, 19)-(01, 23): NAME(NAME) 'True'
[17](01, 23)-(01, 24): COLON(OP) ':'
[17](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 17): NAME(NAME) 'print'
[18](01, 17)-(01, 18): LPAR(OP) '('
[18](01, 18)-(01, 20): NAME(NAME) 'el'
[18](01, 20)-(01, 21): RPAR(OP) ')'
[18](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 12)-(01, 13): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 03): NAME(NAME) 'def'
[20](01, 04)-(01, 13): NAME(NAME) 'factorize'
[20](01, 13)-(01, 14): LPAR(OP) '('
[20](01, 14)-(01, 15): NAME(NAME) 'x'
[20](01, 15)-(01, 16): RPAR(OP) ')'
[20](01, 16)-(01, 17): COLON(OP) ':'
[20](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 07): NAME(NAME) 'for'
[21](01, 08)-(01, 10): NAME(NAME) 'el'
[21](01, 11)-(01, 13): NAME(NAME) 'in'
[21](01, 14)-(01, 19): NAME(NAME) 'range'
[21](01, 19)-(01, 20): LPAR(OP) '('
[21](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[21](01, 21)-(01, 22): COMMA(OP) ','
[21](01, 22)-(01, 23): NAME(NAME) 'x'
[21](01, 23)-(01, 24): PLUS(OP) '+'
[21](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[21](01, 25)-(01, 26): RPAR(OP) ')'
[21](01, 26)-(01, 27): COLON(OP) ':'
[21](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 10): NAME(NAME) 'if'
[22](01, 11)-(01, 19): NAME(NAME) 'is_prime'
[22](01, 19)-(01, 20): LPAR(OP) '('
[22](01, 20)-(01, 22): NAME(NAME) 'el'
[22](01, 22)-(01, 23): RPAR(OP) ')'
[22](01, 24)-(01, 26): NAME(NAME) 'is'
[22](01, 27)-(01, 31): NAME(NAME) 'True'
[22](01, 31)-(01, 32): COLON(OP) ':'
[22](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 17): NAME(NAME) 'while'
[23](01, 18)-(01, 19): NAME(NAME) 'x'
[23](01, 19)-(01, 20): PERCENT(OP) '%'
[23](01, 20)-(01, 22): NAME(NAME) 'el'
[23](01, 23)-(01, 25): EQEQUAL(OP) '=='
[23](01, 26)-(01, 27): NUMBER(NUMBER) '0'
[23](01, 27)-(01, 28): COLON(OP) ':'
[23](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 16): INDENT(INDENT) '                '
[24](01, 16)-(01, 21): NAME(NAME) 'print'
[24](01, 21)-(01, 22): LPAR(OP) '('
[24](01, 22)-(01, 24): NAME(NAME) 'el'
[24](01, 24)-(01, 25): RPAR(OP) ')'
[24](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 16): INDENT(INDENT) '                '
[25](01, 16)-(01, 17): NAME(NAME) 'x'
[25](01, 18)-(01, 19): EQUAL(OP) '='
[25](01, 20)-(01, 21): NAME(NAME) 'x'
[25](01, 22)-(01, 23): SLASH(OP) '/'
[25](01, 24)-(01, 26): NAME(NAME) 'el'
[25](01, 26)-(01, 27): NEWLINE(NEWLINE)
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

