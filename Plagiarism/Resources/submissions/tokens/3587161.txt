[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'a'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 24): NAME(NAME) 'startingPosition'
[01](01, 24)-(01, 25): LPAR(OP) '('
[01](01, 25)-(01, 32): NAME(NAME) 'pattern'
[01](01, 32)-(01, 33): COMMA(OP) ','
[01](01, 34)-(01, 40): NAME(NAME) 'corpus'
[01](01, 40)-(01, 41): RPAR(OP) ')'
[01](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 14): NAME(NAME) 'tempString'
[02](01, 15)-(01, 16): EQUAL(OP) '='
[02](01, 17)-(01, 19): STRING(STRING) '""'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'while'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 12): NAME(NAME) 'a'
[03](01, 13)-(01, 15): NOTEQUAL(OP) '!='
[03](01, 16)-(01, 17): MINUS(OP) '-'
[03](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[03](01, 18)-(01, 19): RPAR(OP) ')'
[03](01, 19)-(01, 20): COLON(OP) ':'
[03](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 11): NAME(NAME) 'for'
[04](01, 12)-(01, 13): NAME(NAME) 'i'
[04](01, 14)-(01, 16): NAME(NAME) 'in'
[04](01, 17)-(01, 22): NAME(NAME) 'range'
[04](01, 22)-(01, 23): LPAR(OP) '('
[04](01, 23)-(01, 26): NAME(NAME) 'len'
[04](01, 26)-(01, 27): LPAR(OP) '('
[04](01, 27)-(01, 33): NAME(NAME) 'corpus'
[04](01, 33)-(01, 34): RPAR(OP) ')'
[04](01, 34)-(01, 35): RPAR(OP) ')'
[04](01, 35)-(01, 36): COLON(OP) ':'
[04](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 14): NAME(NAME) 'if'
[05](01, 15)-(01, 16): LPAR(OP) '('
[05](01, 16)-(01, 17): NAME(NAME) 'i'
[05](01, 18)-(01, 20): EQEQUAL(OP) '=='
[05](01, 21)-(01, 22): NAME(NAME) 'a'
[05](01, 23)-(01, 25): NAME(NAME) 'or'
[05](01, 26)-(01, 27): LPAR(OP) '('
[05](01, 27)-(01, 28): NAME(NAME) 'i'
[05](01, 29)-(01, 30): GREATER(OP) '>'
[05](01, 31)-(01, 32): NAME(NAME) 'a'
[05](01, 33)-(01, 36): NAME(NAME) 'and'
[05](01, 37)-(01, 38): LPAR(OP) '('
[05](01, 38)-(01, 39): NAME(NAME) 'i'
[05](01, 40)-(01, 41): MINUS(OP) '-'
[05](01, 42)-(01, 43): NAME(NAME) 'a'
[05](01, 43)-(01, 44): RPAR(OP) ')'
[05](01, 45)-(01, 46): LESS(OP) '<'
[05](01, 47)-(01, 50): NAME(NAME) 'len'
[05](01, 50)-(01, 51): LPAR(OP) '('
[05](01, 51)-(01, 62): NAME(NAME) 'replacement'
[05](01, 62)-(01, 63): RPAR(OP) ')'
[05](01, 63)-(01, 64): RPAR(OP) ')'
[05](01, 64)-(01, 65): RPAR(OP) ')'
[05](01, 65)-(01, 66): COLON(OP) ':'
[05](01, 66)-(01, 67): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 18): NAME(NAME) 'if'
[06](01, 19)-(01, 20): LPAR(OP) '('
[06](01, 20)-(01, 21): NAME(NAME) 'i'
[06](01, 22)-(01, 23): MINUS(OP) '-'
[06](01, 24)-(01, 25): NAME(NAME) 'a'
[06](01, 25)-(01, 26): RPAR(OP) ')'
[06](01, 27)-(01, 29): NOTEQUAL(OP) '!='
[06](01, 30)-(01, 33): NAME(NAME) 'len'
[06](01, 33)-(01, 34): LPAR(OP) '('
[06](01, 34)-(01, 41): NAME(NAME) 'pattern'
[06](01, 41)-(01, 42): RPAR(OP) ')'
[06](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 20): INDENT(INDENT) '                    '
[07](01, 20)-(01, 30): NAME(NAME) 'tempString'
[07](01, 31)-(01, 33): PLUSEQUAL(OP) '+='
[07](01, 34)-(01, 45): NAME(NAME) 'replacement'
[07](01, 45)-(01, 46): LSQB(OP) '['
[07](01, 46)-(01, 47): NAME(NAME) 'i'
[07](01, 47)-(01, 48): MINUS(OP) '-'
[07](01, 48)-(01, 49): NAME(NAME) 'a'
[07](01, 49)-(01, 50): RSQB(OP) ']'
[07](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 16): NAME(NAME) 'else'
[08](01, 16)-(01, 17): COLON(OP) ':'
[08](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 26): NAME(NAME) 'tempString'
[09](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[09](01, 30)-(01, 36): NAME(NAME) 'corpus'
[09](01, 36)-(01, 37): LSQB(OP) '['
[09](01, 37)-(01, 38): NAME(NAME) 'i'
[09](01, 38)-(01, 39): RSQB(OP) ']'
[09](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 09): NAME(NAME) 'a'
[10](01, 10)-(01, 11): EQUAL(OP) '='
[10](01, 12)-(01, 28): NAME(NAME) 'startingPosition'
[10](01, 28)-(01, 29): LPAR(OP) '('
[10](01, 29)-(01, 36): NAME(NAME) 'pattern'
[10](01, 36)-(01, 37): COMMA(OP) ','
[10](01, 38)-(01, 48): NAME(NAME) 'tempString'
[10](01, 48)-(01, 49): RPAR(OP) ')'
[10](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 14): NAME(NAME) 'corpus'
[11](01, 15)-(01, 16): EQUAL(OP) '='
[11](01, 17)-(01, 27): NAME(NAME) 'tempString'
[11](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 18): NAME(NAME) 'tempString'
[12](01, 19)-(01, 20): EQUAL(OP) '='
[12](01, 21)-(01, 23): STRING(STRING) '""'
[12](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 08)-(01, 09): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 10): NAME(NAME) 'return'
[14](01, 11)-(01, 21): NAME(NAME) 'tempString'
[14](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 03): NAME(NAME) 'def'
[16](01, 04)-(01, 20): NAME(NAME) 'startingPosition'
[16](01, 20)-(01, 21): LPAR(OP) '('
[16](01, 21)-(01, 28): NAME(NAME) 'pattern'
[16](01, 28)-(01, 29): COMMA(OP) ','
[16](01, 30)-(01, 36): NAME(NAME) 'corpus'
[16](01, 36)-(01, 37): RPAR(OP) ')'
[16](01, 37)-(01, 38): COLON(OP) ':'
[16](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 15): NAME(NAME) 'startingPos'
[17](01, 16)-(01, 17): EQUAL(OP) '='
[17](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[17](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 04)-(01, 05): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 20): NAME(NAME) 'patternLetterPos'
[19](01, 21)-(01, 22): EQUAL(OP) '='
[19](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[19](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 07): NAME(NAME) 'for'
[20](01, 08)-(01, 09): NAME(NAME) 'i'
[20](01, 10)-(01, 12): NAME(NAME) 'in'
[20](01, 13)-(01, 18): NAME(NAME) 'range'
[20](01, 18)-(01, 19): LPAR(OP) '('
[20](01, 19)-(01, 22): NAME(NAME) 'len'
[20](01, 22)-(01, 23): LPAR(OP) '('
[20](01, 23)-(01, 29): NAME(NAME) 'corpus'
[20](01, 29)-(01, 30): RPAR(OP) ')'
[20](01, 30)-(01, 31): RPAR(OP) ')'
[20](01, 31)-(01, 32): COLON(OP) ':'
[20](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 10): NAME(NAME) 'if'
[21](01, 11)-(01, 27): NAME(NAME) 'patternLetterPos'
[21](01, 28)-(01, 30): NOTEQUAL(OP) '!='
[21](01, 31)-(01, 34): NAME(NAME) 'len'
[21](01, 34)-(01, 35): LPAR(OP) '('
[21](01, 35)-(01, 42): NAME(NAME) 'pattern'
[21](01, 42)-(01, 43): RPAR(OP) ')'
[21](01, 43)-(01, 44): COLON(OP) ':'
[21](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 14): NAME(NAME) 'if'
[22](01, 15)-(01, 21): NAME(NAME) 'corpus'
[22](01, 21)-(01, 22): LSQB(OP) '['
[22](01, 22)-(01, 23): NAME(NAME) 'i'
[22](01, 23)-(01, 24): RSQB(OP) ']'
[22](01, 25)-(01, 27): EQEQUAL(OP) '=='
[22](01, 28)-(01, 35): NAME(NAME) 'pattern'
[22](01, 35)-(01, 36): LSQB(OP) '['
[22](01, 36)-(01, 52): NAME(NAME) 'patternLetterPos'
[22](01, 52)-(01, 53): RSQB(OP) ']'
[22](01, 54)-(01, 57): NAME(NAME) 'and'
[22](01, 58)-(01, 74): NAME(NAME) 'patternLetterPos'
[22](01, 75)-(01, 77): EQEQUAL(OP) '=='
[22](01, 78)-(01, 79): NUMBER(NUMBER) '0'
[22](01, 79)-(01, 80): COLON(OP) ':'
[22](01, 80)-(01, 81): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 16): INDENT(INDENT) '                '
[23](01, 16)-(01, 27): NAME(NAME) 'startingPos'
[23](01, 28)-(01, 29): EQUAL(OP) '='
[23](01, 30)-(01, 31): NAME(NAME) 'i'
[23](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 16): INDENT(INDENT) '                '
[24](01, 16)-(01, 32): NAME(NAME) 'patternLetterPos'
[24](01, 33)-(01, 35): PLUSEQUAL(OP) '+='
[24](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[24](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 04)-(01, 05): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 12): INDENT(INDENT) '            '
[26](01, 12)-(01, 16): NAME(NAME) 'elif'
[26](01, 17)-(01, 23): NAME(NAME) 'corpus'
[26](01, 23)-(01, 24): LSQB(OP) '['
[26](01, 24)-(01, 25): NAME(NAME) 'i'
[26](01, 25)-(01, 26): RSQB(OP) ']'
[26](01, 27)-(01, 29): NOTEQUAL(OP) '!='
[26](01, 30)-(01, 37): NAME(NAME) 'pattern'
[26](01, 37)-(01, 38): LSQB(OP) '['
[26](01, 38)-(01, 54): NAME(NAME) 'patternLetterPos'
[26](01, 54)-(01, 55): RSQB(OP) ']'
[26](01, 55)-(01, 56): COLON(OP) ':'
[26](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 16): INDENT(INDENT) '                '
[27](01, 16)-(01, 27): NAME(NAME) 'startingPos'
[27](01, 28)-(01, 29): EQUAL(OP) '='
[27](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[27](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 16): INDENT(INDENT) '                '
[28](01, 16)-(01, 32): NAME(NAME) 'patternLetterPos'
[28](01, 33)-(01, 34): EQUAL(OP) '='
[28](01, 35)-(01, 36): NUMBER(NUMBER) '0'
[28](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 16)-(01, 17): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 16): NAME(NAME) 'elif'
[30](01, 17)-(01, 23): NAME(NAME) 'corpus'
[30](01, 23)-(01, 24): LSQB(OP) '['
[30](01, 24)-(01, 25): NAME(NAME) 'i'
[30](01, 25)-(01, 26): RSQB(OP) ']'
[30](01, 27)-(01, 29): EQEQUAL(OP) '=='
[30](01, 30)-(01, 37): NAME(NAME) 'pattern'
[30](01, 37)-(01, 38): LSQB(OP) '['
[30](01, 38)-(01, 54): NAME(NAME) 'patternLetterPos'
[30](01, 54)-(01, 55): RSQB(OP) ']'
[30](01, 55)-(01, 56): COLON(OP) ':'
[30](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 16): INDENT(INDENT) '                '
[31](01, 16)-(01, 32): NAME(NAME) 'patternLetterPos'
[31](01, 33)-(01, 35): PLUSEQUAL(OP) '+='
[31](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[31](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 04)-(01, 05): NL(NL) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 12): NAME(NAME) 'else'
[33](01, 12)-(01, 13): COLON(OP) ':'
[33](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 12): INDENT(INDENT) '            '
[34](01, 12)-(01, 18): NAME(NAME) 'return'
[34](01, 19)-(01, 30): NAME(NAME) 'startingPos'
[34](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 04)-(01, 05): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 04): INDENT(INDENT) '    '
[36](01, 04)-(01, 10): NAME(NAME) 'return'
[36](01, 11)-(01, 12): MINUS(OP) '-'
[36](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[36](01, 13)-(01, 14): NEWLINE(NEWLINE)
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

