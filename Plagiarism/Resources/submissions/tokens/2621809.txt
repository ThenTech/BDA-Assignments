[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'def'
[01](01, 04)-(01, 07): NAME(NAME) 'DNA'
[01](01, 07)-(01, 08): LPAR(OP) '('
[01](01, 08)-(01, 12): NAME(NAME) 'list'
[01](01, 12)-(01, 13): COMMA(OP) ','
[01](01, 14)-(01, 20): NAME(NAME) 'length'
[01](01, 20)-(01, 21): RPAR(OP) ')'
[01](01, 21)-(01, 22): COLON(OP) ':'
[01](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 14): NAME(NAME) 'returnlist'
[02](01, 15)-(01, 16): EQUAL(OP) '='
[02](01, 17)-(01, 18): LSQB(OP) '['
[02](01, 18)-(01, 19): RSQB(OP) ']'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 11): NAME(NAME) 'DNAlist'
[03](01, 12)-(01, 13): EQUAL(OP) '='
[03](01, 14)-(01, 15): LSQB(OP) '['
[03](01, 15)-(01, 18): STRING(STRING) "'A'"
[03](01, 18)-(01, 19): COMMA(OP) ','
[03](01, 20)-(01, 23): STRING(STRING) "'C'"
[03](01, 23)-(01, 24): COMMA(OP) ','
[03](01, 25)-(01, 28): STRING(STRING) "'G'"
[03](01, 28)-(01, 29): COMMA(OP) ','
[03](01, 30)-(01, 33): STRING(STRING) "'T'"
[03](01, 33)-(01, 34): RSQB(OP) ']'
[03](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 04)-(01, 05): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 04)-(01, 05): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 06): NAME(NAME) 'if'
[06](01, 07)-(01, 13): NAME(NAME) 'length'
[06](01, 14)-(01, 16): GREATEREQUAL(OP) '>='
[06](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[06](01, 18)-(01, 19): COLON(OP) ':'
[06](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 14): NAME(NAME) 'len'
[07](01, 14)-(01, 15): LPAR(OP) '('
[07](01, 15)-(01, 19): NAME(NAME) 'list'
[07](01, 19)-(01, 20): RPAR(OP) ')'
[07](01, 21)-(01, 23): EQEQUAL(OP) '=='
[07](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[07](01, 25)-(01, 26): COLON(OP) ':'
[07](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 15): NAME(NAME) 'for'
[08](01, 16)-(01, 22): NAME(NAME) 'nucleo'
[08](01, 23)-(01, 25): NAME(NAME) 'in'
[08](01, 26)-(01, 33): NAME(NAME) 'DNAlist'
[08](01, 33)-(01, 34): COLON(OP) ':'
[08](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 26): NAME(NAME) 'returnlist'
[09](01, 26)-(01, 27): DOT(OP) '.'
[09](01, 27)-(01, 33): NAME(NAME) 'append'
[09](01, 33)-(01, 34): LPAR(OP) '('
[09](01, 34)-(01, 40): NAME(NAME) 'nucleo'
[09](01, 40)-(01, 41): RPAR(OP) ')'
[09](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 12): NAME(NAME) 'else'
[10](01, 12)-(01, 13): COLON(OP) ':'
[10](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 15): NAME(NAME) 'for'
[11](01, 16)-(01, 20): NAME(NAME) 'item'
[11](01, 21)-(01, 23): NAME(NAME) 'in'
[11](01, 24)-(01, 29): NAME(NAME) 'range'
[11](01, 29)-(01, 30): LPAR(OP) '('
[11](01, 30)-(01, 33): NAME(NAME) 'len'
[11](01, 33)-(01, 34): LPAR(OP) '('
[11](01, 34)-(01, 38): NAME(NAME) 'list'
[11](01, 38)-(01, 39): RPAR(OP) ')'
[11](01, 39)-(01, 40): RPAR(OP) ')'
[11](01, 40)-(01, 41): COLON(OP) ':'
[11](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 24): NAME(NAME) 'previous'
[12](01, 25)-(01, 26): EQUAL(OP) '='
[12](01, 27)-(01, 31): NAME(NAME) 'list'
[12](01, 31)-(01, 32): LSQB(OP) '['
[12](01, 32)-(01, 36): NAME(NAME) 'item'
[12](01, 36)-(01, 37): RSQB(OP) ']'
[12](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 19): NAME(NAME) 'for'
[13](01, 20)-(01, 26): NAME(NAME) 'nucleo'
[13](01, 27)-(01, 29): NAME(NAME) 'in'
[13](01, 30)-(01, 37): NAME(NAME) 'DNAlist'
[13](01, 37)-(01, 38): COLON(OP) ':'
[13](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 20): INDENT(INDENT) '                    '
[14](01, 20)-(01, 24): NAME(NAME) 'next'
[14](01, 25)-(01, 26): EQUAL(OP) '='
[14](01, 27)-(01, 35): NAME(NAME) 'previous'
[14](01, 36)-(01, 37): PLUS(OP) '+'
[14](01, 38)-(01, 44): NAME(NAME) 'nucleo'
[14](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 20): INDENT(INDENT) '                    '
[15](01, 20)-(01, 30): NAME(NAME) 'returnlist'
[15](01, 30)-(01, 31): DOT(OP) '.'
[15](01, 31)-(01, 37): NAME(NAME) 'append'
[15](01, 37)-(01, 38): LPAR(OP) '('
[15](01, 38)-(01, 42): NAME(NAME) 'next'
[15](01, 42)-(01, 43): RPAR(OP) ')'
[15](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 08)-(01, 09): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 18): NAME(NAME) 'returnlist'
[17](01, 19)-(01, 20): EQUAL(OP) '='
[17](01, 21)-(01, 24): NAME(NAME) 'DNA'
[17](01, 24)-(01, 25): LPAR(OP) '('
[17](01, 25)-(01, 34): NAME(NAME) 'returlist'
[17](01, 34)-(01, 35): COMMA(OP) ','
[17](01, 36)-(01, 41): NAME(NAME) 'lenth'
[17](01, 41)-(01, 42): MINUS(OP) '-'
[17](01, 42)-(01, 43): NUMBER(NUMBER) '1'
[17](01, 43)-(01, 44): RPAR(OP) ')'
[17](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 20)-(01, 21): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 04)-(01, 05): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 08): NAME(NAME) 'else'
[20](01, 08)-(01, 09): COLON(OP) ':'
[20](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 14): NAME(NAME) 'return'
[21](01, 15)-(01, 25): NAME(NAME) 'returnlist'
[21](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 04)-(01, 05): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 04)-(01, 05): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): NAME(NAME) 'list'
[25](01, 05)-(01, 06): EQUAL(OP) '='
[25](01, 07)-(01, 08): LSQB(OP) '['
[25](01, 08)-(01, 09): RSQB(OP) ']'
[25](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 06): NAME(NAME) 'length'
[26](01, 07)-(01, 08): EQUAL(OP) '='
[26](01, 09)-(01, 12): NAME(NAME) 'int'
[26](01, 12)-(01, 13): LPAR(OP) '('
[26](01, 13)-(01, 18): NAME(NAME) 'input'
[26](01, 18)-(01, 19): LPAR(OP) '('
[26](01, 19)-(01, 37): STRING(STRING) "'Please input n: '"
[26](01, 37)-(01, 38): RPAR(OP) ')'
[26](01, 38)-(01, 39): RPAR(OP) ')'
[26](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): NAME(NAME) 'list'
[27](01, 05)-(01, 06): EQUAL(OP) '='
[27](01, 07)-(01, 10): NAME(NAME) 'DNA'
[27](01, 10)-(01, 11): LPAR(OP) '('
[27](01, 11)-(01, 15): NAME(NAME) 'list'
[27](01, 15)-(01, 16): COMMA(OP) ','
[27](01, 17)-(01, 23): NAME(NAME) 'length'
[27](01, 23)-(01, 24): RPAR(OP) ')'
[27](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 01): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 03): NAME(NAME) 'for'
[29](01, 04)-(01, 08): NAME(NAME) 'item'
[29](01, 09)-(01, 11): NAME(NAME) 'in'
[29](01, 12)-(01, 16): NAME(NAME) 'list'
[29](01, 16)-(01, 17): COLON(OP) ':'
[29](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 09): NAME(NAME) 'print'
[30](01, 09)-(01, 10): LPAR(OP) '('
[30](01, 10)-(01, 14): NAME(NAME) 'item'
[30](01, 14)-(01, 15): RPAR(OP) ')'
[30](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 04)-(01, 05): NL(NL) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 01): NL(NL) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

