[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): NAME(NAME) 'list'
[01](01, 05)-(01, 06): EQUAL(OP) '='
[01](01, 07)-(01, 12): NAME(NAME) 'input'
[01](01, 12)-(01, 13): LPAR(OP) '('
[01](01, 13)-(01, 14): RPAR(OP) ')'
[01](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): NAME(NAME) 'list'
[02](01, 05)-(01, 06): EQUAL(OP) '='
[02](01, 06)-(01, 10): NAME(NAME) 'list'
[02](01, 10)-(01, 11): DOT(OP) '.'
[02](01, 11)-(01, 16): NAME(NAME) 'split'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 18): RPAR(OP) ')'
[02](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 06): NAME(NAME) 'vorige'
[03](01, 07)-(01, 08): EQUAL(OP) '='
[03](01, 09)-(01, 11): STRING(STRING) '""'
[03](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'def'
[04](01, 04)-(01, 11): NAME(NAME) 'checker'
[04](01, 11)-(01, 12): LPAR(OP) '('
[04](01, 12)-(01, 16): NAME(NAME) 'list'
[04](01, 16)-(01, 17): COMMA(OP) ','
[04](01, 17)-(01, 23): NAME(NAME) 'vorige'
[04](01, 23)-(01, 24): RPAR(OP) ')'
[04](01, 24)-(01, 25): COLON(OP) ':'
[04](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 10): NAME(NAME) 'len'
[05](01, 10)-(01, 11): LPAR(OP) '('
[05](01, 11)-(01, 15): NAME(NAME) 'list'
[05](01, 15)-(01, 16): RPAR(OP) ')'
[05](01, 17)-(01, 19): EQEQUAL(OP) '=='
[05](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[05](01, 20)-(01, 21): COLON(OP) ':'
[05](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 14): NAME(NAME) 'return'
[06](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 08): NAME(NAME) 'else'
[07](01, 08)-(01, 09): COLON(OP) ':'
[07](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 16): NAME(NAME) 'new_list'
[08](01, 17)-(01, 18): EQUAL(OP) '='
[08](01, 19)-(01, 23): NAME(NAME) 'list'
[08](01, 23)-(01, 24): LSQB(OP) '['
[08](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[08](01, 25)-(01, 26): COLON(OP) ':'
[08](01, 26)-(01, 27): RSQB(OP) ']'
[08](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 18): NAME(NAME) 'new_vorige'
[09](01, 19)-(01, 20): EQUAL(OP) '='
[09](01, 21)-(01, 27): NAME(NAME) 'vorige'
[09](01, 28)-(01, 29): PLUS(OP) '+'
[09](01, 30)-(01, 34): NAME(NAME) 'list'
[09](01, 34)-(01, 35): LSQB(OP) '['
[09](01, 35)-(01, 36): NUMBER(NUMBER) '0'
[09](01, 36)-(01, 37): RSQB(OP) ']'
[09](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 15): NAME(NAME) 'checker'
[10](01, 15)-(01, 16): LPAR(OP) '('
[10](01, 16)-(01, 24): NAME(NAME) 'new_list'
[10](01, 24)-(01, 25): COMMA(OP) ','
[10](01, 25)-(01, 35): NAME(NAME) 'new_vorige'
[10](01, 35)-(01, 36): RPAR(OP) ')'
[10](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 11): NAME(NAME) 'for'
[11](01, 12)-(01, 13): NAME(NAME) 'i'
[11](01, 14)-(01, 16): NAME(NAME) 'in'
[11](01, 17)-(01, 22): NAME(NAME) 'range'
[11](01, 22)-(01, 23): LPAR(OP) '('
[11](01, 23)-(01, 26): NAME(NAME) 'len'
[11](01, 26)-(01, 27): LPAR(OP) '('
[11](01, 27)-(01, 37): NAME(NAME) 'new_vorige'
[11](01, 37)-(01, 38): RPAR(OP) ')'
[11](01, 38)-(01, 39): MINUS(OP) '-'
[11](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[11](01, 40)-(01, 41): RPAR(OP) ')'
[11](01, 41)-(01, 42): COLON(OP) ':'
[11](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 21): NAME(NAME) 'printbaar'
[12](01, 22)-(01, 23): EQUAL(OP) '='
[12](01, 24)-(01, 34): NAME(NAME) 'new_vorige'
[12](01, 34)-(01, 35): LSQB(OP) '['
[12](01, 35)-(01, 36): NAME(NAME) 'i'
[12](01, 36)-(01, 37): RSQB(OP) ']'
[12](01, 38)-(01, 39): PLUS(OP) '+'
[12](01, 40)-(01, 41): LPAR(OP) '('
[12](01, 41)-(01, 44): STRING(STRING) '" "'
[12](01, 44)-(01, 45): STAR(OP) '*'
[12](01, 45)-(01, 46): NAME(NAME) 'i'
[12](01, 46)-(01, 47): RPAR(OP) ')'
[12](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 13): NAME(NAME) 'print'
[13](01, 13)-(01, 14): LPAR(OP) '('
[13](01, 14)-(01, 23): NAME(NAME) 'printbaar'
[13](01, 23)-(01, 24): RPAR(OP) ')'
[13](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 15): NAME(NAME) 'checker'
[14](01, 15)-(01, 16): LPAR(OP) '('
[14](01, 16)-(01, 24): NAME(NAME) 'new_list'
[14](01, 24)-(01, 25): COMMA(OP) ','
[14](01, 25)-(01, 31): NAME(NAME) 'vorige'
[14](01, 31)-(01, 32): RPAR(OP) ')'
[14](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 07): NAME(NAME) 'checker'
[15](01, 07)-(01, 08): LPAR(OP) '('
[15](01, 08)-(01, 12): NAME(NAME) 'list'
[15](01, 12)-(01, 13): COMMA(OP) ','
[15](01, 13)-(01, 19): NAME(NAME) 'vorige'
[15](01, 19)-(01, 20): RPAR(OP) ')'
[15](01, 20)-(01, 21): NEWLINE(NEWLINE)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

