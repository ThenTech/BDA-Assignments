[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 11): NAME(NAME) 'select_form'
[00](01, 12)-(01, 13): EQUAL(OP) '='
[00](01, 14)-(01, 19): NAME(NAME) 'input'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 41): STRING(STRING) '"encode of decode = "'
[00](01, 41)-(01, 42): RPAR(OP) ')'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'string'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 14): NAME(NAME) 'input'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 24): STRING(STRING) '"input: "'
[01](01, 24)-(01, 25): RPAR(OP) ')'
[01](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'n'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 07): NAME(NAME) 'int'
[02](01, 07)-(01, 08): LPAR(OP) '('
[02](01, 08)-(01, 13): NAME(NAME) 'input'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 28): STRING(STRING) '"aantal pos: "'
[02](01, 28)-(01, 29): RPAR(OP) ')'
[02](01, 29)-(01, 30): RPAR(OP) ')'
[02](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 10): NAME(NAME) 'encode'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 17): NAME(NAME) 'string'
[03](01, 17)-(01, 18): COMMA(OP) ','
[03](01, 19)-(01, 20): NAME(NAME) 'n'
[03](01, 20)-(01, 21): RPAR(OP) ')'
[03](01, 21)-(01, 22): COLON(OP) ':'
[03](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 19): NAME(NAME) 'string'
[04](01, 19)-(01, 20): COLON(OP) ':'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 12): NAME(NAME) 'i'
[05](01, 13)-(01, 14): GREATER(OP) '>'
[05](01, 15)-(01, 18): STRING(STRING) '"a"'
[05](01, 19)-(01, 21): NAME(NAME) 'or'
[05](01, 22)-(01, 23): NAME(NAME) 'i'
[05](01, 24)-(01, 25): LESS(OP) '<'
[05](01, 26)-(01, 29): STRING(STRING) '"z"'
[05](01, 29)-(01, 30): COLON(OP) ':'
[05](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 15): NAME(NAME) 'res'
[06](01, 16)-(01, 17): EQUAL(OP) '='
[06](01, 18)-(01, 20): STRING(STRING) '""'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 17): NAME(NAME) 'ASCII'
[07](01, 18)-(01, 19): EQUAL(OP) '='
[07](01, 20)-(01, 23): NAME(NAME) 'ord'
[07](01, 23)-(01, 24): LPAR(OP) '('
[07](01, 24)-(01, 25): NAME(NAME) 'i'
[07](01, 25)-(01, 26): RPAR(OP) ')'
[07](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 13): NAME(NAME) 'f'
[08](01, 14)-(01, 15): EQUAL(OP) '='
[08](01, 16)-(01, 21): NAME(NAME) 'ASCII'
[08](01, 22)-(01, 23): PLUS(OP) '+'
[08](01, 24)-(01, 25): NAME(NAME) 'n'
[08](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 14): NAME(NAME) 'if'
[09](01, 15)-(01, 16): NAME(NAME) 'f'
[09](01, 17)-(01, 18): GREATER(OP) '>'
[09](01, 19)-(01, 22): NUMBER(NUMBER) '122'
[09](01, 22)-(01, 23): COLON(OP) ':'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 17): NAME(NAME) 'f'
[10](01, 18)-(01, 20): MINEQUAL(OP) '-='
[10](01, 21)-(01, 23): NUMBER(NUMBER) '26'
[10](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 25): NAME(NAME) 'letter_encode'
[11](01, 26)-(01, 27): EQUAL(OP) '='
[11](01, 28)-(01, 31): NAME(NAME) 'chr'
[11](01, 31)-(01, 32): LPAR(OP) '('
[11](01, 32)-(01, 33): NAME(NAME) 'f'
[11](01, 33)-(01, 34): RPAR(OP) ')'
[11](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 15): NAME(NAME) 'res'
[12](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[12](01, 19)-(01, 32): NAME(NAME) 'letter_encode'
[12](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 12): NAME(NAME) 'else'
[13](01, 12)-(01, 13): COLON(OP) ':'
[13](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 15): NAME(NAME) 'res'
[14](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[14](01, 19)-(01, 20): NAME(NAME) 'i'
[14](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 10): NAME(NAME) 'return'
[15](01, 11)-(01, 14): NAME(NAME) 'res'
[15](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 03): NAME(NAME) 'def'
[17](01, 04)-(01, 10): NAME(NAME) 'decode'
[17](01, 10)-(01, 11): LPAR(OP) '('
[17](01, 11)-(01, 17): NAME(NAME) 'string'
[17](01, 17)-(01, 18): COMMA(OP) ','
[17](01, 19)-(01, 20): NAME(NAME) 'n'
[17](01, 20)-(01, 21): RPAR(OP) ')'
[17](01, 21)-(01, 22): COLON(OP) ':'
[17](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 07): NAME(NAME) 'for'
[18](01, 08)-(01, 09): NAME(NAME) 'i'
[18](01, 10)-(01, 12): NAME(NAME) 'in'
[18](01, 13)-(01, 19): NAME(NAME) 'string'
[18](01, 19)-(01, 20): COLON(OP) ':'
[18](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 10): NAME(NAME) 'if'
[19](01, 11)-(01, 12): NAME(NAME) 'i'
[19](01, 13)-(01, 14): GREATER(OP) '>'
[19](01, 15)-(01, 18): STRING(STRING) '"a"'
[19](01, 19)-(01, 21): NAME(NAME) 'or'
[19](01, 22)-(01, 23): NAME(NAME) 'i'
[19](01, 24)-(01, 25): LESS(OP) '<'
[19](01, 26)-(01, 29): STRING(STRING) '"z"'
[19](01, 29)-(01, 30): COLON(OP) ':'
[19](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 15): NAME(NAME) 'res'
[20](01, 16)-(01, 17): EQUAL(OP) '='
[20](01, 18)-(01, 20): STRING(STRING) '""'
[20](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 17): NAME(NAME) 'ASCII'
[21](01, 18)-(01, 19): EQUAL(OP) '='
[21](01, 20)-(01, 23): NAME(NAME) 'ord'
[21](01, 23)-(01, 24): LPAR(OP) '('
[21](01, 24)-(01, 25): NAME(NAME) 'i'
[21](01, 25)-(01, 26): RPAR(OP) ')'
[21](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 13): NAME(NAME) 'f'
[22](01, 14)-(01, 15): EQUAL(OP) '='
[22](01, 16)-(01, 21): NAME(NAME) 'ASCII'
[22](01, 22)-(01, 23): MINUS(OP) '-'
[22](01, 24)-(01, 25): NAME(NAME) 'n'
[22](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 14): NAME(NAME) 'if'
[23](01, 15)-(01, 16): NAME(NAME) 'f'
[23](01, 17)-(01, 18): LESS(OP) '<'
[23](01, 19)-(01, 21): NUMBER(NUMBER) '97'
[23](01, 21)-(01, 22): COLON(OP) ':'
[23](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 16): INDENT(INDENT) '                '
[24](01, 16)-(01, 17): NAME(NAME) 'f'
[24](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[24](01, 21)-(01, 23): NUMBER(NUMBER) '26'
[24](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 25): NAME(NAME) 'letter_decode'
[25](01, 26)-(01, 27): EQUAL(OP) '='
[25](01, 28)-(01, 31): NAME(NAME) 'chr'
[25](01, 31)-(01, 32): LPAR(OP) '('
[25](01, 32)-(01, 33): NAME(NAME) 'f'
[25](01, 33)-(01, 34): RPAR(OP) ')'
[25](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 12): INDENT(INDENT) '            '
[26](01, 12)-(01, 15): NAME(NAME) 'res'
[26](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[26](01, 19)-(01, 32): NAME(NAME) 'letter_decode'
[26](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 12): NAME(NAME) 'else'
[27](01, 12)-(01, 13): COLON(OP) ':'
[27](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 15): NAME(NAME) 'res'
[28](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[28](01, 19)-(01, 20): NAME(NAME) 'i'
[28](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 10): NAME(NAME) 'return'
[29](01, 11)-(01, 14): NAME(NAME) 'res'
[29](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 02): NAME(NAME) 'if'
[30](01, 03)-(01, 14): NAME(NAME) 'select_form'
[30](01, 15)-(01, 17): EQEQUAL(OP) '=='
[30](01, 18)-(01, 26): STRING(STRING) '"encode"'
[30](01, 26)-(01, 27): COLON(OP) ':'
[30](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 09): NAME(NAME) 'print'
[31](01, 09)-(01, 10): LPAR(OP) '('
[31](01, 10)-(01, 16): NAME(NAME) 'encode'
[31](01, 16)-(01, 17): LPAR(OP) '('
[31](01, 17)-(01, 23): NAME(NAME) 'string'
[31](01, 23)-(01, 24): COMMA(OP) ','
[31](01, 25)-(01, 26): NAME(NAME) 'n'
[31](01, 26)-(01, 27): RPAR(OP) ')'
[31](01, 27)-(01, 28): RPAR(OP) ')'
[31](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): NAME(NAME) 'else'
[32](01, 04)-(01, 05): COLON(OP) ':'
[32](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 09): NAME(NAME) 'print'
[33](01, 09)-(01, 10): LPAR(OP) '('
[33](01, 10)-(01, 16): NAME(NAME) 'decode'
[33](01, 16)-(01, 17): LPAR(OP) '('
[33](01, 17)-(01, 23): NAME(NAME) 'string'
[33](01, 23)-(01, 24): COMMA(OP) ','
[33](01, 25)-(01, 26): NAME(NAME) 'n'
[33](01, 26)-(01, 27): RPAR(OP) ')'
[33](01, 27)-(01, 28): RPAR(OP) ')'
[33](01, 28)-(01, 29): NEWLINE(NEWLINE)
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

