[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'strin'
[01](01, 05)-(01, 06): EQUAL(OP) '='
[01](01, 07)-(01, 10): NAME(NAME) 'str'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 16): NAME(NAME) 'input'
[01](01, 16)-(01, 17): LPAR(OP) '('
[01](01, 17)-(01, 18): RPAR(OP) ')'
[01](01, 18)-(01, 19): RPAR(OP) ')'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'i'
[02](01, 01)-(01, 02): EQUAL(OP) '='
[02](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[02](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 07): NAME(NAME) 'lengthe'
[03](01, 07)-(01, 08): EQUAL(OP) '='
[03](01, 08)-(01, 11): NAME(NAME) 'int'
[03](01, 11)-(01, 12): LPAR(OP) '('
[03](01, 12)-(01, 15): NAME(NAME) 'len'
[03](01, 15)-(01, 16): LPAR(OP) '('
[03](01, 16)-(01, 22): NAME(NAME) 'string'
[03](01, 22)-(01, 23): RPAR(OP) ')'
[03](01, 23)-(01, 24): RPAR(OP) ')'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NAME(NAME) 'a'
[04](01, 01)-(01, 02): EQUAL(OP) '='
[04](01, 02)-(01, 05): STRING(STRING) '"a"'
[04](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NAME(NAME) 'b'
[05](01, 01)-(01, 02): EQUAL(OP) '='
[05](01, 02)-(01, 05): STRING(STRING) '"b"'
[05](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NAME(NAME) 'c'
[06](01, 01)-(01, 02): EQUAL(OP) '='
[06](01, 02)-(01, 05): STRING(STRING) '"c"'
[06](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NAME(NAME) 'd'
[07](01, 01)-(01, 02): EQUAL(OP) '='
[07](01, 02)-(01, 05): STRING(STRING) '"d"'
[07](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NAME(NAME) 'e'
[08](01, 01)-(01, 02): EQUAL(OP) '='
[08](01, 02)-(01, 05): STRING(STRING) '"e"'
[08](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NAME(NAME) 'f'
[09](01, 01)-(01, 02): EQUAL(OP) '='
[09](01, 02)-(01, 05): STRING(STRING) '"f"'
[09](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NAME(NAME) 'g'
[10](01, 01)-(01, 02): EQUAL(OP) '='
[10](01, 02)-(01, 05): STRING(STRING) '"g"'
[10](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NAME(NAME) 'h'
[11](01, 01)-(01, 02): EQUAL(OP) '='
[11](01, 02)-(01, 05): STRING(STRING) '"h"'
[11](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NAME(NAME) 'i'
[12](01, 01)-(01, 02): EQUAL(OP) '='
[12](01, 02)-(01, 05): STRING(STRING) '"i"'
[12](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NAME(NAME) 'j'
[13](01, 01)-(01, 02): EQUAL(OP) '='
[13](01, 02)-(01, 05): STRING(STRING) '"j"'
[13](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NAME(NAME) 'k'
[14](01, 01)-(01, 02): EQUAL(OP) '='
[14](01, 02)-(01, 05): STRING(STRING) '"k"'
[14](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NAME(NAME) 'l'
[15](01, 01)-(01, 02): EQUAL(OP) '='
[15](01, 02)-(01, 05): STRING(STRING) '"l"'
[15](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NAME(NAME) 'm'
[16](01, 01)-(01, 02): EQUAL(OP) '='
[16](01, 02)-(01, 05): STRING(STRING) '"m"'
[16](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NAME(NAME) 'n'
[17](01, 01)-(01, 02): EQUAL(OP) '='
[17](01, 02)-(01, 05): STRING(STRING) '"n"'
[17](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NAME(NAME) 'o'
[18](01, 01)-(01, 02): EQUAL(OP) '='
[18](01, 02)-(01, 05): STRING(STRING) '"o"'
[18](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NAME(NAME) 'p'
[19](01, 01)-(01, 02): EQUAL(OP) '='
[19](01, 02)-(01, 05): STRING(STRING) '"p"'
[19](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NAME(NAME) 'q'
[20](01, 01)-(01, 02): EQUAL(OP) '='
[20](01, 02)-(01, 05): STRING(STRING) '"q"'
[20](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NAME(NAME) 'r'
[21](01, 01)-(01, 02): EQUAL(OP) '='
[21](01, 02)-(01, 05): STRING(STRING) '"r"'
[21](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NAME(NAME) 's'
[22](01, 01)-(01, 02): EQUAL(OP) '='
[22](01, 02)-(01, 05): STRING(STRING) '"s"'
[22](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NAME(NAME) 't'
[23](01, 01)-(01, 02): EQUAL(OP) '='
[23](01, 02)-(01, 05): STRING(STRING) '"t"'
[23](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NAME(NAME) 'u'
[24](01, 01)-(01, 02): EQUAL(OP) '='
[24](01, 02)-(01, 05): STRING(STRING) '"u"'
[24](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NAME(NAME) 'v'
[25](01, 01)-(01, 02): EQUAL(OP) '='
[25](01, 02)-(01, 05): STRING(STRING) '"v"'
[25](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NAME(NAME) 'w'
[26](01, 01)-(01, 02): EQUAL(OP) '='
[26](01, 02)-(01, 05): STRING(STRING) '"w"'
[26](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 01): NAME(NAME) 'x'
[27](01, 01)-(01, 02): EQUAL(OP) '='
[27](01, 02)-(01, 05): STRING(STRING) '"x"'
[27](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 01): NAME(NAME) 'y'
[28](01, 01)-(01, 02): EQUAL(OP) '='
[28](01, 02)-(01, 05): STRING(STRING) '"y"'
[28](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NAME(NAME) 'z'
[29](01, 01)-(01, 02): EQUAL(OP) '='
[29](01, 02)-(01, 05): STRING(STRING) '"z"'
[29](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 01): NAME(NAME) 'A'
[30](01, 01)-(01, 02): EQUAL(OP) '='
[30](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[30](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 01): NAME(NAME) 'B'
[31](01, 01)-(01, 02): EQUAL(OP) '='
[31](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[31](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 01): NAME(NAME) 'C'
[32](01, 01)-(01, 02): EQUAL(OP) '='
[32](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[32](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 01): NAME(NAME) 'D'
[33](01, 01)-(01, 02): EQUAL(OP) '='
[33](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[33](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 01): NAME(NAME) 'E'
[34](01, 01)-(01, 02): EQUAL(OP) '='
[34](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[34](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 01): NAME(NAME) 'F'
[35](01, 01)-(01, 02): EQUAL(OP) '='
[35](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[35](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 01): NAME(NAME) 'G'
[36](01, 01)-(01, 02): EQUAL(OP) '='
[36](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[36](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 01): NAME(NAME) 'H'
[37](01, 01)-(01, 02): EQUAL(OP) '='
[37](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[37](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 01): NAME(NAME) 'I'
[38](01, 01)-(01, 02): EQUAL(OP) '='
[38](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[38](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 01): NAME(NAME) 'J'
[39](01, 01)-(01, 02): EQUAL(OP) '='
[39](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[39](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 01): NAME(NAME) 'K'
[40](01, 01)-(01, 02): EQUAL(OP) '='
[40](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[40](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 01): NAME(NAME) 'L'
[41](01, 01)-(01, 02): EQUAL(OP) '='
[41](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[41](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 01): NAME(NAME) 'M'
[42](01, 01)-(01, 02): EQUAL(OP) '='
[42](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[42](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 01): NAME(NAME) 'N'
[43](01, 01)-(01, 02): EQUAL(OP) '='
[43](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[43](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 01): NAME(NAME) 'O'
[44](01, 01)-(01, 02): EQUAL(OP) '='
[44](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[44](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 01): NAME(NAME) 'P'
[45](01, 01)-(01, 02): EQUAL(OP) '='
[45](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[45](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 01): NAME(NAME) 'Q'
[46](01, 01)-(01, 02): EQUAL(OP) '='
[46](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[46](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 01): NAME(NAME) 'R'
[47](01, 01)-(01, 02): EQUAL(OP) '='
[47](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[47](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 01): NAME(NAME) 'S'
[48](01, 01)-(01, 02): EQUAL(OP) '='
[48](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[48](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 01): NAME(NAME) 'T'
[49](01, 01)-(01, 02): EQUAL(OP) '='
[49](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[49](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 01): NAME(NAME) 'U'
[50](01, 01)-(01, 02): EQUAL(OP) '='
[50](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[50](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 01): NAME(NAME) 'V'
[51](01, 01)-(01, 02): EQUAL(OP) '='
[51](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[51](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 01): NAME(NAME) 'W'
[52](01, 01)-(01, 02): EQUAL(OP) '='
[52](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[52](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 01): NAME(NAME) 'X'
[53](01, 01)-(01, 02): EQUAL(OP) '='
[53](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[53](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 01): NAME(NAME) 'Y'
[54](01, 01)-(01, 02): EQUAL(OP) '='
[54](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[54](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 01): NAME(NAME) 'Z'
[55](01, 01)-(01, 02): EQUAL(OP) '='
[55](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[55](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[56](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[56](01, 00)-(01, 05): NAME(NAME) 'while'
[56](01, 06)-(01, 07): NAME(NAME) 'i'
[56](01, 07)-(01, 08): PLUS(OP) '+'
[56](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[56](01, 09)-(01, 10): LESS(OP) '<'
[56](01, 11)-(01, 14): NAME(NAME) 'len'
[56](01, 14)-(01, 15): LPAR(OP) '('
[56](01, 15)-(01, 20): NAME(NAME) 'strin'
[56](01, 20)-(01, 21): RPAR(OP) ')'
[56](01, 21)-(01, 22): COLON(OP) ':'
[56](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[56](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[57](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[57](01, 00)-(01, 04): INDENT(INDENT) '    '
[57](01, 04)-(01, 06): NAME(NAME) 'if'
[57](01, 07)-(01, 13): NAME(NAME) 'string'
[57](01, 13)-(01, 14): LSQB(OP) '['
[57](01, 14)-(01, 15): NAME(NAME) 'i'
[57](01, 15)-(01, 16): RSQB(OP) ']'
[57](01, 16)-(01, 18): EQEQUAL(OP) '=='
[57](01, 18)-(01, 19): NAME(NAME) 'a'
[57](01, 19)-(01, 20): COLON(OP) ':'
[57](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[57](02, 00)-(02, 00): DEDENT(DEDENT)
[57](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[58](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[58](01, 00)-(01, 08): INDENT(INDENT) '        '
[58](01, 08)-(01, 09): NAME(NAME) 'a'
[58](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[58](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[58](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[58](02, 00)-(02, 00): DEDENT(DEDENT)
[58](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[59](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[59](01, 00)-(01, 08): INDENT(INDENT) '        '
[59](01, 08)-(01, 09): NAME(NAME) 'i'
[59](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[59](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[59](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[59](02, 00)-(02, 00): DEDENT(DEDENT)
[59](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[60](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[60](01, 00)-(01, 04): INDENT(INDENT) '    '
[60](01, 04)-(01, 08): NAME(NAME) 'elif'
[60](01, 09)-(01, 15): NAME(NAME) 'string'
[60](01, 15)-(01, 16): LSQB(OP) '['
[60](01, 16)-(01, 17): NAME(NAME) 'i'
[60](01, 17)-(01, 18): RSQB(OP) ']'
[60](01, 18)-(01, 20): EQEQUAL(OP) '=='
[60](01, 20)-(01, 21): NAME(NAME) 'b'
[60](01, 21)-(01, 22): COLON(OP) ':'
[60](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[60](02, 00)-(02, 00): DEDENT(DEDENT)
[60](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[61](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[61](01, 00)-(01, 08): INDENT(INDENT) '        '
[61](01, 08)-(01, 09): NAME(NAME) 'b'
[61](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[61](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[61](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[61](02, 00)-(02, 00): DEDENT(DEDENT)
[61](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[62](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[62](01, 00)-(01, 08): INDENT(INDENT) '        '
[62](01, 08)-(01, 09): NAME(NAME) 'i'
[62](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[62](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[62](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[62](02, 00)-(02, 00): DEDENT(DEDENT)
[62](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[63](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[63](01, 00)-(01, 04): INDENT(INDENT) '    '
[63](01, 04)-(01, 08): NAME(NAME) 'elif'
[63](01, 09)-(01, 15): NAME(NAME) 'string'
[63](01, 15)-(01, 16): LSQB(OP) '['
[63](01, 16)-(01, 17): NAME(NAME) 'i'
[63](01, 17)-(01, 18): RSQB(OP) ']'
[63](01, 18)-(01, 20): EQEQUAL(OP) '=='
[63](01, 20)-(01, 21): NAME(NAME) 'c'
[63](01, 21)-(01, 22): COLON(OP) ':'
[63](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[63](02, 00)-(02, 00): DEDENT(DEDENT)
[63](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[64](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[64](01, 00)-(01, 08): INDENT(INDENT) '        '
[64](01, 08)-(01, 09): NAME(NAME) 'c'
[64](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[64](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[64](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[64](02, 00)-(02, 00): DEDENT(DEDENT)
[64](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[65](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[65](01, 00)-(01, 08): INDENT(INDENT) '        '
[65](01, 08)-(01, 09): NAME(NAME) 'i'
[65](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[65](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[65](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[65](02, 00)-(02, 00): DEDENT(DEDENT)
[65](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[66](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[66](01, 00)-(01, 04): INDENT(INDENT) '    '
[66](01, 04)-(01, 08): NAME(NAME) 'elif'
[66](01, 09)-(01, 15): NAME(NAME) 'string'
[66](01, 15)-(01, 16): LSQB(OP) '['
[66](01, 16)-(01, 17): NAME(NAME) 'i'
[66](01, 17)-(01, 18): RSQB(OP) ']'
[66](01, 18)-(01, 20): EQEQUAL(OP) '=='
[66](01, 20)-(01, 21): NAME(NAME) 'd'
[66](01, 21)-(01, 22): COLON(OP) ':'
[66](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[66](02, 00)-(02, 00): DEDENT(DEDENT)
[66](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[67](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[67](01, 00)-(01, 08): INDENT(INDENT) '        '
[67](01, 08)-(01, 09): NAME(NAME) 'd'
[67](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[67](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[67](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[67](02, 00)-(02, 00): DEDENT(DEDENT)
[67](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[68](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[68](01, 00)-(01, 08): INDENT(INDENT) '        '
[68](01, 08)-(01, 09): NAME(NAME) 'i'
[68](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[68](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[68](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[68](02, 00)-(02, 00): DEDENT(DEDENT)
[68](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[69](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[69](01, 00)-(01, 04): INDENT(INDENT) '    '
[69](01, 04)-(01, 08): NAME(NAME) 'elif'
[69](01, 09)-(01, 15): NAME(NAME) 'string'
[69](01, 15)-(01, 16): LSQB(OP) '['
[69](01, 16)-(01, 17): NAME(NAME) 'i'
[69](01, 17)-(01, 18): RSQB(OP) ']'
[69](01, 18)-(01, 20): EQEQUAL(OP) '=='
[69](01, 20)-(01, 21): NAME(NAME) 'e'
[69](01, 21)-(01, 22): COLON(OP) ':'
[69](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[69](02, 00)-(02, 00): DEDENT(DEDENT)
[69](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[70](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[70](01, 00)-(01, 08): INDENT(INDENT) '        '
[70](01, 08)-(01, 09): NAME(NAME) 'e'
[70](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[70](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[70](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[70](02, 00)-(02, 00): DEDENT(DEDENT)
[70](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[71](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[71](01, 00)-(01, 08): INDENT(INDENT) '        '
[71](01, 08)-(01, 09): NAME(NAME) 'i'
[71](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[71](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[71](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[71](02, 00)-(02, 00): DEDENT(DEDENT)
[71](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[72](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[72](01, 00)-(01, 04): INDENT(INDENT) '    '
[72](01, 04)-(01, 08): NAME(NAME) 'elif'
[72](01, 09)-(01, 15): NAME(NAME) 'string'
[72](01, 15)-(01, 16): LSQB(OP) '['
[72](01, 16)-(01, 17): NAME(NAME) 'i'
[72](01, 17)-(01, 18): RSQB(OP) ']'
[72](01, 18)-(01, 20): EQEQUAL(OP) '=='
[72](01, 20)-(01, 21): NAME(NAME) 'f'
[72](01, 21)-(01, 22): COLON(OP) ':'
[72](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[72](02, 00)-(02, 00): DEDENT(DEDENT)
[72](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[73](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[73](01, 00)-(01, 08): INDENT(INDENT) '        '
[73](01, 08)-(01, 09): NAME(NAME) 'f'
[73](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[73](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[73](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[73](02, 00)-(02, 00): DEDENT(DEDENT)
[73](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[74](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[74](01, 00)-(01, 08): INDENT(INDENT) '        '
[74](01, 08)-(01, 09): NAME(NAME) 'i'
[74](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[74](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[74](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[74](02, 00)-(02, 00): DEDENT(DEDENT)
[74](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[75](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[75](01, 00)-(01, 04): INDENT(INDENT) '    '
[75](01, 04)-(01, 08): NAME(NAME) 'elif'
[75](01, 09)-(01, 15): NAME(NAME) 'string'
[75](01, 15)-(01, 16): LSQB(OP) '['
[75](01, 16)-(01, 17): NAME(NAME) 'i'
[75](01, 17)-(01, 18): RSQB(OP) ']'
[75](01, 18)-(01, 20): EQEQUAL(OP) '=='
[75](01, 20)-(01, 21): NAME(NAME) 'g'
[75](01, 21)-(01, 22): COLON(OP) ':'
[75](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[75](02, 00)-(02, 00): DEDENT(DEDENT)
[75](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[76](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[76](01, 00)-(01, 08): INDENT(INDENT) '        '
[76](01, 08)-(01, 09): NAME(NAME) 'g'
[76](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[76](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[76](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[76](02, 00)-(02, 00): DEDENT(DEDENT)
[76](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[77](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[77](01, 00)-(01, 08): INDENT(INDENT) '        '
[77](01, 08)-(01, 09): NAME(NAME) 'i'
[77](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[77](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[77](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[77](02, 00)-(02, 00): DEDENT(DEDENT)
[77](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[78](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[78](01, 00)-(01, 04): INDENT(INDENT) '    '
[78](01, 04)-(01, 08): NAME(NAME) 'elif'
[78](01, 09)-(01, 15): NAME(NAME) 'string'
[78](01, 15)-(01, 16): LSQB(OP) '['
[78](01, 16)-(01, 17): NAME(NAME) 'i'
[78](01, 17)-(01, 18): RSQB(OP) ']'
[78](01, 18)-(01, 20): EQEQUAL(OP) '=='
[78](01, 20)-(01, 21): NAME(NAME) 'h'
[78](01, 21)-(01, 22): COLON(OP) ':'
[78](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[78](02, 00)-(02, 00): DEDENT(DEDENT)
[78](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[79](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[79](01, 00)-(01, 08): INDENT(INDENT) '        '
[79](01, 08)-(01, 09): NAME(NAME) 'h'
[79](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[79](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[79](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[79](02, 00)-(02, 00): DEDENT(DEDENT)
[79](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[80](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[80](01, 00)-(01, 08): INDENT(INDENT) '        '
[80](01, 08)-(01, 09): NAME(NAME) 'i'
[80](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[80](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[80](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[80](02, 00)-(02, 00): DEDENT(DEDENT)
[80](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[81](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[81](01, 00)-(01, 04): INDENT(INDENT) '    '
[81](01, 04)-(01, 08): NAME(NAME) 'elif'
[81](01, 09)-(01, 15): NAME(NAME) 'string'
[81](01, 15)-(01, 16): LSQB(OP) '['
[81](01, 16)-(01, 17): NAME(NAME) 'i'
[81](01, 17)-(01, 18): RSQB(OP) ']'
[81](01, 18)-(01, 20): EQEQUAL(OP) '=='
[81](01, 20)-(01, 21): NAME(NAME) 'i'
[81](01, 21)-(01, 22): COLON(OP) ':'
[81](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[81](02, 00)-(02, 00): DEDENT(DEDENT)
[81](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[82](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[82](01, 00)-(01, 08): INDENT(INDENT) '        '
[82](01, 08)-(01, 09): NAME(NAME) 'i'
[82](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[82](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[82](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[82](02, 00)-(02, 00): DEDENT(DEDENT)
[82](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[83](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[83](01, 00)-(01, 08): INDENT(INDENT) '        '
[83](01, 08)-(01, 09): NAME(NAME) 'i'
[83](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[83](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[83](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[83](02, 00)-(02, 00): DEDENT(DEDENT)
[83](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[84](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[84](01, 00)-(01, 04): INDENT(INDENT) '    '
[84](01, 04)-(01, 08): NAME(NAME) 'elif'
[84](01, 09)-(01, 15): NAME(NAME) 'string'
[84](01, 15)-(01, 16): LSQB(OP) '['
[84](01, 16)-(01, 17): NAME(NAME) 'i'
[84](01, 17)-(01, 18): RSQB(OP) ']'
[84](01, 18)-(01, 20): EQEQUAL(OP) '=='
[84](01, 20)-(01, 21): NAME(NAME) 'j'
[84](01, 21)-(01, 22): COLON(OP) ':'
[84](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[84](02, 00)-(02, 00): DEDENT(DEDENT)
[84](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[85](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[85](01, 00)-(01, 08): INDENT(INDENT) '        '
[85](01, 08)-(01, 09): NAME(NAME) 'j'
[85](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[85](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[85](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[85](02, 00)-(02, 00): DEDENT(DEDENT)
[85](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[86](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[86](01, 00)-(01, 08): INDENT(INDENT) '        '
[86](01, 08)-(01, 09): NAME(NAME) 'i'
[86](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[86](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[86](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[86](02, 00)-(02, 00): DEDENT(DEDENT)
[86](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[87](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[87](01, 00)-(01, 04): INDENT(INDENT) '    '
[87](01, 04)-(01, 08): NAME(NAME) 'elif'
[87](01, 09)-(01, 15): NAME(NAME) 'string'
[87](01, 15)-(01, 16): LSQB(OP) '['
[87](01, 16)-(01, 17): NAME(NAME) 'i'
[87](01, 17)-(01, 18): RSQB(OP) ']'
[87](01, 18)-(01, 20): EQEQUAL(OP) '=='
[87](01, 20)-(01, 21): NAME(NAME) 'k'
[87](01, 21)-(01, 22): COLON(OP) ':'
[87](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[87](02, 00)-(02, 00): DEDENT(DEDENT)
[87](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[88](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[88](01, 00)-(01, 08): INDENT(INDENT) '        '
[88](01, 08)-(01, 09): NAME(NAME) 'k'
[88](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[88](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[88](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[88](02, 00)-(02, 00): DEDENT(DEDENT)
[88](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[89](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[89](01, 00)-(01, 08): INDENT(INDENT) '        '
[89](01, 08)-(01, 09): NAME(NAME) 'i'
[89](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[89](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[89](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[89](02, 00)-(02, 00): DEDENT(DEDENT)
[89](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[90](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[90](01, 00)-(01, 04): INDENT(INDENT) '    '
[90](01, 04)-(01, 08): NAME(NAME) 'elif'
[90](01, 09)-(01, 15): NAME(NAME) 'string'
[90](01, 15)-(01, 16): LSQB(OP) '['
[90](01, 16)-(01, 17): NAME(NAME) 'i'
[90](01, 17)-(01, 18): RSQB(OP) ']'
[90](01, 18)-(01, 20): EQEQUAL(OP) '=='
[90](01, 20)-(01, 21): NAME(NAME) 'l'
[90](01, 21)-(01, 22): COLON(OP) ':'
[90](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[90](02, 00)-(02, 00): DEDENT(DEDENT)
[90](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[91](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[91](01, 00)-(01, 08): INDENT(INDENT) '        '
[91](01, 08)-(01, 09): NAME(NAME) 'l'
[91](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[91](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[91](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[91](02, 00)-(02, 00): DEDENT(DEDENT)
[91](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[92](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[92](01, 00)-(01, 08): INDENT(INDENT) '        '
[92](01, 08)-(01, 09): NAME(NAME) 'i'
[92](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[92](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[92](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[92](02, 00)-(02, 00): DEDENT(DEDENT)
[92](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[93](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[93](01, 00)-(01, 04): INDENT(INDENT) '    '
[93](01, 04)-(01, 08): NAME(NAME) 'elif'
[93](01, 09)-(01, 15): NAME(NAME) 'string'
[93](01, 15)-(01, 16): LSQB(OP) '['
[93](01, 16)-(01, 17): NAME(NAME) 'i'
[93](01, 17)-(01, 18): RSQB(OP) ']'
[93](01, 18)-(01, 20): EQEQUAL(OP) '=='
[93](01, 20)-(01, 21): NAME(NAME) 'm'
[93](01, 21)-(01, 22): COLON(OP) ':'
[93](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[93](02, 00)-(02, 00): DEDENT(DEDENT)
[93](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[94](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[94](01, 00)-(01, 08): INDENT(INDENT) '        '
[94](01, 08)-(01, 09): NAME(NAME) 'm'
[94](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[94](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[94](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[94](02, 00)-(02, 00): DEDENT(DEDENT)
[94](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[95](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[95](01, 00)-(01, 08): INDENT(INDENT) '        '
[95](01, 08)-(01, 09): NAME(NAME) 'i'
[95](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[95](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[95](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[95](02, 00)-(02, 00): DEDENT(DEDENT)
[95](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[96](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[96](01, 00)-(01, 04): INDENT(INDENT) '    '
[96](01, 04)-(01, 08): NAME(NAME) 'elif'
[96](01, 09)-(01, 15): NAME(NAME) 'string'
[96](01, 15)-(01, 16): LSQB(OP) '['
[96](01, 16)-(01, 17): NAME(NAME) 'i'
[96](01, 17)-(01, 18): RSQB(OP) ']'
[96](01, 18)-(01, 20): EQEQUAL(OP) '=='
[96](01, 20)-(01, 21): NAME(NAME) 'n'
[96](01, 21)-(01, 22): COLON(OP) ':'
[96](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[96](02, 00)-(02, 00): DEDENT(DEDENT)
[96](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[97](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[97](01, 00)-(01, 08): INDENT(INDENT) '        '
[97](01, 08)-(01, 09): NAME(NAME) 'n'
[97](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[97](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[97](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[97](02, 00)-(02, 00): DEDENT(DEDENT)
[97](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[98](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[98](01, 00)-(01, 08): INDENT(INDENT) '        '
[98](01, 08)-(01, 09): NAME(NAME) 'i'
[98](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[98](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[98](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[98](02, 00)-(02, 00): DEDENT(DEDENT)
[98](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[99](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[99](01, 00)-(01, 04): INDENT(INDENT) '    '
[99](01, 04)-(01, 08): NAME(NAME) 'elif'
[99](01, 09)-(01, 15): NAME(NAME) 'string'
[99](01, 15)-(01, 16): LSQB(OP) '['
[99](01, 16)-(01, 17): NAME(NAME) 'i'
[99](01, 17)-(01, 18): RSQB(OP) ']'
[99](01, 18)-(01, 20): EQEQUAL(OP) '=='
[99](01, 20)-(01, 21): NAME(NAME) 'o'
[99](01, 21)-(01, 22): COLON(OP) ':'
[99](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[99](02, 00)-(02, 00): DEDENT(DEDENT)
[99](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[100](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[100](01, 00)-(01, 08): INDENT(INDENT) '        '
[100](01, 08)-(01, 09): NAME(NAME) 'o'
[100](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[100](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[100](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[100](02, 00)-(02, 00): DEDENT(DEDENT)
[100](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[101](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[101](01, 00)-(01, 08): INDENT(INDENT) '        '
[101](01, 08)-(01, 09): NAME(NAME) 'i'
[101](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[101](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[101](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[101](02, 00)-(02, 00): DEDENT(DEDENT)
[101](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[102](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[102](01, 00)-(01, 04): INDENT(INDENT) '    '
[102](01, 04)-(01, 08): NAME(NAME) 'elif'
[102](01, 09)-(01, 15): NAME(NAME) 'string'
[102](01, 15)-(01, 16): LSQB(OP) '['
[102](01, 16)-(01, 17): NAME(NAME) 'i'
[102](01, 17)-(01, 18): RSQB(OP) ']'
[102](01, 18)-(01, 20): EQEQUAL(OP) '=='
[102](01, 20)-(01, 21): NAME(NAME) 'p'
[102](01, 21)-(01, 22): COLON(OP) ':'
[102](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[102](02, 00)-(02, 00): DEDENT(DEDENT)
[102](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[103](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[103](01, 00)-(01, 08): INDENT(INDENT) '        '
[103](01, 08)-(01, 09): NAME(NAME) 'p'
[103](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[103](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[103](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[103](02, 00)-(02, 00): DEDENT(DEDENT)
[103](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[104](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[104](01, 00)-(01, 08): INDENT(INDENT) '        '
[104](01, 08)-(01, 09): NAME(NAME) 'i'
[104](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[104](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[104](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[104](02, 00)-(02, 00): DEDENT(DEDENT)
[104](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[105](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[105](01, 00)-(01, 04): INDENT(INDENT) '    '
[105](01, 04)-(01, 08): NAME(NAME) 'elif'
[105](01, 09)-(01, 15): NAME(NAME) 'string'
[105](01, 15)-(01, 16): LSQB(OP) '['
[105](01, 16)-(01, 17): NAME(NAME) 'i'
[105](01, 17)-(01, 18): RSQB(OP) ']'
[105](01, 18)-(01, 20): EQEQUAL(OP) '=='
[105](01, 20)-(01, 21): NAME(NAME) 'q'
[105](01, 21)-(01, 22): COLON(OP) ':'
[105](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[105](02, 00)-(02, 00): DEDENT(DEDENT)
[105](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[106](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[106](01, 00)-(01, 08): INDENT(INDENT) '        '
[106](01, 08)-(01, 09): NAME(NAME) 'q'
[106](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[106](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[106](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[106](02, 00)-(02, 00): DEDENT(DEDENT)
[106](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[107](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[107](01, 00)-(01, 08): INDENT(INDENT) '        '
[107](01, 08)-(01, 09): NAME(NAME) 'i'
[107](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[107](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[107](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[107](02, 00)-(02, 00): DEDENT(DEDENT)
[107](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[108](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[108](01, 00)-(01, 04): INDENT(INDENT) '    '
[108](01, 04)-(01, 08): NAME(NAME) 'elif'
[108](01, 09)-(01, 15): NAME(NAME) 'string'
[108](01, 15)-(01, 16): LSQB(OP) '['
[108](01, 16)-(01, 17): NAME(NAME) 'i'
[108](01, 17)-(01, 18): RSQB(OP) ']'
[108](01, 18)-(01, 20): EQEQUAL(OP) '=='
[108](01, 20)-(01, 21): NAME(NAME) 'r'
[108](01, 21)-(01, 22): COLON(OP) ':'
[108](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[108](02, 00)-(02, 00): DEDENT(DEDENT)
[108](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[109](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[109](01, 00)-(01, 08): INDENT(INDENT) '        '
[109](01, 08)-(01, 09): NAME(NAME) 'r'
[109](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[109](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[109](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[109](02, 00)-(02, 00): DEDENT(DEDENT)
[109](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[110](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[110](01, 00)-(01, 08): INDENT(INDENT) '        '
[110](01, 08)-(01, 09): NAME(NAME) 'i'
[110](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[110](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[110](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[110](02, 00)-(02, 00): DEDENT(DEDENT)
[110](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[111](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[111](01, 00)-(01, 04): INDENT(INDENT) '    '
[111](01, 04)-(01, 08): NAME(NAME) 'elif'
[111](01, 09)-(01, 15): NAME(NAME) 'string'
[111](01, 15)-(01, 16): LSQB(OP) '['
[111](01, 16)-(01, 17): NAME(NAME) 'i'
[111](01, 17)-(01, 18): RSQB(OP) ']'
[111](01, 18)-(01, 20): EQEQUAL(OP) '=='
[111](01, 20)-(01, 21): NAME(NAME) 's'
[111](01, 21)-(01, 22): COLON(OP) ':'
[111](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[111](02, 00)-(02, 00): DEDENT(DEDENT)
[111](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[112](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[112](01, 00)-(01, 08): INDENT(INDENT) '        '
[112](01, 08)-(01, 09): NAME(NAME) 's'
[112](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[112](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[112](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[112](02, 00)-(02, 00): DEDENT(DEDENT)
[112](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[113](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[113](01, 00)-(01, 08): INDENT(INDENT) '        '
[113](01, 08)-(01, 09): NAME(NAME) 'i'
[113](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[113](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[113](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[113](02, 00)-(02, 00): DEDENT(DEDENT)
[113](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[114](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[114](01, 00)-(01, 04): INDENT(INDENT) '    '
[114](01, 04)-(01, 08): NAME(NAME) 'elif'
[114](01, 09)-(01, 15): NAME(NAME) 'string'
[114](01, 15)-(01, 16): LSQB(OP) '['
[114](01, 16)-(01, 17): NAME(NAME) 'i'
[114](01, 17)-(01, 18): RSQB(OP) ']'
[114](01, 18)-(01, 20): EQEQUAL(OP) '=='
[114](01, 20)-(01, 21): NAME(NAME) 't'
[114](01, 21)-(01, 22): COLON(OP) ':'
[114](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[114](02, 00)-(02, 00): DEDENT(DEDENT)
[114](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[115](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[115](01, 00)-(01, 08): INDENT(INDENT) '        '
[115](01, 08)-(01, 09): NAME(NAME) 't'
[115](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[115](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[115](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[115](02, 00)-(02, 00): DEDENT(DEDENT)
[115](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[116](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[116](01, 00)-(01, 08): INDENT(INDENT) '        '
[116](01, 08)-(01, 09): NAME(NAME) 'i'
[116](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[116](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[116](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[116](02, 00)-(02, 00): DEDENT(DEDENT)
[116](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[117](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[117](01, 00)-(01, 04): INDENT(INDENT) '    '
[117](01, 04)-(01, 08): NAME(NAME) 'elif'
[117](01, 09)-(01, 15): NAME(NAME) 'string'
[117](01, 15)-(01, 16): LSQB(OP) '['
[117](01, 16)-(01, 17): NAME(NAME) 'i'
[117](01, 17)-(01, 18): RSQB(OP) ']'
[117](01, 18)-(01, 20): EQEQUAL(OP) '=='
[117](01, 20)-(01, 21): NAME(NAME) 'u'
[117](01, 21)-(01, 22): COLON(OP) ':'
[117](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[117](02, 00)-(02, 00): DEDENT(DEDENT)
[117](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[118](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[118](01, 00)-(01, 08): INDENT(INDENT) '        '
[118](01, 08)-(01, 09): NAME(NAME) 'u'
[118](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[118](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[118](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[118](02, 00)-(02, 00): DEDENT(DEDENT)
[118](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[119](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[119](01, 00)-(01, 08): INDENT(INDENT) '        '
[119](01, 08)-(01, 09): NAME(NAME) 'i'
[119](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[119](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[119](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[119](02, 00)-(02, 00): DEDENT(DEDENT)
[119](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[120](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[120](01, 00)-(01, 04): INDENT(INDENT) '    '
[120](01, 04)-(01, 08): NAME(NAME) 'elif'
[120](01, 09)-(01, 15): NAME(NAME) 'string'
[120](01, 15)-(01, 16): LSQB(OP) '['
[120](01, 16)-(01, 17): NAME(NAME) 'i'
[120](01, 17)-(01, 18): RSQB(OP) ']'
[120](01, 18)-(01, 20): EQEQUAL(OP) '=='
[120](01, 20)-(01, 21): NAME(NAME) 'v'
[120](01, 21)-(01, 22): COLON(OP) ':'
[120](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[120](02, 00)-(02, 00): DEDENT(DEDENT)
[120](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[121](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[121](01, 00)-(01, 08): INDENT(INDENT) '        '
[121](01, 08)-(01, 09): NAME(NAME) 'v'
[121](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[121](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[121](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[121](02, 00)-(02, 00): DEDENT(DEDENT)
[121](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[122](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[122](01, 00)-(01, 08): INDENT(INDENT) '        '
[122](01, 08)-(01, 09): NAME(NAME) 'i'
[122](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[122](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[122](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[122](02, 00)-(02, 00): DEDENT(DEDENT)
[122](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[123](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[123](01, 00)-(01, 04): INDENT(INDENT) '    '
[123](01, 04)-(01, 08): NAME(NAME) 'elif'
[123](01, 09)-(01, 15): NAME(NAME) 'string'
[123](01, 15)-(01, 16): LSQB(OP) '['
[123](01, 16)-(01, 17): NAME(NAME) 'i'
[123](01, 17)-(01, 18): RSQB(OP) ']'
[123](01, 18)-(01, 20): EQEQUAL(OP) '=='
[123](01, 20)-(01, 21): NAME(NAME) 'w'
[123](01, 21)-(01, 22): COLON(OP) ':'
[123](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[123](02, 00)-(02, 00): DEDENT(DEDENT)
[123](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[124](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[124](01, 00)-(01, 08): INDENT(INDENT) '        '
[124](01, 08)-(01, 09): NAME(NAME) 'w'
[124](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[124](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[124](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[124](02, 00)-(02, 00): DEDENT(DEDENT)
[124](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[125](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[125](01, 00)-(01, 08): INDENT(INDENT) '        '
[125](01, 08)-(01, 09): NAME(NAME) 'i'
[125](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[125](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[125](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[125](02, 00)-(02, 00): DEDENT(DEDENT)
[125](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[126](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[126](01, 00)-(01, 04): INDENT(INDENT) '    '
[126](01, 04)-(01, 08): NAME(NAME) 'elif'
[126](01, 09)-(01, 15): NAME(NAME) 'string'
[126](01, 15)-(01, 16): LSQB(OP) '['
[126](01, 16)-(01, 17): NAME(NAME) 'i'
[126](01, 17)-(01, 18): RSQB(OP) ']'
[126](01, 18)-(01, 20): EQEQUAL(OP) '=='
[126](01, 20)-(01, 21): NAME(NAME) 'x'
[126](01, 21)-(01, 22): COLON(OP) ':'
[126](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[126](02, 00)-(02, 00): DEDENT(DEDENT)
[126](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[127](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[127](01, 00)-(01, 08): INDENT(INDENT) '        '
[127](01, 08)-(01, 09): NAME(NAME) 'x'
[127](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[127](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[127](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[127](02, 00)-(02, 00): DEDENT(DEDENT)
[127](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[128](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[128](01, 00)-(01, 08): INDENT(INDENT) '        '
[128](01, 08)-(01, 09): NAME(NAME) 'i'
[128](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[128](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[128](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[128](02, 00)-(02, 00): DEDENT(DEDENT)
[128](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[129](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[129](01, 00)-(01, 04): INDENT(INDENT) '    '
[129](01, 04)-(01, 08): NAME(NAME) 'elif'
[129](01, 09)-(01, 15): NAME(NAME) 'string'
[129](01, 15)-(01, 16): LSQB(OP) '['
[129](01, 16)-(01, 17): NAME(NAME) 'i'
[129](01, 17)-(01, 18): RSQB(OP) ']'
[129](01, 18)-(01, 20): EQEQUAL(OP) '=='
[129](01, 20)-(01, 21): NAME(NAME) 'y'
[129](01, 21)-(01, 22): COLON(OP) ':'
[129](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[129](02, 00)-(02, 00): DEDENT(DEDENT)
[129](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[130](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[130](01, 00)-(01, 08): INDENT(INDENT) '        '
[130](01, 08)-(01, 09): NAME(NAME) 'y'
[130](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[130](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[130](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[130](02, 00)-(02, 00): DEDENT(DEDENT)
[130](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[131](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[131](01, 00)-(01, 08): INDENT(INDENT) '        '
[131](01, 08)-(01, 09): NAME(NAME) 'i'
[131](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[131](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[131](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[131](02, 00)-(02, 00): DEDENT(DEDENT)
[131](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[132](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[132](01, 00)-(01, 04): INDENT(INDENT) '    '
[132](01, 04)-(01, 08): NAME(NAME) 'else'
[132](01, 08)-(01, 09): COLON(OP) ':'
[132](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[132](02, 00)-(02, 00): DEDENT(DEDENT)
[132](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[133](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[133](01, 00)-(01, 08): INDENT(INDENT) '        '
[133](01, 08)-(01, 09): NAME(NAME) 'z'
[133](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[133](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[133](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[133](02, 00)-(02, 00): DEDENT(DEDENT)
[133](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[134](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[134](01, 00)-(01, 08): INDENT(INDENT) '        '
[134](01, 08)-(01, 09): NAME(NAME) 'i'
[134](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[134](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[134](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[134](02, 00)-(02, 00): DEDENT(DEDENT)
[134](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[135](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[135](01, 00)-(01, 05): NAME(NAME) 'print'
[135](01, 05)-(01, 06): LPAR(OP) '('
[135](01, 06)-(01, 07): NAME(NAME) 'a'
[135](01, 07)-(01, 08): COMMA(OP) ','
[135](01, 08)-(01, 09): NAME(NAME) 'b'
[135](01, 09)-(01, 10): COMMA(OP) ','
[135](01, 10)-(01, 11): NAME(NAME) 'c'
[135](01, 11)-(01, 12): COMMA(OP) ','
[135](01, 12)-(01, 13): NAME(NAME) 'd'
[135](01, 13)-(01, 14): COMMA(OP) ','
[135](01, 14)-(01, 15): NAME(NAME) 'e'
[135](01, 15)-(01, 16): COMMA(OP) ','
[135](01, 16)-(01, 17): NAME(NAME) 'f'
[135](01, 17)-(01, 18): COMMA(OP) ','
[135](01, 18)-(01, 19): NAME(NAME) 'g'
[135](01, 19)-(01, 20): COMMA(OP) ','
[135](01, 20)-(01, 21): NAME(NAME) 'h'
[135](01, 21)-(01, 22): COMMA(OP) ','
[135](01, 22)-(01, 23): NAME(NAME) 'i'
[135](01, 23)-(01, 24): COMMA(OP) ','
[135](01, 24)-(01, 25): NAME(NAME) 'j'
[135](01, 25)-(01, 26): COMMA(OP) ','
[135](01, 26)-(01, 27): NAME(NAME) 'k'
[135](01, 27)-(01, 28): COMMA(OP) ','
[135](01, 28)-(01, 29): NAME(NAME) 'l'
[135](01, 29)-(01, 30): COMMA(OP) ','
[135](01, 30)-(01, 31): NAME(NAME) 'm'
[135](01, 31)-(01, 32): COMMA(OP) ','
[135](01, 32)-(01, 33): NAME(NAME) 'n'
[135](01, 33)-(01, 34): COMMA(OP) ','
[135](01, 34)-(01, 35): NAME(NAME) 'o'
[135](01, 35)-(01, 36): COMMA(OP) ','
[135](01, 36)-(01, 37): NAME(NAME) 'p'
[135](01, 37)-(01, 38): COMMA(OP) ','
[135](01, 38)-(01, 39): NAME(NAME) 'q'
[135](01, 39)-(01, 40): COMMA(OP) ','
[135](01, 40)-(01, 41): NAME(NAME) 'r'
[135](01, 41)-(01, 42): COMMA(OP) ','
[135](01, 42)-(01, 43): NAME(NAME) 's'
[135](01, 43)-(01, 44): COMMA(OP) ','
[135](01, 44)-(01, 45): NAME(NAME) 't'
[135](01, 45)-(01, 46): COMMA(OP) ','
[135](01, 46)-(01, 47): NAME(NAME) 'u'
[135](01, 47)-(01, 48): COMMA(OP) ','
[135](01, 48)-(01, 49): NAME(NAME) 'v'
[135](01, 49)-(01, 50): COMMA(OP) ','
[135](01, 50)-(01, 51): NAME(NAME) 'w'
[135](01, 51)-(01, 52): COMMA(OP) ','
[135](01, 52)-(01, 53): NAME(NAME) 'x'
[135](01, 53)-(01, 54): COMMA(OP) ','
[135](01, 54)-(01, 55): NAME(NAME) 'y'
[135](01, 55)-(01, 56): COMMA(OP) ','
[135](01, 56)-(01, 57): NAME(NAME) 'z'
[135](01, 57)-(01, 58): RPAR(OP) ')'
[135](01, 58)-(01, 59): NEWLINE(NEWLINE)
[135](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

