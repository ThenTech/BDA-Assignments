[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 31): COMMENT(COMMENT) '# zet input ook om naar lijst!!'
[00](01, 31)-(01, 32): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'l'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 09): NAME(NAME) 'input'
[01](01, 09)-(01, 10): LPAR(OP) '('
[01](01, 10)-(01, 11): RPAR(OP) ')'
[01](01, 13)-(01, 58): COMMENT(COMMENT) '# elementen waar we nog uit moeten kiezen eig'
[01](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'l'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 05): NAME(NAME) 'l'
[02](01, 05)-(01, 06): DOT(OP) '.'
[02](01, 06)-(01, 11): NAME(NAME) 'split'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 13): RPAR(OP) ')'
[02](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 40): COMMENT(COMMENT) '# String eerst omzetten naar een lijst!!'
[05](01, 40)-(01, 41): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 03): NAME(NAME) 'def'
[08](01, 04)-(01, 10): NAME(NAME) 'subset'
[08](01, 10)-(01, 11): LPAR(OP) '('
[08](01, 11)-(01, 12): NAME(NAME) 'l'
[08](01, 12)-(01, 13): RPAR(OP) ')'
[08](01, 13)-(01, 14): COLON(OP) ':'
[08](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 16): NAME(NAME) 'find_subsets'
[09](01, 16)-(01, 17): LPAR(OP) '('
[09](01, 17)-(01, 18): NAME(NAME) 'l'
[09](01, 18)-(01, 19): COMMA(OP) ','
[09](01, 20)-(01, 21): LSQB(OP) '['
[09](01, 21)-(01, 22): RSQB(OP) ']'
[09](01, 22)-(01, 23): RPAR(OP) ')'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 03): NAME(NAME) 'def'
[11](01, 04)-(01, 16): NAME(NAME) 'find_subsets'
[11](01, 16)-(01, 17): LPAR(OP) '('
[11](01, 17)-(01, 18): NAME(NAME) 'l'
[11](01, 18)-(01, 19): COMMA(OP) ','
[11](01, 20)-(01, 26): NAME(NAME) 'result'
[11](01, 26)-(01, 27): RPAR(OP) ')'
[11](01, 27)-(01, 28): COLON(OP) ':'
[11](01, 30)-(01, 101): COMMENT(COMMENT) '# beide zijn lijsten, result om bij te houden wat je tot nu toe al hebt'
[11](01, 101)-(01, 102): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 06): NAME(NAME) 'if'
[12](01, 07)-(01, 10): NAME(NAME) 'len'
[12](01, 10)-(01, 11): LPAR(OP) '('
[12](01, 11)-(01, 12): NAME(NAME) 'l'
[12](01, 12)-(01, 13): RPAR(OP) ')'
[12](01, 14)-(01, 16): EQEQUAL(OP) '=='
[12](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[12](01, 18)-(01, 19): COLON(OP) ':'
[12](01, 21)-(01, 55): COMMENT(COMMENT) '# geen elementen meer om te kiezen'
[12](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 13): NAME(NAME) 'print'
[13](01, 13)-(01, 14): LPAR(OP) '('
[13](01, 14)-(01, 15): RPAR(OP) ')'
[13](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 11): NAME(NAME) 'for'
[14](01, 12)-(01, 23): NAME(NAME) 'combination'
[14](01, 24)-(01, 26): NAME(NAME) 'in'
[14](01, 27)-(01, 33): NAME(NAME) 'result'
[14](01, 33)-(01, 34): COLON(OP) ':'
[14](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 17): NAME(NAME) 'print'
[15](01, 17)-(01, 18): LPAR(OP) '('
[15](01, 18)-(01, 29): NAME(NAME) 'combination'
[15](01, 29)-(01, 30): LSQB(OP) '['
[15](01, 30)-(01, 31): COLON(OP) ':'
[15](01, 31)-(01, 32): RSQB(OP) ']'
[15](01, 32)-(01, 33): COMMA(OP) ','
[15](01, 34)-(01, 37): NAME(NAME) 'end'
[15](01, 38)-(01, 39): EQUAL(OP) '='
[15](01, 40)-(01, 42): STRING(STRING) '""'
[15](01, 42)-(01, 43): RPAR(OP) ')'
[15](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 08): NAME(NAME) 'else'
[17](01, 08)-(01, 09): COLON(OP) ':'
[17](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 14): NAME(NAME) 'eerste'
[18](01, 15)-(01, 16): EQUAL(OP) '='
[18](01, 17)-(01, 18): NAME(NAME) 'l'
[18](01, 18)-(01, 19): LSQB(OP) '['
[18](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[18](01, 20)-(01, 21): RSQB(OP) ']'
[18](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 12): NAME(NAME) 'rest'
[19](01, 13)-(01, 14): EQUAL(OP) '='
[19](01, 15)-(01, 16): NAME(NAME) 'l'
[19](01, 16)-(01, 17): LSQB(OP) '['
[19](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[19](01, 18)-(01, 19): COLON(OP) ':'
[19](01, 19)-(01, 20): RSQB(OP) ']'
[19](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 08)-(01, 36): COMMENT(COMMENT) '# eerste char niet toevoegen'
[21](01, 36)-(01, 37): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 20): NAME(NAME) 'find_subsets'
[22](01, 20)-(01, 21): LPAR(OP) '('
[22](01, 21)-(01, 25): NAME(NAME) 'rest'
[22](01, 25)-(01, 26): COMMA(OP) ','
[22](01, 27)-(01, 33): NAME(NAME) 'result'
[22](01, 33)-(01, 34): RPAR(OP) ')'
[22](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 08)-(01, 35): COMMENT(COMMENT) '# eerste char wel toevoegen'
[24](01, 35)-(01, 36): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 08): INDENT(INDENT) '        '
[25](01, 08)-(01, 20): NAME(NAME) 'find_subsets'
[25](01, 20)-(01, 21): LPAR(OP) '('
[25](01, 21)-(01, 25): NAME(NAME) 'rest'
[25](01, 25)-(01, 26): COMMA(OP) ','
[25](01, 27)-(01, 33): NAME(NAME) 'result'
[25](01, 34)-(01, 35): PLUS(OP) '+'
[25](01, 36)-(01, 37): LSQB(OP) '['
[25](01, 37)-(01, 43): NAME(NAME) 'eerste'
[25](01, 43)-(01, 44): RSQB(OP) ']'
[25](01, 44)-(01, 45): RPAR(OP) ')'
[25](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 01): NL(NL) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 06): NAME(NAME) 'subset'
[28](01, 06)-(01, 07): LPAR(OP) '('
[28](01, 07)-(01, 08): NAME(NAME) 'l'
[28](01, 08)-(01, 09): RPAR(OP) ')'
[28](01, 09)-(01, 10): NEWLINE(NEWLINE)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

