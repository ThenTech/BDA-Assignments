[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'matrix'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'm'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 15): NAME(NAME) 'sum_hor'
[01](01, 15)-(01, 16): LPAR(OP) '('
[01](01, 16)-(01, 22): NAME(NAME) 'matrix'
[01](01, 22)-(01, 23): COMMA(OP) ','
[01](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[01](01, 25)-(01, 26): RPAR(OP) ')'
[01](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 16): NAME(NAME) 'is_unique'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 23): NAME(NAME) 'matrix'
[02](01, 23)-(01, 24): RPAR(OP) ')'
[02](01, 24)-(01, 25): COLON(OP) ':'
[02](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 14): NAME(NAME) 'len'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 21): NAME(NAME) 'matrix'
[03](01, 21)-(01, 22): RPAR(OP) ')'
[03](01, 23)-(01, 25): EQEQUAL(OP) '=='
[03](01, 26)-(01, 29): NAME(NAME) 'len'
[03](01, 29)-(01, 30): LPAR(OP) '('
[03](01, 30)-(01, 36): NAME(NAME) 'matrix'
[03](01, 36)-(01, 37): LSQB(OP) '['
[03](01, 37)-(01, 38): NUMBER(NUMBER) '0'
[03](01, 38)-(01, 39): RSQB(OP) ']'
[03](01, 39)-(01, 40): RPAR(OP) ')'
[03](01, 40)-(01, 41): COLON(OP) ':'
[03](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 15): NAME(NAME) 'for'
[04](01, 16)-(01, 17): NAME(NAME) 'x'
[04](01, 18)-(01, 20): NAME(NAME) 'in'
[04](01, 21)-(01, 26): NAME(NAME) 'range'
[04](01, 26)-(01, 27): LPAR(OP) '('
[04](01, 27)-(01, 30): NAME(NAME) 'len'
[04](01, 30)-(01, 31): LPAR(OP) '('
[04](01, 31)-(01, 37): NAME(NAME) 'matrix'
[04](01, 37)-(01, 38): RPAR(OP) ')'
[04](01, 38)-(01, 39): RPAR(OP) ')'
[04](01, 39)-(01, 40): COLON(OP) ':'
[04](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 16): INDENT(INDENT) '                '
[05](01, 16)-(01, 18): NAME(NAME) 'if'
[05](01, 19)-(01, 22): NAME(NAME) 'not'
[05](01, 23)-(01, 30): NAME(NAME) 'sum_hor'
[05](01, 30)-(01, 31): LPAR(OP) '('
[05](01, 31)-(01, 37): NAME(NAME) 'matrix'
[05](01, 37)-(01, 38): COMMA(OP) ','
[05](01, 39)-(01, 40): NAME(NAME) 'x'
[05](01, 40)-(01, 41): RPAR(OP) ')'
[05](01, 42)-(01, 44): EQEQUAL(OP) '=='
[05](01, 45)-(01, 46): NAME(NAME) 'm'
[05](01, 46)-(01, 47): COLON(OP) ':'
[05](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 20): INDENT(INDENT) '                    '
[06](01, 20)-(01, 26): NAME(NAME) 'return'
[06](01, 27)-(01, 32): NAME(NAME) 'False'
[06](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 15): NAME(NAME) 'for'
[07](01, 16)-(01, 17): NAME(NAME) 'x'
[07](01, 18)-(01, 20): NAME(NAME) 'in'
[07](01, 21)-(01, 26): NAME(NAME) 'range'
[07](01, 26)-(01, 27): LPAR(OP) '('
[07](01, 27)-(01, 30): NAME(NAME) 'len'
[07](01, 30)-(01, 31): LPAR(OP) '('
[07](01, 31)-(01, 37): NAME(NAME) 'matrix'
[07](01, 37)-(01, 38): LSQB(OP) '['
[07](01, 38)-(01, 39): NUMBER(NUMBER) '0'
[07](01, 39)-(01, 40): RSQB(OP) ']'
[07](01, 40)-(01, 41): RPAR(OP) ')'
[07](01, 41)-(01, 42): RPAR(OP) ')'
[07](01, 42)-(01, 43): COLON(OP) ':'
[07](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 18): NAME(NAME) 'if'
[08](01, 19)-(01, 22): NAME(NAME) 'not'
[08](01, 23)-(01, 31): NAME(NAME) 'sum_vert'
[08](01, 31)-(01, 32): LPAR(OP) '('
[08](01, 32)-(01, 38): NAME(NAME) 'matrix'
[08](01, 38)-(01, 39): COMMA(OP) ','
[08](01, 40)-(01, 41): NAME(NAME) 'x'
[08](01, 41)-(01, 42): RPAR(OP) ')'
[08](01, 43)-(01, 45): EQEQUAL(OP) '=='
[08](01, 46)-(01, 47): NAME(NAME) 'm'
[08](01, 47)-(01, 48): COLON(OP) ':'
[08](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 20): INDENT(INDENT) '                    '
[09](01, 20)-(01, 26): NAME(NAME) 'return'
[09](01, 27)-(01, 32): NAME(NAME) 'False'
[09](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 14): NAME(NAME) 'if'
[11](01, 15)-(01, 18): NAME(NAME) 'not'
[11](01, 19)-(01, 26): NAME(NAME) 'sum_dia'
[11](01, 26)-(01, 27): LPAR(OP) '('
[11](01, 27)-(01, 33): NAME(NAME) 'matrix'
[11](01, 33)-(01, 34): COMMA(OP) ','
[11](01, 35)-(01, 41): STRING(STRING) "'left'"
[11](01, 41)-(01, 42): RPAR(OP) ')'
[11](01, 43)-(01, 45): EQEQUAL(OP) '=='
[11](01, 46)-(01, 47): NAME(NAME) 'm'
[11](01, 48)-(01, 50): NAME(NAME) 'or'
[11](01, 51)-(01, 54): NAME(NAME) 'not'
[11](01, 55)-(01, 62): NAME(NAME) 'sum_dia'
[11](01, 62)-(01, 63): LPAR(OP) '('
[11](01, 63)-(01, 69): NAME(NAME) 'matrix'
[11](01, 69)-(01, 70): COMMA(OP) ','
[11](01, 71)-(01, 78): STRING(STRING) "'right'"
[11](01, 78)-(01, 79): RPAR(OP) ')'
[11](01, 80)-(01, 82): EQEQUAL(OP) '=='
[11](01, 83)-(01, 84): NAME(NAME) 'm'
[11](01, 84)-(01, 85): COLON(OP) ':'
[11](01, 85)-(01, 86): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 22): NAME(NAME) 'return'
[12](01, 23)-(01, 28): NAME(NAME) 'False'
[12](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 12): NAME(NAME) 'else'
[13](01, 12)-(01, 13): COLON(OP) ':'
[13](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 18): NAME(NAME) 'return'
[14](01, 19)-(01, 24): NAME(NAME) 'False'
[14](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 08): NAME(NAME) 'else'
[15](01, 08)-(01, 09): COLON(OP) ':'
[15](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 14): NAME(NAME) 'return'
[16](01, 15)-(01, 20): NAME(NAME) 'False'
[16](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 10): NAME(NAME) 'return'
[17](01, 11)-(01, 15): NAME(NAME) 'True'
[17](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 03): NAME(NAME) 'def'
[19](01, 04)-(01, 13): NAME(NAME) 'is_unique'
[19](01, 13)-(01, 14): LPAR(OP) '('
[19](01, 14)-(01, 15): NAME(NAME) 'l'
[19](01, 15)-(01, 16): RPAR(OP) ')'
[19](01, 16)-(01, 17): COLON(OP) ':'
[19](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 14): NAME(NAME) 'track_list'
[20](01, 15)-(01, 16): EQUAL(OP) '='
[20](01, 17)-(01, 18): LSQB(OP) '['
[20](01, 18)-(01, 19): RSQB(OP) ']'
[20](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 07): NAME(NAME) 'for'
[21](01, 08)-(01, 09): NAME(NAME) 'x'
[21](01, 10)-(01, 12): NAME(NAME) 'in'
[21](01, 13)-(01, 18): NAME(NAME) 'range'
[21](01, 18)-(01, 19): LPAR(OP) '('
[21](01, 19)-(01, 22): NAME(NAME) 'len'
[21](01, 22)-(01, 23): LPAR(OP) '('
[21](01, 23)-(01, 24): NAME(NAME) 'l'
[21](01, 24)-(01, 25): RPAR(OP) ')'
[21](01, 25)-(01, 26): RPAR(OP) ')'
[21](01, 26)-(01, 27): COLON(OP) ':'
[21](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 11): NAME(NAME) 'for'
[22](01, 12)-(01, 13): NAME(NAME) 'y'
[22](01, 14)-(01, 16): NAME(NAME) 'in'
[22](01, 17)-(01, 22): NAME(NAME) 'range'
[22](01, 22)-(01, 23): LPAR(OP) '('
[22](01, 23)-(01, 26): NAME(NAME) 'len'
[22](01, 26)-(01, 27): LPAR(OP) '('
[22](01, 27)-(01, 28): NAME(NAME) 'l'
[22](01, 28)-(01, 29): LSQB(OP) '['
[22](01, 29)-(01, 30): NAME(NAME) 'x'
[22](01, 30)-(01, 31): RSQB(OP) ']'
[22](01, 31)-(01, 32): RPAR(OP) ')'
[22](01, 32)-(01, 33): RPAR(OP) ')'
[22](01, 33)-(01, 34): COLON(OP) ':'
[22](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 14): NAME(NAME) 'if'
[23](01, 15)-(01, 16): NAME(NAME) 'l'
[23](01, 16)-(01, 17): LSQB(OP) '['
[23](01, 17)-(01, 18): NAME(NAME) 'x'
[23](01, 18)-(01, 19): RSQB(OP) ']'
[23](01, 19)-(01, 20): LSQB(OP) '['
[23](01, 20)-(01, 21): NAME(NAME) 'y'
[23](01, 21)-(01, 22): RSQB(OP) ']'
[23](01, 23)-(01, 26): NAME(NAME) 'not'
[23](01, 27)-(01, 29): NAME(NAME) 'in'
[23](01, 30)-(01, 40): NAME(NAME) 'track_list'
[23](01, 40)-(01, 41): COLON(OP) ':'
[23](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 16): INDENT(INDENT) '                '
[24](01, 16)-(01, 26): NAME(NAME) 'track_list'
[24](01, 26)-(01, 27): DOT(OP) '.'
[24](01, 27)-(01, 33): NAME(NAME) 'append'
[24](01, 33)-(01, 34): LPAR(OP) '('
[24](01, 34)-(01, 35): NAME(NAME) 'l'
[24](01, 35)-(01, 36): LSQB(OP) '['
[24](01, 36)-(01, 37): NAME(NAME) 'x'
[24](01, 37)-(01, 38): RSQB(OP) ']'
[24](01, 38)-(01, 39): LSQB(OP) '['
[24](01, 39)-(01, 40): NAME(NAME) 'y'
[24](01, 40)-(01, 41): RSQB(OP) ']'
[24](01, 41)-(01, 42): RPAR(OP) ')'
[24](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 16): NAME(NAME) 'else'
[25](01, 16)-(01, 17): COLON(OP) ':'
[25](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 16): INDENT(INDENT) '                '
[26](01, 16)-(01, 22): NAME(NAME) 'return'
[26](01, 23)-(01, 28): NAME(NAME) 'False'
[26](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 10): NAME(NAME) 'return'
[27](01, 11)-(01, 15): NAME(NAME) 'True'
[27](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 01): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 03): NAME(NAME) 'def'
[30](01, 04)-(01, 11): NAME(NAME) 'sum_hor'
[30](01, 11)-(01, 12): LPAR(OP) '('
[30](01, 12)-(01, 13): NAME(NAME) 'l'
[30](01, 13)-(01, 14): COMMA(OP) ','
[30](01, 15)-(01, 16): NAME(NAME) 'r'
[30](01, 16)-(01, 17): RPAR(OP) ')'
[30](01, 17)-(01, 18): COLON(OP) ':'
[30](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 10): NAME(NAME) 'result'
[31](01, 11)-(01, 12): EQUAL(OP) '='
[31](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[31](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 07): NAME(NAME) 'for'
[32](01, 08)-(01, 09): NAME(NAME) 'i'
[32](01, 10)-(01, 12): NAME(NAME) 'in'
[32](01, 13)-(01, 14): NAME(NAME) 'l'
[32](01, 14)-(01, 15): LSQB(OP) '['
[32](01, 15)-(01, 16): NAME(NAME) 'r'
[32](01, 16)-(01, 17): RSQB(OP) ']'
[32](01, 17)-(01, 18): COLON(OP) ':'
[32](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 14): NAME(NAME) 'result'
[33](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[33](01, 18)-(01, 19): NAME(NAME) 'i'
[33](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 10): NAME(NAME) 'return'
[34](01, 11)-(01, 17): NAME(NAME) 'result'
[34](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 01): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 03): NAME(NAME) 'def'
[36](01, 04)-(01, 12): NAME(NAME) 'sum_vert'
[36](01, 12)-(01, 13): LPAR(OP) '('
[36](01, 13)-(01, 14): NAME(NAME) 'l'
[36](01, 14)-(01, 15): COMMA(OP) ','
[36](01, 16)-(01, 17): NAME(NAME) 'c'
[36](01, 17)-(01, 18): RPAR(OP) ')'
[36](01, 18)-(01, 19): COLON(OP) ':'
[36](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 04): INDENT(INDENT) '    '
[37](01, 04)-(01, 10): NAME(NAME) 'result'
[37](01, 11)-(01, 12): EQUAL(OP) '='
[37](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[37](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 07): NAME(NAME) 'for'
[38](01, 08)-(01, 09): NAME(NAME) 'i'
[38](01, 10)-(01, 12): NAME(NAME) 'in'
[38](01, 13)-(01, 18): NAME(NAME) 'range'
[38](01, 18)-(01, 19): LPAR(OP) '('
[38](01, 19)-(01, 22): NAME(NAME) 'len'
[38](01, 22)-(01, 23): LPAR(OP) '('
[38](01, 23)-(01, 24): NAME(NAME) 'l'
[38](01, 24)-(01, 25): RPAR(OP) ')'
[38](01, 25)-(01, 26): RPAR(OP) ')'
[38](01, 26)-(01, 27): COLON(OP) ':'
[38](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 08): INDENT(INDENT) '        '
[39](01, 08)-(01, 14): NAME(NAME) 'result'
[39](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[39](01, 18)-(01, 19): NAME(NAME) 'l'
[39](01, 19)-(01, 20): LSQB(OP) '['
[39](01, 20)-(01, 21): NAME(NAME) 'i'
[39](01, 21)-(01, 22): RSQB(OP) ']'
[39](01, 22)-(01, 23): LSQB(OP) '['
[39](01, 23)-(01, 24): NAME(NAME) 'c'
[39](01, 24)-(01, 25): RSQB(OP) ']'
[39](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 04): INDENT(INDENT) '    '
[40](01, 04)-(01, 10): NAME(NAME) 'return'
[40](01, 11)-(01, 17): NAME(NAME) 'result'
[40](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 01): NL(NL) '\n'
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 03): NAME(NAME) 'def'
[42](01, 04)-(01, 11): NAME(NAME) 'sum_dia'
[42](01, 11)-(01, 12): LPAR(OP) '('
[42](01, 12)-(01, 13): NAME(NAME) 'l'
[42](01, 13)-(01, 14): COMMA(OP) ','
[42](01, 15)-(01, 18): NAME(NAME) 'dir'
[42](01, 18)-(01, 19): EQUAL(OP) '='
[42](01, 19)-(01, 25): STRING(STRING) "'left'"
[42](01, 25)-(01, 26): RPAR(OP) ')'
[42](01, 26)-(01, 27): COLON(OP) ':'
[42](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 04): INDENT(INDENT) '    '
[43](01, 04)-(01, 10): NAME(NAME) 'result'
[43](01, 11)-(01, 12): EQUAL(OP) '='
[43](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[43](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 04): INDENT(INDENT) '    '
[44](01, 04)-(01, 07): NAME(NAME) 'for'
[44](01, 08)-(01, 09): NAME(NAME) 'x'
[44](01, 10)-(01, 12): NAME(NAME) 'in'
[44](01, 13)-(01, 18): NAME(NAME) 'range'
[44](01, 18)-(01, 19): LPAR(OP) '('
[44](01, 19)-(01, 22): NAME(NAME) 'len'
[44](01, 22)-(01, 23): LPAR(OP) '('
[44](01, 23)-(01, 24): NAME(NAME) 'l'
[44](01, 24)-(01, 25): RPAR(OP) ')'
[44](01, 25)-(01, 26): RPAR(OP) ')'
[44](01, 26)-(01, 27): COLON(OP) ':'
[44](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 08): INDENT(INDENT) '        '
[45](01, 08)-(01, 10): NAME(NAME) 'if'
[45](01, 11)-(01, 14): NAME(NAME) 'dir'
[45](01, 15)-(01, 17): EQEQUAL(OP) '=='
[45](01, 18)-(01, 24): STRING(STRING) "'left'"
[45](01, 24)-(01, 25): COLON(OP) ':'
[45](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 12): INDENT(INDENT) '            '
[46](01, 12)-(01, 18): NAME(NAME) 'result'
[46](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[46](01, 22)-(01, 23): NAME(NAME) 'l'
[46](01, 23)-(01, 24): LSQB(OP) '['
[46](01, 24)-(01, 25): NAME(NAME) 'x'
[46](01, 25)-(01, 26): RSQB(OP) ']'
[46](01, 26)-(01, 27): LSQB(OP) '['
[46](01, 27)-(01, 28): NAME(NAME) 'x'
[46](01, 28)-(01, 29): RSQB(OP) ']'
[46](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 08): INDENT(INDENT) '        '
[47](01, 08)-(01, 12): NAME(NAME) 'elif'
[47](01, 13)-(01, 16): NAME(NAME) 'dir'
[47](01, 17)-(01, 19): EQEQUAL(OP) '=='
[47](01, 20)-(01, 27): STRING(STRING) "'right'"
[47](01, 27)-(01, 28): COLON(OP) ':'
[47](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 12): INDENT(INDENT) '            '
[48](01, 12)-(01, 18): NAME(NAME) 'result'
[48](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[48](01, 22)-(01, 23): NAME(NAME) 'l'
[48](01, 23)-(01, 24): LSQB(OP) '['
[48](01, 24)-(01, 25): NAME(NAME) 'x'
[48](01, 25)-(01, 26): RSQB(OP) ']'
[48](01, 26)-(01, 27): LSQB(OP) '['
[48](01, 27)-(01, 30): NAME(NAME) 'len'
[48](01, 30)-(01, 31): LPAR(OP) '('
[48](01, 31)-(01, 32): NAME(NAME) 'l'
[48](01, 32)-(01, 33): RPAR(OP) ')'
[48](01, 33)-(01, 34): MINUS(OP) '-'
[48](01, 34)-(01, 35): NAME(NAME) 'x'
[48](01, 35)-(01, 36): MINUS(OP) '-'
[48](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[48](01, 37)-(01, 38): RSQB(OP) ']'
[48](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 04): INDENT(INDENT) '    '
[49](01, 04)-(01, 10): NAME(NAME) 'return'
[49](01, 11)-(01, 17): NAME(NAME) 'result'
[49](01, 17)-(01, 18): NEWLINE(NEWLINE)
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

