[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 09): NAME(NAME) 'shift'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 11): NAME(NAME) 'l'
[00](01, 11)-(01, 12): COMMA(OP) ','
[00](01, 13)-(01, 14): NAME(NAME) 'n'
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): COLON(OP) ':'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'a'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 09): LSQB(OP) '['
[01](01, 09)-(01, 10): RSQB(OP) ']'
[01](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'j'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[02](01, 20)-(01, 21): COMMA(OP) ','
[02](01, 22)-(01, 23): NAME(NAME) 'n'
[02](01, 23)-(01, 24): RPAR(OP) ')'
[02](01, 24)-(01, 25): COLON(OP) ':'
[02](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 09): NAME(NAME) 'x'
[03](01, 10)-(01, 11): EQUAL(OP) '='
[03](01, 12)-(01, 13): NAME(NAME) 'a'
[03](01, 14)-(01, 15): PLUS(OP) '+'
[03](01, 15)-(01, 16): LPAR(OP) '('
[03](01, 16)-(01, 17): NAME(NAME) 'l'
[03](01, 17)-(01, 18): LSQB(OP) '['
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 20): LPAR(OP) '('
[03](01, 20)-(01, 23): NAME(NAME) 'len'
[03](01, 23)-(01, 24): LPAR(OP) '('
[03](01, 24)-(01, 25): NAME(NAME) 'l'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 26)-(01, 27): RPAR(OP) ')'
[03](01, 27)-(01, 28): MINUS(OP) '-'
[03](01, 28)-(01, 29): NAME(NAME) 'n'
[03](01, 29)-(01, 30): RPAR(OP) ')'
[03](01, 30)-(01, 31): COLON(OP) ':'
[03](01, 31)-(01, 34): NAME(NAME) 'len'
[03](01, 34)-(01, 35): LPAR(OP) '('
[03](01, 35)-(01, 36): NAME(NAME) 'l'
[03](01, 36)-(01, 37): RPAR(OP) ')'
[03](01, 37)-(01, 38): RSQB(OP) ']'
[03](01, 38)-(01, 39): RPAR(OP) ')'
[03](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 18): NAME(NAME) 'range'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[04](01, 20)-(01, 21): COMMA(OP) ','
[04](01, 22)-(01, 23): NAME(NAME) 'n'
[04](01, 23)-(01, 24): RPAR(OP) ')'
[04](01, 24)-(01, 25): COLON(OP) ':'
[04](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 09): NAME(NAME) 'x'
[05](01, 09)-(01, 10): DOT(OP) '.'
[05](01, 10)-(01, 16): NAME(NAME) 'extend'
[05](01, 16)-(01, 17): LPAR(OP) '('
[05](01, 17)-(01, 18): NAME(NAME) 'l'
[05](01, 18)-(01, 19): LSQB(OP) '['
[05](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[05](01, 20)-(01, 21): COLON(OP) ':'
[05](01, 21)-(01, 22): LPAR(OP) '('
[05](01, 22)-(01, 23): LPAR(OP) '('
[05](01, 23)-(01, 26): NAME(NAME) 'len'
[05](01, 26)-(01, 27): LPAR(OP) '('
[05](01, 27)-(01, 28): NAME(NAME) 'l'
[05](01, 28)-(01, 29): RPAR(OP) ')'
[05](01, 29)-(01, 30): RPAR(OP) ')'
[05](01, 30)-(01, 31): MINUS(OP) '-'
[05](01, 31)-(01, 32): NAME(NAME) 'n'
[05](01, 32)-(01, 33): RPAR(OP) ')'
[05](01, 33)-(01, 34): RSQB(OP) ']'
[05](01, 34)-(01, 35): RPAR(OP) ')'
[05](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 09): NAME(NAME) 'print'
[07](01, 09)-(01, 10): LPAR(OP) '('
[07](01, 10)-(01, 11): NAME(NAME) 'x'
[07](01, 11)-(01, 12): RPAR(OP) ')'
[07](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 05): NAME(NAME) 'shift'
[15](01, 05)-(01, 06): LPAR(OP) '('
[15](01, 06)-(01, 07): LSQB(OP) '['
[15](01, 07)-(01, 08): NUMBER(NUMBER) '1'
[15](01, 08)-(01, 09): COMMA(OP) ','
[15](01, 10)-(01, 11): NUMBER(NUMBER) '2'
[15](01, 11)-(01, 12): COMMA(OP) ','
[15](01, 13)-(01, 14): NUMBER(NUMBER) '3'
[15](01, 14)-(01, 15): COMMA(OP) ','
[15](01, 16)-(01, 17): NUMBER(NUMBER) '4'
[15](01, 17)-(01, 18): COMMA(OP) ','
[15](01, 19)-(01, 20): NUMBER(NUMBER) '5'
[15](01, 20)-(01, 21): RSQB(OP) ']'
[15](01, 21)-(01, 22): COMMA(OP) ','
[15](01, 23)-(01, 24): NUMBER(NUMBER) '2'
[15](01, 24)-(01, 25): RPAR(OP) ')'
[15](01, 25)-(01, 26): NEWLINE(NEWLINE)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

