[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'cent1'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 11): NAME(NAME) 'int'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 17): NAME(NAME) 'input'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 36): STRING(STRING) '"Aantal 1 cents: "'
[00](01, 36)-(01, 37): RPAR(OP) ')'
[00](01, 37)-(01, 38): RPAR(OP) ')'
[00](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'cent2'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 11): NAME(NAME) 'int'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 17): NAME(NAME) 'input'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 36): STRING(STRING) '"Aantal 2 cents: "'
[01](01, 36)-(01, 37): RPAR(OP) ')'
[01](01, 37)-(01, 38): RPAR(OP) ')'
[01](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 05): NAME(NAME) 'cent5'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 11): NAME(NAME) 'int'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 17): NAME(NAME) 'input'
[02](01, 17)-(01, 18): LPAR(OP) '('
[02](01, 18)-(01, 36): STRING(STRING) '"Aantal 5 cents: "'
[02](01, 36)-(01, 37): RPAR(OP) ')'
[02](01, 37)-(01, 38): RPAR(OP) ')'
[02](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 06): NAME(NAME) 'cent10'
[03](01, 07)-(01, 08): EQUAL(OP) '='
[03](01, 09)-(01, 12): NAME(NAME) 'int'
[03](01, 12)-(01, 13): LPAR(OP) '('
[03](01, 13)-(01, 18): NAME(NAME) 'input'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 38): STRING(STRING) '"Aantal 10 cents: "'
[03](01, 38)-(01, 39): RPAR(OP) ')'
[03](01, 39)-(01, 40): RPAR(OP) ')'
[03](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 06): NAME(NAME) 'cent20'
[04](01, 07)-(01, 08): EQUAL(OP) '='
[04](01, 09)-(01, 12): NAME(NAME) 'int'
[04](01, 12)-(01, 13): LPAR(OP) '('
[04](01, 13)-(01, 18): NAME(NAME) 'input'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 38): STRING(STRING) '"Aantal 20 cents: "'
[04](01, 38)-(01, 39): RPAR(OP) ')'
[04](01, 39)-(01, 40): RPAR(OP) ')'
[04](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): NAME(NAME) 'tot_cent'
[06](01, 09)-(01, 10): EQUAL(OP) '='
[06](01, 11)-(01, 16): NAME(NAME) 'cent1'
[06](01, 17)-(01, 18): PLUS(OP) '+'
[06](01, 19)-(01, 20): NUMBER(NUMBER) '2'
[06](01, 20)-(01, 21): STAR(OP) '*'
[06](01, 21)-(01, 26): NAME(NAME) 'cent2'
[06](01, 27)-(01, 28): PLUS(OP) '+'
[06](01, 29)-(01, 30): NUMBER(NUMBER) '5'
[06](01, 30)-(01, 31): STAR(OP) '*'
[06](01, 31)-(01, 36): NAME(NAME) 'cent5'
[06](01, 37)-(01, 38): PLUS(OP) '+'
[06](01, 39)-(01, 41): NUMBER(NUMBER) '10'
[06](01, 41)-(01, 42): STAR(OP) '*'
[06](01, 42)-(01, 48): NAME(NAME) 'cent10'
[06](01, 49)-(01, 50): PLUS(OP) '+'
[06](01, 51)-(01, 53): NUMBER(NUMBER) '20'
[06](01, 53)-(01, 54): STAR(OP) '*'
[06](01, 54)-(01, 60): NAME(NAME) 'cent20'
[06](01, 60)-(01, 61): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 05): NAME(NAME) 'euros'
[07](01, 06)-(01, 07): EQUAL(OP) '='
[07](01, 08)-(01, 16): NAME(NAME) 'tot_cent'
[07](01, 17)-(01, 19): DOUBLESLASH(OP) '//'
[07](01, 20)-(01, 23): NUMBER(NUMBER) '100'
[07](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): NAME(NAME) 'rem_cent'
[08](01, 09)-(01, 10): EQUAL(OP) '='
[08](01, 11)-(01, 14): NAME(NAME) 'str'
[08](01, 14)-(01, 15): LPAR(OP) '('
[08](01, 15)-(01, 23): NAME(NAME) 'tot_cent'
[08](01, 24)-(01, 25): PERCENT(OP) '%'
[08](01, 26)-(01, 29): NUMBER(NUMBER) '100'
[08](01, 29)-(01, 30): RPAR(OP) ')'
[08](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 05): NAME(NAME) 'print'
[10](01, 05)-(01, 06): LPAR(OP) '('
[10](01, 06)-(01, 17): STRING(STRING) '"You have "'
[10](01, 17)-(01, 18): COMMA(OP) ','
[10](01, 19)-(01, 24): NAME(NAME) 'euros'
[10](01, 24)-(01, 25): COMMA(OP) ','
[10](01, 26)-(01, 29): STRING(STRING) '"."'
[10](01, 29)-(01, 30): COMMA(OP) ','
[10](01, 31)-(01, 39): NAME(NAME) 'rem_cent'
[10](01, 39)-(01, 40): LSQB(OP) '['
[10](01, 40)-(01, 41): NUMBER(NUMBER) '0'
[10](01, 41)-(01, 42): RSQB(OP) ']'
[10](01, 42)-(01, 43): COMMA(OP) ','
[10](01, 44)-(01, 52): NAME(NAME) 'rem_cent'
[10](01, 52)-(01, 53): LSQB(OP) '['
[10](01, 53)-(01, 54): NUMBER(NUMBER) '1'
[10](01, 54)-(01, 55): RSQB(OP) ']'
[10](01, 55)-(01, 56): COMMA(OP) ','
[10](01, 56)-(01, 64): STRING(STRING) '" euro!"'
[10](01, 64)-(01, 65): COMMA(OP) ','
[10](01, 66)-(01, 69): NAME(NAME) 'sep'
[10](01, 69)-(01, 70): EQUAL(OP) '='
[10](01, 70)-(01, 72): STRING(STRING) '""'
[10](01, 72)-(01, 73): RPAR(OP) ')'
[10](01, 73)-(01, 74): NEWLINE(NEWLINE)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

