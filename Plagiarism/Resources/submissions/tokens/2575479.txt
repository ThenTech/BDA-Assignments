[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'import'
[00](01, 07)-(01, 13): NAME(NAME) 'string'
[00](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'def'
[02](01, 04)-(01, 15): NAME(NAME) 'count_words'
[02](01, 15)-(01, 16): LPAR(OP) '('
[02](01, 16)-(01, 23): NAME(NAME) 'string2'
[02](01, 23)-(01, 24): RPAR(OP) ')'
[02](01, 24)-(01, 25): COLON(OP) ':'
[02](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 04)-(01, 18): COMMENT(COMMENT) '#hello = False'
[03](01, 18)-(01, 19): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'count'
[04](01, 10)-(01, 11): EQUAL(OP) '='
[04](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[04](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 12): NAME(NAME) 'in'
[05](01, 13)-(01, 18): NAME(NAME) 'range'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 22): NAME(NAME) 'len'
[05](01, 22)-(01, 23): LPAR(OP) '('
[05](01, 23)-(01, 30): NAME(NAME) 'string2'
[05](01, 30)-(01, 31): RPAR(OP) ')'
[05](01, 31)-(01, 32): RPAR(OP) ')'
[05](01, 32)-(01, 33): COLON(OP) ':'
[05](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 12): NAME(NAME) 'i'
[06](01, 13)-(01, 15): EQEQUAL(OP) '=='
[06](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[06](01, 17)-(01, 18): COLON(OP) ':'
[06](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'if'
[07](01, 15)-(01, 17): NUMBER(NUMBER) '65'
[07](01, 18)-(01, 20): LESSEQUAL(OP) '<='
[07](01, 21)-(01, 24): NAME(NAME) 'ord'
[07](01, 24)-(01, 25): LPAR(OP) '('
[07](01, 25)-(01, 32): NAME(NAME) 'string2'
[07](01, 32)-(01, 33): LSQB(OP) '['
[07](01, 33)-(01, 34): NUMBER(NUMBER) '0'
[07](01, 34)-(01, 35): RSQB(OP) ']'
[07](01, 35)-(01, 36): RPAR(OP) ')'
[07](01, 37)-(01, 39): LESSEQUAL(OP) '<='
[07](01, 40)-(01, 42): NUMBER(NUMBER) '90'
[07](01, 43)-(01, 45): NAME(NAME) 'or'
[07](01, 46)-(01, 48): NUMBER(NUMBER) '97'
[07](01, 49)-(01, 51): LESSEQUAL(OP) '<='
[07](01, 52)-(01, 55): NAME(NAME) 'ord'
[07](01, 55)-(01, 56): LPAR(OP) '('
[07](01, 56)-(01, 63): NAME(NAME) 'string2'
[07](01, 63)-(01, 64): LSQB(OP) '['
[07](01, 64)-(01, 65): NUMBER(NUMBER) '0'
[07](01, 65)-(01, 66): RSQB(OP) ']'
[07](01, 66)-(01, 67): RPAR(OP) ')'
[07](01, 68)-(01, 70): LESSEQUAL(OP) '<='
[07](01, 71)-(01, 74): NUMBER(NUMBER) '122'
[07](01, 74)-(01, 75): COLON(OP) ':'
[07](01, 75)-(01, 76): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 21): NAME(NAME) 'count'
[08](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[08](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[08](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 16)-(01, 29): COMMENT(COMMENT) '#hello = True'
[09](01, 29)-(01, 30): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 16)-(01, 27): COMMENT(COMMENT) '#print("0")'
[10](01, 27)-(01, 28): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 12): NAME(NAME) 'else'
[12](01, 12)-(01, 13): COLON(OP) ':'
[12](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 12)-(01, 31): COMMENT(COMMENT) '#if hello == False:'
[13](01, 31)-(01, 32): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 12)-(01, 152): COMMENT(COMMENT) '#    if (65 <= ord(string2[i-1]) <= 90 or 97 <= ord(string2[i-1]) <= 122) and (65 <= ord(string2[i]) <= 90 or 97 <= ord(string2[i]) <= 122):'
[14](01, 152)-(01, 153): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 12)-(01, 13): COMMENT(COMMENT) '#'
[15](01, 13)-(01, 14): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 12)-(01, 31): COMMENT(COMMENT) '#        print("1")'
[16](01, 31)-(01, 32): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 12)-(01, 29): COMMENT(COMMENT) '#        continue'
[17](01, 29)-(01, 30): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 12)-(01, 56): COMMENT(COMMENT) '#print(string2[i-1], "i-1", string2[i], "i")'
[18](01, 56)-(01, 57): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 14): NAME(NAME) 'if'
[19](01, 15)-(01, 16): LPAR(OP) '('
[19](01, 16)-(01, 18): NUMBER(NUMBER) '65'
[19](01, 19)-(01, 21): LESSEQUAL(OP) '<='
[19](01, 22)-(01, 25): NAME(NAME) 'ord'
[19](01, 25)-(01, 26): LPAR(OP) '('
[19](01, 26)-(01, 33): NAME(NAME) 'string2'
[19](01, 33)-(01, 34): LSQB(OP) '['
[19](01, 34)-(01, 35): NAME(NAME) 'i'
[19](01, 36)-(01, 37): MINUS(OP) '-'
[19](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[19](01, 39)-(01, 40): RSQB(OP) ']'
[19](01, 40)-(01, 41): RPAR(OP) ')'
[19](01, 42)-(01, 44): LESSEQUAL(OP) '<='
[19](01, 45)-(01, 47): NUMBER(NUMBER) '90'
[19](01, 48)-(01, 50): NAME(NAME) 'or'
[19](01, 51)-(01, 53): NUMBER(NUMBER) '97'
[19](01, 54)-(01, 56): LESSEQUAL(OP) '<='
[19](01, 57)-(01, 60): NAME(NAME) 'ord'
[19](01, 60)-(01, 61): LPAR(OP) '('
[19](01, 61)-(01, 68): NAME(NAME) 'string2'
[19](01, 68)-(01, 69): LSQB(OP) '['
[19](01, 69)-(01, 70): NAME(NAME) 'i'
[19](01, 71)-(01, 72): MINUS(OP) '-'
[19](01, 73)-(01, 74): NUMBER(NUMBER) '1'
[19](01, 74)-(01, 75): RSQB(OP) ']'
[19](01, 75)-(01, 76): RPAR(OP) ')'
[19](01, 77)-(01, 79): LESSEQUAL(OP) '<='
[19](01, 80)-(01, 83): NUMBER(NUMBER) '122'
[19](01, 83)-(01, 84): RPAR(OP) ')'
[19](01, 85)-(01, 88): NAME(NAME) 'and'
[19](01, 89)-(01, 90): LPAR(OP) '('
[19](01, 90)-(01, 92): NUMBER(NUMBER) '65'
[19](01, 93)-(01, 95): LESSEQUAL(OP) '<='
[19](01, 96)-(01, 99): NAME(NAME) 'ord'
[19](01, 99)-(01, 100): LPAR(OP) '('
[19](01, 100)-(01, 107): NAME(NAME) 'string2'
[19](01, 107)-(01, 108): LSQB(OP) '['
[19](01, 108)-(01, 109): NAME(NAME) 'i'
[19](01, 109)-(01, 110): RSQB(OP) ']'
[19](01, 110)-(01, 111): RPAR(OP) ')'
[19](01, 112)-(01, 114): LESSEQUAL(OP) '<='
[19](01, 115)-(01, 117): NUMBER(NUMBER) '90'
[19](01, 118)-(01, 120): NAME(NAME) 'or'
[19](01, 121)-(01, 123): NUMBER(NUMBER) '97'
[19](01, 124)-(01, 126): LESSEQUAL(OP) '<='
[19](01, 127)-(01, 130): NAME(NAME) 'ord'
[19](01, 130)-(01, 131): LPAR(OP) '('
[19](01, 131)-(01, 138): NAME(NAME) 'string2'
[19](01, 138)-(01, 139): LSQB(OP) '['
[19](01, 139)-(01, 140): NAME(NAME) 'i'
[19](01, 140)-(01, 141): RSQB(OP) ']'
[19](01, 141)-(01, 142): RPAR(OP) ')'
[19](01, 143)-(01, 145): LESSEQUAL(OP) '<='
[19](01, 146)-(01, 149): NUMBER(NUMBER) '122'
[19](01, 149)-(01, 150): RPAR(OP) ')'
[19](01, 150)-(01, 151): COLON(OP) ':'
[19](01, 151)-(01, 152): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 16)-(01, 27): COMMENT(COMMENT) '#print("2")'
[20](01, 27)-(01, 28): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 24): NAME(NAME) 'continue'
[21](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 16): NAME(NAME) 'else'
[22](01, 16)-(01, 17): COLON(OP) ':'
[22](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 16)-(01, 34): COMMENT(COMMENT) '#print(string2[i])'
[23](01, 34)-(01, 35): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 16): INDENT(INDENT) '                '
[24](01, 16)-(01, 18): NAME(NAME) 'if'
[24](01, 19)-(01, 21): NUMBER(NUMBER) '65'
[24](01, 22)-(01, 24): LESSEQUAL(OP) '<='
[24](01, 25)-(01, 28): NAME(NAME) 'ord'
[24](01, 28)-(01, 29): LPAR(OP) '('
[24](01, 29)-(01, 36): NAME(NAME) 'string2'
[24](01, 36)-(01, 37): LSQB(OP) '['
[24](01, 37)-(01, 38): NAME(NAME) 'i'
[24](01, 38)-(01, 39): RSQB(OP) ']'
[24](01, 39)-(01, 40): RPAR(OP) ')'
[24](01, 41)-(01, 43): LESSEQUAL(OP) '<='
[24](01, 44)-(01, 46): NUMBER(NUMBER) '90'
[24](01, 47)-(01, 49): NAME(NAME) 'or'
[24](01, 50)-(01, 52): NUMBER(NUMBER) '97'
[24](01, 53)-(01, 55): LESSEQUAL(OP) '<='
[24](01, 56)-(01, 59): NAME(NAME) 'ord'
[24](01, 59)-(01, 60): LPAR(OP) '('
[24](01, 60)-(01, 67): NAME(NAME) 'string2'
[24](01, 67)-(01, 68): LSQB(OP) '['
[24](01, 68)-(01, 69): NAME(NAME) 'i'
[24](01, 69)-(01, 70): RSQB(OP) ']'
[24](01, 70)-(01, 71): RPAR(OP) ')'
[24](01, 72)-(01, 74): LESSEQUAL(OP) '<='
[24](01, 75)-(01, 78): NUMBER(NUMBER) '122'
[24](01, 78)-(01, 79): COLON(OP) ':'
[24](01, 79)-(01, 80): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 20): INDENT(INDENT) '                    '
[25](01, 20)-(01, 25): NAME(NAME) 'count'
[25](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[25](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[25](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 20)-(01, 31): COMMENT(COMMENT) '#print("3")'
[26](01, 31)-(01, 32): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 16)-(01, 27): COMMENT(COMMENT) '#print("4")'
[27](01, 27)-(01, 28): NL(NL) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 16)-(01, 80): COMMENT(COMMENT) '#if 65 <= ord(string2[0]) <= 90 or 97 <= ord(string2[0]) <= 122:'
[28](01, 80)-(01, 81): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 10): NAME(NAME) 'return'
[29](01, 11)-(01, 16): NAME(NAME) 'count'
[29](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

