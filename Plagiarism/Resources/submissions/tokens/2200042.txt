[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 08): NAME(NAME) 'find'
[00](01, 08)-(01, 09): LPAR(OP) '('
[00](01, 09)-(01, 10): NAME(NAME) 's'
[00](01, 10)-(01, 11): COMMA(OP) ','
[00](01, 12)-(01, 14): NAME(NAME) 'ch'
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): COLON(OP) ':'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'x'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[01](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'while'
[02](01, 10)-(01, 11): NAME(NAME) 'x'
[02](01, 12)-(01, 13): LESS(OP) '<'
[02](01, 14)-(01, 17): NAME(NAME) 'len'
[02](01, 17)-(01, 18): LPAR(OP) '('
[02](01, 18)-(01, 19): NAME(NAME) 's'
[02](01, 19)-(01, 20): RPAR(OP) ')'
[02](01, 20)-(01, 21): COLON(OP) ':'
[02](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 12): NAME(NAME) 's'
[03](01, 12)-(01, 13): LSQB(OP) '['
[03](01, 13)-(01, 14): NAME(NAME) 'x'
[03](01, 14)-(01, 15): RSQB(OP) ']'
[03](01, 16)-(01, 18): EQEQUAL(OP) '=='
[03](01, 19)-(01, 21): NAME(NAME) 'ch'
[03](01, 21)-(01, 22): COLON(OP) ':'
[03](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 18): NAME(NAME) 'return'
[04](01, 19)-(01, 20): NAME(NAME) 'x'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 09): NAME(NAME) 'x'
[05](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[05](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[05](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 10): NAME(NAME) 'return'
[06](01, 11)-(01, 12): MINUS(OP) '-'
[06](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[06](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 03): NAME(NAME) 'def'
[08](01, 04)-(01, 11): NAME(NAME) 'replace'
[08](01, 11)-(01, 12): LPAR(OP) '('
[08](01, 12)-(01, 19): NAME(NAME) 'pattern'
[08](01, 19)-(01, 20): COMMA(OP) ','
[08](01, 21)-(01, 32): NAME(NAME) 'replacement'
[08](01, 32)-(01, 33): COMMA(OP) ','
[08](01, 34)-(01, 40): NAME(NAME) 'corpus'
[08](01, 40)-(01, 41): RPAR(OP) ')'
[08](01, 41)-(01, 42): COLON(OP) ':'
[08](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 11): NAME(NAME) 'woorden'
[09](01, 12)-(01, 13): EQUAL(OP) '='
[09](01, 14)-(01, 20): NAME(NAME) 'corpus'
[09](01, 20)-(01, 21): DOT(OP) '.'
[09](01, 21)-(01, 26): NAME(NAME) 'split'
[09](01, 26)-(01, 27): LPAR(OP) '('
[09](01, 27)-(01, 28): RPAR(OP) ')'
[09](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'teller'
[10](01, 11)-(01, 12): EQUAL(OP) '='
[10](01, 13)-(01, 14): MINUS(OP) '-'
[10](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[10](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 07): NAME(NAME) 'for'
[11](01, 08)-(01, 15): NAME(NAME) 'element'
[11](01, 16)-(01, 18): NAME(NAME) 'in'
[11](01, 19)-(01, 26): NAME(NAME) 'woorden'
[11](01, 26)-(01, 27): COLON(OP) ':'
[11](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 14): NAME(NAME) 'teller'
[12](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[12](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[12](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 18): NAME(NAME) 'pattern'
[13](01, 19)-(01, 21): NAME(NAME) 'in'
[13](01, 22)-(01, 29): NAME(NAME) 'element'
[13](01, 29)-(01, 30): COLON(OP) ':'
[13](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 14): NAME(NAME) 'if'
[14](01, 15)-(01, 22): NAME(NAME) 'pattern'
[14](01, 23)-(01, 25): EQEQUAL(OP) '=='
[14](01, 26)-(01, 33): NAME(NAME) 'element'
[14](01, 33)-(01, 34): COLON(OP) ':'
[14](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 23): NAME(NAME) 'woorden'
[15](01, 23)-(01, 24): LSQB(OP) '['
[15](01, 24)-(01, 30): NAME(NAME) 'teller'
[15](01, 30)-(01, 31): RSQB(OP) ']'
[15](01, 32)-(01, 33): EQUAL(OP) '='
[15](01, 34)-(01, 45): NAME(NAME) 'replacement'
[15](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 16): NAME(NAME) 'else'
[16](01, 16)-(01, 17): COLON(OP) ':'
[16](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 21): NAME(NAME) 'start'
[17](01, 22)-(01, 23): EQUAL(OP) '='
[17](01, 24)-(01, 28): NAME(NAME) 'find'
[17](01, 28)-(01, 29): LPAR(OP) '('
[17](01, 29)-(01, 36): NAME(NAME) 'element'
[17](01, 36)-(01, 37): COMMA(OP) ','
[17](01, 38)-(01, 45): NAME(NAME) 'pattern'
[17](01, 45)-(01, 46): RPAR(OP) ')'
[17](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 21): NAME(NAME) 'einde'
[18](01, 22)-(01, 23): EQUAL(OP) '='
[18](01, 24)-(01, 27): NAME(NAME) 'len'
[18](01, 27)-(01, 28): LPAR(OP) '('
[18](01, 28)-(01, 35): NAME(NAME) 'pattern'
[18](01, 35)-(01, 36): RPAR(OP) ')'
[18](01, 36)-(01, 37): MINUS(OP) '-'
[18](01, 37)-(01, 42): NAME(NAME) 'start'
[18](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 16): INDENT(INDENT) '                '
[19](01, 16)-(01, 23): NAME(NAME) 'woorden'
[19](01, 23)-(01, 24): LSQB(OP) '['
[19](01, 24)-(01, 30): NAME(NAME) 'teller'
[19](01, 30)-(01, 31): RSQB(OP) ']'
[19](01, 32)-(01, 33): EQUAL(OP) '='
[19](01, 34)-(01, 41): NAME(NAME) 'element'
[19](01, 41)-(01, 42): LSQB(OP) '['
[19](01, 42)-(01, 47): NAME(NAME) 'start'
[19](01, 47)-(01, 48): COLON(OP) ':'
[19](01, 48)-(01, 49): NUMBER(NUMBER) '0'
[19](01, 49)-(01, 50): RSQB(OP) ']'
[19](01, 51)-(01, 52): PLUS(OP) '+'
[19](01, 53)-(01, 64): NAME(NAME) 'replacement'
[19](01, 65)-(01, 66): PLUS(OP) '+'
[19](01, 67)-(01, 74): NAME(NAME) 'element'
[19](01, 74)-(01, 75): LSQB(OP) '['
[19](01, 75)-(01, 80): NAME(NAME) 'einde'
[19](01, 80)-(01, 81): MINUS(OP) '-'
[19](01, 81)-(01, 82): NUMBER(NUMBER) '1'
[19](01, 82)-(01, 83): COLON(OP) ':'
[19](01, 83)-(01, 84): RSQB(OP) ']'
[19](01, 84)-(01, 85): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 12): NAME(NAME) 'else'
[20](01, 12)-(01, 13): COLON(OP) ':'
[20](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 20): NAME(NAME) 'continue'
[21](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 07): NAME(NAME) 'for'
[22](01, 08)-(01, 09): NAME(NAME) 'x'
[22](01, 10)-(01, 12): NAME(NAME) 'in'
[22](01, 13)-(01, 20): NAME(NAME) 'woorden'
[22](01, 20)-(01, 21): COLON(OP) ':'
[22](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 13): NAME(NAME) 'print'
[23](01, 13)-(01, 14): LPAR(OP) '('
[23](01, 14)-(01, 15): NAME(NAME) 'x'
[23](01, 15)-(01, 16): COMMA(OP) ','
[23](01, 17)-(01, 20): NAME(NAME) 'end'
[23](01, 20)-(01, 21): EQUAL(OP) '='
[23](01, 21)-(01, 24): STRING(STRING) "' '"
[23](01, 24)-(01, 25): RPAR(OP) ')'
[23](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 07): NAME(NAME) 'replace'
[25](01, 07)-(01, 08): LPAR(OP) '('
[25](01, 08)-(01, 14): STRING(STRING) '"sean"'
[25](01, 14)-(01, 15): COMMA(OP) ','
[25](01, 16)-(01, 23): STRING(STRING) '"steve"'
[25](01, 23)-(01, 24): COMMA(OP) ','
[25](01, 25)-(01, 50): STRING(STRING) '"sean,zit naast pim sean"'
[25](01, 50)-(01, 51): RPAR(OP) ')'
[25](01, 51)-(01, 52): NEWLINE(NEWLINE)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

