[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 09): NAME(NAME) 'uniek'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 16): NAME(NAME) 'matrix'
[00](01, 16)-(01, 17): RPAR(OP) ')'
[00](01, 17)-(01, 18): COLON(OP) ':'
[00](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'el_list'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 15): LSQB(OP) '['
[01](01, 15)-(01, 16): RSQB(OP) ']'
[01](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 22): NAME(NAME) 'len'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 29): NAME(NAME) 'matrix'
[02](01, 29)-(01, 30): RPAR(OP) ')'
[02](01, 30)-(01, 31): RPAR(OP) ')'
[02](01, 31)-(01, 32): COLON(OP) ':'
[02](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 11): NAME(NAME) 'for'
[03](01, 12)-(01, 13): NAME(NAME) 'j'
[03](01, 14)-(01, 16): NAME(NAME) 'in'
[03](01, 17)-(01, 22): NAME(NAME) 'range'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 26): NAME(NAME) 'len'
[03](01, 26)-(01, 27): LPAR(OP) '('
[03](01, 27)-(01, 33): NAME(NAME) 'matrix'
[03](01, 33)-(01, 34): LSQB(OP) '['
[03](01, 34)-(01, 35): NAME(NAME) 'i'
[03](01, 35)-(01, 36): RSQB(OP) ']'
[03](01, 36)-(01, 37): RPAR(OP) ')'
[03](01, 37)-(01, 38): RPAR(OP) ')'
[03](01, 38)-(01, 39): COLON(OP) ':'
[03](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 19): NAME(NAME) 'el_list'
[04](01, 19)-(01, 20): DOT(OP) '.'
[04](01, 20)-(01, 26): NAME(NAME) 'append'
[04](01, 26)-(01, 27): LPAR(OP) '('
[04](01, 27)-(01, 33): NAME(NAME) 'matrix'
[04](01, 33)-(01, 34): LSQB(OP) '['
[04](01, 34)-(01, 35): NAME(NAME) 'i'
[04](01, 35)-(01, 36): RSQB(OP) ']'
[04](01, 36)-(01, 37): LSQB(OP) '['
[04](01, 37)-(01, 38): NAME(NAME) 'j'
[04](01, 38)-(01, 39): RSQB(OP) ']'
[04](01, 39)-(01, 40): RPAR(OP) ')'
[04](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 12): NAME(NAME) 'in'
[05](01, 13)-(01, 18): NAME(NAME) 'range'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 22): NAME(NAME) 'len'
[05](01, 22)-(01, 23): LPAR(OP) '('
[05](01, 23)-(01, 30): NAME(NAME) 'el_list'
[05](01, 30)-(01, 31): RPAR(OP) ')'
[05](01, 31)-(01, 32): RPAR(OP) ')'
[05](01, 32)-(01, 33): COLON(OP) ':'
[05](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 11): NAME(NAME) 'for'
[06](01, 12)-(01, 13): NAME(NAME) 'j'
[06](01, 14)-(01, 16): NAME(NAME) 'in'
[06](01, 17)-(01, 22): NAME(NAME) 'range'
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 24): NAME(NAME) 'i'
[06](01, 25)-(01, 26): PLUS(OP) '+'
[06](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[06](01, 28)-(01, 29): COMMA(OP) ','
[06](01, 30)-(01, 33): NAME(NAME) 'len'
[06](01, 33)-(01, 34): LPAR(OP) '('
[06](01, 34)-(01, 41): NAME(NAME) 'el_list'
[06](01, 41)-(01, 42): RPAR(OP) ')'
[06](01, 42)-(01, 43): RPAR(OP) ')'
[06](01, 43)-(01, 44): COLON(OP) ':'
[06](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'if'
[07](01, 15)-(01, 22): NAME(NAME) 'el_list'
[07](01, 22)-(01, 23): LSQB(OP) '['
[07](01, 23)-(01, 24): NAME(NAME) 'i'
[07](01, 24)-(01, 25): RSQB(OP) ']'
[07](01, 26)-(01, 28): EQEQUAL(OP) '=='
[07](01, 29)-(01, 36): NAME(NAME) 'el_list'
[07](01, 36)-(01, 37): LSQB(OP) '['
[07](01, 37)-(01, 38): NAME(NAME) 'j'
[07](01, 38)-(01, 39): RSQB(OP) ']'
[07](01, 39)-(01, 40): COLON(OP) ':'
[07](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 22): NAME(NAME) 'return'
[08](01, 23)-(01, 28): NAME(NAME) 'False'
[08](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'return'
[10](01, 11)-(01, 15): NAME(NAME) 'True'
[10](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 03): NAME(NAME) 'def'
[12](01, 04)-(01, 10): NAME(NAME) 'rijsom'
[12](01, 10)-(01, 11): LPAR(OP) '('
[12](01, 11)-(01, 15): NAME(NAME) 'list'
[12](01, 15)-(01, 16): RPAR(OP) ')'
[12](01, 16)-(01, 17): COLON(OP) ':'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 07): NAME(NAME) 'som'
[13](01, 08)-(01, 09): EQUAL(OP) '='
[13](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[13](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 07): NAME(NAME) 'for'
[14](01, 08)-(01, 09): NAME(NAME) 'i'
[14](01, 10)-(01, 12): NAME(NAME) 'in'
[14](01, 13)-(01, 18): NAME(NAME) 'range'
[14](01, 18)-(01, 19): LPAR(OP) '('
[14](01, 19)-(01, 22): NAME(NAME) 'len'
[14](01, 22)-(01, 23): LPAR(OP) '('
[14](01, 23)-(01, 27): NAME(NAME) 'list'
[14](01, 27)-(01, 28): RPAR(OP) ')'
[14](01, 28)-(01, 29): RPAR(OP) ')'
[14](01, 29)-(01, 30): COLON(OP) ':'
[14](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 11): NAME(NAME) 'som'
[15](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[15](01, 15)-(01, 19): NAME(NAME) 'list'
[15](01, 19)-(01, 20): LSQB(OP) '['
[15](01, 20)-(01, 21): NAME(NAME) 'i'
[15](01, 21)-(01, 22): RSQB(OP) ']'
[15](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 10): NAME(NAME) 'return'
[16](01, 11)-(01, 14): NAME(NAME) 'som'
[16](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 03): NAME(NAME) 'def'
[18](01, 04)-(01, 13): NAME(NAME) 'check_row'
[18](01, 13)-(01, 14): LPAR(OP) '('
[18](01, 14)-(01, 20): NAME(NAME) 'matrix'
[18](01, 20)-(01, 21): RPAR(OP) ')'
[18](01, 21)-(01, 22): COLON(OP) ':'
[18](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 11): NAME(NAME) 'tot_sum'
[19](01, 12)-(01, 13): EQUAL(OP) '='
[19](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[19](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 07): NAME(NAME) 'for'
[20](01, 08)-(01, 09): NAME(NAME) 'i'
[20](01, 10)-(01, 12): NAME(NAME) 'in'
[20](01, 13)-(01, 18): NAME(NAME) 'range'
[20](01, 18)-(01, 19): LPAR(OP) '('
[20](01, 19)-(01, 22): NAME(NAME) 'len'
[20](01, 22)-(01, 23): LPAR(OP) '('
[20](01, 23)-(01, 29): NAME(NAME) 'matrix'
[20](01, 29)-(01, 30): RPAR(OP) ')'
[20](01, 30)-(01, 31): RPAR(OP) ')'
[20](01, 31)-(01, 32): COLON(OP) ':'
[20](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 15): NAME(NAME) 'tot_sum'
[21](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[21](01, 19)-(01, 25): NAME(NAME) 'rijsom'
[21](01, 25)-(01, 26): LPAR(OP) '('
[21](01, 26)-(01, 32): NAME(NAME) 'matrix'
[21](01, 32)-(01, 33): LSQB(OP) '['
[21](01, 33)-(01, 34): NAME(NAME) 'i'
[21](01, 34)-(01, 35): RSQB(OP) ']'
[21](01, 35)-(01, 36): RPAR(OP) ')'
[21](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 07): NAME(NAME) 'for'
[22](01, 08)-(01, 09): NAME(NAME) 'i'
[22](01, 10)-(01, 12): NAME(NAME) 'in'
[22](01, 13)-(01, 18): NAME(NAME) 'range'
[22](01, 18)-(01, 19): LPAR(OP) '('
[22](01, 19)-(01, 22): NAME(NAME) 'len'
[22](01, 22)-(01, 23): LPAR(OP) '('
[22](01, 23)-(01, 29): NAME(NAME) 'matrix'
[22](01, 29)-(01, 30): RPAR(OP) ')'
[22](01, 30)-(01, 31): RPAR(OP) ')'
[22](01, 31)-(01, 32): COLON(OP) ':'
[22](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 10): NAME(NAME) 'if'
[23](01, 11)-(01, 17): NAME(NAME) 'rijsom'
[23](01, 17)-(01, 18): LPAR(OP) '('
[23](01, 18)-(01, 24): NAME(NAME) 'matrix'
[23](01, 24)-(01, 25): LSQB(OP) '['
[23](01, 25)-(01, 26): NAME(NAME) 'i'
[23](01, 26)-(01, 27): RSQB(OP) ']'
[23](01, 27)-(01, 28): RPAR(OP) ')'
[23](01, 29)-(01, 31): NOTEQUAL(OP) '!='
[23](01, 32)-(01, 39): NAME(NAME) 'tot_sum'
[23](01, 40)-(01, 41): SLASH(OP) '/'
[23](01, 42)-(01, 45): NAME(NAME) 'len'
[23](01, 45)-(01, 46): LPAR(OP) '('
[23](01, 46)-(01, 52): NAME(NAME) 'matrix'
[23](01, 52)-(01, 53): RPAR(OP) ')'
[23](01, 53)-(01, 54): COLON(OP) ':'
[23](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): INDENT(INDENT) '            '
[24](01, 12)-(01, 18): NAME(NAME) 'return'
[24](01, 19)-(01, 24): NAME(NAME) 'False'
[24](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 10): NAME(NAME) 'return'
[25](01, 11)-(01, 15): NAME(NAME) 'True'
[25](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 03): NAME(NAME) 'def'
[27](01, 04)-(01, 10): NAME(NAME) 'kolsom'
[27](01, 10)-(01, 11): LPAR(OP) '('
[27](01, 11)-(01, 17): NAME(NAME) 'matrix'
[27](01, 17)-(01, 18): COMMA(OP) ','
[27](01, 19)-(01, 22): NAME(NAME) 'rij'
[27](01, 22)-(01, 23): RPAR(OP) ')'
[27](01, 23)-(01, 24): COLON(OP) ':'
[27](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 07): NAME(NAME) 'som'
[28](01, 08)-(01, 09): EQUAL(OP) '='
[28](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[28](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 07): NAME(NAME) 'for'
[29](01, 08)-(01, 09): NAME(NAME) 'i'
[29](01, 10)-(01, 12): NAME(NAME) 'in'
[29](01, 13)-(01, 18): NAME(NAME) 'range'
[29](01, 18)-(01, 19): LPAR(OP) '('
[29](01, 19)-(01, 22): NAME(NAME) 'len'
[29](01, 22)-(01, 23): LPAR(OP) '('
[29](01, 23)-(01, 29): NAME(NAME) 'matrix'
[29](01, 29)-(01, 30): RPAR(OP) ')'
[29](01, 30)-(01, 31): RPAR(OP) ')'
[29](01, 31)-(01, 32): COLON(OP) ':'
[29](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 11): NAME(NAME) 'som'
[30](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[30](01, 15)-(01, 21): NAME(NAME) 'matrix'
[30](01, 21)-(01, 22): LSQB(OP) '['
[30](01, 22)-(01, 23): NAME(NAME) 'i'
[30](01, 23)-(01, 24): RSQB(OP) ']'
[30](01, 24)-(01, 25): LSQB(OP) '['
[30](01, 25)-(01, 28): NAME(NAME) 'rij'
[30](01, 28)-(01, 29): RSQB(OP) ']'
[30](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 10): NAME(NAME) 'return'
[31](01, 11)-(01, 14): NAME(NAME) 'som'
[31](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 01): NL(NL) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 01): NL(NL) '\n'
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 03): NAME(NAME) 'def'
[34](01, 04)-(01, 16): NAME(NAME) 'check_column'
[34](01, 16)-(01, 17): LPAR(OP) '('
[34](01, 17)-(01, 23): NAME(NAME) 'matrix'
[34](01, 23)-(01, 24): RPAR(OP) ')'
[34](01, 24)-(01, 25): COLON(OP) ':'
[34](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 04): INDENT(INDENT) '    '
[35](01, 04)-(01, 11): NAME(NAME) 'tot_sum'
[35](01, 12)-(01, 13): EQUAL(OP) '='
[35](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[35](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 04): INDENT(INDENT) '    '
[36](01, 04)-(01, 07): NAME(NAME) 'for'
[36](01, 08)-(01, 09): NAME(NAME) 'j'
[36](01, 10)-(01, 12): NAME(NAME) 'in'
[36](01, 13)-(01, 18): NAME(NAME) 'range'
[36](01, 18)-(01, 19): LPAR(OP) '('
[36](01, 19)-(01, 22): NAME(NAME) 'len'
[36](01, 22)-(01, 23): LPAR(OP) '('
[36](01, 23)-(01, 29): NAME(NAME) 'matrix'
[36](01, 29)-(01, 30): LSQB(OP) '['
[36](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[36](01, 31)-(01, 32): RSQB(OP) ']'
[36](01, 32)-(01, 33): RPAR(OP) ')'
[36](01, 33)-(01, 34): RPAR(OP) ')'
[36](01, 34)-(01, 35): COLON(OP) ':'
[36](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 08): INDENT(INDENT) '        '
[37](01, 08)-(01, 15): NAME(NAME) 'tot_sum'
[37](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[37](01, 19)-(01, 25): NAME(NAME) 'kolsom'
[37](01, 25)-(01, 26): LPAR(OP) '('
[37](01, 26)-(01, 32): NAME(NAME) 'matrix'
[37](01, 32)-(01, 33): COMMA(OP) ','
[37](01, 34)-(01, 35): NAME(NAME) 'j'
[37](01, 35)-(01, 36): RPAR(OP) ')'
[37](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 07): NAME(NAME) 'for'
[38](01, 08)-(01, 09): NAME(NAME) 'j'
[38](01, 10)-(01, 12): NAME(NAME) 'in'
[38](01, 13)-(01, 18): NAME(NAME) 'range'
[38](01, 18)-(01, 19): LPAR(OP) '('
[38](01, 19)-(01, 22): NAME(NAME) 'len'
[38](01, 22)-(01, 23): LPAR(OP) '('
[38](01, 23)-(01, 29): NAME(NAME) 'matrix'
[38](01, 29)-(01, 30): LSQB(OP) '['
[38](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[38](01, 31)-(01, 32): RSQB(OP) ']'
[38](01, 32)-(01, 33): RPAR(OP) ')'
[38](01, 33)-(01, 34): RPAR(OP) ')'
[38](01, 34)-(01, 35): COLON(OP) ':'
[38](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 08): INDENT(INDENT) '        '
[39](01, 08)-(01, 10): NAME(NAME) 'if'
[39](01, 11)-(01, 17): NAME(NAME) 'kolsom'
[39](01, 17)-(01, 18): LPAR(OP) '('
[39](01, 18)-(01, 24): NAME(NAME) 'matrix'
[39](01, 24)-(01, 25): COMMA(OP) ','
[39](01, 26)-(01, 27): NAME(NAME) 'j'
[39](01, 27)-(01, 28): RPAR(OP) ')'
[39](01, 29)-(01, 31): NOTEQUAL(OP) '!='
[39](01, 32)-(01, 39): NAME(NAME) 'tot_sum'
[39](01, 40)-(01, 41): SLASH(OP) '/'
[39](01, 42)-(01, 45): NAME(NAME) 'len'
[39](01, 45)-(01, 46): LPAR(OP) '('
[39](01, 46)-(01, 52): NAME(NAME) 'matrix'
[39](01, 52)-(01, 53): RPAR(OP) ')'
[39](01, 53)-(01, 54): COLON(OP) ':'
[39](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 12): INDENT(INDENT) '            '
[40](01, 12)-(01, 18): NAME(NAME) 'return'
[40](01, 19)-(01, 24): NAME(NAME) 'False'
[40](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 04): INDENT(INDENT) '    '
[41](01, 04)-(01, 10): NAME(NAME) 'return'
[41](01, 11)-(01, 15): NAME(NAME) 'True'
[41](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 01): NL(NL) '\n'
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 01): NL(NL) '\n'
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 03): NAME(NAME) 'def'
[44](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[44](01, 19)-(01, 20): LPAR(OP) '('
[44](01, 20)-(01, 26): NAME(NAME) 'matrix'
[44](01, 26)-(01, 27): RPAR(OP) ')'
[44](01, 27)-(01, 28): COLON(OP) ':'
[44](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 04): INDENT(INDENT) '    '
[45](01, 04)-(01, 06): NAME(NAME) 'if'
[45](01, 07)-(01, 12): NAME(NAME) 'uniek'
[45](01, 12)-(01, 13): LPAR(OP) '('
[45](01, 13)-(01, 19): NAME(NAME) 'matrix'
[45](01, 19)-(01, 20): RPAR(OP) ')'
[45](01, 20)-(01, 21): COLON(OP) ':'
[45](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 08): INDENT(INDENT) '        '
[46](01, 08)-(01, 10): NAME(NAME) 'if'
[46](01, 11)-(01, 20): NAME(NAME) 'check_row'
[46](01, 20)-(01, 21): LPAR(OP) '('
[46](01, 21)-(01, 27): NAME(NAME) 'matrix'
[46](01, 27)-(01, 28): RPAR(OP) ')'
[46](01, 29)-(01, 32): NAME(NAME) 'and'
[46](01, 33)-(01, 45): NAME(NAME) 'check_column'
[46](01, 45)-(01, 46): LPAR(OP) '('
[46](01, 46)-(01, 52): NAME(NAME) 'matrix'
[46](01, 52)-(01, 53): RPAR(OP) ')'
[46](01, 53)-(01, 54): COLON(OP) ':'
[46](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 12): INDENT(INDENT) '            '
[47](01, 12)-(01, 18): NAME(NAME) 'return'
[47](01, 19)-(01, 23): NAME(NAME) 'True'
[47](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 08): INDENT(INDENT) '        '
[48](01, 08)-(01, 12): NAME(NAME) 'else'
[48](01, 12)-(01, 13): COLON(OP) ':'
[48](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 12): INDENT(INDENT) '            '
[49](01, 12)-(01, 18): NAME(NAME) 'return'
[49](01, 19)-(01, 24): NAME(NAME) 'False'
[49](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 04): INDENT(INDENT) '    '
[50](01, 04)-(01, 08): NAME(NAME) 'else'
[50](01, 08)-(01, 09): COLON(OP) ':'
[50](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 08): INDENT(INDENT) '        '
[51](01, 08)-(01, 14): NAME(NAME) 'return'
[51](01, 15)-(01, 20): NAME(NAME) 'False'
[51](01, 20)-(01, 21): NEWLINE(NEWLINE)
[51](02, 00)-(02, 00): DEDENT(DEDENT)
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

