[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 14): NAME(NAME) 'is_ordered'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 16): NAME(NAME) 'l'
[00](01, 16)-(01, 17): RPAR(OP) ')'
[00](01, 17)-(01, 18): COLON(OP) ':'
[00](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'copy'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 12): NAME(NAME) 'l'
[01](01, 12)-(01, 13): LSQB(OP) '['
[01](01, 13)-(01, 14): COLON(OP) ':'
[01](01, 14)-(01, 15): RSQB(OP) ']'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 08): NAME(NAME) 'copy'
[02](01, 08)-(01, 09): DOT(OP) '.'
[02](01, 09)-(01, 13): NAME(NAME) 'sort'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 15): RPAR(OP) ')'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 11): NAME(NAME) 'copy'
[03](01, 12)-(01, 14): EQEQUAL(OP) '=='
[03](01, 15)-(01, 16): NAME(NAME) 'l'
[03](01, 16)-(01, 17): COLON(OP) ':'
[03](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 19): NAME(NAME) 'True'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'else'
[05](01, 08)-(01, 09): COLON(OP) ':'
[05](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 14): NAME(NAME) 'return'
[06](01, 15)-(01, 20): NAME(NAME) 'False'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 10): NAME(NAME) 'is_ordered'
[08](01, 10)-(01, 11): LPAR(OP) '('
[08](01, 11)-(01, 12): LSQB(OP) '['
[08](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[08](01, 13)-(01, 14): COMMA(OP) ','
[08](01, 15)-(01, 16): NUMBER(NUMBER) '2'
[08](01, 16)-(01, 17): COMMA(OP) ','
[08](01, 18)-(01, 19): NUMBER(NUMBER) '3'
[08](01, 19)-(01, 20): COMMA(OP) ','
[08](01, 21)-(01, 22): NUMBER(NUMBER) '4'
[08](01, 22)-(01, 23): COMMA(OP) ','
[08](01, 24)-(01, 25): NUMBER(NUMBER) '5'
[08](01, 25)-(01, 26): COMMA(OP) ','
[08](01, 27)-(01, 28): NUMBER(NUMBER) '6'
[08](01, 28)-(01, 29): COMMA(OP) ','
[08](01, 30)-(01, 31): NUMBER(NUMBER) '7'
[08](01, 31)-(01, 32): COMMA(OP) ','
[08](01, 33)-(01, 34): NUMBER(NUMBER) '8'
[08](01, 34)-(01, 35): COMMA(OP) ','
[08](01, 36)-(01, 37): NUMBER(NUMBER) '9'
[08](01, 37)-(01, 38): RSQB(OP) ']'
[08](01, 38)-(01, 39): RPAR(OP) ')'
[08](01, 39)-(01, 40): NEWLINE(NEWLINE)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

