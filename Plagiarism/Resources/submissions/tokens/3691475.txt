[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 14): NAME(NAME) 'aantal_twintig'
[00](01, 14)-(01, 15): EQUAL(OP) '='
[00](01, 15)-(01, 18): NAME(NAME) 'int'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 24): NAME(NAME) 'input'
[00](01, 24)-(01, 25): LPAR(OP) '('
[00](01, 25)-(01, 53): STRING(STRING) '"hoeveel 20 cent muntjes?: "'
[00](01, 53)-(01, 54): RPAR(OP) ')'
[00](01, 54)-(01, 55): RPAR(OP) ')'
[00](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 11): NAME(NAME) 'aantal_tien'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 12)-(01, 15): NAME(NAME) 'int'
[01](01, 15)-(01, 16): LPAR(OP) '('
[01](01, 16)-(01, 21): NAME(NAME) 'input'
[01](01, 21)-(01, 22): LPAR(OP) '('
[01](01, 22)-(01, 50): STRING(STRING) '"hoeveel 10 cent muntjes?: "'
[01](01, 50)-(01, 51): RPAR(OP) ')'
[01](01, 51)-(01, 52): RPAR(OP) ')'
[01](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 11): NAME(NAME) 'aantal_vijf'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 12)-(01, 15): NAME(NAME) 'int'
[02](01, 15)-(01, 16): LPAR(OP) '('
[02](01, 16)-(01, 21): NAME(NAME) 'input'
[02](01, 21)-(01, 22): LPAR(OP) '('
[02](01, 22)-(01, 49): STRING(STRING) '"hoeveel 5 cent muntjes?: "'
[02](01, 49)-(01, 50): RPAR(OP) ')'
[02](01, 50)-(01, 51): RPAR(OP) ')'
[02](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 11): NAME(NAME) 'aantal_twee'
[03](01, 11)-(01, 12): EQUAL(OP) '='
[03](01, 12)-(01, 15): NAME(NAME) 'int'
[03](01, 15)-(01, 16): LPAR(OP) '('
[03](01, 16)-(01, 21): NAME(NAME) 'input'
[03](01, 21)-(01, 22): LPAR(OP) '('
[03](01, 22)-(01, 49): STRING(STRING) '"hoeveel 2 cent muntjes?: "'
[03](01, 49)-(01, 50): RPAR(OP) ')'
[03](01, 50)-(01, 51): RPAR(OP) ')'
[03](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 10): NAME(NAME) 'aantal_een'
[04](01, 10)-(01, 11): EQUAL(OP) '='
[04](01, 11)-(01, 14): NAME(NAME) 'int'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 20): NAME(NAME) 'input'
[04](01, 20)-(01, 21): LPAR(OP) '('
[04](01, 21)-(01, 48): STRING(STRING) '"hoeveel 1 cent muntjes?: "'
[04](01, 48)-(01, 49): RPAR(OP) ')'
[04](01, 49)-(01, 50): RPAR(OP) ')'
[04](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): NAME(NAME) 'geld'
[05](01, 04)-(01, 05): EQUAL(OP) '='
[05](01, 05)-(01, 06): LPAR(OP) '('
[05](01, 06)-(01, 20): NAME(NAME) 'aantal_twintig'
[05](01, 20)-(01, 21): STAR(OP) '*'
[05](01, 21)-(01, 23): NUMBER(NUMBER) '20'
[05](01, 23)-(01, 24): RPAR(OP) ')'
[05](01, 24)-(01, 25): PLUS(OP) '+'
[05](01, 25)-(01, 26): LPAR(OP) '('
[05](01, 26)-(01, 37): NAME(NAME) 'aantal_tien'
[05](01, 37)-(01, 38): STAR(OP) '*'
[05](01, 38)-(01, 40): NUMBER(NUMBER) '10'
[05](01, 40)-(01, 41): RPAR(OP) ')'
[05](01, 41)-(01, 42): PLUS(OP) '+'
[05](01, 42)-(01, 43): LPAR(OP) '('
[05](01, 43)-(01, 54): NAME(NAME) 'aantal_vijf'
[05](01, 54)-(01, 55): STAR(OP) '*'
[05](01, 55)-(01, 56): NUMBER(NUMBER) '5'
[05](01, 56)-(01, 57): RPAR(OP) ')'
[05](01, 57)-(01, 58): PLUS(OP) '+'
[05](01, 58)-(01, 59): LPAR(OP) '('
[05](01, 59)-(01, 70): NAME(NAME) 'aantal_twee'
[05](01, 70)-(01, 71): STAR(OP) '*'
[05](01, 71)-(01, 72): NUMBER(NUMBER) '2'
[05](01, 72)-(01, 73): RPAR(OP) ')'
[05](01, 73)-(01, 74): PLUS(OP) '+'
[05](01, 74)-(01, 75): LPAR(OP) '('
[05](01, 75)-(01, 85): NAME(NAME) 'aantal_een'
[05](01, 85)-(01, 86): STAR(OP) '*'
[05](01, 86)-(01, 87): NUMBER(NUMBER) '1'
[05](01, 87)-(01, 88): RPAR(OP) ')'
[05](01, 88)-(01, 89): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 02): NAME(NAME) 'if'
[06](01, 03)-(01, 07): NAME(NAME) 'geld'
[06](01, 07)-(01, 08): LESS(OP) '<'
[06](01, 08)-(01, 11): NUMBER(NUMBER) '100'
[06](01, 11)-(01, 12): COLON(OP) ':'
[06](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 09): NAME(NAME) 'print'
[07](01, 09)-(01, 10): LPAR(OP) '('
[07](01, 10)-(01, 22): STRING(STRING) '"je hebt 0."'
[07](01, 22)-(01, 23): COMMA(OP) ','
[07](01, 24)-(01, 28): NAME(NAME) 'geld'
[07](01, 28)-(01, 29): COMMA(OP) ','
[07](01, 30)-(01, 37): STRING(STRING) '" euro"'
[07](01, 37)-(01, 38): COMMA(OP) ','
[07](01, 39)-(01, 42): NAME(NAME) 'sep'
[07](01, 42)-(01, 43): EQUAL(OP) '='
[07](01, 43)-(01, 45): STRING(STRING) '""'
[07](01, 45)-(01, 46): RPAR(OP) ')'
[07](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): NAME(NAME) 'else'
[08](01, 04)-(01, 05): COLON(OP) ':'
[08](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'print'
[09](01, 09)-(01, 10): LPAR(OP) '('
[09](01, 10)-(01, 19): STRING(STRING) '"je hebt"'
[09](01, 19)-(01, 20): COMMA(OP) ','
[09](01, 21)-(01, 25): NAME(NAME) 'geld'
[09](01, 25)-(01, 26): SLASH(OP) '/'
[09](01, 26)-(01, 28): NUMBER(NUMBER) '10'
[09](01, 28)-(01, 29): COMMA(OP) ','
[09](01, 30)-(01, 33): STRING(STRING) '"."'
[09](01, 33)-(01, 34): RPAR(OP) ')'
[09](01, 35)-(01, 78): COMMENT(COMMENT) '#nog delen door tien of zoiets, nog niet af'
[09](01, 78)-(01, 79): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

