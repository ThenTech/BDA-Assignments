[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 04): NAME(NAME) 'year'
[00](01, 05)-(01, 06): EQUAL(OP) '='
[00](01, 07)-(01, 10): NAME(NAME) 'int'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 16): NAME(NAME) 'input'
[00](01, 16)-(01, 17): LPAR(OP) '('
[00](01, 17)-(01, 29): STRING(STRING) '"Which year"'
[00](01, 29)-(01, 30): RPAR(OP) ')'
[00](01, 30)-(01, 31): RPAR(OP) ')'
[00](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 02): NAME(NAME) 'if'
[01](01, 03)-(01, 07): NAME(NAME) 'year'
[01](01, 07)-(01, 08): PERCENT(OP) '%'
[01](01, 08)-(01, 09): NUMBER(NUMBER) '4'
[01](01, 09)-(01, 10): COLON(OP) ':'
[01](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'print'
[02](01, 09)-(01, 10): LPAR(OP) '('
[02](01, 10)-(01, 14): NAME(NAME) 'year'
[02](01, 14)-(01, 15): COMMA(OP) ','
[02](01, 15)-(01, 31): STRING(STRING) '"is a leap year"'
[02](01, 31)-(01, 32): RPAR(OP) ')'
[02](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): NAME(NAME) 'else'
[03](01, 04)-(01, 05): COLON(OP) ':'
[03](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'print'
[04](01, 09)-(01, 10): LPAR(OP) '('
[04](01, 10)-(01, 14): NAME(NAME) 'year'
[04](01, 14)-(01, 15): COMMA(OP) ','
[04](01, 16)-(01, 36): STRING(STRING) '"is not a leap year"'
[04](01, 36)-(01, 37): RPAR(OP) ')'
[04](01, 37)-(01, 38): NEWLINE(NEWLINE)
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

