[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'x'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 11): RPAR(OP) ')'
[00](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 02): NAME(NAME) 'if'
[01](01, 02)-(01, 03): LPAR(OP) '('
[01](01, 03)-(01, 04): NAME(NAME) 'x'
[01](01, 04)-(01, 06): EQEQUAL(OP) '=='
[01](01, 06)-(01, 07): NAME(NAME) 'x'
[01](01, 07)-(01, 08): LSQB(OP) '['
[01](01, 08)-(01, 09): COLON(OP) ':'
[01](01, 09)-(01, 10): COLON(OP) ':'
[01](01, 10)-(01, 11): MINUS(OP) '-'
[01](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[01](01, 12)-(01, 13): RSQB(OP) ']'
[01](01, 13)-(01, 14): RPAR(OP) ')'
[01](01, 14)-(01, 15): COLON(OP) ':'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 06): INDENT(INDENT) '      '
[02](01, 06)-(01, 11): NAME(NAME) 'print'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 13): NAME(NAME) 'x'
[02](01, 13)-(01, 14): COMMA(OP) ','
[02](01, 15)-(01, 32): STRING(STRING) '"is a palindrome"'
[02](01, 32)-(01, 33): RPAR(OP) ')'
[02](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): NAME(NAME) 'else'
[03](01, 04)-(01, 05): COLON(OP) ':'
[03](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 06): INDENT(INDENT) '      '
[04](01, 06)-(01, 11): NAME(NAME) 'print'
[04](01, 11)-(01, 12): LPAR(OP) '('
[04](01, 12)-(01, 13): NAME(NAME) 'x'
[04](01, 13)-(01, 14): COMMA(OP) ','
[04](01, 15)-(01, 36): STRING(STRING) '"is not a palindrome"'
[04](01, 36)-(01, 37): RPAR(OP) ')'
[04](01, 37)-(01, 38): NEWLINE(NEWLINE)
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

