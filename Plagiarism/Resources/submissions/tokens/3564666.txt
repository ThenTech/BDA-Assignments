[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 08): NAME(NAME) 'one_cent'
[00](01, 09)-(01, 10): EQUAL(OP) '='
[00](01, 11)-(01, 14): NAME(NAME) 'int'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 20): NAME(NAME) 'input'
[00](01, 20)-(01, 21): LPAR(OP) '('
[00](01, 21)-(01, 34): STRING(STRING) '"One cents: "'
[00](01, 34)-(01, 35): RPAR(OP) ')'
[00](01, 35)-(01, 36): RPAR(OP) ')'
[00](01, 37)-(01, 38): STAR(OP) '*'
[00](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[00](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 08): NAME(NAME) 'two_cent'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 14): NAME(NAME) 'int'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 20): NAME(NAME) 'input'
[01](01, 20)-(01, 21): LPAR(OP) '('
[01](01, 21)-(01, 34): STRING(STRING) '"Two cents: "'
[01](01, 34)-(01, 35): RPAR(OP) ')'
[01](01, 35)-(01, 36): RPAR(OP) ')'
[01](01, 37)-(01, 38): STAR(OP) '*'
[01](01, 39)-(01, 40): NUMBER(NUMBER) '2'
[01](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 09): NAME(NAME) 'five_cent'
[02](01, 10)-(01, 11): EQUAL(OP) '='
[02](01, 12)-(01, 15): NAME(NAME) 'int'
[02](01, 15)-(01, 16): LPAR(OP) '('
[02](01, 16)-(01, 21): NAME(NAME) 'input'
[02](01, 21)-(01, 22): LPAR(OP) '('
[02](01, 22)-(01, 36): STRING(STRING) '"Five cents: "'
[02](01, 36)-(01, 37): RPAR(OP) ')'
[02](01, 37)-(01, 38): RPAR(OP) ')'
[02](01, 39)-(01, 40): STAR(OP) '*'
[02](01, 41)-(01, 42): NUMBER(NUMBER) '5'
[02](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): NAME(NAME) 'ten_cent'
[03](01, 09)-(01, 10): EQUAL(OP) '='
[03](01, 11)-(01, 14): NAME(NAME) 'int'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 20): NAME(NAME) 'input'
[03](01, 20)-(01, 21): LPAR(OP) '('
[03](01, 21)-(01, 34): STRING(STRING) '"Ten cents: "'
[03](01, 34)-(01, 35): RPAR(OP) ')'
[03](01, 35)-(01, 36): RPAR(OP) ')'
[03](01, 37)-(01, 38): STAR(OP) '*'
[03](01, 39)-(01, 41): NUMBER(NUMBER) '10'
[03](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 11): NAME(NAME) 'twenty_cent'
[04](01, 12)-(01, 13): EQUAL(OP) '='
[04](01, 14)-(01, 17): NAME(NAME) 'int'
[04](01, 17)-(01, 18): LPAR(OP) '('
[04](01, 18)-(01, 23): NAME(NAME) 'input'
[04](01, 23)-(01, 24): LPAR(OP) '('
[04](01, 24)-(01, 40): STRING(STRING) '"Twenty cents: "'
[04](01, 40)-(01, 41): RPAR(OP) ')'
[04](01, 41)-(01, 42): RPAR(OP) ')'
[04](01, 43)-(01, 44): STAR(OP) '*'
[04](01, 45)-(01, 47): NUMBER(NUMBER) '20'
[04](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 05): NAME(NAME) 'total'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 08)-(01, 16): NAME(NAME) 'one_cent'
[05](01, 17)-(01, 18): PLUS(OP) '+'
[05](01, 19)-(01, 27): NAME(NAME) 'two_cent'
[05](01, 28)-(01, 29): PLUS(OP) '+'
[05](01, 30)-(01, 39): NAME(NAME) 'five_cent'
[05](01, 40)-(01, 41): PLUS(OP) '+'
[05](01, 42)-(01, 50): NAME(NAME) 'ten_cent'
[05](01, 51)-(01, 52): PLUS(OP) '+'
[05](01, 53)-(01, 64): NAME(NAME) 'twenty_cent'
[05](01, 64)-(01, 65): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): NAME(NAME) 'euro'
[06](01, 05)-(01, 06): EQUAL(OP) '='
[06](01, 07)-(01, 12): NAME(NAME) 'total'
[06](01, 13)-(01, 15): DOUBLESLASH(OP) '//'
[06](01, 16)-(01, 19): NUMBER(NUMBER) '100'
[06](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): NAME(NAME) 'tens'
[07](01, 05)-(01, 06): EQUAL(OP) '='
[07](01, 07)-(01, 12): NAME(NAME) 'total'
[07](01, 13)-(01, 15): DOUBLESLASH(OP) '//'
[07](01, 16)-(01, 18): NUMBER(NUMBER) '10'
[07](01, 19)-(01, 20): PERCENT(OP) '%'
[07](01, 21)-(01, 23): NUMBER(NUMBER) '10'
[07](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): NAME(NAME) 'hundreds'
[08](01, 09)-(01, 10): EQUAL(OP) '='
[08](01, 11)-(01, 16): NAME(NAME) 'total'
[08](01, 17)-(01, 18): PERCENT(OP) '%'
[08](01, 19)-(01, 21): NUMBER(NUMBER) '10'
[08](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 05): NAME(NAME) 'print'
[10](01, 05)-(01, 06): LPAR(OP) '('
[10](01, 06)-(01, 17): STRING(STRING) '"You have "'
[10](01, 17)-(01, 18): COMMA(OP) ','
[10](01, 19)-(01, 23): NAME(NAME) 'euro'
[10](01, 23)-(01, 24): COMMA(OP) ','
[10](01, 25)-(01, 28): STRING(STRING) '"."'
[10](01, 28)-(01, 29): COMMA(OP) ','
[10](01, 30)-(01, 34): NAME(NAME) 'tens'
[10](01, 34)-(01, 35): COMMA(OP) ','
[10](01, 36)-(01, 44): NAME(NAME) 'hundreds'
[10](01, 44)-(01, 45): COMMA(OP) ','
[10](01, 46)-(01, 54): STRING(STRING) '" euro!"'
[10](01, 54)-(01, 55): COMMA(OP) ','
[10](01, 56)-(01, 59): NAME(NAME) 'sep'
[10](01, 59)-(01, 60): EQUAL(OP) '='
[10](01, 60)-(01, 62): STRING(STRING) '""'
[10](01, 62)-(01, 63): RPAR(OP) ')'
[10](01, 63)-(01, 64): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

