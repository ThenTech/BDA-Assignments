[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'n'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 07): NAME(NAME) 'int'
[00](01, 07)-(01, 08): LPAR(OP) '('
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'm'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 07): NAME(NAME) 'int'
[01](01, 07)-(01, 08): LPAR(OP) '('
[01](01, 08)-(01, 13): NAME(NAME) 'input'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 15): RPAR(OP) ')'
[01](01, 15)-(01, 16): RPAR(OP) ')'
[01](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 09): NAME(NAME) 'recur'
[03](01, 09)-(01, 10): LPAR(OP) '('
[03](01, 10)-(01, 14): NAME(NAME) 'list'
[03](01, 14)-(01, 15): COMMA(OP) ','
[03](01, 16)-(01, 17): NAME(NAME) 'm'
[03](01, 17)-(01, 18): COMMA(OP) ','
[03](01, 19)-(01, 25): NAME(NAME) 'result'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 26)-(01, 27): COLON(OP) ':'
[03](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 08): NUMBER(NUMBER) '0'
[04](01, 09)-(01, 11): EQEQUAL(OP) '=='
[04](01, 12)-(01, 13): NAME(NAME) 'm'
[04](01, 13)-(01, 14): COLON(OP) ':'
[04](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 13): NAME(NAME) 'print'
[05](01, 13)-(01, 14): LPAR(OP) '('
[05](01, 14)-(01, 20): NAME(NAME) 'result'
[05](01, 20)-(01, 21): RPAR(OP) ')'
[05](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 14): NAME(NAME) 'return'
[06](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 06): NAME(NAME) 'if'
[07](01, 07)-(01, 10): NAME(NAME) 'len'
[07](01, 10)-(01, 11): LPAR(OP) '('
[07](01, 11)-(01, 15): NAME(NAME) 'list'
[07](01, 15)-(01, 16): RPAR(OP) ')'
[07](01, 17)-(01, 19): EQEQUAL(OP) '=='
[07](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[07](01, 21)-(01, 22): COLON(OP) ':'
[07](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 14): NAME(NAME) 'return'
[08](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 07): NAME(NAME) 'for'
[09](01, 08)-(01, 09): NAME(NAME) 'i'
[09](01, 10)-(01, 12): NAME(NAME) 'in'
[09](01, 13)-(01, 17): NAME(NAME) 'list'
[09](01, 17)-(01, 18): COLON(OP) ':'
[09](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'buffer'
[10](01, 15)-(01, 16): EQUAL(OP) '='
[10](01, 17)-(01, 23): NAME(NAME) 'result'
[10](01, 24)-(01, 25): PLUS(OP) '+'
[10](01, 26)-(01, 29): NAME(NAME) 'str'
[10](01, 29)-(01, 30): LPAR(OP) '('
[10](01, 30)-(01, 31): NAME(NAME) 'i'
[10](01, 31)-(01, 32): RPAR(OP) ')'
[10](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 14): NAME(NAME) 'buffer'
[11](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[11](01, 18)-(01, 21): STRING(STRING) '" "'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 11): NAME(NAME) 'del'
[12](01, 12)-(01, 16): NAME(NAME) 'list'
[12](01, 16)-(01, 17): LSQB(OP) '['
[12](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[12](01, 18)-(01, 19): RSQB(OP) ']'
[12](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 13): NAME(NAME) 'recur'
[13](01, 13)-(01, 14): LPAR(OP) '('
[13](01, 14)-(01, 18): NAME(NAME) 'list'
[13](01, 18)-(01, 19): COMMA(OP) ','
[13](01, 20)-(01, 21): NAME(NAME) 'm'
[13](01, 21)-(01, 22): MINUS(OP) '-'
[13](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[13](01, 23)-(01, 24): COMMA(OP) ','
[13](01, 25)-(01, 31): NAME(NAME) 'buffer'
[13](01, 31)-(01, 32): RPAR(OP) ')'
[13](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 13): NAME(NAME) 'recur'
[14](01, 13)-(01, 14): LPAR(OP) '('
[14](01, 14)-(01, 18): NAME(NAME) 'list'
[14](01, 18)-(01, 19): COMMA(OP) ','
[14](01, 20)-(01, 21): NAME(NAME) 'm'
[14](01, 21)-(01, 22): COMMA(OP) ','
[14](01, 23)-(01, 29): NAME(NAME) 'result'
[14](01, 29)-(01, 30): RPAR(OP) ')'
[14](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 03): NAME(NAME) 'def'
[16](01, 04)-(01, 13): NAME(NAME) 'make_list'
[16](01, 13)-(01, 14): LPAR(OP) '('
[16](01, 14)-(01, 15): NAME(NAME) 'n'
[16](01, 15)-(01, 16): COMMA(OP) ','
[16](01, 17)-(01, 18): NAME(NAME) 'm'
[16](01, 18)-(01, 19): RPAR(OP) ')'
[16](01, 19)-(01, 20): COLON(OP) ':'
[16](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 08): NAME(NAME) 'list'
[17](01, 09)-(01, 10): EQUAL(OP) '='
[17](01, 11)-(01, 12): LSQB(OP) '['
[17](01, 12)-(01, 13): RSQB(OP) ']'
[17](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 07): NAME(NAME) 'for'
[18](01, 08)-(01, 09): NAME(NAME) 'i'
[18](01, 10)-(01, 12): NAME(NAME) 'in'
[18](01, 13)-(01, 18): NAME(NAME) 'range'
[18](01, 18)-(01, 19): LPAR(OP) '('
[18](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[18](01, 20)-(01, 21): COMMA(OP) ','
[18](01, 22)-(01, 23): NAME(NAME) 'n'
[18](01, 23)-(01, 24): PLUS(OP) '+'
[18](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[18](01, 25)-(01, 26): RPAR(OP) ')'
[18](01, 26)-(01, 27): COLON(OP) ':'
[18](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 12): NAME(NAME) 'list'
[19](01, 12)-(01, 13): DOT(OP) '.'
[19](01, 13)-(01, 19): NAME(NAME) 'append'
[19](01, 19)-(01, 20): LPAR(OP) '('
[19](01, 20)-(01, 21): NAME(NAME) 'i'
[19](01, 21)-(01, 22): RPAR(OP) ')'
[19](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 09): NAME(NAME) 'recur'
[20](01, 09)-(01, 10): LPAR(OP) '('
[20](01, 10)-(01, 14): NAME(NAME) 'list'
[20](01, 14)-(01, 15): COMMA(OP) ','
[20](01, 16)-(01, 17): NAME(NAME) 'm'
[20](01, 17)-(01, 18): COMMA(OP) ','
[20](01, 19)-(01, 21): STRING(STRING) '""'
[20](01, 21)-(01, 22): RPAR(OP) ')'
[20](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 09): NAME(NAME) 'make_list'
[22](01, 09)-(01, 10): LPAR(OP) '('
[22](01, 10)-(01, 11): NAME(NAME) 'n'
[22](01, 11)-(01, 12): COMMA(OP) ','
[22](01, 13)-(01, 14): NAME(NAME) 'm'
[22](01, 14)-(01, 15): RPAR(OP) ')'
[22](01, 15)-(01, 16): NEWLINE(NEWLINE)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

