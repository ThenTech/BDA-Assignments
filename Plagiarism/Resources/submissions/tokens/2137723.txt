[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 's'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 11): RPAR(OP) ')'
[00](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): NAME(NAME) 'alphabet'
[02](01, 09)-(01, 10): EQUAL(OP) '='
[02](01, 11)-(01, 39): STRING(STRING) "'abcdefghijklmnopqrstuvwxyz'"
[02](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 07): NAME(NAME) 'ammount'
[03](01, 09)-(01, 10): EQUAL(OP) '='
[03](01, 11)-(01, 37): NUMBER(NUMBER) '11111111111111111111111111'
[03](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'for'
[05](01, 04)-(01, 05): NAME(NAME) 'i'
[05](01, 06)-(01, 08): NAME(NAME) 'in'
[05](01, 09)-(01, 14): NAME(NAME) 'range'
[05](01, 14)-(01, 15): LPAR(OP) '('
[05](01, 15)-(01, 18): NAME(NAME) 'len'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 20): NAME(NAME) 's'
[05](01, 20)-(01, 21): RPAR(OP) ')'
[05](01, 21)-(01, 22): RPAR(OP) ')'
[05](01, 22)-(01, 23): COLON(OP) ':'
[05](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'j'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 22): NAME(NAME) 'len'
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 31): NAME(NAME) 'alphabet'
[06](01, 31)-(01, 32): RPAR(OP) ')'
[06](01, 32)-(01, 33): RPAR(OP) ')'
[06](01, 33)-(01, 34): COLON(OP) ':'
[06](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 12): NAME(NAME) 's'
[07](01, 12)-(01, 13): LSQB(OP) '['
[07](01, 13)-(01, 14): NAME(NAME) 'i'
[07](01, 14)-(01, 15): RSQB(OP) ']'
[07](01, 16)-(01, 18): EQEQUAL(OP) '=='
[07](01, 19)-(01, 27): NAME(NAME) 'alphabet'
[07](01, 27)-(01, 28): LSQB(OP) '['
[07](01, 28)-(01, 29): NAME(NAME) 'j'
[07](01, 29)-(01, 30): RSQB(OP) ']'
[07](01, 30)-(01, 31): COLON(OP) ':'
[07](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 19): NAME(NAME) 'ammount'
[08](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[08](01, 23)-(01, 25): NUMBER(NUMBER) '10'
[08](01, 25)-(01, 27): DOUBLESTAR(OP) '**'
[08](01, 27)-(01, 28): LPAR(OP) '('
[08](01, 28)-(01, 30): NUMBER(NUMBER) '25'
[08](01, 30)-(01, 31): MINUS(OP) '-'
[08](01, 31)-(01, 32): NAME(NAME) 'j'
[08](01, 32)-(01, 33): RPAR(OP) ')'
[08](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 17): NAME(NAME) 'break'
[09](01, 17)-(01, 18): SEMI(OP) ';'
[09](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 07): NAME(NAME) 'ammount'
[11](01, 08)-(01, 09): EQUAL(OP) '='
[11](01, 10)-(01, 13): NAME(NAME) 'str'
[11](01, 13)-(01, 14): LPAR(OP) '('
[11](01, 14)-(01, 21): NAME(NAME) 'ammount'
[11](01, 21)-(01, 22): RPAR(OP) ')'
[11](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 03): NAME(NAME) 'for'
[12](01, 04)-(01, 05): NAME(NAME) 'x'
[12](01, 06)-(01, 08): NAME(NAME) 'in'
[12](01, 09)-(01, 14): NAME(NAME) 'range'
[12](01, 14)-(01, 15): LPAR(OP) '('
[12](01, 15)-(01, 18): NAME(NAME) 'len'
[12](01, 18)-(01, 19): LPAR(OP) '('
[12](01, 19)-(01, 26): NAME(NAME) 'ammount'
[12](01, 26)-(01, 27): RPAR(OP) ')'
[12](01, 27)-(01, 28): RPAR(OP) ')'
[12](01, 28)-(01, 29): COLON(OP) ':'
[12](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 09): NAME(NAME) 'print'
[13](01, 09)-(01, 10): LPAR(OP) '('
[13](01, 10)-(01, 18): NAME(NAME) 'alphabet'
[13](01, 18)-(01, 19): LSQB(OP) '['
[13](01, 19)-(01, 20): NAME(NAME) 'x'
[13](01, 20)-(01, 21): RSQB(OP) ']'
[13](01, 21)-(01, 22): COMMA(OP) ','
[13](01, 23)-(01, 27): STRING(STRING) "': '"
[13](01, 27)-(01, 28): COMMA(OP) ','
[13](01, 29)-(01, 32): NAME(NAME) 'int'
[13](01, 32)-(01, 33): LPAR(OP) '('
[13](01, 33)-(01, 40): NAME(NAME) 'ammount'
[13](01, 40)-(01, 41): LSQB(OP) '['
[13](01, 41)-(01, 42): NAME(NAME) 'x'
[13](01, 42)-(01, 43): RSQB(OP) ']'
[13](01, 43)-(01, 44): RPAR(OP) ')'
[13](01, 44)-(01, 45): MINUS(OP) '-'
[13](01, 45)-(01, 46): NUMBER(NUMBER) '1'
[13](01, 46)-(01, 47): COMMA(OP) ','
[13](01, 48)-(01, 51): NAME(NAME) 'sep'
[13](01, 51)-(01, 52): EQUAL(OP) '='
[13](01, 52)-(01, 54): STRING(STRING) "''"
[13](01, 54)-(01, 55): RPAR(OP) ')'
[13](01, 55)-(01, 56): NEWLINE(NEWLINE)
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

