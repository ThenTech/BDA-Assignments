[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): COMMA(OP) ','
[00](01, 14)-(01, 15): NAME(NAME) 'n'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'encoded'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 13)-(01, 15): STRING(STRING) '""'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 14): NAME(NAME) 's'
[02](01, 14)-(01, 15): COLON(OP) ':'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 13): NUMBER(NUMBER) '97'
[03](01, 14)-(01, 16): LESSEQUAL(OP) '<='
[03](01, 17)-(01, 20): NAME(NAME) 'ord'
[03](01, 20)-(01, 21): LPAR(OP) '('
[03](01, 21)-(01, 22): NAME(NAME) 'i'
[03](01, 22)-(01, 23): RPAR(OP) ')'
[03](01, 24)-(01, 26): LESSEQUAL(OP) '<='
[03](01, 27)-(01, 30): NUMBER(NUMBER) '122'
[03](01, 30)-(01, 31): COLON(OP) ':'
[03](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 24): NAME(NAME) 'ascii_number'
[04](01, 25)-(01, 26): EQUAL(OP) '='
[04](01, 27)-(01, 28): LPAR(OP) '('
[04](01, 28)-(01, 31): NAME(NAME) 'ord'
[04](01, 31)-(01, 32): LPAR(OP) '('
[04](01, 32)-(01, 33): NAME(NAME) 'i'
[04](01, 33)-(01, 34): RPAR(OP) ')'
[04](01, 35)-(01, 36): PLUS(OP) '+'
[04](01, 37)-(01, 38): NAME(NAME) 'n'
[04](01, 38)-(01, 39): RPAR(OP) ')'
[04](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 14): NAME(NAME) 'if'
[05](01, 15)-(01, 27): NAME(NAME) 'ascii_number'
[05](01, 28)-(01, 29): GREATER(OP) '>'
[05](01, 30)-(01, 33): NUMBER(NUMBER) '122'
[05](01, 33)-(01, 34): COLON(OP) ':'
[05](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 21): NAME(NAME) 'while'
[06](01, 22)-(01, 34): NAME(NAME) 'ascii_number'
[06](01, 35)-(01, 36): GREATER(OP) '>'
[06](01, 37)-(01, 40): NUMBER(NUMBER) '122'
[06](01, 40)-(01, 41): COLON(OP) ':'
[06](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 20): INDENT(INDENT) '                    '
[07](01, 20)-(01, 32): NAME(NAME) 'ascii_number'
[07](01, 33)-(01, 34): EQUAL(OP) '='
[07](01, 35)-(01, 47): NAME(NAME) 'ascii_number'
[07](01, 48)-(01, 49): MINUS(OP) '-'
[07](01, 50)-(01, 52): NUMBER(NUMBER) '26'
[07](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 23): NAME(NAME) 'encoded'
[08](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[08](01, 27)-(01, 30): NAME(NAME) 'chr'
[08](01, 30)-(01, 31): LPAR(OP) '('
[08](01, 31)-(01, 43): NAME(NAME) 'ascii_number'
[08](01, 43)-(01, 44): RPAR(OP) ')'
[08](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 16): NAME(NAME) 'elif'
[10](01, 17)-(01, 29): NAME(NAME) 'ascii_number'
[10](01, 30)-(01, 31): LESS(OP) '<'
[10](01, 32)-(01, 34): NUMBER(NUMBER) '97'
[10](01, 34)-(01, 35): COLON(OP) ':'
[10](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 21): NAME(NAME) 'while'
[11](01, 22)-(01, 34): NAME(NAME) 'ascii_number'
[11](01, 35)-(01, 36): LESS(OP) '<'
[11](01, 37)-(01, 39): NUMBER(NUMBER) '97'
[11](01, 39)-(01, 40): COLON(OP) ':'
[11](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 20): INDENT(INDENT) '                    '
[12](01, 20)-(01, 32): NAME(NAME) 'ascii_number'
[12](01, 33)-(01, 34): EQUAL(OP) '='
[12](01, 35)-(01, 47): NAME(NAME) 'ascii_number'
[12](01, 48)-(01, 49): PLUS(OP) '+'
[12](01, 50)-(01, 52): NUMBER(NUMBER) '26'
[12](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 23): NAME(NAME) 'encoded'
[13](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[13](01, 27)-(01, 30): NAME(NAME) 'chr'
[13](01, 30)-(01, 31): LPAR(OP) '('
[13](01, 31)-(01, 43): NAME(NAME) 'ascii_number'
[13](01, 43)-(01, 44): RPAR(OP) ')'
[13](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 16): NAME(NAME) 'else'
[14](01, 16)-(01, 17): COLON(OP) ':'
[14](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 23): NAME(NAME) 'encoded'
[15](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[15](01, 27)-(01, 30): NAME(NAME) 'chr'
[15](01, 30)-(01, 31): LPAR(OP) '('
[15](01, 31)-(01, 43): NAME(NAME) 'ascii_number'
[15](01, 43)-(01, 44): RPAR(OP) ')'
[15](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 12): NAME(NAME) 'else'
[16](01, 12)-(01, 13): COLON(OP) ':'
[16](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 19): NAME(NAME) 'encoded'
[17](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[17](01, 23)-(01, 24): NAME(NAME) 'i'
[17](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 10): NAME(NAME) 'return'
[18](01, 11)-(01, 18): NAME(NAME) 'encoded'
[18](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 03): NAME(NAME) 'def'
[20](01, 04)-(01, 10): NAME(NAME) 'decode'
[20](01, 10)-(01, 11): LPAR(OP) '('
[20](01, 11)-(01, 12): NAME(NAME) 's'
[20](01, 12)-(01, 13): COMMA(OP) ','
[20](01, 14)-(01, 15): NAME(NAME) 'n'
[20](01, 15)-(01, 16): RPAR(OP) ')'
[20](01, 16)-(01, 17): COLON(OP) ':'
[20](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 11): NAME(NAME) 'encoded'
[21](01, 12)-(01, 13): EQUAL(OP) '='
[21](01, 14)-(01, 16): STRING(STRING) '""'
[21](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 07): NAME(NAME) 'for'
[22](01, 08)-(01, 09): NAME(NAME) 'i'
[22](01, 10)-(01, 12): NAME(NAME) 'in'
[22](01, 13)-(01, 14): NAME(NAME) 's'
[22](01, 14)-(01, 15): COLON(OP) ':'
[22](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 10): NAME(NAME) 'if'
[23](01, 11)-(01, 13): NUMBER(NUMBER) '97'
[23](01, 14)-(01, 16): LESSEQUAL(OP) '<='
[23](01, 17)-(01, 20): NAME(NAME) 'ord'
[23](01, 20)-(01, 21): LPAR(OP) '('
[23](01, 21)-(01, 22): NAME(NAME) 'i'
[23](01, 22)-(01, 23): RPAR(OP) ')'
[23](01, 24)-(01, 26): LESSEQUAL(OP) '<='
[23](01, 27)-(01, 30): NUMBER(NUMBER) '122'
[23](01, 30)-(01, 31): COLON(OP) ':'
[23](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): INDENT(INDENT) '            '
[24](01, 12)-(01, 24): NAME(NAME) 'ascii_number'
[24](01, 25)-(01, 26): EQUAL(OP) '='
[24](01, 27)-(01, 28): LPAR(OP) '('
[24](01, 28)-(01, 31): NAME(NAME) 'ord'
[24](01, 31)-(01, 32): LPAR(OP) '('
[24](01, 32)-(01, 33): NAME(NAME) 'i'
[24](01, 33)-(01, 34): RPAR(OP) ')'
[24](01, 35)-(01, 36): MINUS(OP) '-'
[24](01, 37)-(01, 38): NAME(NAME) 'n'
[24](01, 38)-(01, 39): RPAR(OP) ')'
[24](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 14): NAME(NAME) 'if'
[25](01, 15)-(01, 27): NAME(NAME) 'ascii_number'
[25](01, 28)-(01, 29): GREATER(OP) '>'
[25](01, 30)-(01, 33): NUMBER(NUMBER) '122'
[25](01, 33)-(01, 34): COLON(OP) ':'
[25](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 16): INDENT(INDENT) '                '
[26](01, 16)-(01, 21): NAME(NAME) 'while'
[26](01, 22)-(01, 34): NAME(NAME) 'ascii_number'
[26](01, 35)-(01, 36): GREATER(OP) '>'
[26](01, 37)-(01, 40): NUMBER(NUMBER) '122'
[26](01, 40)-(01, 41): COLON(OP) ':'
[26](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 20): INDENT(INDENT) '                    '
[27](01, 20)-(01, 32): NAME(NAME) 'ascii_number'
[27](01, 33)-(01, 34): EQUAL(OP) '='
[27](01, 35)-(01, 47): NAME(NAME) 'ascii_number'
[27](01, 48)-(01, 49): MINUS(OP) '-'
[27](01, 50)-(01, 52): NUMBER(NUMBER) '26'
[27](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 16): INDENT(INDENT) '                '
[28](01, 16)-(01, 23): NAME(NAME) 'encoded'
[28](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[28](01, 27)-(01, 30): NAME(NAME) 'chr'
[28](01, 30)-(01, 31): LPAR(OP) '('
[28](01, 31)-(01, 43): NAME(NAME) 'ascii_number'
[28](01, 43)-(01, 44): RPAR(OP) ')'
[28](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 16): NAME(NAME) 'elif'
[30](01, 17)-(01, 29): NAME(NAME) 'ascii_number'
[30](01, 30)-(01, 31): LESS(OP) '<'
[30](01, 32)-(01, 34): NUMBER(NUMBER) '97'
[30](01, 34)-(01, 35): COLON(OP) ':'
[30](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 16): INDENT(INDENT) '                '
[31](01, 16)-(01, 21): NAME(NAME) 'while'
[31](01, 22)-(01, 34): NAME(NAME) 'ascii_number'
[31](01, 35)-(01, 36): LESS(OP) '<'
[31](01, 37)-(01, 39): NUMBER(NUMBER) '97'
[31](01, 39)-(01, 40): COLON(OP) ':'
[31](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 20): INDENT(INDENT) '                    '
[32](01, 20)-(01, 32): NAME(NAME) 'ascii_number'
[32](01, 33)-(01, 34): EQUAL(OP) '='
[32](01, 35)-(01, 47): NAME(NAME) 'ascii_number'
[32](01, 48)-(01, 49): PLUS(OP) '+'
[32](01, 50)-(01, 52): NUMBER(NUMBER) '26'
[32](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 16): INDENT(INDENT) '                '
[33](01, 16)-(01, 23): NAME(NAME) 'encoded'
[33](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[33](01, 27)-(01, 30): NAME(NAME) 'chr'
[33](01, 30)-(01, 31): LPAR(OP) '('
[33](01, 31)-(01, 43): NAME(NAME) 'ascii_number'
[33](01, 43)-(01, 44): RPAR(OP) ')'
[33](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 12): INDENT(INDENT) '            '
[34](01, 12)-(01, 16): NAME(NAME) 'else'
[34](01, 16)-(01, 17): COLON(OP) ':'
[34](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 16): INDENT(INDENT) '                '
[35](01, 16)-(01, 23): NAME(NAME) 'encoded'
[35](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[35](01, 27)-(01, 30): NAME(NAME) 'chr'
[35](01, 30)-(01, 31): LPAR(OP) '('
[35](01, 31)-(01, 43): NAME(NAME) 'ascii_number'
[35](01, 43)-(01, 44): RPAR(OP) ')'
[35](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 08): INDENT(INDENT) '        '
[36](01, 08)-(01, 12): NAME(NAME) 'else'
[36](01, 12)-(01, 13): COLON(OP) ':'
[36](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 12): INDENT(INDENT) '            '
[37](01, 12)-(01, 19): NAME(NAME) 'encoded'
[37](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[37](01, 23)-(01, 24): NAME(NAME) 'i'
[37](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 10): NAME(NAME) 'return'
[38](01, 11)-(01, 18): NAME(NAME) 'encoded'
[38](01, 18)-(01, 19): NEWLINE(NEWLINE)
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

