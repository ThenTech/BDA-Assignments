[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'var_n'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 17): STRING(STRING) '"n"'
[00](01, 17)-(01, 18): RPAR(OP) ')'
[00](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'var_m'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 13): NAME(NAME) 'input'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 17): STRING(STRING) '"m"'
[01](01, 17)-(01, 18): RPAR(OP) ')'
[01](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 09): NAME(NAME) 'varvorige'
[03](01, 10)-(01, 11): EQUAL(OP) '='
[03](01, 12)-(01, 14): STRING(STRING) '""'
[03](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'def'
[05](01, 04)-(01, 15): NAME(NAME) 'maaksubsets'
[05](01, 15)-(01, 16): LPAR(OP) '('
[05](01, 16)-(01, 25): NAME(NAME) 'varvorige'
[05](01, 25)-(01, 26): COMMA(OP) ','
[05](01, 26)-(01, 27): NAME(NAME) 'x'
[05](01, 27)-(01, 28): COMMA(OP) ','
[05](01, 28)-(01, 29): NAME(NAME) 'y'
[05](01, 29)-(01, 30): RPAR(OP) ')'
[05](01, 30)-(01, 31): COLON(OP) ':'
[05](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'i'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 19)-(01, 20): LPAR(OP) '('
[06](01, 20)-(01, 21): NAME(NAME) 'y'
[06](01, 21)-(01, 22): COMMA(OP) ','
[06](01, 23)-(01, 24): NAME(NAME) 'x'
[06](01, 24)-(01, 25): RPAR(OP) ')'
[06](01, 25)-(01, 26): COLON(OP) ':'
[06](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 17): NAME(NAME) 'varvorige'
[07](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[07](01, 21)-(01, 24): NAME(NAME) 'str'
[07](01, 24)-(01, 25): LPAR(OP) '('
[07](01, 25)-(01, 26): NAME(NAME) 'i'
[07](01, 26)-(01, 27): RPAR(OP) ')'
[07](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 12): NAME(NAME) 'y'
[08](01, 13)-(01, 14): GREATER(OP) '>'
[08](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[08](01, 16)-(01, 17): COLON(OP) ':'
[08](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 21): NAME(NAME) 'varvorige'
[09](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[09](01, 25)-(01, 28): STRING(STRING) '" "'
[09](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 23): NAME(NAME) 'maaksubsets'
[10](01, 23)-(01, 24): LPAR(OP) '('
[10](01, 24)-(01, 33): NAME(NAME) 'varvorige'
[10](01, 33)-(01, 34): COMMA(OP) ','
[10](01, 34)-(01, 35): NAME(NAME) 'x'
[10](01, 35)-(01, 36): MINUS(OP) '-'
[10](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[10](01, 37)-(01, 38): COMMA(OP) ','
[10](01, 38)-(01, 39): NAME(NAME) 'y'
[10](01, 39)-(01, 40): MINUS(OP) '-'
[10](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[10](01, 41)-(01, 42): RPAR(OP) ')'
[10](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 12): NAME(NAME) 'y'
[11](01, 12)-(01, 14): EQEQUAL(OP) '=='
[11](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[11](01, 15)-(01, 16): COLON(OP) ':'
[11](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 17): NAME(NAME) 'print'
[12](01, 18)-(01, 19): LPAR(OP) '('
[12](01, 19)-(01, 28): NAME(NAME) 'varvorige'
[12](01, 28)-(01, 29): RPAR(OP) ')'
[12](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 11): NAME(NAME) 'maaksubsets'
[14](01, 11)-(01, 12): LPAR(OP) '('
[14](01, 12)-(01, 21): NAME(NAME) 'varvorige'
[14](01, 21)-(01, 22): COMMA(OP) ','
[14](01, 22)-(01, 25): NAME(NAME) 'int'
[14](01, 25)-(01, 26): LPAR(OP) '('
[14](01, 26)-(01, 31): NAME(NAME) 'var_n'
[14](01, 31)-(01, 32): RPAR(OP) ')'
[14](01, 32)-(01, 33): PLUS(OP) '+'
[14](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[14](01, 34)-(01, 35): COMMA(OP) ','
[14](01, 35)-(01, 38): NAME(NAME) 'int'
[14](01, 38)-(01, 39): LPAR(OP) '('
[14](01, 39)-(01, 44): NAME(NAME) 'var_m'
[14](01, 44)-(01, 45): RPAR(OP) ')'
[14](01, 45)-(01, 46): RPAR(OP) ')'
[14](01, 46)-(01, 47): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

