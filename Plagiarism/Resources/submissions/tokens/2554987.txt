[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'create_sequence'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'string'
[00](01, 26)-(01, 27): COMMA(OP) ','
[00](01, 28)-(01, 33): NAME(NAME) 'index'
[00](01, 33)-(01, 34): COMMA(OP) ','
[00](01, 35)-(01, 41): NAME(NAME) 'lenght'
[00](01, 41)-(01, 42): RPAR(OP) ')'
[00](01, 42)-(01, 43): COLON(OP) ':'
[00](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'aantal'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 20): NAME(NAME) 'lenght'
[01](01, 20)-(01, 22): DOUBLESLASH(OP) '//'
[01](01, 22)-(01, 27): NAME(NAME) 'index'
[01](01, 27)-(01, 28): RPAR(OP) ')'
[01](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 13): NAME(NAME) 'aantal'
[02](01, 14)-(01, 15): LESS(OP) '<'
[02](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[02](01, 17)-(01, 18): COLON(OP) ':'
[02](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 14): NAME(NAME) 'aantal'
[03](01, 15)-(01, 17): STAREQUAL(OP) '*='
[03](01, 18)-(01, 19): MINUS(OP) '-'
[03](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[03](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'while'
[04](01, 10)-(01, 15): NAME(NAME) 'index'
[04](01, 16)-(01, 17): LESS(OP) '<'
[04](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[04](01, 19)-(01, 20): COLON(OP) ':'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 13): NAME(NAME) 'index'
[05](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[05](01, 17)-(01, 20): NAME(NAME) 'len'
[05](01, 20)-(01, 21): LPAR(OP) '('
[05](01, 21)-(01, 27): NAME(NAME) 'string'
[05](01, 27)-(01, 28): RPAR(OP) ')'
[05](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'while'
[06](01, 10)-(01, 15): NAME(NAME) 'index'
[06](01, 16)-(01, 17): GREATER(OP) '>'
[06](01, 18)-(01, 21): NAME(NAME) 'len'
[06](01, 21)-(01, 22): LPAR(OP) '('
[06](01, 22)-(01, 28): NAME(NAME) 'string'
[06](01, 28)-(01, 29): RPAR(OP) ')'
[06](01, 29)-(01, 30): COLON(OP) ':'
[06](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 13): NAME(NAME) 'index'
[07](01, 14)-(01, 16): MINEQUAL(OP) '-='
[07](01, 17)-(01, 20): NAME(NAME) 'len'
[07](01, 20)-(01, 21): LPAR(OP) '('
[07](01, 21)-(01, 27): NAME(NAME) 'string'
[07](01, 27)-(01, 28): RPAR(OP) ')'
[07](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'print'
[08](01, 09)-(01, 10): LPAR(OP) '('
[08](01, 10)-(01, 16): NAME(NAME) 'string'
[08](01, 16)-(01, 17): LSQB(OP) '['
[08](01, 17)-(01, 22): NAME(NAME) 'index'
[08](01, 22)-(01, 23): COLON(OP) ':'
[08](01, 23)-(01, 24): LPAR(OP) '('
[08](01, 24)-(01, 29): NAME(NAME) 'index'
[08](01, 29)-(01, 30): PLUS(OP) '+'
[08](01, 30)-(01, 36): NAME(NAME) 'lenght'
[08](01, 36)-(01, 37): RPAR(OP) ')'
[08](01, 37)-(01, 38): RSQB(OP) ']'
[08](01, 39)-(01, 40): STAR(OP) '*'
[08](01, 41)-(01, 42): LPAR(OP) '('
[08](01, 42)-(01, 48): NAME(NAME) 'aantal'
[08](01, 48)-(01, 49): RPAR(OP) ')'
[08](01, 49)-(01, 50): RPAR(OP) ')'
[08](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 15): NAME(NAME) 'create_sequence'
[10](01, 15)-(01, 16): LPAR(OP) '('
[10](01, 16)-(01, 22): STRING(STRING) '"word"'
[10](01, 22)-(01, 23): COMMA(OP) ','
[10](01, 24)-(01, 25): MINUS(OP) '-'
[10](01, 25)-(01, 26): NUMBER(NUMBER) '3'
[10](01, 26)-(01, 27): COMMA(OP) ','
[10](01, 28)-(01, 29): NUMBER(NUMBER) '9'
[10](01, 29)-(01, 30): RPAR(OP) ')'
[10](01, 30)-(01, 31): NEWLINE(NEWLINE)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

