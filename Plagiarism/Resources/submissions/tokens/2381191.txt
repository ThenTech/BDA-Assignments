[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'x'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 11): RPAR(OP) ')'
[00](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 04)-(01, 05): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 02): NAME(NAME) 'if'
[03](01, 03)-(01, 04): NAME(NAME) 'x'
[03](01, 05)-(01, 07): EQEQUAL(OP) '=='
[03](01, 08)-(01, 09): MINUS(OP) '-'
[03](01, 09)-(01, 10): NAME(NAME) 'x'
[03](01, 10)-(01, 11): COLON(OP) ':'
[03](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'print'
[04](01, 09)-(01, 10): LPAR(OP) '('
[04](01, 10)-(01, 11): NAME(NAME) 'x'
[04](01, 11)-(01, 12): COMMA(OP) ','
[04](01, 13)-(01, 30): STRING(STRING) '"is a palindrome"'
[04](01, 30)-(01, 31): RPAR(OP) ')'
[04](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): NAME(NAME) 'else'
[05](01, 04)-(01, 05): COLON(OP) ':'
[05](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'print'
[06](01, 09)-(01, 10): LPAR(OP) '('
[06](01, 10)-(01, 11): NAME(NAME) 'x'
[06](01, 11)-(01, 12): COMMA(OP) ','
[06](01, 13)-(01, 34): STRING(STRING) '"is not a palindrome"'
[06](01, 34)-(01, 35): RPAR(OP) ')'
[06](01, 35)-(01, 36): NEWLINE(NEWLINE)
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

