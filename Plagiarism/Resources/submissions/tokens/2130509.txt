[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'y'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[00](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'x'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 09): NAME(NAME) 'input'
[01](01, 09)-(01, 10): LPAR(OP) '('
[01](01, 10)-(01, 32): STRING(STRING) '"geef de waarde x op."'
[01](01, 32)-(01, 33): RPAR(OP) ')'
[01](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'for'
[02](01, 04)-(01, 05): NAME(NAME) 'i'
[02](01, 06)-(01, 08): NAME(NAME) 'in'
[02](01, 09)-(01, 14): NAME(NAME) 'range'
[02](01, 14)-(01, 15): LPAR(OP) '('
[02](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[02](01, 16)-(01, 17): COMMA(OP) ','
[02](01, 18)-(01, 21): NAME(NAME) 'int'
[02](01, 21)-(01, 22): LPAR(OP) '('
[02](01, 22)-(01, 23): NAME(NAME) 'x'
[02](01, 23)-(01, 24): RPAR(OP) ')'
[02](01, 24)-(01, 25): PLUS(OP) '+'
[02](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[02](01, 26)-(01, 27): RPAR(OP) ')'
[02](01, 27)-(01, 28): COLON(OP) ':'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 05): NAME(NAME) 'y'
[03](01, 06)-(01, 08): PLUSEQUAL(OP) '+='
[03](01, 09)-(01, 10): NAME(NAME) 'i'
[03](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 05): NAME(NAME) 'print'
[04](01, 05)-(01, 06): LPAR(OP) '('
[04](01, 06)-(01, 07): NAME(NAME) 'y'
[04](01, 07)-(01, 08): RPAR(OP) ')'
[04](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

