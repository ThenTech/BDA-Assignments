[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 14): NAME(NAME) 'in_between'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 22): NAME(NAME) 'x_left1'
[00](01, 22)-(01, 23): COMMA(OP) ','
[00](01, 24)-(01, 32): NAME(NAME) 'x_right1'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 41): NAME(NAME) 'x_left2'
[00](01, 41)-(01, 42): COMMA(OP) ','
[00](01, 43)-(01, 51): NAME(NAME) 'x_right2'
[00](01, 51)-(01, 52): RPAR(OP) ')'
[00](01, 52)-(01, 53): COLON(OP) ':'
[00](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): LPAR(OP) '('
[01](01, 08)-(01, 16): NAME(NAME) 'x_right1'
[01](01, 17)-(01, 18): MINUS(OP) '-'
[01](01, 19)-(01, 26): NAME(NAME) 'x_left2'
[01](01, 26)-(01, 27): RPAR(OP) ')'
[01](01, 28)-(01, 29): GREATER(OP) '>'
[01](01, 30)-(01, 37): NAME(NAME) 'x_left1'
[01](01, 38)-(01, 41): NAME(NAME) 'and'
[01](01, 42)-(01, 43): LPAR(OP) '('
[01](01, 43)-(01, 51): NAME(NAME) 'x_right1'
[01](01, 52)-(01, 53): MINUS(OP) '-'
[01](01, 54)-(01, 61): NAME(NAME) 'x_left2'
[01](01, 61)-(01, 62): RPAR(OP) ')'
[01](01, 63)-(01, 64): LESS(OP) '<'
[01](01, 65)-(01, 73): NAME(NAME) 'x_right1'
[01](01, 73)-(01, 74): COLON(OP) ':'
[01](01, 74)-(01, 75): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 19): NAME(NAME) 'True'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'else'
[03](01, 08)-(01, 09): COLON(OP) ':'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 20): NAME(NAME) 'False'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 03): NAME(NAME) 'def'
[06](01, 04)-(01, 18): NAME(NAME) 'does_intersect'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 26): NAME(NAME) 'x_left1'
[06](01, 26)-(01, 27): COMMA(OP) ','
[06](01, 28)-(01, 35): NAME(NAME) 'y_down1'
[06](01, 35)-(01, 36): COMMA(OP) ','
[06](01, 37)-(01, 39): NAME(NAME) 'w1'
[06](01, 39)-(01, 40): COMMA(OP) ','
[06](01, 41)-(01, 43): NAME(NAME) 'h1'
[06](01, 43)-(01, 44): COMMA(OP) ','
[06](01, 45)-(01, 52): NAME(NAME) 'x_left2'
[06](01, 52)-(01, 53): COMMA(OP) ','
[06](01, 54)-(01, 61): NAME(NAME) 'y_down2'
[06](01, 61)-(01, 62): COMMA(OP) ','
[06](01, 63)-(01, 65): NAME(NAME) 'w2'
[06](01, 65)-(01, 66): COMMA(OP) ','
[06](01, 67)-(01, 69): NAME(NAME) 'h2'
[06](01, 69)-(01, 70): RPAR(OP) ')'
[06](01, 70)-(01, 71): COLON(OP) ':'
[06](01, 71)-(01, 72): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 12): NAME(NAME) 'x_right1'
[07](01, 13)-(01, 14): EQUAL(OP) '='
[07](01, 15)-(01, 22): NAME(NAME) 'x_left1'
[07](01, 23)-(01, 24): PLUS(OP) '+'
[07](01, 25)-(01, 27): NAME(NAME) 'w1'
[07](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 12): NAME(NAME) 'x_right2'
[08](01, 13)-(01, 14): EQUAL(OP) '='
[08](01, 15)-(01, 22): NAME(NAME) 'x_left2'
[08](01, 23)-(01, 24): PLUS(OP) '+'
[08](01, 25)-(01, 27): NAME(NAME) 'w2'
[08](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'y_up1'
[09](01, 10)-(01, 11): EQUAL(OP) '='
[09](01, 12)-(01, 19): NAME(NAME) 'y_down1'
[09](01, 20)-(01, 21): PLUS(OP) '+'
[09](01, 22)-(01, 24): NAME(NAME) 'h1'
[09](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 09): NAME(NAME) 'y_up2'
[10](01, 10)-(01, 11): EQUAL(OP) '='
[10](01, 12)-(01, 19): NAME(NAME) 'y_down2'
[10](01, 20)-(01, 21): PLUS(OP) '+'
[10](01, 22)-(01, 24): NAME(NAME) 'h2'
[10](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 06): NAME(NAME) 'x1'
[11](01, 07)-(01, 08): EQUAL(OP) '='
[11](01, 09)-(01, 19): NAME(NAME) 'in_between'
[11](01, 19)-(01, 20): LPAR(OP) '('
[11](01, 20)-(01, 27): NAME(NAME) 'x_left1'
[11](01, 27)-(01, 28): COMMA(OP) ','
[11](01, 29)-(01, 37): NAME(NAME) 'x_right1'
[11](01, 37)-(01, 38): COMMA(OP) ','
[11](01, 39)-(01, 46): NAME(NAME) 'x_left2'
[11](01, 46)-(01, 47): COMMA(OP) ','
[11](01, 48)-(01, 56): NAME(NAME) 'x_right2'
[11](01, 56)-(01, 57): RPAR(OP) ')'
[11](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 06): NAME(NAME) 'x2'
[12](01, 07)-(01, 08): EQUAL(OP) '='
[12](01, 09)-(01, 19): NAME(NAME) 'in_between'
[12](01, 19)-(01, 20): LPAR(OP) '('
[12](01, 20)-(01, 27): NAME(NAME) 'x_left2'
[12](01, 27)-(01, 28): COMMA(OP) ','
[12](01, 29)-(01, 37): NAME(NAME) 'x_right2'
[12](01, 37)-(01, 38): COMMA(OP) ','
[12](01, 39)-(01, 46): NAME(NAME) 'x_left1'
[12](01, 46)-(01, 47): COMMA(OP) ','
[12](01, 48)-(01, 56): NAME(NAME) 'x_right1'
[12](01, 56)-(01, 57): RPAR(OP) ')'
[12](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 06): NAME(NAME) 'y1'
[13](01, 07)-(01, 08): EQUAL(OP) '='
[13](01, 09)-(01, 19): NAME(NAME) 'in_between'
[13](01, 19)-(01, 20): LPAR(OP) '('
[13](01, 20)-(01, 27): NAME(NAME) 'y_down1'
[13](01, 27)-(01, 28): COMMA(OP) ','
[13](01, 29)-(01, 34): NAME(NAME) 'y_up1'
[13](01, 34)-(01, 35): COMMA(OP) ','
[13](01, 36)-(01, 43): NAME(NAME) 'y_down2'
[13](01, 43)-(01, 44): COMMA(OP) ','
[13](01, 45)-(01, 50): NAME(NAME) 'y_up2'
[13](01, 50)-(01, 51): RPAR(OP) ')'
[13](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 06): NAME(NAME) 'y2'
[14](01, 07)-(01, 08): EQUAL(OP) '='
[14](01, 09)-(01, 19): NAME(NAME) 'in_between'
[14](01, 19)-(01, 20): LPAR(OP) '('
[14](01, 20)-(01, 27): NAME(NAME) 'y_down2'
[14](01, 27)-(01, 28): COMMA(OP) ','
[14](01, 29)-(01, 34): NAME(NAME) 'y_up2'
[14](01, 34)-(01, 35): COMMA(OP) ','
[14](01, 36)-(01, 43): NAME(NAME) 'y_down1'
[14](01, 43)-(01, 44): COMMA(OP) ','
[14](01, 45)-(01, 50): NAME(NAME) 'y_up1'
[14](01, 50)-(01, 51): RPAR(OP) ')'
[14](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 06): NAME(NAME) 'if'
[15](01, 07)-(01, 08): LPAR(OP) '('
[15](01, 08)-(01, 10): NAME(NAME) 'x1'
[15](01, 11)-(01, 13): EQEQUAL(OP) '=='
[15](01, 14)-(01, 18): NAME(NAME) 'True'
[15](01, 19)-(01, 22): NAME(NAME) 'and'
[15](01, 23)-(01, 25): NAME(NAME) 'y1'
[15](01, 26)-(01, 28): EQEQUAL(OP) '=='
[15](01, 29)-(01, 33): NAME(NAME) 'True'
[15](01, 33)-(01, 34): RPAR(OP) ')'
[15](01, 35)-(01, 37): NAME(NAME) 'or'
[15](01, 38)-(01, 39): LPAR(OP) '('
[15](01, 39)-(01, 41): NAME(NAME) 'x2'
[15](01, 42)-(01, 44): EQEQUAL(OP) '=='
[15](01, 45)-(01, 49): NAME(NAME) 'True'
[15](01, 50)-(01, 53): NAME(NAME) 'and'
[15](01, 54)-(01, 56): NAME(NAME) 'y2'
[15](01, 57)-(01, 59): EQEQUAL(OP) '=='
[15](01, 60)-(01, 64): NAME(NAME) 'True'
[15](01, 64)-(01, 65): RPAR(OP) ')'
[15](01, 65)-(01, 66): COLON(OP) ':'
[15](01, 66)-(01, 67): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 14): NAME(NAME) 'return'
[16](01, 15)-(01, 20): NAME(NAME) 'False'
[16](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 08): NAME(NAME) 'else'
[17](01, 08)-(01, 09): COLON(OP) ':'
[17](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 14): NAME(NAME) 'return'
[18](01, 15)-(01, 19): NAME(NAME) 'True'
[18](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

