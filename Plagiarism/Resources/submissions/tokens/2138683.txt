[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'woord'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 33): STRING(STRING) '"Geef een string: "'
[00](01, 33)-(01, 34): RPAR(OP) ')'
[00](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'lijst'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 09): LSQB(OP) '['
[01](01, 09)-(01, 12): STRING(STRING) '"a"'
[01](01, 12)-(01, 13): COMMA(OP) ','
[01](01, 14)-(01, 17): STRING(STRING) '"b"'
[01](01, 17)-(01, 18): COMMA(OP) ','
[01](01, 19)-(01, 22): STRING(STRING) '"c"'
[01](01, 22)-(01, 23): COMMA(OP) ','
[01](01, 24)-(01, 27): STRING(STRING) '"d"'
[01](01, 27)-(01, 28): COMMA(OP) ','
[01](01, 29)-(01, 32): STRING(STRING) '"e"'
[01](01, 32)-(01, 33): COMMA(OP) ','
[01](01, 34)-(01, 37): STRING(STRING) '"f"'
[01](01, 37)-(01, 38): COMMA(OP) ','
[01](01, 39)-(01, 42): STRING(STRING) '"g"'
[01](01, 42)-(01, 43): COMMA(OP) ','
[01](01, 44)-(01, 47): STRING(STRING) '"h"'
[01](01, 47)-(01, 48): COMMA(OP) ','
[01](01, 49)-(01, 52): STRING(STRING) '"i"'
[01](01, 52)-(01, 53): COMMA(OP) ','
[01](01, 54)-(01, 57): STRING(STRING) '"j"'
[01](01, 57)-(01, 58): COMMA(OP) ','
[01](01, 59)-(01, 62): STRING(STRING) '"k"'
[01](01, 62)-(01, 63): COMMA(OP) ','
[01](01, 64)-(01, 67): STRING(STRING) '"l"'
[01](01, 67)-(01, 68): COMMA(OP) ','
[01](01, 69)-(01, 72): STRING(STRING) '"m"'
[01](01, 72)-(01, 73): COMMA(OP) ','
[01](01, 74)-(01, 77): STRING(STRING) '"n"'
[01](01, 77)-(01, 78): COMMA(OP) ','
[01](01, 79)-(01, 82): STRING(STRING) '"o"'
[01](01, 82)-(01, 83): COMMA(OP) ','
[01](01, 84)-(01, 87): STRING(STRING) '"p"'
[01](01, 87)-(01, 88): COMMA(OP) ','
[01](01, 89)-(01, 92): STRING(STRING) '"q"'
[01](01, 92)-(01, 93): COMMA(OP) ','
[01](01, 94)-(01, 97): STRING(STRING) '"r"'
[01](01, 97)-(01, 98): COMMA(OP) ','
[01](01, 99)-(01, 102): STRING(STRING) '"s"'
[01](01, 102)-(01, 103): COMMA(OP) ','
[01](01, 104)-(01, 107): STRING(STRING) '"t"'
[01](01, 107)-(01, 108): COMMA(OP) ','
[01](01, 109)-(01, 112): STRING(STRING) '"u"'
[01](01, 112)-(01, 113): COMMA(OP) ','
[01](01, 114)-(01, 117): STRING(STRING) '"v"'
[01](01, 117)-(01, 118): COMMA(OP) ','
[01](01, 119)-(01, 122): STRING(STRING) '"w"'
[01](01, 122)-(01, 123): COMMA(OP) ','
[01](01, 124)-(01, 127): STRING(STRING) '"x"'
[01](01, 127)-(01, 128): COMMA(OP) ','
[01](01, 129)-(01, 132): STRING(STRING) '"y"'
[01](01, 132)-(01, 133): COMMA(OP) ','
[01](01, 134)-(01, 137): STRING(STRING) '"z"'
[01](01, 137)-(01, 138): RSQB(OP) ']'
[01](01, 138)-(01, 139): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): NAME(NAME) 'teller2'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[02](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'for'
[03](01, 04)-(01, 10): NAME(NAME) 'letter'
[03](01, 11)-(01, 13): NAME(NAME) 'in'
[03](01, 14)-(01, 19): NAME(NAME) 'lijst'
[03](01, 19)-(01, 20): COLON(OP) ':'
[03](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 10): NAME(NAME) 'teller'
[04](01, 11)-(01, 12): EQUAL(OP) '='
[04](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[04](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 15): NAME(NAME) 'letters'
[05](01, 16)-(01, 18): NAME(NAME) 'in'
[05](01, 19)-(01, 24): NAME(NAME) 'woord'
[05](01, 24)-(01, 25): COLON(OP) ':'
[05](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 18): NAME(NAME) 'letters'
[06](01, 19)-(01, 21): EQEQUAL(OP) '=='
[06](01, 22)-(01, 28): NAME(NAME) 'letter'
[06](01, 28)-(01, 29): COLON(OP) ':'
[06](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'teller'
[07](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[07](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[07](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'print'
[08](01, 09)-(01, 10): LPAR(OP) '('
[08](01, 10)-(01, 15): NAME(NAME) 'lijst'
[08](01, 15)-(01, 16): LSQB(OP) '['
[08](01, 16)-(01, 23): NAME(NAME) 'teller2'
[08](01, 23)-(01, 24): RSQB(OP) ']'
[08](01, 24)-(01, 25): COMMA(OP) ','
[08](01, 26)-(01, 30): STRING(STRING) '": "'
[08](01, 30)-(01, 31): COMMA(OP) ','
[08](01, 32)-(01, 38): NAME(NAME) 'teller'
[08](01, 38)-(01, 39): COMMA(OP) ','
[08](01, 40)-(01, 43): NAME(NAME) 'sep'
[08](01, 43)-(01, 44): EQUAL(OP) '='
[08](01, 44)-(01, 46): STRING(STRING) '""'
[08](01, 46)-(01, 47): RPAR(OP) ')'
[08](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 11): NAME(NAME) 'teller2'
[09](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[09](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[09](01, 16)-(01, 17): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

