[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'import'
[00](01, 07)-(01, 13): NAME(NAME) 'string'
[00](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'def'
[01](01, 04)-(01, 19): NAME(NAME) 'create_sequence'
[01](01, 19)-(01, 20): LPAR(OP) '('
[01](01, 20)-(01, 26): NAME(NAME) 'string'
[01](01, 26)-(01, 27): COMMA(OP) ','
[01](01, 28)-(01, 33): NAME(NAME) 'index'
[01](01, 33)-(01, 34): COMMA(OP) ','
[01](01, 35)-(01, 41): NAME(NAME) 'length'
[01](01, 41)-(01, 42): RPAR(OP) ')'
[01](01, 42)-(01, 43): COLON(OP) ':'
[01](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'while'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 16): NAME(NAME) 'index'
[03](01, 17)-(01, 18): LESS(OP) '<'
[03](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[03](01, 20)-(01, 21): RPAR(OP) ')'
[03](01, 21)-(01, 22): COLON(OP) ':'
[03](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'index'
[04](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[04](01, 17)-(01, 20): NAME(NAME) 'len'
[04](01, 20)-(01, 21): LPAR(OP) '('
[04](01, 21)-(01, 27): NAME(NAME) 'string'
[04](01, 27)-(01, 28): RPAR(OP) ')'
[04](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'while'
[05](01, 10)-(01, 11): LPAR(OP) '('
[05](01, 11)-(01, 16): NAME(NAME) 'index'
[05](01, 16)-(01, 17): GREATER(OP) '>'
[05](01, 17)-(01, 20): NAME(NAME) 'len'
[05](01, 20)-(01, 21): LPAR(OP) '('
[05](01, 21)-(01, 27): NAME(NAME) 'string'
[05](01, 27)-(01, 28): RPAR(OP) ')'
[05](01, 28)-(01, 29): RPAR(OP) ')'
[05](01, 29)-(01, 30): COLON(OP) ':'
[05](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'index'
[06](01, 14)-(01, 16): MINEQUAL(OP) '-='
[06](01, 16)-(01, 19): NAME(NAME) 'len'
[06](01, 19)-(01, 20): LPAR(OP) '('
[06](01, 20)-(01, 26): NAME(NAME) 'string'
[06](01, 26)-(01, 27): RPAR(OP) ')'
[06](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 05): NAME(NAME) 'c'
[07](01, 05)-(01, 06): EQUAL(OP) '='
[07](01, 06)-(01, 07): LPAR(OP) '('
[07](01, 07)-(01, 10): NAME(NAME) 'len'
[07](01, 10)-(01, 11): LPAR(OP) '('
[07](01, 11)-(01, 17): NAME(NAME) 'string'
[07](01, 17)-(01, 18): RPAR(OP) ')'
[07](01, 18)-(01, 19): MINUS(OP) '-'
[07](01, 19)-(01, 24): NAME(NAME) 'index'
[07](01, 24)-(01, 25): RPAR(OP) ')'
[07](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 05): NAME(NAME) 'a'
[08](01, 05)-(01, 06): EQUAL(OP) '='
[08](01, 07)-(01, 08): LPAR(OP) '('
[08](01, 08)-(01, 14): NAME(NAME) 'length'
[08](01, 14)-(01, 15): MINUS(OP) '-'
[08](01, 15)-(01, 16): NAME(NAME) 'c'
[08](01, 16)-(01, 17): RPAR(OP) ')'
[08](01, 17)-(01, 19): DOUBLESLASH(OP) '//'
[08](01, 19)-(01, 22): NAME(NAME) 'len'
[08](01, 22)-(01, 23): LPAR(OP) '('
[08](01, 23)-(01, 29): NAME(NAME) 'string'
[08](01, 29)-(01, 30): RPAR(OP) ')'
[08](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 05): NAME(NAME) 'b'
[09](01, 05)-(01, 06): EQUAL(OP) '='
[09](01, 07)-(01, 13): NAME(NAME) 'length'
[09](01, 13)-(01, 14): MINUS(OP) '-'
[09](01, 14)-(01, 15): LPAR(OP) '('
[09](01, 15)-(01, 16): NAME(NAME) 'a'
[09](01, 16)-(01, 17): STAR(OP) '*'
[09](01, 17)-(01, 20): NAME(NAME) 'len'
[09](01, 20)-(01, 21): LPAR(OP) '('
[09](01, 21)-(01, 27): NAME(NAME) 'string'
[09](01, 27)-(01, 28): RPAR(OP) ')'
[09](01, 28)-(01, 29): PLUS(OP) '+'
[09](01, 29)-(01, 30): NAME(NAME) 'c'
[09](01, 30)-(01, 31): RPAR(OP) ')'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 08): NAME(NAME) 'test'
[10](01, 09)-(01, 10): EQUAL(OP) '='
[10](01, 11)-(01, 17): NAME(NAME) 'string'
[10](01, 17)-(01, 18): LSQB(OP) '['
[10](01, 18)-(01, 23): NAME(NAME) 'index'
[10](01, 23)-(01, 24): COLON(OP) ':'
[10](01, 24)-(01, 25): RSQB(OP) ']'
[10](01, 25)-(01, 26): PLUS(OP) '+'
[10](01, 26)-(01, 27): NAME(NAME) 'a'
[10](01, 27)-(01, 28): STAR(OP) '*'
[10](01, 28)-(01, 34): NAME(NAME) 'string'
[10](01, 34)-(01, 35): LSQB(OP) '['
[10](01, 35)-(01, 36): COLON(OP) ':'
[10](01, 36)-(01, 37): RSQB(OP) ']'
[10](01, 37)-(01, 38): PLUS(OP) '+'
[10](01, 38)-(01, 44): NAME(NAME) 'string'
[10](01, 44)-(01, 45): LSQB(OP) '['
[10](01, 45)-(01, 46): COLON(OP) ':'
[10](01, 46)-(01, 47): NAME(NAME) 'b'
[10](01, 47)-(01, 48): RSQB(OP) ']'
[10](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'return'
[11](01, 11)-(01, 15): NAME(NAME) 'test'
[11](01, 15)-(01, 16): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

