[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'string'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 16): NAME(NAME) 'alphabetLocation'
[02](01, 17)-(01, 18): EQUAL(OP) '='
[02](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[02](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 06): NAME(NAME) 'letter'
[03](01, 07)-(01, 08): EQUAL(OP) '='
[03](01, 09)-(01, 11): NUMBER(NUMBER) '97'
[03](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): NAME(NAME) 'list'
[05](01, 05)-(01, 06): EQUAL(OP) '='
[05](01, 07)-(01, 08): LSQB(OP) '['
[05](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[05](01, 09)-(01, 10): COMMA(OP) ','
[05](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[05](01, 11)-(01, 12): COMMA(OP) ','
[05](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[05](01, 13)-(01, 14): COMMA(OP) ','
[05](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[05](01, 15)-(01, 16): COMMA(OP) ','
[05](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[05](01, 17)-(01, 18): COMMA(OP) ','
[05](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[05](01, 19)-(01, 20): COMMA(OP) ','
[05](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[05](01, 21)-(01, 22): COMMA(OP) ','
[05](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[05](01, 23)-(01, 24): COMMA(OP) ','
[05](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[05](01, 25)-(01, 26): COMMA(OP) ','
[05](01, 26)-(01, 27): NUMBER(NUMBER) '0'
[05](01, 27)-(01, 28): COMMA(OP) ','
[05](01, 28)-(01, 29): NUMBER(NUMBER) '0'
[05](01, 29)-(01, 30): COMMA(OP) ','
[05](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[05](01, 31)-(01, 32): COMMA(OP) ','
[05](01, 32)-(01, 33): NUMBER(NUMBER) '0'
[05](01, 33)-(01, 34): COMMA(OP) ','
[05](01, 34)-(01, 35): NUMBER(NUMBER) '0'
[05](01, 35)-(01, 36): COMMA(OP) ','
[05](01, 36)-(01, 37): NUMBER(NUMBER) '0'
[05](01, 37)-(01, 38): COMMA(OP) ','
[05](01, 38)-(01, 39): NUMBER(NUMBER) '0'
[05](01, 39)-(01, 40): COMMA(OP) ','
[05](01, 40)-(01, 41): NUMBER(NUMBER) '0'
[05](01, 41)-(01, 42): COMMA(OP) ','
[05](01, 42)-(01, 43): NUMBER(NUMBER) '0'
[05](01, 43)-(01, 44): COMMA(OP) ','
[05](01, 44)-(01, 45): NUMBER(NUMBER) '0'
[05](01, 45)-(01, 46): COMMA(OP) ','
[05](01, 46)-(01, 47): NUMBER(NUMBER) '0'
[05](01, 47)-(01, 48): COMMA(OP) ','
[05](01, 48)-(01, 49): NUMBER(NUMBER) '0'
[05](01, 49)-(01, 50): COMMA(OP) ','
[05](01, 50)-(01, 51): NUMBER(NUMBER) '0'
[05](01, 51)-(01, 52): COMMA(OP) ','
[05](01, 52)-(01, 53): NUMBER(NUMBER) '0'
[05](01, 53)-(01, 54): COMMA(OP) ','
[05](01, 54)-(01, 55): NUMBER(NUMBER) '0'
[05](01, 55)-(01, 56): RSQB(OP) ']'
[05](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): NAME(NAME) 'for'
[07](01, 04)-(01, 05): NAME(NAME) 'i'
[07](01, 06)-(01, 08): NAME(NAME) 'in'
[07](01, 09)-(01, 14): NAME(NAME) 'range'
[07](01, 14)-(01, 15): LPAR(OP) '('
[07](01, 15)-(01, 18): NAME(NAME) 'len'
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 25): NAME(NAME) 'string'
[07](01, 25)-(01, 26): RPAR(OP) ')'
[07](01, 26)-(01, 27): MINUS(OP) '-'
[07](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[07](01, 28)-(01, 29): RPAR(OP) ')'
[07](01, 29)-(01, 30): COLON(OP) ':'
[07](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 20): NAME(NAME) 'alphabetLocation'
[08](01, 21)-(01, 22): EQUAL(OP) '='
[08](01, 23)-(01, 26): NAME(NAME) 'ord'
[08](01, 26)-(01, 27): LPAR(OP) '('
[08](01, 27)-(01, 33): NAME(NAME) 'string'
[08](01, 33)-(01, 34): LSQB(OP) '['
[08](01, 34)-(01, 35): NAME(NAME) 'i'
[08](01, 35)-(01, 36): RSQB(OP) ']'
[08](01, 36)-(01, 37): RPAR(OP) ')'
[08](01, 38)-(01, 39): MINUS(OP) '-'
[08](01, 40)-(01, 42): NUMBER(NUMBER) '97'
[08](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 08): NAME(NAME) 'list'
[09](01, 08)-(01, 09): LSQB(OP) '['
[09](01, 09)-(01, 25): NAME(NAME) 'alphabetLocation'
[09](01, 25)-(01, 26): RSQB(OP) ']'
[09](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[09](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 04)-(01, 05): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 03): NAME(NAME) 'for'
[11](01, 04)-(01, 05): NAME(NAME) 'i'
[11](01, 06)-(01, 08): NAME(NAME) 'in'
[11](01, 09)-(01, 13): NAME(NAME) 'list'
[11](01, 13)-(01, 14): COLON(OP) ':'
[11](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 09): NAME(NAME) 'print'
[12](01, 09)-(01, 10): LPAR(OP) '('
[12](01, 10)-(01, 13): NAME(NAME) 'chr'
[12](01, 13)-(01, 14): LPAR(OP) '('
[12](01, 14)-(01, 20): NAME(NAME) 'letter'
[12](01, 20)-(01, 21): RPAR(OP) ')'
[12](01, 21)-(01, 22): COMMA(OP) ','
[12](01, 23)-(01, 27): STRING(STRING) '": "'
[12](01, 27)-(01, 28): COMMA(OP) ','
[12](01, 29)-(01, 30): NAME(NAME) 'i'
[12](01, 30)-(01, 31): RPAR(OP) ')'
[12](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 10): NAME(NAME) 'letter'
[13](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[13](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[13](01, 15)-(01, 16): NEWLINE(NEWLINE)
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

