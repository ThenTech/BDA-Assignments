[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 08): NAME(NAME) 'checkpal'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 16): NAME(NAME) 'input'
[01](01, 16)-(01, 17): LPAR(OP) '('
[01](01, 17)-(01, 24): STRING(STRING) '"Word?"'
[01](01, 24)-(01, 25): RPAR(OP) ')'
[01](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'pal'
[02](01, 04)-(01, 05): EQUAL(OP) '='
[02](01, 06)-(01, 08): STRING(STRING) '""'
[02](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'for'
[03](01, 04)-(01, 05): NAME(NAME) 'i'
[03](01, 06)-(01, 08): NAME(NAME) 'in'
[03](01, 09)-(01, 14): NAME(NAME) 'range'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 18): NAME(NAME) 'len'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 27): NAME(NAME) 'checkpal'
[03](01, 27)-(01, 28): RPAR(OP) ')'
[03](01, 28)-(01, 29): RPAR(OP) ')'
[03](01, 29)-(01, 30): COLON(OP) ':'
[03](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'pal'
[04](01, 08)-(01, 09): EQUAL(OP) '='
[04](01, 10)-(01, 13): NAME(NAME) 'pal'
[04](01, 14)-(01, 15): PLUS(OP) '+'
[04](01, 16)-(01, 24): NAME(NAME) 'checkpal'
[04](01, 24)-(01, 25): LSQB(OP) '['
[04](01, 25)-(01, 28): NAME(NAME) 'len'
[04](01, 28)-(01, 29): LPAR(OP) '('
[04](01, 29)-(01, 37): NAME(NAME) 'checkpal'
[04](01, 37)-(01, 38): RPAR(OP) ')'
[04](01, 39)-(01, 40): MINUS(OP) '-'
[04](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[04](01, 43)-(01, 44): MINUS(OP) '-'
[04](01, 45)-(01, 46): NAME(NAME) 'i'
[04](01, 46)-(01, 47): RSQB(OP) ']'
[04](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 02): NAME(NAME) 'if'
[05](01, 03)-(01, 06): NAME(NAME) 'pal'
[05](01, 07)-(01, 09): EQEQUAL(OP) '=='
[05](01, 10)-(01, 18): NAME(NAME) 'checkpal'
[05](01, 18)-(01, 19): COLON(OP) ':'
[05](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'print'
[06](01, 09)-(01, 10): LPAR(OP) '('
[06](01, 10)-(01, 18): NAME(NAME) 'checkpal'
[06](01, 18)-(01, 19): COMMA(OP) ','
[06](01, 19)-(01, 36): STRING(STRING) '"is a palindrome"'
[06](01, 36)-(01, 37): RPAR(OP) ')'
[06](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): NAME(NAME) 'else'
[07](01, 04)-(01, 05): COLON(OP) ':'
[07](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'print'
[08](01, 09)-(01, 10): LPAR(OP) '('
[08](01, 10)-(01, 18): NAME(NAME) 'checkpal'
[08](01, 18)-(01, 19): COMMA(OP) ','
[08](01, 19)-(01, 40): STRING(STRING) '"is not a palindrome"'
[08](01, 40)-(01, 41): RPAR(OP) ')'
[08](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

