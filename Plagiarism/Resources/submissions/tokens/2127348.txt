[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 02): NAME(NAME) 'c1'
[00](01, 03)-(01, 04): EQUAL(OP) '='
[00](01, 05)-(01, 08): NAME(NAME) 'int'
[00](01, 08)-(01, 09): LPAR(OP) '('
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 32): STRING(STRING) '"Hoeveel 1 cents"'
[00](01, 32)-(01, 33): RPAR(OP) ')'
[00](01, 33)-(01, 34): RPAR(OP) ')'
[00](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 02): NAME(NAME) 'c2'
[01](01, 03)-(01, 04): EQUAL(OP) '='
[01](01, 05)-(01, 08): NAME(NAME) 'int'
[01](01, 08)-(01, 09): LPAR(OP) '('
[01](01, 09)-(01, 14): NAME(NAME) 'input'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 32): STRING(STRING) '"Hoeveel 2 cents"'
[01](01, 32)-(01, 33): RPAR(OP) ')'
[01](01, 33)-(01, 34): RPAR(OP) ')'
[01](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 02): NAME(NAME) 'c5'
[02](01, 03)-(01, 04): EQUAL(OP) '='
[02](01, 05)-(01, 08): NAME(NAME) 'int'
[02](01, 08)-(01, 09): LPAR(OP) '('
[02](01, 09)-(01, 14): NAME(NAME) 'input'
[02](01, 14)-(01, 15): LPAR(OP) '('
[02](01, 15)-(01, 32): STRING(STRING) '"Hoeveel 5 cents"'
[02](01, 32)-(01, 33): RPAR(OP) ')'
[02](01, 33)-(01, 34): RPAR(OP) ')'
[02](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'c10'
[03](01, 04)-(01, 05): EQUAL(OP) '='
[03](01, 06)-(01, 09): NAME(NAME) 'int'
[03](01, 09)-(01, 10): LPAR(OP) '('
[03](01, 10)-(01, 15): NAME(NAME) 'input'
[03](01, 15)-(01, 16): LPAR(OP) '('
[03](01, 16)-(01, 34): STRING(STRING) '"Hoeveel 10 cents"'
[03](01, 34)-(01, 35): RPAR(OP) ')'
[03](01, 35)-(01, 36): RPAR(OP) ')'
[03](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'c20'
[04](01, 04)-(01, 05): EQUAL(OP) '='
[04](01, 06)-(01, 09): NAME(NAME) 'int'
[04](01, 09)-(01, 10): LPAR(OP) '('
[04](01, 10)-(01, 15): NAME(NAME) 'input'
[04](01, 15)-(01, 16): LPAR(OP) '('
[04](01, 16)-(01, 34): STRING(STRING) '"Hoeveel 20 cents"'
[04](01, 34)-(01, 35): RPAR(OP) ')'
[04](01, 35)-(01, 36): RPAR(OP) ')'
[04](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 05): NAME(NAME) 'total'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 08)-(01, 09): LPAR(OP) '('
[05](01, 09)-(01, 10): LPAR(OP) '('
[05](01, 10)-(01, 12): NAME(NAME) 'c1'
[05](01, 13)-(01, 14): STAR(OP) '*'
[05](01, 15)-(01, 19): NUMBER(NUMBER) '0.01'
[05](01, 19)-(01, 20): RPAR(OP) ')'
[05](01, 21)-(01, 22): PLUS(OP) '+'
[05](01, 23)-(01, 24): LPAR(OP) '('
[05](01, 24)-(01, 26): NAME(NAME) 'c2'
[05](01, 27)-(01, 28): STAR(OP) '*'
[05](01, 29)-(01, 33): NUMBER(NUMBER) '0.02'
[05](01, 33)-(01, 34): RPAR(OP) ')'
[05](01, 35)-(01, 36): PLUS(OP) '+'
[05](01, 37)-(01, 38): LPAR(OP) '('
[05](01, 38)-(01, 40): NAME(NAME) 'c5'
[05](01, 41)-(01, 42): STAR(OP) '*'
[05](01, 43)-(01, 47): NUMBER(NUMBER) '0.05'
[05](01, 47)-(01, 48): RPAR(OP) ')'
[05](01, 49)-(01, 50): PLUS(OP) '+'
[05](01, 51)-(01, 52): LPAR(OP) '('
[05](01, 52)-(01, 55): NAME(NAME) 'c10'
[05](01, 56)-(01, 57): STAR(OP) '*'
[05](01, 58)-(01, 62): NUMBER(NUMBER) '0.10'
[05](01, 62)-(01, 63): RPAR(OP) ')'
[05](01, 64)-(01, 65): PLUS(OP) '+'
[05](01, 66)-(01, 67): LPAR(OP) '('
[05](01, 67)-(01, 70): NAME(NAME) 'c20'
[05](01, 71)-(01, 72): STAR(OP) '*'
[05](01, 73)-(01, 77): NUMBER(NUMBER) '0.20'
[05](01, 77)-(01, 78): RPAR(OP) ')'
[05](01, 78)-(01, 79): RPAR(OP) ')'
[05](01, 80)-(01, 81): SLASH(OP) '/'
[05](01, 82)-(01, 85): NUMBER(NUMBER) '100'
[05](01, 85)-(01, 86): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 02): NAME(NAME) 'if'
[06](01, 03)-(01, 08): NAME(NAME) 'total'
[06](01, 09)-(01, 10): LESS(OP) '<'
[06](01, 11)-(01, 15): NUMBER(NUMBER) '1.00'
[06](01, 15)-(01, 16): COLON(OP) ':'
[06](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 09): NAME(NAME) 'print'
[07](01, 09)-(01, 10): LPAR(OP) '('
[07](01, 10)-(01, 21): STRING(STRING) '"You have "'
[07](01, 21)-(01, 22): COMMA(OP) ','
[07](01, 23)-(01, 28): NAME(NAME) 'total'
[07](01, 28)-(01, 29): COMMA(OP) ','
[07](01, 30)-(01, 39): STRING(STRING) '"0 euro!"'
[07](01, 39)-(01, 40): COMMA(OP) ','
[07](01, 41)-(01, 44): NAME(NAME) 'sep'
[07](01, 44)-(01, 45): EQUAL(OP) '='
[07](01, 45)-(01, 47): STRING(STRING) '""'
[07](01, 47)-(01, 48): RPAR(OP) ')'
[07](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): NAME(NAME) 'else'
[08](01, 04)-(01, 05): COLON(OP) ':'
[08](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'print'
[09](01, 09)-(01, 10): LPAR(OP) '('
[09](01, 10)-(01, 21): STRING(STRING) '"You have "'
[09](01, 21)-(01, 22): COMMA(OP) ','
[09](01, 23)-(01, 28): NAME(NAME) 'total'
[09](01, 28)-(01, 29): COMMA(OP) ','
[09](01, 30)-(01, 38): STRING(STRING) '" euro!"'
[09](01, 38)-(01, 39): COMMA(OP) ','
[09](01, 40)-(01, 43): NAME(NAME) 'sep'
[09](01, 43)-(01, 44): EQUAL(OP) '='
[09](01, 44)-(01, 46): STRING(STRING) '""'
[09](01, 46)-(01, 47): RPAR(OP) ')'
[09](01, 47)-(01, 48): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

