[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'create_sequence'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'string'
[00](01, 26)-(01, 27): COMMA(OP) ','
[00](01, 28)-(01, 33): NAME(NAME) 'index'
[00](01, 33)-(01, 34): COMMA(OP) ','
[00](01, 35)-(01, 41): NAME(NAME) 'length'
[00](01, 41)-(01, 42): RPAR(OP) ')'
[00](01, 42)-(01, 43): COLON(OP) ':'
[00](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 14): NAME(NAME) 'inf_string'
[01](01, 15)-(01, 16): EQUAL(OP) '='
[01](01, 17)-(01, 19): STRING(STRING) '""'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'while'
[02](01, 10)-(01, 13): NAME(NAME) 'len'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 24): NAME(NAME) 'inf_string'
[02](01, 24)-(01, 25): RPAR(OP) ')'
[02](01, 26)-(01, 28): NOTEQUAL(OP) '!='
[02](01, 29)-(01, 35): NAME(NAME) 'length'
[02](01, 35)-(01, 36): COLON(OP) ':'
[02](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 20): NAME(NAME) 'string_index'
[03](01, 21)-(01, 22): EQUAL(OP) '='
[03](01, 23)-(01, 28): NAME(NAME) 'index'
[03](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'while'
[04](01, 14)-(01, 26): NAME(NAME) 'string_index'
[04](01, 27)-(01, 28): LESS(OP) '<'
[04](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[04](01, 31)-(01, 33): NAME(NAME) 'or'
[04](01, 34)-(01, 46): NAME(NAME) 'string_index'
[04](01, 47)-(01, 48): GREATER(OP) '>'
[04](01, 49)-(01, 52): NAME(NAME) 'len'
[04](01, 52)-(01, 53): LPAR(OP) '('
[04](01, 53)-(01, 59): NAME(NAME) 'string'
[04](01, 59)-(01, 60): RPAR(OP) ')'
[04](01, 60)-(01, 61): MINUS(OP) '-'
[04](01, 61)-(01, 62): NUMBER(NUMBER) '1'
[04](01, 62)-(01, 63): COLON(OP) ':'
[04](01, 63)-(01, 64): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 14): NAME(NAME) 'if'
[05](01, 15)-(01, 27): NAME(NAME) 'string_index'
[05](01, 28)-(01, 29): LESS(OP) '<'
[05](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[05](01, 31)-(01, 32): COLON(OP) ':'
[05](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 28): NAME(NAME) 'string_index'
[06](01, 29)-(01, 31): PLUSEQUAL(OP) '+='
[06](01, 32)-(01, 35): NAME(NAME) 'len'
[06](01, 35)-(01, 36): LPAR(OP) '('
[06](01, 36)-(01, 42): NAME(NAME) 'string'
[06](01, 42)-(01, 43): RPAR(OP) ')'
[06](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 16): NAME(NAME) 'else'
[07](01, 16)-(01, 17): COLON(OP) ':'
[07](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 28): NAME(NAME) 'string_index'
[08](01, 29)-(01, 31): MINEQUAL(OP) '-='
[08](01, 32)-(01, 35): NAME(NAME) 'len'
[08](01, 35)-(01, 36): LPAR(OP) '('
[08](01, 36)-(01, 42): NAME(NAME) 'string'
[08](01, 42)-(01, 43): RPAR(OP) ')'
[08](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 18): NAME(NAME) 'inf_string'
[09](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[09](01, 22)-(01, 28): NAME(NAME) 'string'
[09](01, 28)-(01, 29): LSQB(OP) '['
[09](01, 29)-(01, 41): NAME(NAME) 'string_index'
[09](01, 41)-(01, 42): RSQB(OP) ']'
[09](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 13): NAME(NAME) 'index'
[10](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[10](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[10](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'return'
[11](01, 11)-(01, 21): NAME(NAME) 'inf_string'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

