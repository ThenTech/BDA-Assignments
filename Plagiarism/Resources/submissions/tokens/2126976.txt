[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'ones1'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 13): NAME(NAME) 'input'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 36): STRING(STRING) '"Number of coins of 1"'
[01](01, 36)-(01, 37): RPAR(OP) ')'
[01](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 05): NAME(NAME) 'twos1'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 13): NAME(NAME) 'input'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 36): STRING(STRING) '"Number of coins of 2"'
[02](01, 36)-(01, 37): RPAR(OP) ')'
[02](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 06): NAME(NAME) 'fives1'
[03](01, 07)-(01, 08): EQUAL(OP) '='
[03](01, 09)-(01, 14): NAME(NAME) 'input'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 37): STRING(STRING) '"Number of coins of 5"'
[03](01, 37)-(01, 38): RPAR(OP) ')'
[03](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 05): NAME(NAME) 'tens1'
[04](01, 06)-(01, 07): EQUAL(OP) '='
[04](01, 08)-(01, 13): NAME(NAME) 'input'
[04](01, 13)-(01, 14): LPAR(OP) '('
[04](01, 14)-(01, 37): STRING(STRING) '"Number of coins of 10"'
[04](01, 37)-(01, 38): RPAR(OP) ')'
[04](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 09): NAME(NAME) 'twenties1'
[05](01, 10)-(01, 11): EQUAL(OP) '='
[05](01, 12)-(01, 17): NAME(NAME) 'input'
[05](01, 17)-(01, 18): LPAR(OP) '('
[05](01, 18)-(01, 41): STRING(STRING) '"Number of coins of 20"'
[05](01, 41)-(01, 42): RPAR(OP) ')'
[05](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): NAME(NAME) 'ones'
[07](01, 05)-(01, 06): EQUAL(OP) '='
[07](01, 07)-(01, 10): NAME(NAME) 'int'
[07](01, 10)-(01, 11): LPAR(OP) '('
[07](01, 11)-(01, 16): NAME(NAME) 'ones1'
[07](01, 16)-(01, 17): RPAR(OP) ')'
[07](01, 18)-(01, 19): STAR(OP) '*'
[07](01, 20)-(01, 24): NUMBER(NUMBER) '0.01'
[07](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): NAME(NAME) 'twos'
[08](01, 05)-(01, 06): EQUAL(OP) '='
[08](01, 07)-(01, 10): NAME(NAME) 'int'
[08](01, 10)-(01, 11): LPAR(OP) '('
[08](01, 11)-(01, 16): NAME(NAME) 'twos1'
[08](01, 16)-(01, 17): RPAR(OP) ')'
[08](01, 18)-(01, 19): STAR(OP) '*'
[08](01, 20)-(01, 24): NUMBER(NUMBER) '0.02'
[08](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 05): NAME(NAME) 'fives'
[09](01, 06)-(01, 07): EQUAL(OP) '='
[09](01, 08)-(01, 11): NAME(NAME) 'int'
[09](01, 11)-(01, 12): LPAR(OP) '('
[09](01, 12)-(01, 18): NAME(NAME) 'fives1'
[09](01, 18)-(01, 19): RPAR(OP) ')'
[09](01, 20)-(01, 21): STAR(OP) '*'
[09](01, 22)-(01, 26): NUMBER(NUMBER) '0.05'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): NAME(NAME) 'tens'
[10](01, 05)-(01, 06): EQUAL(OP) '='
[10](01, 07)-(01, 10): NAME(NAME) 'int'
[10](01, 10)-(01, 11): LPAR(OP) '('
[10](01, 11)-(01, 16): NAME(NAME) 'tens1'
[10](01, 16)-(01, 17): RPAR(OP) ')'
[10](01, 18)-(01, 19): STAR(OP) '*'
[10](01, 20)-(01, 24): NUMBER(NUMBER) '0.10'
[10](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): NAME(NAME) 'twenties'
[11](01, 09)-(01, 10): EQUAL(OP) '='
[11](01, 11)-(01, 14): NAME(NAME) 'int'
[11](01, 14)-(01, 15): LPAR(OP) '('
[11](01, 15)-(01, 24): NAME(NAME) 'twenties1'
[11](01, 24)-(01, 25): RPAR(OP) ')'
[11](01, 26)-(01, 27): STAR(OP) '*'
[11](01, 28)-(01, 32): NUMBER(NUMBER) '0.20'
[11](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 03): NAME(NAME) 'sum'
[13](01, 04)-(01, 05): EQUAL(OP) '='
[13](01, 06)-(01, 10): NAME(NAME) 'ones'
[13](01, 11)-(01, 12): PLUS(OP) '+'
[13](01, 13)-(01, 17): NAME(NAME) 'twos'
[13](01, 18)-(01, 19): PLUS(OP) '+'
[13](01, 20)-(01, 25): NAME(NAME) 'fives'
[13](01, 26)-(01, 27): PLUS(OP) '+'
[13](01, 28)-(01, 32): NAME(NAME) 'tens'
[13](01, 33)-(01, 34): PLUS(OP) '+'
[13](01, 35)-(01, 43): NAME(NAME) 'twenties'
[13](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 05): NAME(NAME) 'print'
[16](01, 05)-(01, 06): LPAR(OP) '('
[16](01, 06)-(01, 16): STRING(STRING) '"You have"'
[16](01, 16)-(01, 17): COMMA(OP) ','
[16](01, 18)-(01, 21): NAME(NAME) 'sum'
[16](01, 21)-(01, 22): COMMA(OP) ','
[16](01, 23)-(01, 30): STRING(STRING) '"euro!"'
[16](01, 30)-(01, 31): COMMA(OP) ','
[16](01, 32)-(01, 35): NAME(NAME) 'sep'
[16](01, 35)-(01, 36): EQUAL(OP) '='
[16](01, 36)-(01, 39): STRING(STRING) '" "'
[16](01, 39)-(01, 40): RPAR(OP) ')'
[16](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

