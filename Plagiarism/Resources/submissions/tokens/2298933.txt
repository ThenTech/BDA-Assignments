[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'matrix'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 07): NAME(NAME) 'for'
[01](01, 08)-(01, 09): NAME(NAME) 'i'
[01](01, 10)-(01, 12): NAME(NAME) 'in'
[01](01, 13)-(01, 18): NAME(NAME) 'range'
[01](01, 19)-(01, 20): LPAR(OP) '('
[01](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[01](01, 21)-(01, 22): COMMA(OP) ','
[01](01, 23)-(01, 26): NAME(NAME) 'len'
[01](01, 26)-(01, 27): LPAR(OP) '('
[01](01, 27)-(01, 33): NAME(NAME) 'matrix'
[01](01, 33)-(01, 34): LSQB(OP) '['
[01](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[01](01, 35)-(01, 36): RSQB(OP) ']'
[01](01, 36)-(01, 37): RPAR(OP) ')'
[01](01, 37)-(01, 38): RPAR(OP) ')'
[01](01, 38)-(01, 39): COLON(OP) ':'
[01](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 10): NAME(NAME) 'm2'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[02](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'm3'
[03](01, 11)-(01, 12): EQUAL(OP) '='
[03](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[03](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'm4'
[04](01, 11)-(01, 12): EQUAL(OP) '='
[04](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[04](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'm5'
[05](01, 11)-(01, 12): EQUAL(OP) '='
[05](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[05](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 11): NAME(NAME) 'for'
[06](01, 12)-(01, 13): NAME(NAME) 'j'
[06](01, 14)-(01, 16): NAME(NAME) 'in'
[06](01, 17)-(01, 22): NAME(NAME) 'range'
[06](01, 23)-(01, 24): LPAR(OP) '('
[06](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[06](01, 25)-(01, 26): COMMA(OP) ','
[06](01, 27)-(01, 30): NAME(NAME) 'len'
[06](01, 30)-(01, 31): LPAR(OP) '('
[06](01, 31)-(01, 37): NAME(NAME) 'matrix'
[06](01, 37)-(01, 38): LSQB(OP) '['
[06](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[06](01, 39)-(01, 40): RSQB(OP) ']'
[06](01, 40)-(01, 41): RPAR(OP) ')'
[06](01, 41)-(01, 42): RPAR(OP) ')'
[06](01, 42)-(01, 43): COLON(OP) ':'
[06](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'm2'
[07](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[07](01, 18)-(01, 24): NAME(NAME) 'matrix'
[07](01, 25)-(01, 26): LSQB(OP) '['
[07](01, 26)-(01, 27): NAME(NAME) 'i'
[07](01, 27)-(01, 28): RSQB(OP) ']'
[07](01, 28)-(01, 29): LSQB(OP) '['
[07](01, 29)-(01, 30): NAME(NAME) 'j'
[07](01, 30)-(01, 31): RSQB(OP) ']'
[07](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 14): NAME(NAME) 'm3'
[08](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[08](01, 18)-(01, 24): NAME(NAME) 'matrix'
[08](01, 25)-(01, 26): LSQB(OP) '['
[08](01, 26)-(01, 27): NAME(NAME) 'j'
[08](01, 27)-(01, 28): RSQB(OP) ']'
[08](01, 28)-(01, 29): LSQB(OP) '['
[08](01, 29)-(01, 30): NAME(NAME) 'j'
[08](01, 30)-(01, 31): RSQB(OP) ']'
[08](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 14): NAME(NAME) 'm4'
[09](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[09](01, 18)-(01, 24): NAME(NAME) 'matrix'
[09](01, 25)-(01, 26): LSQB(OP) '['
[09](01, 26)-(01, 27): NAME(NAME) 'j'
[09](01, 27)-(01, 28): RSQB(OP) ']'
[09](01, 28)-(01, 29): LSQB(OP) '['
[09](01, 29)-(01, 30): NAME(NAME) 'i'
[09](01, 30)-(01, 31): RSQB(OP) ']'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 14): NAME(NAME) 'm5'
[10](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[10](01, 18)-(01, 24): NAME(NAME) 'matrix'
[10](01, 25)-(01, 26): LSQB(OP) '['
[10](01, 26)-(01, 29): NAME(NAME) 'len'
[10](01, 29)-(01, 30): LPAR(OP) '('
[10](01, 30)-(01, 36): NAME(NAME) 'matrix'
[10](01, 36)-(01, 37): LSQB(OP) '['
[10](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[10](01, 38)-(01, 39): RSQB(OP) ']'
[10](01, 39)-(01, 40): RPAR(OP) ')'
[10](01, 40)-(01, 41): MINUS(OP) '-'
[10](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[10](01, 42)-(01, 43): MINUS(OP) '-'
[10](01, 43)-(01, 44): NAME(NAME) 'j'
[10](01, 44)-(01, 45): RSQB(OP) ']'
[10](01, 45)-(01, 46): LSQB(OP) '['
[10](01, 46)-(01, 49): NAME(NAME) 'len'
[10](01, 49)-(01, 50): LPAR(OP) '('
[10](01, 50)-(01, 56): NAME(NAME) 'matrix'
[10](01, 56)-(01, 57): LSQB(OP) '['
[10](01, 57)-(01, 58): NUMBER(NUMBER) '1'
[10](01, 58)-(01, 59): RSQB(OP) ']'
[10](01, 59)-(01, 60): RPAR(OP) ')'
[10](01, 60)-(01, 61): MINUS(OP) '-'
[10](01, 61)-(01, 62): NUMBER(NUMBER) '1'
[10](01, 62)-(01, 63): MINUS(OP) '-'
[10](01, 63)-(01, 64): NAME(NAME) 'j'
[10](01, 64)-(01, 65): RSQB(OP) ']'
[10](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 13): NAME(NAME) 'm2'
[11](01, 14)-(01, 16): NOTEQUAL(OP) '!='
[11](01, 17)-(01, 19): NAME(NAME) 'm3'
[11](01, 19)-(01, 20): COLON(OP) ':'
[11](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 18): NAME(NAME) 'return'
[12](01, 19)-(01, 24): NAME(NAME) 'False'
[12](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 12): NAME(NAME) 'i'
[13](01, 13)-(01, 15): EQEQUAL(OP) '=='
[13](01, 16)-(01, 19): NAME(NAME) 'len'
[13](01, 19)-(01, 20): LPAR(OP) '('
[13](01, 20)-(01, 26): NAME(NAME) 'matrix'
[13](01, 26)-(01, 27): LSQB(OP) '['
[13](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[13](01, 28)-(01, 29): RSQB(OP) ']'
[13](01, 29)-(01, 30): RPAR(OP) ')'
[13](01, 30)-(01, 31): MINUS(OP) '-'
[13](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[13](01, 32)-(01, 33): COLON(OP) ':'
[13](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 18): NAME(NAME) 'return'
[14](01, 19)-(01, 23): NAME(NAME) 'True'
[14](01, 23)-(01, 24): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

