[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'n'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 07): NAME(NAME) 'int'
[00](01, 07)-(01, 08): LPAR(OP) '('
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 44): STRING(STRING) '"Give value, greater than 0: "'
[00](01, 44)-(01, 45): RPAR(OP) ')'
[00](01, 45)-(01, 46): RPAR(OP) ')'
[00](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'while'
[01](01, 06)-(01, 07): NAME(NAME) 'n'
[01](01, 08)-(01, 09): LESS(OP) '<'
[01](01, 10)-(01, 11): NUMBER(NUMBER) '1'
[01](01, 11)-(01, 12): COLON(OP) ':'
[01](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 05): NAME(NAME) 'n'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 11): NAME(NAME) 'int'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 17): NAME(NAME) 'input'
[02](01, 17)-(01, 18): LPAR(OP) '('
[02](01, 18)-(01, 48): STRING(STRING) '"Give value, greater than 0: "'
[02](01, 48)-(01, 49): RPAR(OP) ')'
[02](01, 49)-(01, 50): RPAR(OP) ')'
[02](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 05): NAME(NAME) 'bases'
[04](01, 06)-(01, 07): EQUAL(OP) '='
[04](01, 08)-(01, 09): LSQB(OP) '['
[04](01, 09)-(01, 12): STRING(STRING) '"A"'
[04](01, 12)-(01, 13): COMMA(OP) ','
[04](01, 14)-(01, 17): STRING(STRING) '"C"'
[04](01, 17)-(01, 18): COMMA(OP) ','
[04](01, 19)-(01, 22): STRING(STRING) '"G"'
[04](01, 22)-(01, 23): COMMA(OP) ','
[04](01, 24)-(01, 27): STRING(STRING) '"T"'
[04](01, 27)-(01, 28): RSQB(OP) ']'
[04](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 02): NAME(NAME) 'if'
[06](01, 03)-(01, 04): NAME(NAME) 'n'
[06](01, 05)-(01, 07): EQEQUAL(OP) '=='
[06](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[06](01, 09)-(01, 10): COLON(OP) ':'
[06](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 07): NAME(NAME) 'for'
[07](01, 08)-(01, 09): NAME(NAME) 'i'
[07](01, 10)-(01, 12): NAME(NAME) 'in'
[07](01, 13)-(01, 18): NAME(NAME) 'bases'
[07](01, 18)-(01, 19): COLON(OP) ':'
[07](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 13): NAME(NAME) 'print'
[08](01, 13)-(01, 14): LPAR(OP) '('
[08](01, 14)-(01, 15): NAME(NAME) 'i'
[08](01, 15)-(01, 16): RPAR(OP) ')'
[08](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 02): NAME(NAME) 'if'
[11](01, 03)-(01, 04): NAME(NAME) 'n'
[11](01, 05)-(01, 07): EQEQUAL(OP) '=='
[11](01, 08)-(01, 09): NUMBER(NUMBER) '2'
[11](01, 09)-(01, 10): COLON(OP) ':'
[11](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 07): NAME(NAME) 'for'
[12](01, 08)-(01, 09): NAME(NAME) 'i'
[12](01, 10)-(01, 12): NAME(NAME) 'in'
[12](01, 13)-(01, 18): NAME(NAME) 'range'
[12](01, 18)-(01, 19): LPAR(OP) '('
[12](01, 19)-(01, 22): NAME(NAME) 'len'
[12](01, 22)-(01, 23): LPAR(OP) '('
[12](01, 23)-(01, 28): NAME(NAME) 'bases'
[12](01, 28)-(01, 29): RPAR(OP) ')'
[12](01, 29)-(01, 30): RPAR(OP) ')'
[12](01, 30)-(01, 31): COLON(OP) ':'
[12](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 11): NAME(NAME) 'for'
[13](01, 12)-(01, 13): NAME(NAME) 'j'
[13](01, 14)-(01, 16): NAME(NAME) 'in'
[13](01, 17)-(01, 22): NAME(NAME) 'range'
[13](01, 22)-(01, 23): LPAR(OP) '('
[13](01, 23)-(01, 26): NAME(NAME) 'len'
[13](01, 26)-(01, 27): LPAR(OP) '('
[13](01, 27)-(01, 32): NAME(NAME) 'bases'
[13](01, 32)-(01, 33): RPAR(OP) ')'
[13](01, 33)-(01, 34): RPAR(OP) ')'
[13](01, 34)-(01, 35): COLON(OP) ':'
[13](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 17): NAME(NAME) 'print'
[14](01, 17)-(01, 18): LPAR(OP) '('
[14](01, 18)-(01, 23): NAME(NAME) 'bases'
[14](01, 23)-(01, 24): LSQB(OP) '['
[14](01, 24)-(01, 25): NAME(NAME) 'i'
[14](01, 25)-(01, 26): RSQB(OP) ']'
[14](01, 26)-(01, 27): COMMA(OP) ','
[14](01, 28)-(01, 33): NAME(NAME) 'bases'
[14](01, 33)-(01, 34): LSQB(OP) '['
[14](01, 34)-(01, 35): NAME(NAME) 'j'
[14](01, 35)-(01, 36): RSQB(OP) ']'
[14](01, 36)-(01, 37): COMMA(OP) ','
[14](01, 38)-(01, 41): NAME(NAME) 'sep'
[14](01, 41)-(01, 42): EQUAL(OP) '='
[14](01, 42)-(01, 44): STRING(STRING) '""'
[14](01, 44)-(01, 45): RPAR(OP) ')'
[14](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 02): NAME(NAME) 'if'
[16](01, 03)-(01, 04): NAME(NAME) 'n'
[16](01, 05)-(01, 07): EQEQUAL(OP) '=='
[16](01, 08)-(01, 09): NUMBER(NUMBER) '3'
[16](01, 09)-(01, 10): COLON(OP) ':'
[16](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 07): NAME(NAME) 'for'
[17](01, 08)-(01, 09): NAME(NAME) 'i'
[17](01, 10)-(01, 12): NAME(NAME) 'in'
[17](01, 13)-(01, 18): NAME(NAME) 'range'
[17](01, 18)-(01, 19): LPAR(OP) '('
[17](01, 19)-(01, 22): NAME(NAME) 'len'
[17](01, 22)-(01, 23): LPAR(OP) '('
[17](01, 23)-(01, 28): NAME(NAME) 'bases'
[17](01, 28)-(01, 29): RPAR(OP) ')'
[17](01, 29)-(01, 30): RPAR(OP) ')'
[17](01, 30)-(01, 31): COLON(OP) ':'
[17](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 11): NAME(NAME) 'for'
[18](01, 12)-(01, 13): NAME(NAME) 'j'
[18](01, 14)-(01, 16): NAME(NAME) 'in'
[18](01, 17)-(01, 22): NAME(NAME) 'range'
[18](01, 22)-(01, 23): LPAR(OP) '('
[18](01, 23)-(01, 26): NAME(NAME) 'len'
[18](01, 26)-(01, 27): LPAR(OP) '('
[18](01, 27)-(01, 32): NAME(NAME) 'bases'
[18](01, 32)-(01, 33): RPAR(OP) ')'
[18](01, 33)-(01, 34): RPAR(OP) ')'
[18](01, 34)-(01, 35): COLON(OP) ':'
[18](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 15): NAME(NAME) 'for'
[19](01, 16)-(01, 17): NAME(NAME) 'k'
[19](01, 18)-(01, 20): NAME(NAME) 'in'
[19](01, 21)-(01, 26): NAME(NAME) 'range'
[19](01, 26)-(01, 27): LPAR(OP) '('
[19](01, 27)-(01, 30): NAME(NAME) 'len'
[19](01, 30)-(01, 31): LPAR(OP) '('
[19](01, 31)-(01, 36): NAME(NAME) 'bases'
[19](01, 36)-(01, 37): RPAR(OP) ')'
[19](01, 37)-(01, 38): RPAR(OP) ')'
[19](01, 38)-(01, 39): COLON(OP) ':'
[19](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 16): INDENT(INDENT) '                '
[20](01, 16)-(01, 21): NAME(NAME) 'print'
[20](01, 21)-(01, 22): LPAR(OP) '('
[20](01, 22)-(01, 27): NAME(NAME) 'bases'
[20](01, 27)-(01, 28): LSQB(OP) '['
[20](01, 28)-(01, 29): NAME(NAME) 'i'
[20](01, 29)-(01, 30): RSQB(OP) ']'
[20](01, 30)-(01, 31): COMMA(OP) ','
[20](01, 32)-(01, 37): NAME(NAME) 'bases'
[20](01, 37)-(01, 38): LSQB(OP) '['
[20](01, 38)-(01, 39): NAME(NAME) 'j'
[20](01, 39)-(01, 40): RSQB(OP) ']'
[20](01, 40)-(01, 41): COMMA(OP) ','
[20](01, 42)-(01, 47): NAME(NAME) 'bases'
[20](01, 47)-(01, 48): LSQB(OP) '['
[20](01, 48)-(01, 49): NAME(NAME) 'k'
[20](01, 49)-(01, 50): RSQB(OP) ']'
[20](01, 50)-(01, 51): COMMA(OP) ','
[20](01, 52)-(01, 55): NAME(NAME) 'sep'
[20](01, 55)-(01, 56): EQUAL(OP) '='
[20](01, 56)-(01, 58): STRING(STRING) '""'
[20](01, 58)-(01, 59): RPAR(OP) ')'
[20](01, 59)-(01, 60): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 02): NAME(NAME) 'if'
[22](01, 03)-(01, 04): NAME(NAME) 'n'
[22](01, 05)-(01, 07): EQEQUAL(OP) '=='
[22](01, 08)-(01, 09): NUMBER(NUMBER) '4'
[22](01, 09)-(01, 10): COLON(OP) ':'
[22](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 07): NAME(NAME) 'for'
[23](01, 08)-(01, 09): NAME(NAME) 'i'
[23](01, 10)-(01, 12): NAME(NAME) 'in'
[23](01, 13)-(01, 18): NAME(NAME) 'range'
[23](01, 18)-(01, 19): LPAR(OP) '('
[23](01, 19)-(01, 22): NAME(NAME) 'len'
[23](01, 22)-(01, 23): LPAR(OP) '('
[23](01, 23)-(01, 28): NAME(NAME) 'bases'
[23](01, 28)-(01, 29): RPAR(OP) ')'
[23](01, 29)-(01, 30): RPAR(OP) ')'
[23](01, 30)-(01, 31): COLON(OP) ':'
[23](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 11): NAME(NAME) 'for'
[24](01, 12)-(01, 13): NAME(NAME) 'j'
[24](01, 14)-(01, 16): NAME(NAME) 'in'
[24](01, 17)-(01, 22): NAME(NAME) 'range'
[24](01, 22)-(01, 23): LPAR(OP) '('
[24](01, 23)-(01, 26): NAME(NAME) 'len'
[24](01, 26)-(01, 27): LPAR(OP) '('
[24](01, 27)-(01, 32): NAME(NAME) 'bases'
[24](01, 32)-(01, 33): RPAR(OP) ')'
[24](01, 33)-(01, 34): RPAR(OP) ')'
[24](01, 34)-(01, 35): COLON(OP) ':'
[24](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 15): NAME(NAME) 'for'
[25](01, 16)-(01, 17): NAME(NAME) 'k'
[25](01, 18)-(01, 20): NAME(NAME) 'in'
[25](01, 21)-(01, 26): NAME(NAME) 'range'
[25](01, 26)-(01, 27): LPAR(OP) '('
[25](01, 27)-(01, 30): NAME(NAME) 'len'
[25](01, 30)-(01, 31): LPAR(OP) '('
[25](01, 31)-(01, 36): NAME(NAME) 'bases'
[25](01, 36)-(01, 37): RPAR(OP) ')'
[25](01, 37)-(01, 38): RPAR(OP) ')'
[25](01, 38)-(01, 39): COLON(OP) ':'
[25](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 16): INDENT(INDENT) '                '
[26](01, 16)-(01, 19): NAME(NAME) 'for'
[26](01, 20)-(01, 21): NAME(NAME) 'l'
[26](01, 22)-(01, 24): NAME(NAME) 'in'
[26](01, 25)-(01, 30): NAME(NAME) 'range'
[26](01, 30)-(01, 31): LPAR(OP) '('
[26](01, 31)-(01, 34): NAME(NAME) 'len'
[26](01, 34)-(01, 35): LPAR(OP) '('
[26](01, 35)-(01, 40): NAME(NAME) 'bases'
[26](01, 40)-(01, 41): RPAR(OP) ')'
[26](01, 41)-(01, 42): RPAR(OP) ')'
[26](01, 42)-(01, 43): COLON(OP) ':'
[26](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 20): INDENT(INDENT) '                    '
[27](01, 20)-(01, 25): NAME(NAME) 'print'
[27](01, 25)-(01, 26): LPAR(OP) '('
[27](01, 26)-(01, 31): NAME(NAME) 'bases'
[27](01, 31)-(01, 32): LSQB(OP) '['
[27](01, 32)-(01, 33): NAME(NAME) 'i'
[27](01, 33)-(01, 34): RSQB(OP) ']'
[27](01, 34)-(01, 35): COMMA(OP) ','
[27](01, 36)-(01, 41): NAME(NAME) 'bases'
[27](01, 41)-(01, 42): LSQB(OP) '['
[27](01, 42)-(01, 43): NAME(NAME) 'j'
[27](01, 43)-(01, 44): RSQB(OP) ']'
[27](01, 44)-(01, 45): COMMA(OP) ','
[27](01, 46)-(01, 51): NAME(NAME) 'bases'
[27](01, 51)-(01, 52): LSQB(OP) '['
[27](01, 52)-(01, 53): NAME(NAME) 'k'
[27](01, 53)-(01, 54): RSQB(OP) ']'
[27](01, 54)-(01, 55): COMMA(OP) ','
[27](01, 56)-(01, 61): NAME(NAME) 'bases'
[27](01, 61)-(01, 62): LSQB(OP) '['
[27](01, 62)-(01, 63): NAME(NAME) 'l'
[27](01, 63)-(01, 64): RSQB(OP) ']'
[27](01, 64)-(01, 65): COMMA(OP) ','
[27](01, 66)-(01, 69): NAME(NAME) 'sep'
[27](01, 69)-(01, 70): EQUAL(OP) '='
[27](01, 70)-(01, 72): STRING(STRING) '""'
[27](01, 72)-(01, 73): RPAR(OP) ')'
[27](01, 73)-(01, 74): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 01): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 02): NAME(NAME) 'if'
[29](01, 03)-(01, 04): NAME(NAME) 'n'
[29](01, 05)-(01, 07): EQEQUAL(OP) '=='
[29](01, 08)-(01, 09): NUMBER(NUMBER) '5'
[29](01, 09)-(01, 10): COLON(OP) ':'
[29](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 07): NAME(NAME) 'for'
[30](01, 08)-(01, 09): NAME(NAME) 'i'
[30](01, 10)-(01, 12): NAME(NAME) 'in'
[30](01, 13)-(01, 18): NAME(NAME) 'range'
[30](01, 18)-(01, 19): LPAR(OP) '('
[30](01, 19)-(01, 22): NAME(NAME) 'len'
[30](01, 22)-(01, 23): LPAR(OP) '('
[30](01, 23)-(01, 28): NAME(NAME) 'bases'
[30](01, 28)-(01, 29): RPAR(OP) ')'
[30](01, 29)-(01, 30): RPAR(OP) ')'
[30](01, 30)-(01, 31): COLON(OP) ':'
[30](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 11): NAME(NAME) 'for'
[31](01, 12)-(01, 13): NAME(NAME) 'j'
[31](01, 14)-(01, 16): NAME(NAME) 'in'
[31](01, 17)-(01, 22): NAME(NAME) 'range'
[31](01, 22)-(01, 23): LPAR(OP) '('
[31](01, 23)-(01, 26): NAME(NAME) 'len'
[31](01, 26)-(01, 27): LPAR(OP) '('
[31](01, 27)-(01, 32): NAME(NAME) 'bases'
[31](01, 32)-(01, 33): RPAR(OP) ')'
[31](01, 33)-(01, 34): RPAR(OP) ')'
[31](01, 34)-(01, 35): COLON(OP) ':'
[31](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 15): NAME(NAME) 'for'
[32](01, 16)-(01, 17): NAME(NAME) 'k'
[32](01, 18)-(01, 20): NAME(NAME) 'in'
[32](01, 21)-(01, 26): NAME(NAME) 'range'
[32](01, 26)-(01, 27): LPAR(OP) '('
[32](01, 27)-(01, 30): NAME(NAME) 'len'
[32](01, 30)-(01, 31): LPAR(OP) '('
[32](01, 31)-(01, 36): NAME(NAME) 'bases'
[32](01, 36)-(01, 37): RPAR(OP) ')'
[32](01, 37)-(01, 38): RPAR(OP) ')'
[32](01, 38)-(01, 39): COLON(OP) ':'
[32](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 16): INDENT(INDENT) '                '
[33](01, 16)-(01, 19): NAME(NAME) 'for'
[33](01, 20)-(01, 21): NAME(NAME) 'l'
[33](01, 22)-(01, 24): NAME(NAME) 'in'
[33](01, 25)-(01, 30): NAME(NAME) 'range'
[33](01, 30)-(01, 31): LPAR(OP) '('
[33](01, 31)-(01, 34): NAME(NAME) 'len'
[33](01, 34)-(01, 35): LPAR(OP) '('
[33](01, 35)-(01, 40): NAME(NAME) 'bases'
[33](01, 40)-(01, 41): RPAR(OP) ')'
[33](01, 41)-(01, 42): RPAR(OP) ')'
[33](01, 42)-(01, 43): COLON(OP) ':'
[33](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 20): INDENT(INDENT) '                    '
[34](01, 20)-(01, 23): NAME(NAME) 'for'
[34](01, 24)-(01, 25): NAME(NAME) 'm'
[34](01, 26)-(01, 28): NAME(NAME) 'in'
[34](01, 29)-(01, 34): NAME(NAME) 'range'
[34](01, 34)-(01, 35): LPAR(OP) '('
[34](01, 35)-(01, 38): NAME(NAME) 'len'
[34](01, 38)-(01, 39): LPAR(OP) '('
[34](01, 39)-(01, 44): NAME(NAME) 'bases'
[34](01, 44)-(01, 45): RPAR(OP) ')'
[34](01, 45)-(01, 46): RPAR(OP) ')'
[34](01, 46)-(01, 47): COLON(OP) ':'
[34](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 24): INDENT(INDENT) '                        '
[35](01, 24)-(01, 29): NAME(NAME) 'print'
[35](01, 29)-(01, 30): LPAR(OP) '('
[35](01, 30)-(01, 35): NAME(NAME) 'bases'
[35](01, 35)-(01, 36): LSQB(OP) '['
[35](01, 36)-(01, 37): NAME(NAME) 'i'
[35](01, 37)-(01, 38): RSQB(OP) ']'
[35](01, 38)-(01, 39): COMMA(OP) ','
[35](01, 40)-(01, 45): NAME(NAME) 'bases'
[35](01, 45)-(01, 46): LSQB(OP) '['
[35](01, 46)-(01, 47): NAME(NAME) 'j'
[35](01, 47)-(01, 48): RSQB(OP) ']'
[35](01, 48)-(01, 49): COMMA(OP) ','
[35](01, 50)-(01, 55): NAME(NAME) 'bases'
[35](01, 55)-(01, 56): LSQB(OP) '['
[35](01, 56)-(01, 57): NAME(NAME) 'k'
[35](01, 57)-(01, 58): RSQB(OP) ']'
[35](01, 58)-(01, 59): COMMA(OP) ','
[35](01, 60)-(01, 65): NAME(NAME) 'bases'
[35](01, 65)-(01, 66): LSQB(OP) '['
[35](01, 66)-(01, 67): NAME(NAME) 'l'
[35](01, 67)-(01, 68): RSQB(OP) ']'
[35](01, 68)-(01, 69): COMMA(OP) ','
[35](01, 70)-(01, 75): NAME(NAME) 'bases'
[35](01, 75)-(01, 76): LSQB(OP) '['
[35](01, 76)-(01, 77): NAME(NAME) 'm'
[35](01, 77)-(01, 78): RSQB(OP) ']'
[35](01, 78)-(01, 79): COMMA(OP) ','
[35](01, 80)-(01, 83): NAME(NAME) 'sep'
[35](01, 83)-(01, 84): EQUAL(OP) '='
[35](01, 84)-(01, 86): STRING(STRING) '""'
[35](01, 86)-(01, 87): RPAR(OP) ')'
[35](01, 87)-(01, 88): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

