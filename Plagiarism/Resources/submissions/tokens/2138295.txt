[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'woord1'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 07)-(01, 12): NAME(NAME) 'input'
[01](01, 12)-(01, 13): LPAR(OP) '('
[01](01, 13)-(01, 14): RPAR(OP) ')'
[01](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 06): NAME(NAME) 'woord2'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 13): NAME(NAME) 'input'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 15): RPAR(OP) ')'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): NAME(NAME) 'lengthe1'
[03](01, 08)-(01, 09): EQUAL(OP) '='
[03](01, 09)-(01, 12): NAME(NAME) 'len'
[03](01, 12)-(01, 13): LPAR(OP) '('
[03](01, 13)-(01, 19): NAME(NAME) 'woord1'
[03](01, 19)-(01, 20): RPAR(OP) ')'
[03](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): NAME(NAME) 'lengthe2'
[04](01, 08)-(01, 09): EQUAL(OP) '='
[04](01, 09)-(01, 12): NAME(NAME) 'len'
[04](01, 12)-(01, 13): LPAR(OP) '('
[04](01, 13)-(01, 19): NAME(NAME) 'woord2'
[04](01, 19)-(01, 20): RPAR(OP) ')'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NAME(NAME) 'i'
[05](01, 01)-(01, 02): EQUAL(OP) '='
[05](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[05](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 07): NAME(NAME) 'aantal1'
[06](01, 07)-(01, 08): EQUAL(OP) '='
[06](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[06](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 07): NAME(NAME) 'aantal2'
[07](01, 07)-(01, 08): EQUAL(OP) '='
[07](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[07](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 02): NAME(NAME) 'if'
[08](01, 03)-(01, 11): NAME(NAME) 'lengthe1'
[08](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[08](01, 13)-(01, 21): NAME(NAME) 'lengthe2'
[08](01, 21)-(01, 22): COLON(OP) ':'
[08](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'print'
[09](01, 09)-(01, 10): LPAR(OP) '('
[09](01, 10)-(01, 16): NAME(NAME) 'woord1'
[09](01, 16)-(01, 17): COMMA(OP) ','
[09](01, 17)-(01, 22): STRING(STRING) '"and"'
[09](01, 22)-(01, 23): COMMA(OP) ','
[09](01, 23)-(01, 29): NAME(NAME) 'woord2'
[09](01, 29)-(01, 30): COMMA(OP) ','
[09](01, 30)-(01, 48): STRING(STRING) '"are not anagrams"'
[09](01, 48)-(01, 49): RPAR(OP) ')'
[09](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): NAME(NAME) 'else'
[10](01, 04)-(01, 05): COLON(OP) ':'
[10](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 07): NAME(NAME) 'for'
[11](01, 08)-(01, 09): NAME(NAME) 'x'
[11](01, 10)-(01, 12): NAME(NAME) 'in'
[11](01, 13)-(01, 68): STRING(STRING) '"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRESTUVWXYZ"'
[11](01, 68)-(01, 69): COLON(OP) ':'
[11](01, 69)-(01, 70): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 09): NAME(NAME) 'i'
[12](01, 09)-(01, 10): EQUAL(OP) '='
[12](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[12](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 15): NAME(NAME) 'aantal1'
[13](01, 15)-(01, 16): EQUAL(OP) '='
[13](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[13](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 13): NAME(NAME) 'while'
[14](01, 14)-(01, 15): NAME(NAME) 'i'
[14](01, 15)-(01, 16): PLUS(OP) '+'
[14](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[14](01, 17)-(01, 18): LESS(OP) '<'
[14](01, 19)-(01, 26): NAME(NAME) 'lengthe'
[14](01, 26)-(01, 27): PLUS(OP) '+'
[14](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[14](01, 28)-(01, 29): COLON(OP) ':'
[14](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 14): NAME(NAME) 'if'
[15](01, 15)-(01, 20): NAME(NAME) 'woord'
[15](01, 20)-(01, 21): LSQB(OP) '['
[15](01, 21)-(01, 22): NAME(NAME) 'i'
[15](01, 22)-(01, 23): RSQB(OP) ']'
[15](01, 24)-(01, 26): EQEQUAL(OP) '=='
[15](01, 27)-(01, 28): NAME(NAME) 'x'
[15](01, 28)-(01, 29): COLON(OP) ':'
[15](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 23): NAME(NAME) 'aantal1'
[16](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[16](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[16](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 17): NAME(NAME) 'i'
[17](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[17](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[17](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 16): NAME(NAME) 'elif'
[18](01, 17)-(01, 18): NAME(NAME) 'i'
[18](01, 18)-(01, 19): PLUS(OP) '+'
[18](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[18](01, 21)-(01, 23): EQEQUAL(OP) '=='
[18](01, 24)-(01, 31): NAME(NAME) 'lengthe'
[18](01, 31)-(01, 32): COLON(OP) ':'
[18](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 16): INDENT(INDENT) '                '
[19](01, 16)-(01, 17): NAME(NAME) 'i'
[19](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[19](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[19](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 16): NAME(NAME) 'else'
[20](01, 16)-(01, 17): COLON(OP) ':'
[20](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 17): NAME(NAME) 'i'
[21](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[21](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[21](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 15): NAME(NAME) 'aantal2'
[22](01, 15)-(01, 16): EQUAL(OP) '='
[22](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[22](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 09): NAME(NAME) 'i'
[23](01, 09)-(01, 10): EQUAL(OP) '='
[23](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[23](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 13): NAME(NAME) 'while'
[24](01, 14)-(01, 15): NAME(NAME) 'i'
[24](01, 15)-(01, 16): PLUS(OP) '+'
[24](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[24](01, 17)-(01, 18): LESS(OP) '<'
[24](01, 19)-(01, 26): NAME(NAME) 'lengthe'
[24](01, 26)-(01, 27): PLUS(OP) '+'
[24](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[24](01, 28)-(01, 29): COLON(OP) ':'
[24](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 14): NAME(NAME) 'if'
[25](01, 15)-(01, 20): NAME(NAME) 'woord'
[25](01, 20)-(01, 21): LSQB(OP) '['
[25](01, 21)-(01, 22): NAME(NAME) 'i'
[25](01, 22)-(01, 23): RSQB(OP) ']'
[25](01, 24)-(01, 26): EQEQUAL(OP) '=='
[25](01, 27)-(01, 28): NAME(NAME) 'x'
[25](01, 28)-(01, 29): COLON(OP) ':'
[25](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 16): INDENT(INDENT) '                '
[26](01, 16)-(01, 23): NAME(NAME) 'aantal2'
[26](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[26](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[26](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 16): INDENT(INDENT) '                '
[27](01, 16)-(01, 17): NAME(NAME) 'i'
[27](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[27](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[27](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 16): NAME(NAME) 'elif'
[28](01, 17)-(01, 18): NAME(NAME) 'i'
[28](01, 18)-(01, 19): PLUS(OP) '+'
[28](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[28](01, 21)-(01, 23): EQEQUAL(OP) '=='
[28](01, 24)-(01, 31): NAME(NAME) 'lengthe'
[28](01, 31)-(01, 32): COLON(OP) ':'
[28](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 16): INDENT(INDENT) '                '
[29](01, 16)-(01, 17): NAME(NAME) 'i'
[29](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[29](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[29](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 16): NAME(NAME) 'else'
[30](01, 16)-(01, 17): COLON(OP) ':'
[30](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 16): INDENT(INDENT) '                '
[31](01, 16)-(01, 17): NAME(NAME) 'i'
[31](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[31](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[31](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 06): NAME(NAME) 'if'
[32](01, 07)-(01, 14): NAME(NAME) 'aantal1'
[32](01, 15)-(01, 17): NOTEQUAL(OP) '!='
[32](01, 18)-(01, 25): NAME(NAME) 'aantal2'
[32](01, 25)-(01, 26): COLON(OP) ':'
[32](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 13): NAME(NAME) 'print'
[33](01, 13)-(01, 14): LPAR(OP) '('
[33](01, 14)-(01, 20): NAME(NAME) 'woord1'
[33](01, 20)-(01, 21): COMMA(OP) ','
[33](01, 21)-(01, 26): STRING(STRING) '"and"'
[33](01, 26)-(01, 27): COMMA(OP) ','
[33](01, 27)-(01, 33): NAME(NAME) 'woord2'
[33](01, 33)-(01, 34): COMMA(OP) ','
[33](01, 34)-(01, 52): STRING(STRING) '"are not anagrams"'
[33](01, 52)-(01, 53): RPAR(OP) ')'
[33](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 01): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

