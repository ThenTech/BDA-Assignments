[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'woord1'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 33): STRING(STRING) "'Geef woord1 in: '"
[00](01, 33)-(01, 34): RPAR(OP) ')'
[00](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'woord2'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 14): NAME(NAME) 'input'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 33): STRING(STRING) "'Geef woord2 in: '"
[01](01, 33)-(01, 34): RPAR(OP) ')'
[01](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): NAME(NAME) 'alfabet'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 38): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[02](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 11): NAME(NAME) 'woord1lijst'
[03](01, 12)-(01, 13): EQUAL(OP) '='
[03](01, 14)-(01, 18): NAME(NAME) 'list'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 25): NAME(NAME) 'woord1'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 11): NAME(NAME) 'woord2lijst'
[04](01, 12)-(01, 13): EQUAL(OP) '='
[04](01, 14)-(01, 18): NAME(NAME) 'list'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 25): NAME(NAME) 'woord2'
[04](01, 25)-(01, 26): RPAR(OP) ')'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 07): NAME(NAME) 'teller1'
[05](01, 08)-(01, 09): EQUAL(OP) '='
[05](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[05](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 07): NAME(NAME) 'teller2'
[06](01, 08)-(01, 09): EQUAL(OP) '='
[06](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[06](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): NAME(NAME) 'for'
[07](01, 04)-(01, 05): NAME(NAME) 'x'
[07](01, 06)-(01, 08): NAME(NAME) 'in'
[07](01, 09)-(01, 16): NAME(NAME) 'alfabet'
[07](01, 16)-(01, 17): COLON(OP) ':'
[07](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 07): NAME(NAME) 'for'
[08](01, 08)-(01, 09): NAME(NAME) 'y'
[08](01, 10)-(01, 12): NAME(NAME) 'in'
[08](01, 13)-(01, 24): NAME(NAME) 'woord1lijst'
[08](01, 24)-(01, 25): COLON(OP) ':'
[08](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 12): NAME(NAME) 'x'
[09](01, 13)-(01, 15): EQEQUAL(OP) '=='
[09](01, 16)-(01, 17): NAME(NAME) 'y'
[09](01, 17)-(01, 18): COLON(OP) ':'
[09](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 19): NAME(NAME) 'teller1'
[10](01, 20)-(01, 21): EQUAL(OP) '='
[10](01, 22)-(01, 29): NAME(NAME) 'teller1'
[10](01, 30)-(01, 31): PLUS(OP) '+'
[10](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[10](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 07): NAME(NAME) 'for'
[11](01, 08)-(01, 09): NAME(NAME) 'z'
[11](01, 10)-(01, 12): NAME(NAME) 'in'
[11](01, 13)-(01, 24): NAME(NAME) 'woord2lijst'
[11](01, 24)-(01, 25): COLON(OP) ':'
[11](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 10): NAME(NAME) 'if'
[12](01, 11)-(01, 12): NAME(NAME) 'x'
[12](01, 13)-(01, 15): EQEQUAL(OP) '=='
[12](01, 16)-(01, 17): NAME(NAME) 'z'
[12](01, 17)-(01, 18): COLON(OP) ':'
[12](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 19): NAME(NAME) 'teller2'
[13](01, 20)-(01, 21): EQUAL(OP) '='
[13](01, 22)-(01, 29): NAME(NAME) 'teller2'
[13](01, 30)-(01, 31): PLUS(OP) '+'
[13](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[13](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 09): NAME(NAME) 'while'
[14](01, 10)-(01, 17): NAME(NAME) 'teller1'
[14](01, 18)-(01, 20): NOTEQUAL(OP) '!='
[14](01, 21)-(01, 28): NAME(NAME) 'teller2'
[14](01, 28)-(01, 29): COLON(OP) ':'
[14](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 13): NAME(NAME) 'print'
[15](01, 13)-(01, 14): LPAR(OP) '('
[15](01, 14)-(01, 20): NAME(NAME) 'woord1'
[15](01, 20)-(01, 21): COMMA(OP) ','
[15](01, 22)-(01, 27): STRING(STRING) "'and'"
[15](01, 27)-(01, 28): COMMA(OP) ','
[15](01, 29)-(01, 35): NAME(NAME) 'woord2'
[15](01, 35)-(01, 36): COMMA(OP) ','
[15](01, 37)-(01, 55): STRING(STRING) "'are not anagrams'"
[15](01, 55)-(01, 56): RPAR(OP) ')'
[15](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 12): NAME(NAME) 'quit'
[16](01, 12)-(01, 13): LPAR(OP) '('
[16](01, 13)-(01, 14): RPAR(OP) ')'
[16](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 05): NAME(NAME) 'print'
[17](01, 05)-(01, 06): LPAR(OP) '('
[17](01, 06)-(01, 12): NAME(NAME) 'woord1'
[17](01, 12)-(01, 13): COMMA(OP) ','
[17](01, 14)-(01, 19): STRING(STRING) "'and'"
[17](01, 19)-(01, 20): COMMA(OP) ','
[17](01, 21)-(01, 27): NAME(NAME) 'woord2'
[17](01, 27)-(01, 28): COMMA(OP) ','
[17](01, 28)-(01, 42): STRING(STRING) "'are anagrams'"
[17](01, 42)-(01, 43): RPAR(OP) ')'
[17](01, 43)-(01, 44): NEWLINE(NEWLINE)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

