[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 09): NAME(NAME) 'response1'
[00](01, 10)-(01, 11): EQUAL(OP) '='
[00](01, 12)-(01, 15): NAME(NAME) 'int'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 21): NAME(NAME) 'input'
[00](01, 21)-(01, 22): LPAR(OP) '('
[00](01, 22)-(01, 68): STRING(STRING) '"How many coins of one eurocent do you have ?"'
[00](01, 68)-(01, 69): RPAR(OP) ')'
[00](01, 69)-(01, 70): RPAR(OP) ')'
[00](01, 70)-(01, 71): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 02): NAME(NAME) 'r1'
[01](01, 03)-(01, 04): EQUAL(OP) '='
[01](01, 05)-(01, 08): NAME(NAME) 'int'
[01](01, 08)-(01, 09): LPAR(OP) '('
[01](01, 09)-(01, 18): NAME(NAME) 'response1'
[01](01, 18)-(01, 19): RPAR(OP) ')'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 09): NAME(NAME) 'response2'
[02](01, 10)-(01, 11): EQUAL(OP) '='
[02](01, 12)-(01, 15): NAME(NAME) 'int'
[02](01, 15)-(01, 16): LPAR(OP) '('
[02](01, 16)-(01, 21): NAME(NAME) 'input'
[02](01, 21)-(01, 22): LPAR(OP) '('
[02](01, 22)-(01, 68): STRING(STRING) '"How many coins of two eurocent do you have? "'
[02](01, 68)-(01, 69): RPAR(OP) ')'
[02](01, 69)-(01, 70): RPAR(OP) ')'
[02](01, 70)-(01, 71): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 02): NAME(NAME) 'r2'
[03](01, 03)-(01, 04): EQUAL(OP) '='
[03](01, 05)-(01, 08): NAME(NAME) 'int'
[03](01, 08)-(01, 09): LPAR(OP) '('
[03](01, 09)-(01, 18): NAME(NAME) 'response2'
[03](01, 18)-(01, 19): RPAR(OP) ')'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 09): NAME(NAME) 'response3'
[04](01, 10)-(01, 11): EQUAL(OP) '='
[04](01, 12)-(01, 15): NAME(NAME) 'int'
[04](01, 15)-(01, 16): LPAR(OP) '('
[04](01, 16)-(01, 21): NAME(NAME) 'input'
[04](01, 21)-(01, 22): LPAR(OP) '('
[04](01, 22)-(01, 69): STRING(STRING) '"How many coins of five eurocent do you have ?"'
[04](01, 69)-(01, 70): RPAR(OP) ')'
[04](01, 70)-(01, 71): RPAR(OP) ')'
[04](01, 71)-(01, 72): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 02): NAME(NAME) 'r3'
[05](01, 03)-(01, 04): EQUAL(OP) '='
[05](01, 05)-(01, 08): NAME(NAME) 'int'
[05](01, 08)-(01, 09): LPAR(OP) '('
[05](01, 09)-(01, 18): NAME(NAME) 'response3'
[05](01, 18)-(01, 19): RPAR(OP) ')'
[05](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 09): NAME(NAME) 'response4'
[06](01, 10)-(01, 11): EQUAL(OP) '='
[06](01, 12)-(01, 15): NAME(NAME) 'int'
[06](01, 15)-(01, 16): LPAR(OP) '('
[06](01, 16)-(01, 21): NAME(NAME) 'input'
[06](01, 21)-(01, 22): LPAR(OP) '('
[06](01, 22)-(01, 68): STRING(STRING) '"How many coins of ten eurocent do you have ?"'
[06](01, 68)-(01, 69): RPAR(OP) ')'
[06](01, 69)-(01, 70): RPAR(OP) ')'
[06](01, 70)-(01, 71): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 02): NAME(NAME) 'r4'
[07](01, 03)-(01, 04): EQUAL(OP) '='
[07](01, 05)-(01, 08): NAME(NAME) 'int'
[07](01, 08)-(01, 09): LPAR(OP) '('
[07](01, 09)-(01, 18): NAME(NAME) 'response4'
[07](01, 18)-(01, 19): RPAR(OP) ')'
[07](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 09): NAME(NAME) 'response5'
[08](01, 10)-(01, 11): EQUAL(OP) '='
[08](01, 12)-(01, 15): NAME(NAME) 'int'
[08](01, 15)-(01, 16): LPAR(OP) '('
[08](01, 16)-(01, 21): NAME(NAME) 'input'
[08](01, 21)-(01, 22): LPAR(OP) '('
[08](01, 22)-(01, 72): STRING(STRING) '"How many conins of twenty eurocent do you have ?"'
[08](01, 72)-(01, 73): RPAR(OP) ')'
[08](01, 73)-(01, 74): RPAR(OP) ')'
[08](01, 74)-(01, 75): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 02): NAME(NAME) 'r5'
[09](01, 03)-(01, 04): EQUAL(OP) '='
[09](01, 05)-(01, 08): NAME(NAME) 'int'
[09](01, 08)-(01, 09): LPAR(OP) '('
[09](01, 09)-(01, 18): NAME(NAME) 'response5'
[09](01, 18)-(01, 19): RPAR(OP) ')'
[09](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 05): NAME(NAME) 'Total'
[10](01, 06)-(01, 07): EQUAL(OP) '='
[10](01, 08)-(01, 10): NAME(NAME) 'r1'
[10](01, 10)-(01, 11): STAR(OP) '*'
[10](01, 11)-(01, 15): NUMBER(NUMBER) '0.01'
[10](01, 16)-(01, 17): PLUS(OP) '+'
[10](01, 18)-(01, 20): NAME(NAME) 'r2'
[10](01, 20)-(01, 21): STAR(OP) '*'
[10](01, 21)-(01, 25): NUMBER(NUMBER) '0.02'
[10](01, 26)-(01, 27): PLUS(OP) '+'
[10](01, 28)-(01, 30): NAME(NAME) 'r3'
[10](01, 30)-(01, 31): STAR(OP) '*'
[10](01, 31)-(01, 35): NUMBER(NUMBER) '0.05'
[10](01, 36)-(01, 37): PLUS(OP) '+'
[10](01, 38)-(01, 40): NAME(NAME) 'r4'
[10](01, 40)-(01, 41): STAR(OP) '*'
[10](01, 41)-(01, 44): NUMBER(NUMBER) '0.1'
[10](01, 45)-(01, 46): PLUS(OP) '+'
[10](01, 47)-(01, 49): NAME(NAME) 'r5'
[10](01, 49)-(01, 50): STAR(OP) '*'
[10](01, 50)-(01, 53): NUMBER(NUMBER) '0.2'
[10](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 05): NAME(NAME) 'print'
[11](01, 05)-(01, 06): LPAR(OP) '('
[11](01, 06)-(01, 17): STRING(STRING) '"You have "'
[11](01, 17)-(01, 18): COMMA(OP) ','
[11](01, 19)-(01, 24): NAME(NAME) 'Total'
[11](01, 24)-(01, 25): COMMA(OP) ','
[11](01, 26)-(01, 34): STRING(STRING) '" euro!"'
[11](01, 34)-(01, 35): COMMA(OP) ','
[11](01, 36)-(01, 39): NAME(NAME) 'sep'
[11](01, 39)-(01, 40): EQUAL(OP) '='
[11](01, 40)-(01, 42): STRING(STRING) '""'
[11](01, 42)-(01, 43): RPAR(OP) ')'
[11](01, 43)-(01, 44): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

