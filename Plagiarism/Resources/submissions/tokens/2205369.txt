[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 's'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 12): STRING(STRING) '""'
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 't'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 05): NAME(NAME) 's'
[01](01, 05)-(01, 06): DOT(OP) '.'
[01](01, 06)-(01, 11): NAME(NAME) 'split'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 13): RPAR(OP) ')'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'for'
[03](01, 04)-(01, 05): NAME(NAME) 'i'
[03](01, 06)-(01, 08): NAME(NAME) 'in'
[03](01, 09)-(01, 10): NAME(NAME) 't'
[03](01, 10)-(01, 11): COLON(OP) ':'
[03](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 13): NAME(NAME) 'newstring'
[04](01, 14)-(01, 15): EQUAL(OP) '='
[04](01, 16)-(01, 18): STRING(STRING) '""'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 09): NAME(NAME) 'j'
[05](01, 10)-(01, 12): NAME(NAME) 'in'
[05](01, 13)-(01, 18): NAME(NAME) 'range'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 22): NAME(NAME) 'len'
[05](01, 22)-(01, 23): LPAR(OP) '('
[05](01, 23)-(01, 24): NAME(NAME) 'i'
[05](01, 24)-(01, 25): RPAR(OP) ')'
[05](01, 25)-(01, 26): RPAR(OP) ')'
[05](01, 26)-(01, 27): COLON(OP) ':'
[05](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 14): STRING(STRING) '"A"'
[06](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[06](01, 18)-(01, 19): NAME(NAME) 'i'
[06](01, 19)-(01, 20): LSQB(OP) '['
[06](01, 20)-(01, 21): NAME(NAME) 'j'
[06](01, 21)-(01, 22): RSQB(OP) ']'
[06](01, 23)-(01, 25): LESSEQUAL(OP) '<='
[06](01, 27)-(01, 30): STRING(STRING) '"Z"'
[06](01, 31)-(01, 33): NAME(NAME) 'or'
[06](01, 34)-(01, 37): STRING(STRING) '"a"'
[06](01, 38)-(01, 40): LESSEQUAL(OP) '<='
[06](01, 41)-(01, 42): NAME(NAME) 'i'
[06](01, 42)-(01, 43): LSQB(OP) '['
[06](01, 43)-(01, 44): NAME(NAME) 'j'
[06](01, 44)-(01, 45): RSQB(OP) ']'
[06](01, 46)-(01, 48): LESSEQUAL(OP) '<='
[06](01, 49)-(01, 52): STRING(STRING) '"z"'
[06](01, 52)-(01, 53): COLON(OP) ':'
[06](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 21): NAME(NAME) 'newstring'
[07](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[07](01, 25)-(01, 26): NAME(NAME) 'i'
[07](01, 26)-(01, 27): LSQB(OP) '['
[07](01, 27)-(01, 28): NAME(NAME) 'j'
[07](01, 28)-(01, 29): RSQB(OP) ']'
[07](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 06): NAME(NAME) 'if'
[08](01, 07)-(01, 16): NAME(NAME) 'newstring'
[08](01, 17)-(01, 19): NOTEQUAL(OP) '!='
[08](01, 20)-(01, 22): STRING(STRING) '""'
[08](01, 22)-(01, 23): COLON(OP) ':'
[08](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 13): NAME(NAME) 'print'
[09](01, 13)-(01, 14): LPAR(OP) '('
[09](01, 14)-(01, 23): NAME(NAME) 'newstring'
[09](01, 23)-(01, 24): COMMA(OP) ','
[09](01, 25)-(01, 28): NAME(NAME) 'len'
[09](01, 28)-(01, 29): LPAR(OP) '('
[09](01, 29)-(01, 38): NAME(NAME) 'newstring'
[09](01, 38)-(01, 39): RPAR(OP) ')'
[09](01, 39)-(01, 40): RPAR(OP) ')'
[09](01, 40)-(01, 41): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

