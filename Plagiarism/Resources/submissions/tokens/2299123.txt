[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'matrix'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 04)-(01, 19): COMMENT(COMMENT) '#oneven checken'
[01](01, 19)-(01, 20): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 10): NAME(NAME) 'lengte'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 13)-(01, 16): NAME(NAME) 'len'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 23): NAME(NAME) 'matrix'
[02](01, 23)-(01, 24): RPAR(OP) ')'
[02](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 13): NAME(NAME) 'lengte'
[03](01, 14)-(01, 15): PERCENT(OP) '%'
[03](01, 16)-(01, 17): NUMBER(NUMBER) '2'
[03](01, 18)-(01, 20): EQEQUAL(OP) '=='
[03](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[03](01, 21)-(01, 22): COLON(OP) ':'
[03](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 20): NAME(NAME) 'False'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 10): NAME(NAME) 'el'
[05](01, 11)-(01, 13): NAME(NAME) 'in'
[05](01, 14)-(01, 20): NAME(NAME) 'matrix'
[05](01, 20)-(01, 21): COLON(OP) ':'
[05](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 14): NAME(NAME) 'len'
[06](01, 14)-(01, 15): LPAR(OP) '('
[06](01, 15)-(01, 17): NAME(NAME) 'el'
[06](01, 17)-(01, 18): RPAR(OP) ')'
[06](01, 19)-(01, 21): NOTEQUAL(OP) '!='
[06](01, 22)-(01, 28): NAME(NAME) 'lengte'
[06](01, 28)-(01, 29): COLON(OP) ':'
[06](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'return'
[07](01, 19)-(01, 24): NAME(NAME) 'False'
[07](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 04)-(01, 66): COMMENT(COMMENT) '# berekent de sommen van de rijen en vgl + unieke el bijvoegen'
[10](01, 66)-(01, 67): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 13): NAME(NAME) 'unieke_el'
[11](01, 14)-(01, 15): EQUAL(OP) '='
[11](01, 16)-(01, 17): LSQB(OP) '['
[11](01, 17)-(01, 18): RSQB(OP) ']'
[11](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 10): NAME(NAME) 'lengte'
[12](01, 11)-(01, 12): EQUAL(OP) '='
[12](01, 13)-(01, 16): NAME(NAME) 'len'
[12](01, 16)-(01, 17): LPAR(OP) '('
[12](01, 17)-(01, 23): NAME(NAME) 'matrix'
[12](01, 23)-(01, 24): LSQB(OP) '['
[12](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[12](01, 25)-(01, 26): RSQB(OP) ']'
[12](01, 26)-(01, 27): RPAR(OP) ')'
[12](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 10): NAME(NAME) 'sommen'
[13](01, 11)-(01, 12): EQUAL(OP) '='
[13](01, 13)-(01, 14): LSQB(OP) '['
[13](01, 14)-(01, 15): RSQB(OP) ']'
[13](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 07): NAME(NAME) 'for'
[14](01, 08)-(01, 10): NAME(NAME) 'el'
[14](01, 11)-(01, 13): NAME(NAME) 'in'
[14](01, 14)-(01, 19): NAME(NAME) 'range'
[14](01, 19)-(01, 20): LPAR(OP) '('
[14](01, 20)-(01, 26): NAME(NAME) 'lengte'
[14](01, 26)-(01, 27): RPAR(OP) ')'
[14](01, 27)-(01, 28): COLON(OP) ':'
[14](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 11): NAME(NAME) 'som'
[15](01, 12)-(01, 13): EQUAL(OP) '='
[15](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[15](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 11): NAME(NAME) 'for'
[16](01, 12)-(01, 17): NAME(NAME) 'index'
[16](01, 18)-(01, 20): NAME(NAME) 'in'
[16](01, 21)-(01, 26): NAME(NAME) 'range'
[16](01, 26)-(01, 27): LPAR(OP) '('
[16](01, 27)-(01, 33): NAME(NAME) 'lengte'
[16](01, 33)-(01, 34): RPAR(OP) ')'
[16](01, 34)-(01, 35): COLON(OP) ':'
[16](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 14): NAME(NAME) 'if'
[17](01, 15)-(01, 21): NAME(NAME) 'matrix'
[17](01, 21)-(01, 22): LSQB(OP) '['
[17](01, 22)-(01, 24): NAME(NAME) 'el'
[17](01, 24)-(01, 25): RSQB(OP) ']'
[17](01, 25)-(01, 26): LSQB(OP) '['
[17](01, 26)-(01, 31): NAME(NAME) 'index'
[17](01, 31)-(01, 32): RSQB(OP) ']'
[17](01, 33)-(01, 35): NAME(NAME) 'in'
[17](01, 36)-(01, 45): NAME(NAME) 'unieke_el'
[17](01, 45)-(01, 46): COLON(OP) ':'
[17](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 22): NAME(NAME) 'return'
[18](01, 23)-(01, 28): NAME(NAME) 'False'
[18](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 15): NAME(NAME) 'som'
[19](01, 16)-(01, 17): EQUAL(OP) '='
[19](01, 18)-(01, 21): NAME(NAME) 'som'
[19](01, 22)-(01, 23): PLUS(OP) '+'
[19](01, 24)-(01, 30): NAME(NAME) 'matrix'
[19](01, 30)-(01, 31): LSQB(OP) '['
[19](01, 31)-(01, 33): NAME(NAME) 'el'
[19](01, 33)-(01, 34): RSQB(OP) ']'
[19](01, 34)-(01, 35): LSQB(OP) '['
[19](01, 35)-(01, 40): NAME(NAME) 'index'
[19](01, 40)-(01, 41): RSQB(OP) ']'
[19](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 21): NAME(NAME) 'unieke_el'
[20](01, 21)-(01, 22): DOT(OP) '.'
[20](01, 22)-(01, 28): NAME(NAME) 'append'
[20](01, 28)-(01, 29): LPAR(OP) '('
[20](01, 29)-(01, 35): NAME(NAME) 'matrix'
[20](01, 35)-(01, 36): LSQB(OP) '['
[20](01, 36)-(01, 38): NAME(NAME) 'el'
[20](01, 38)-(01, 39): RSQB(OP) ']'
[20](01, 39)-(01, 40): LSQB(OP) '['
[20](01, 40)-(01, 45): NAME(NAME) 'index'
[20](01, 45)-(01, 46): RSQB(OP) ']'
[20](01, 46)-(01, 47): RPAR(OP) ')'
[20](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 07): NAME(NAME) 'for'
[22](01, 08)-(01, 17): NAME(NAME) 'som_index'
[22](01, 18)-(01, 20): NAME(NAME) 'in'
[22](01, 21)-(01, 26): NAME(NAME) 'range'
[22](01, 26)-(01, 27): LPAR(OP) '('
[22](01, 27)-(01, 30): NAME(NAME) 'len'
[22](01, 30)-(01, 31): LPAR(OP) '('
[22](01, 31)-(01, 37): NAME(NAME) 'sommen'
[22](01, 37)-(01, 38): RPAR(OP) ')'
[22](01, 38)-(01, 39): MINUS(OP) '-'
[22](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[22](01, 40)-(01, 41): RPAR(OP) ')'
[22](01, 41)-(01, 42): COLON(OP) ':'
[22](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 10): NAME(NAME) 'if'
[23](01, 11)-(01, 17): NAME(NAME) 'sommen'
[23](01, 17)-(01, 18): LSQB(OP) '['
[23](01, 18)-(01, 27): NAME(NAME) 'som_index'
[23](01, 27)-(01, 28): RSQB(OP) ']'
[23](01, 29)-(01, 31): NOTEQUAL(OP) '!='
[23](01, 32)-(01, 38): NAME(NAME) 'sommen'
[23](01, 38)-(01, 39): LSQB(OP) '['
[23](01, 39)-(01, 48): NAME(NAME) 'som_index'
[23](01, 48)-(01, 49): PLUS(OP) '+'
[23](01, 49)-(01, 50): NUMBER(NUMBER) '1'
[23](01, 50)-(01, 51): RSQB(OP) ']'
[23](01, 51)-(01, 52): COLON(OP) ':'
[23](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): INDENT(INDENT) '            '
[24](01, 12)-(01, 18): NAME(NAME) 'return'
[24](01, 19)-(01, 24): NAME(NAME) 'False'
[24](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 04)-(01, 23): COMMENT(COMMENT) '#diagonaal nakijken'
[26](01, 23)-(01, 24): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 11): NAME(NAME) 'dia_som'
[27](01, 12)-(01, 13): EQUAL(OP) '='
[27](01, 14)-(01, 15): LSQB(OP) '['
[27](01, 15)-(01, 16): RSQB(OP) ']'
[27](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 07): NAME(NAME) 'for'
[28](01, 08)-(01, 11): NAME(NAME) 'mat'
[28](01, 12)-(01, 14): NAME(NAME) 'in'
[28](01, 15)-(01, 20): NAME(NAME) 'range'
[28](01, 20)-(01, 21): LPAR(OP) '('
[28](01, 21)-(01, 27): NAME(NAME) 'lengte'
[28](01, 27)-(01, 28): RPAR(OP) ')'
[28](01, 28)-(01, 29): COLON(OP) ':'
[28](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 15): NAME(NAME) 'dia_som'
[29](01, 16)-(01, 17): EQUAL(OP) '='
[29](01, 18)-(01, 25): NAME(NAME) 'dia_som'
[29](01, 26)-(01, 27): PLUS(OP) '+'
[29](01, 28)-(01, 34): NAME(NAME) 'matrix'
[29](01, 34)-(01, 35): LSQB(OP) '['
[29](01, 35)-(01, 38): NAME(NAME) 'mat'
[29](01, 38)-(01, 39): RSQB(OP) ']'
[29](01, 39)-(01, 40): LSQB(OP) '['
[29](01, 40)-(01, 46): NAME(NAME) 'lengte'
[29](01, 46)-(01, 47): MINUS(OP) '-'
[29](01, 47)-(01, 48): NUMBER(NUMBER) '1'
[29](01, 48)-(01, 49): MINUS(OP) '-'
[29](01, 49)-(01, 52): NAME(NAME) 'mat'
[29](01, 52)-(01, 53): RSQB(OP) ']'
[29](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 07): NAME(NAME) 'for'
[30](01, 08)-(01, 13): NAME(NAME) 'index'
[30](01, 14)-(01, 16): NAME(NAME) 'in'
[30](01, 17)-(01, 22): NAME(NAME) 'range'
[30](01, 22)-(01, 23): LPAR(OP) '('
[30](01, 23)-(01, 26): NAME(NAME) 'len'
[30](01, 26)-(01, 27): LPAR(OP) '('
[30](01, 27)-(01, 34): NAME(NAME) 'dia_som'
[30](01, 34)-(01, 35): RPAR(OP) ')'
[30](01, 36)-(01, 37): MINUS(OP) '-'
[30](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[30](01, 39)-(01, 40): RPAR(OP) ')'
[30](01, 40)-(01, 41): COLON(OP) ':'
[30](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 10): NAME(NAME) 'if'
[31](01, 11)-(01, 18): NAME(NAME) 'dia_som'
[31](01, 18)-(01, 19): LSQB(OP) '['
[31](01, 19)-(01, 24): NAME(NAME) 'index'
[31](01, 24)-(01, 25): RSQB(OP) ']'
[31](01, 26)-(01, 28): NOTEQUAL(OP) '!='
[31](01, 29)-(01, 36): NAME(NAME) 'dia_som'
[31](01, 36)-(01, 37): LSQB(OP) '['
[31](01, 37)-(01, 42): NAME(NAME) 'index'
[31](01, 43)-(01, 44): PLUS(OP) '+'
[31](01, 45)-(01, 46): NUMBER(NUMBER) '1'
[31](01, 46)-(01, 47): RSQB(OP) ']'
[31](01, 47)-(01, 48): COLON(OP) ':'
[31](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 18): NAME(NAME) 'return'
[32](01, 19)-(01, 24): NAME(NAME) 'False'
[32](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 10): NAME(NAME) 'return'
[33](01, 11)-(01, 15): NAME(NAME) 'True'
[33](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 01): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

