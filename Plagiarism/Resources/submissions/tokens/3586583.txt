[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 07): NAME(NAME) 'stringA'
[00](01, 08)-(01, 09): EQUAL(OP) '='
[00](01, 10)-(01, 15): NAME(NAME) 'input'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 17): RPAR(OP) ')'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 07): NAME(NAME) 'stringB'
[01](01, 08)-(01, 09): EQUAL(OP) '='
[01](01, 10)-(01, 15): NAME(NAME) 'input'
[01](01, 15)-(01, 16): LPAR(OP) '('
[01](01, 16)-(01, 17): RPAR(OP) ')'
[01](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 16): NAME(NAME) 'alphabetLocation'
[03](01, 17)-(01, 18): EQUAL(OP) '='
[03](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[03](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 06): NAME(NAME) 'letter'
[04](01, 07)-(01, 08): EQUAL(OP) '='
[04](01, 09)-(01, 11): NUMBER(NUMBER) '97'
[04](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): NAME(NAME) 'list'
[06](01, 05)-(01, 06): EQUAL(OP) '='
[06](01, 07)-(01, 08): LSQB(OP) '['
[06](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[06](01, 09)-(01, 10): COMMA(OP) ','
[06](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[06](01, 12)-(01, 13): COMMA(OP) ','
[06](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[06](01, 15)-(01, 16): COMMA(OP) ','
[06](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[06](01, 18)-(01, 19): COMMA(OP) ','
[06](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[06](01, 21)-(01, 22): COMMA(OP) ','
[06](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[06](01, 24)-(01, 25): COMMA(OP) ','
[06](01, 26)-(01, 27): NUMBER(NUMBER) '0'
[06](01, 27)-(01, 28): COMMA(OP) ','
[06](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[06](01, 30)-(01, 31): COMMA(OP) ','
[06](01, 32)-(01, 33): NUMBER(NUMBER) '0'
[06](01, 33)-(01, 34): COMMA(OP) ','
[06](01, 35)-(01, 36): NUMBER(NUMBER) '0'
[06](01, 36)-(01, 37): COMMA(OP) ','
[06](01, 38)-(01, 39): NUMBER(NUMBER) '0'
[06](01, 39)-(01, 40): COMMA(OP) ','
[06](01, 41)-(01, 42): NUMBER(NUMBER) '0'
[06](01, 42)-(01, 43): COMMA(OP) ','
[06](01, 44)-(01, 45): NUMBER(NUMBER) '0'
[06](01, 45)-(01, 46): COMMA(OP) ','
[06](01, 47)-(01, 48): NUMBER(NUMBER) '0'
[06](01, 48)-(01, 49): COMMA(OP) ','
[06](01, 50)-(01, 51): NUMBER(NUMBER) '0'
[06](01, 51)-(01, 52): COMMA(OP) ','
[06](01, 53)-(01, 54): NUMBER(NUMBER) '0'
[06](01, 54)-(01, 55): COMMA(OP) ','
[06](01, 56)-(01, 57): NUMBER(NUMBER) '0'
[06](01, 57)-(01, 58): COMMA(OP) ','
[06](01, 59)-(01, 60): NUMBER(NUMBER) '0'
[06](01, 60)-(01, 61): COMMA(OP) ','
[06](01, 62)-(01, 63): NUMBER(NUMBER) '0'
[06](01, 63)-(01, 64): COMMA(OP) ','
[06](01, 65)-(01, 66): NUMBER(NUMBER) '0'
[06](01, 66)-(01, 67): COMMA(OP) ','
[06](01, 68)-(01, 69): NUMBER(NUMBER) '0'
[06](01, 69)-(01, 70): COMMA(OP) ','
[06](01, 71)-(01, 72): NUMBER(NUMBER) '0'
[06](01, 72)-(01, 73): COMMA(OP) ','
[06](01, 74)-(01, 75): NUMBER(NUMBER) '0'
[06](01, 75)-(01, 76): COMMA(OP) ','
[06](01, 77)-(01, 78): NUMBER(NUMBER) '0'
[06](01, 78)-(01, 79): COMMA(OP) ','
[06](01, 80)-(01, 81): NUMBER(NUMBER) '0'
[06](01, 81)-(01, 82): COMMA(OP) ','
[06](01, 83)-(01, 84): NUMBER(NUMBER) '0'
[06](01, 84)-(01, 85): RSQB(OP) ']'
[06](01, 85)-(01, 86): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 03): NAME(NAME) 'for'
[08](01, 04)-(01, 05): NAME(NAME) 'i'
[08](01, 06)-(01, 08): NAME(NAME) 'in'
[08](01, 09)-(01, 14): NAME(NAME) 'range'
[08](01, 14)-(01, 15): LPAR(OP) '('
[08](01, 15)-(01, 18): NAME(NAME) 'len'
[08](01, 18)-(01, 19): LPAR(OP) '('
[08](01, 19)-(01, 26): NAME(NAME) 'stringA'
[08](01, 26)-(01, 27): RPAR(OP) ')'
[08](01, 27)-(01, 28): RPAR(OP) ')'
[08](01, 28)-(01, 29): COLON(OP) ':'
[08](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 06): NAME(NAME) 'if'
[09](01, 07)-(01, 14): NAME(NAME) 'stringA'
[09](01, 14)-(01, 15): LSQB(OP) '['
[09](01, 15)-(01, 16): NAME(NAME) 'i'
[09](01, 16)-(01, 17): RSQB(OP) ']'
[09](01, 18)-(01, 20): NOTEQUAL(OP) '!='
[09](01, 21)-(01, 24): STRING(STRING) '" "'
[09](01, 24)-(01, 25): COLON(OP) ':'
[09](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 24): NAME(NAME) 'alphabetLocation'
[10](01, 25)-(01, 26): EQUAL(OP) '='
[10](01, 27)-(01, 30): NAME(NAME) 'ord'
[10](01, 30)-(01, 31): LPAR(OP) '('
[10](01, 31)-(01, 38): NAME(NAME) 'stringA'
[10](01, 38)-(01, 39): LSQB(OP) '['
[10](01, 39)-(01, 40): NAME(NAME) 'i'
[10](01, 40)-(01, 41): RSQB(OP) ']'
[10](01, 41)-(01, 42): RPAR(OP) ')'
[10](01, 43)-(01, 44): MINUS(OP) '-'
[10](01, 45)-(01, 47): NUMBER(NUMBER) '97'
[10](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 12): NAME(NAME) 'list'
[11](01, 12)-(01, 13): LSQB(OP) '['
[11](01, 13)-(01, 29): NAME(NAME) 'alphabetLocation'
[11](01, 29)-(01, 30): RSQB(OP) ']'
[11](01, 31)-(01, 33): PLUSEQUAL(OP) '+='
[11](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[11](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 08)-(01, 09): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 03): NAME(NAME) 'for'
[13](01, 04)-(01, 05): NAME(NAME) 'i'
[13](01, 06)-(01, 08): NAME(NAME) 'in'
[13](01, 09)-(01, 14): NAME(NAME) 'range'
[13](01, 14)-(01, 15): LPAR(OP) '('
[13](01, 15)-(01, 18): NAME(NAME) 'len'
[13](01, 18)-(01, 19): LPAR(OP) '('
[13](01, 19)-(01, 26): NAME(NAME) 'stringB'
[13](01, 26)-(01, 27): RPAR(OP) ')'
[13](01, 27)-(01, 28): RPAR(OP) ')'
[13](01, 28)-(01, 29): COLON(OP) ':'
[13](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 06): NAME(NAME) 'if'
[14](01, 07)-(01, 14): NAME(NAME) 'stringB'
[14](01, 14)-(01, 15): LSQB(OP) '['
[14](01, 15)-(01, 16): NAME(NAME) 'i'
[14](01, 16)-(01, 17): RSQB(OP) ']'
[14](01, 18)-(01, 20): NOTEQUAL(OP) '!='
[14](01, 21)-(01, 24): STRING(STRING) '" "'
[14](01, 24)-(01, 25): COLON(OP) ':'
[14](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 24): NAME(NAME) 'alphabetLocation'
[15](01, 25)-(01, 26): EQUAL(OP) '='
[15](01, 27)-(01, 30): NAME(NAME) 'ord'
[15](01, 30)-(01, 31): LPAR(OP) '('
[15](01, 31)-(01, 38): NAME(NAME) 'stringB'
[15](01, 38)-(01, 39): LSQB(OP) '['
[15](01, 39)-(01, 40): NAME(NAME) 'i'
[15](01, 40)-(01, 41): RSQB(OP) ']'
[15](01, 41)-(01, 42): RPAR(OP) ')'
[15](01, 43)-(01, 44): MINUS(OP) '-'
[15](01, 45)-(01, 47): NUMBER(NUMBER) '97'
[15](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 12): NAME(NAME) 'list'
[16](01, 12)-(01, 13): LSQB(OP) '['
[16](01, 13)-(01, 29): NAME(NAME) 'alphabetLocation'
[16](01, 29)-(01, 30): RSQB(OP) ']'
[16](01, 31)-(01, 33): MINEQUAL(OP) '-='
[16](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[16](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 04)-(01, 05): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 05): NAME(NAME) 'while'
[18](01, 06)-(01, 07): NAME(NAME) 'i'
[18](01, 07)-(01, 08): PLUS(OP) '+'
[18](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[18](01, 10)-(01, 12): NOTEQUAL(OP) '!='
[18](01, 13)-(01, 16): NAME(NAME) 'len'
[18](01, 16)-(01, 17): LPAR(OP) '('
[18](01, 17)-(01, 21): NAME(NAME) 'list'
[18](01, 21)-(01, 22): RPAR(OP) ')'
[18](01, 22)-(01, 23): COLON(OP) ':'
[18](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 06): NAME(NAME) 'if'
[19](01, 07)-(01, 11): NAME(NAME) 'list'
[19](01, 11)-(01, 12): LSQB(OP) '['
[19](01, 12)-(01, 13): NAME(NAME) 'i'
[19](01, 13)-(01, 14): RSQB(OP) ']'
[19](01, 15)-(01, 17): NOTEQUAL(OP) '!='
[19](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[19](01, 19)-(01, 20): COLON(OP) ':'
[19](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 13): NAME(NAME) 'print'
[20](01, 13)-(01, 14): LPAR(OP) '('
[20](01, 14)-(01, 21): NAME(NAME) 'stringA'
[20](01, 21)-(01, 22): COMMA(OP) ','
[20](01, 23)-(01, 28): STRING(STRING) '"and"'
[20](01, 28)-(01, 29): COMMA(OP) ','
[20](01, 30)-(01, 37): NAME(NAME) 'stringB'
[20](01, 37)-(01, 38): COMMA(OP) ','
[20](01, 39)-(01, 57): STRING(STRING) '"are not anagrams"'
[20](01, 57)-(01, 58): COMMA(OP) ','
[20](01, 59)-(01, 62): NAME(NAME) 'sep'
[20](01, 62)-(01, 63): EQUAL(OP) '='
[20](01, 63)-(01, 66): STRING(STRING) '" "'
[20](01, 66)-(01, 67): RPAR(OP) ')'
[20](01, 67)-(01, 68): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 13): NAME(NAME) 'break'
[21](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 06): NAME(NAME) 'if'
[22](01, 07)-(01, 08): NAME(NAME) 'i'
[22](01, 09)-(01, 11): EQEQUAL(OP) '=='
[22](01, 12)-(01, 15): NAME(NAME) 'len'
[22](01, 15)-(01, 16): LPAR(OP) '('
[22](01, 16)-(01, 20): NAME(NAME) 'list'
[22](01, 20)-(01, 21): RPAR(OP) ')'
[22](01, 21)-(01, 22): MINUS(OP) '-'
[22](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[22](01, 23)-(01, 24): COLON(OP) ':'
[22](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 13): NAME(NAME) 'print'
[23](01, 13)-(01, 14): LPAR(OP) '('
[23](01, 14)-(01, 21): NAME(NAME) 'stringA'
[23](01, 21)-(01, 22): COMMA(OP) ','
[23](01, 23)-(01, 28): STRING(STRING) '"and"'
[23](01, 28)-(01, 29): COMMA(OP) ','
[23](01, 30)-(01, 37): NAME(NAME) 'stringB'
[23](01, 37)-(01, 38): COMMA(OP) ','
[23](01, 39)-(01, 53): STRING(STRING) '"are anagrams"'
[23](01, 53)-(01, 54): COMMA(OP) ','
[23](01, 55)-(01, 58): NAME(NAME) 'sep'
[23](01, 58)-(01, 59): EQUAL(OP) '='
[23](01, 59)-(01, 62): STRING(STRING) '" "'
[23](01, 62)-(01, 63): RPAR(OP) ')'
[23](01, 63)-(01, 64): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 13): NAME(NAME) 'break'
[24](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 08)-(01, 09): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 05): NAME(NAME) 'i'
[26](01, 06)-(01, 08): PLUSEQUAL(OP) '+='
[26](01, 09)-(01, 10): NUMBER(NUMBER) '1'
[26](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 04)-(01, 05): NL(NL) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

