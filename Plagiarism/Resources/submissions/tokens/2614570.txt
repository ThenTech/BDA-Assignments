[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'input'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 16): STRING(STRING) '""'
[00](01, 16)-(01, 17): RPAR(OP) ')'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'string'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 11): STRING(STRING) '""'
[01](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 06): NAME(NAME) 'lengte'
[02](01, 07)-(01, 08): EQUAL(OP) '='
[02](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[02](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'woord'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 10): STRING(STRING) '""'
[03](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 06): NAME(NAME) 'spatie'
[04](01, 07)-(01, 08): EQUAL(OP) '='
[04](01, 09)-(01, 14): NAME(NAME) 'False'
[04](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'for'
[05](01, 04)-(01, 05): NAME(NAME) 'i'
[05](01, 06)-(01, 08): NAME(NAME) 'in'
[05](01, 09)-(01, 14): NAME(NAME) 'input'
[05](01, 14)-(01, 15): COLON(OP) ':'
[05](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 06): NAME(NAME) 'if'
[06](01, 07)-(01, 08): LPAR(OP) '('
[06](01, 08)-(01, 09): NAME(NAME) 'i'
[06](01, 10)-(01, 12): GREATEREQUAL(OP) '>='
[06](01, 13)-(01, 16): STRING(STRING) '"a"'
[06](01, 17)-(01, 20): NAME(NAME) 'and'
[06](01, 21)-(01, 22): NAME(NAME) 'i'
[06](01, 23)-(01, 25): LESSEQUAL(OP) '<='
[06](01, 26)-(01, 29): STRING(STRING) '"z"'
[06](01, 29)-(01, 30): RPAR(OP) ')'
[06](01, 31)-(01, 33): NAME(NAME) 'or'
[06](01, 34)-(01, 35): LPAR(OP) '('
[06](01, 35)-(01, 36): NAME(NAME) 'i'
[06](01, 37)-(01, 39): GREATEREQUAL(OP) '>='
[06](01, 40)-(01, 43): STRING(STRING) '"A"'
[06](01, 44)-(01, 47): NAME(NAME) 'and'
[06](01, 48)-(01, 49): NAME(NAME) 'i'
[06](01, 50)-(01, 52): LESSEQUAL(OP) '<='
[06](01, 53)-(01, 56): STRING(STRING) '"Z"'
[06](01, 56)-(01, 57): RPAR(OP) ')'
[06](01, 57)-(01, 58): COLON(OP) ':'
[06](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 14): NAME(NAME) 'string'
[07](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[07](01, 18)-(01, 19): NAME(NAME) 'i'
[07](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 14): NAME(NAME) 'spatie'
[08](01, 15)-(01, 16): EQUAL(OP) '='
[08](01, 17)-(01, 22): NAME(NAME) 'False'
[08](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 08): NAME(NAME) 'elif'
[09](01, 09)-(01, 15): NAME(NAME) 'spatie'
[09](01, 16)-(01, 18): EQEQUAL(OP) '=='
[09](01, 19)-(01, 24): NAME(NAME) 'False'
[09](01, 24)-(01, 25): COLON(OP) ':'
[09](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'spatie'
[10](01, 15)-(01, 16): EQUAL(OP) '='
[10](01, 17)-(01, 21): NAME(NAME) 'True'
[10](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 14): NAME(NAME) 'string'
[11](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[11](01, 18)-(01, 21): STRING(STRING) '" "'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 03): NAME(NAME) 'for'
[12](01, 04)-(01, 05): NAME(NAME) 'i'
[12](01, 06)-(01, 08): NAME(NAME) 'in'
[12](01, 09)-(01, 14): NAME(NAME) 'range'
[12](01, 14)-(01, 15): LPAR(OP) '('
[12](01, 15)-(01, 18): NAME(NAME) 'len'
[12](01, 18)-(01, 19): LPAR(OP) '('
[12](01, 19)-(01, 25): NAME(NAME) 'string'
[12](01, 25)-(01, 26): RPAR(OP) ')'
[12](01, 26)-(01, 27): RPAR(OP) ')'
[12](01, 27)-(01, 28): COLON(OP) ':'
[12](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 06): NAME(NAME) 'if'
[13](01, 07)-(01, 13): NAME(NAME) 'string'
[13](01, 13)-(01, 14): LSQB(OP) '['
[13](01, 14)-(01, 15): NAME(NAME) 'i'
[13](01, 15)-(01, 16): RSQB(OP) ']'
[13](01, 17)-(01, 19): EQEQUAL(OP) '=='
[13](01, 20)-(01, 23): STRING(STRING) '" "'
[13](01, 23)-(01, 24): COLON(OP) ':'
[13](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 13): NAME(NAME) 'print'
[14](01, 13)-(01, 14): LPAR(OP) '('
[14](01, 14)-(01, 19): NAME(NAME) 'woord'
[14](01, 19)-(01, 20): COMMA(OP) ','
[14](01, 21)-(01, 27): NAME(NAME) 'lengte'
[14](01, 27)-(01, 28): RPAR(OP) ')'
[14](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 14): NAME(NAME) 'lengte'
[15](01, 15)-(01, 16): EQUAL(OP) '='
[15](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[15](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 13): NAME(NAME) 'woord'
[16](01, 14)-(01, 15): EQUAL(OP) '='
[16](01, 16)-(01, 18): STRING(STRING) '""'
[16](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 16): NAME(NAME) 'continue'
[17](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 09): NAME(NAME) 'woord'
[18](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[18](01, 13)-(01, 19): NAME(NAME) 'string'
[18](01, 19)-(01, 20): LSQB(OP) '['
[18](01, 20)-(01, 21): NAME(NAME) 'i'
[18](01, 21)-(01, 22): RSQB(OP) ']'
[18](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 10): NAME(NAME) 'lengte'
[19](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[19](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[19](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 06): NAME(NAME) 'if'
[20](01, 07)-(01, 08): NAME(NAME) 'i'
[20](01, 09)-(01, 11): EQEQUAL(OP) '=='
[20](01, 12)-(01, 15): NAME(NAME) 'len'
[20](01, 15)-(01, 16): LPAR(OP) '('
[20](01, 16)-(01, 22): NAME(NAME) 'string'
[20](01, 22)-(01, 23): RPAR(OP) ')'
[20](01, 23)-(01, 24): MINUS(OP) '-'
[20](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[20](01, 25)-(01, 26): COLON(OP) ':'
[20](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 13): NAME(NAME) 'print'
[21](01, 13)-(01, 14): LPAR(OP) '('
[21](01, 14)-(01, 19): NAME(NAME) 'woord'
[21](01, 19)-(01, 20): COMMA(OP) ','
[21](01, 21)-(01, 27): NAME(NAME) 'lengte'
[21](01, 27)-(01, 28): RPAR(OP) ')'
[21](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

