[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'matrix'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 10): NAME(NAME) 'len'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 17): NAME(NAME) 'matrix'
[01](01, 17)-(01, 18): LSQB(OP) '['
[01](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[01](01, 19)-(01, 20): RSQB(OP) ']'
[01](01, 20)-(01, 21): RPAR(OP) ')'
[01](01, 21)-(01, 23): EQEQUAL(OP) '=='
[01](01, 23)-(01, 26): NAME(NAME) 'len'
[01](01, 26)-(01, 27): LPAR(OP) '('
[01](01, 27)-(01, 33): NAME(NAME) 'matrix'
[01](01, 33)-(01, 34): RPAR(OP) ')'
[01](01, 34)-(01, 35): COLON(OP) ':'
[01](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 11): NAME(NAME) 'for'
[02](01, 12)-(01, 13): NAME(NAME) 'i'
[02](01, 14)-(01, 16): NAME(NAME) 'in'
[02](01, 17)-(01, 22): NAME(NAME) 'range'
[02](01, 23)-(01, 24): LPAR(OP) '('
[02](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[02](01, 25)-(01, 26): COMMA(OP) ','
[02](01, 27)-(01, 30): NAME(NAME) 'len'
[02](01, 30)-(01, 31): LPAR(OP) '('
[02](01, 31)-(01, 37): NAME(NAME) 'matrix'
[02](01, 37)-(01, 38): LSQB(OP) '['
[02](01, 38)-(01, 39): NUMBER(NUMBER) '0'
[02](01, 39)-(01, 40): RSQB(OP) ']'
[02](01, 40)-(01, 41): RPAR(OP) ')'
[02](01, 41)-(01, 42): RPAR(OP) ')'
[02](01, 42)-(01, 43): COLON(OP) ':'
[02](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 12): INDENT(INDENT) '            '
[03](01, 12)-(01, 14): NAME(NAME) 'm2'
[03](01, 15)-(01, 16): EQUAL(OP) '='
[03](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[03](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 14): NAME(NAME) 'm3'
[04](01, 15)-(01, 16): EQUAL(OP) '='
[04](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 14): NAME(NAME) 'm4'
[05](01, 15)-(01, 16): EQUAL(OP) '='
[05](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[05](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 14): NAME(NAME) 'm5'
[06](01, 15)-(01, 16): EQUAL(OP) '='
[06](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[06](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 15): NAME(NAME) 'for'
[07](01, 16)-(01, 17): NAME(NAME) 'j'
[07](01, 18)-(01, 20): NAME(NAME) 'in'
[07](01, 21)-(01, 26): NAME(NAME) 'range'
[07](01, 27)-(01, 28): LPAR(OP) '('
[07](01, 28)-(01, 29): NUMBER(NUMBER) '0'
[07](01, 29)-(01, 30): COMMA(OP) ','
[07](01, 31)-(01, 34): NAME(NAME) 'len'
[07](01, 34)-(01, 35): LPAR(OP) '('
[07](01, 35)-(01, 41): NAME(NAME) 'matrix'
[07](01, 41)-(01, 42): LSQB(OP) '['
[07](01, 42)-(01, 43): NUMBER(NUMBER) '0'
[07](01, 43)-(01, 44): RSQB(OP) ']'
[07](01, 44)-(01, 45): RPAR(OP) ')'
[07](01, 45)-(01, 46): RPAR(OP) ')'
[07](01, 46)-(01, 47): COLON(OP) ':'
[07](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 18): NAME(NAME) 'm2'
[08](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[08](01, 22)-(01, 28): NAME(NAME) 'matrix'
[08](01, 29)-(01, 30): LSQB(OP) '['
[08](01, 30)-(01, 31): NAME(NAME) 'i'
[08](01, 31)-(01, 32): RSQB(OP) ']'
[08](01, 32)-(01, 33): LSQB(OP) '['
[08](01, 33)-(01, 34): NAME(NAME) 'j'
[08](01, 34)-(01, 35): RSQB(OP) ']'
[08](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 18): NAME(NAME) 'm3'
[09](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[09](01, 22)-(01, 28): NAME(NAME) 'matrix'
[09](01, 29)-(01, 30): LSQB(OP) '['
[09](01, 30)-(01, 31): NAME(NAME) 'j'
[09](01, 31)-(01, 32): RSQB(OP) ']'
[09](01, 32)-(01, 33): LSQB(OP) '['
[09](01, 33)-(01, 34): NAME(NAME) 'j'
[09](01, 34)-(01, 35): RSQB(OP) ']'
[09](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 18): NAME(NAME) 'm4'
[10](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[10](01, 22)-(01, 28): NAME(NAME) 'matrix'
[10](01, 29)-(01, 30): LSQB(OP) '['
[10](01, 30)-(01, 31): NAME(NAME) 'j'
[10](01, 31)-(01, 32): RSQB(OP) ']'
[10](01, 32)-(01, 33): LSQB(OP) '['
[10](01, 33)-(01, 34): NAME(NAME) 'i'
[10](01, 34)-(01, 35): RSQB(OP) ']'
[10](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 18): NAME(NAME) 'm5'
[11](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[11](01, 22)-(01, 28): NAME(NAME) 'matrix'
[11](01, 29)-(01, 30): LSQB(OP) '['
[11](01, 30)-(01, 33): NAME(NAME) 'len'
[11](01, 33)-(01, 34): LPAR(OP) '('
[11](01, 34)-(01, 40): NAME(NAME) 'matrix'
[11](01, 40)-(01, 41): LSQB(OP) '['
[11](01, 41)-(01, 42): NUMBER(NUMBER) '0'
[11](01, 42)-(01, 43): RSQB(OP) ']'
[11](01, 43)-(01, 44): RPAR(OP) ')'
[11](01, 44)-(01, 45): MINUS(OP) '-'
[11](01, 45)-(01, 46): NUMBER(NUMBER) '1'
[11](01, 46)-(01, 47): MINUS(OP) '-'
[11](01, 47)-(01, 48): NAME(NAME) 'j'
[11](01, 48)-(01, 49): RSQB(OP) ']'
[11](01, 49)-(01, 50): LSQB(OP) '['
[11](01, 50)-(01, 53): NAME(NAME) 'len'
[11](01, 53)-(01, 54): LPAR(OP) '('
[11](01, 54)-(01, 60): NAME(NAME) 'matrix'
[11](01, 60)-(01, 61): LSQB(OP) '['
[11](01, 61)-(01, 62): NUMBER(NUMBER) '0'
[11](01, 62)-(01, 63): RSQB(OP) ']'
[11](01, 63)-(01, 64): RPAR(OP) ')'
[11](01, 64)-(01, 65): MINUS(OP) '-'
[11](01, 65)-(01, 66): NUMBER(NUMBER) '1'
[11](01, 66)-(01, 67): MINUS(OP) '-'
[11](01, 67)-(01, 68): NAME(NAME) 'j'
[11](01, 68)-(01, 69): RSQB(OP) ']'
[11](01, 69)-(01, 70): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 14): NAME(NAME) 'if'
[12](01, 15)-(01, 17): NAME(NAME) 'm2'
[12](01, 18)-(01, 20): NOTEQUAL(OP) '!='
[12](01, 21)-(01, 23): NAME(NAME) 'm3'
[12](01, 23)-(01, 24): COLON(OP) ':'
[12](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 22): NAME(NAME) 'return'
[13](01, 23)-(01, 28): NAME(NAME) 'False'
[13](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 14): NAME(NAME) 'if'
[14](01, 15)-(01, 16): NAME(NAME) 'i'
[14](01, 17)-(01, 19): EQEQUAL(OP) '=='
[14](01, 20)-(01, 23): NAME(NAME) 'len'
[14](01, 23)-(01, 24): LPAR(OP) '('
[14](01, 24)-(01, 30): NAME(NAME) 'matrix'
[14](01, 30)-(01, 31): LSQB(OP) '['
[14](01, 31)-(01, 32): NUMBER(NUMBER) '0'
[14](01, 32)-(01, 33): RSQB(OP) ']'
[14](01, 33)-(01, 34): RPAR(OP) ')'
[14](01, 34)-(01, 35): MINUS(OP) '-'
[14](01, 35)-(01, 36): NUMBER(NUMBER) '1'
[14](01, 36)-(01, 37): COLON(OP) ':'
[14](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 22): NAME(NAME) 'return'
[15](01, 23)-(01, 27): NAME(NAME) 'True'
[15](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 08): NAME(NAME) 'else'
[16](01, 08)-(01, 09): COLON(OP) ':'
[16](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 14): NAME(NAME) 'return'
[17](01, 15)-(01, 20): NAME(NAME) 'False'
[17](01, 20)-(01, 21): NEWLINE(NEWLINE)
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

