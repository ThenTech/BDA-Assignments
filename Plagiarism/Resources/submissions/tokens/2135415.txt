[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'a'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[00](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'b'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[01](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'c'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[02](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'd'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[03](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NAME(NAME) 'e'
[04](01, 02)-(01, 03): EQUAL(OP) '='
[04](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[04](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NAME(NAME) 'f'
[05](01, 02)-(01, 03): EQUAL(OP) '='
[05](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[05](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NAME(NAME) 'g'
[06](01, 02)-(01, 03): EQUAL(OP) '='
[06](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[06](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NAME(NAME) 'h'
[07](01, 02)-(01, 03): EQUAL(OP) '='
[07](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[07](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NAME(NAME) 'i'
[08](01, 02)-(01, 03): EQUAL(OP) '='
[08](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[08](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NAME(NAME) 'j'
[09](01, 02)-(01, 03): EQUAL(OP) '='
[09](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[09](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NAME(NAME) 'k'
[10](01, 02)-(01, 03): EQUAL(OP) '='
[10](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[10](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NAME(NAME) 'l'
[11](01, 02)-(01, 03): EQUAL(OP) '='
[11](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[11](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NAME(NAME) 'm'
[12](01, 02)-(01, 03): EQUAL(OP) '='
[12](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[12](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NAME(NAME) 'n'
[13](01, 02)-(01, 03): EQUAL(OP) '='
[13](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[13](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NAME(NAME) 'o'
[14](01, 02)-(01, 03): EQUAL(OP) '='
[14](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[14](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NAME(NAME) 'p'
[15](01, 02)-(01, 03): EQUAL(OP) '='
[15](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[15](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NAME(NAME) 'q'
[16](01, 02)-(01, 03): EQUAL(OP) '='
[16](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[16](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NAME(NAME) 'r'
[17](01, 02)-(01, 03): EQUAL(OP) '='
[17](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[17](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NAME(NAME) 's'
[18](01, 02)-(01, 03): EQUAL(OP) '='
[18](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[18](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NAME(NAME) 't'
[19](01, 02)-(01, 03): EQUAL(OP) '='
[19](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[19](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NAME(NAME) 'u'
[20](01, 02)-(01, 03): EQUAL(OP) '='
[20](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[20](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NAME(NAME) 'v'
[21](01, 02)-(01, 03): EQUAL(OP) '='
[21](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[21](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NAME(NAME) 'w'
[22](01, 02)-(01, 03): EQUAL(OP) '='
[22](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[22](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NAME(NAME) 'x'
[23](01, 02)-(01, 03): EQUAL(OP) '='
[23](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[23](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NAME(NAME) 'y'
[24](01, 02)-(01, 03): EQUAL(OP) '='
[24](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[24](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NAME(NAME) 'z'
[25](01, 02)-(01, 03): EQUAL(OP) '='
[25](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[25](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 06): NAME(NAME) 'string'
[26](01, 07)-(01, 08): EQUAL(OP) '='
[26](01, 09)-(01, 14): NAME(NAME) 'input'
[26](01, 14)-(01, 15): LPAR(OP) '('
[26](01, 15)-(01, 16): RPAR(OP) ')'
[26](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 05): NAME(NAME) 'while'
[27](01, 06)-(01, 07): NAME(NAME) 'i'
[27](01, 08)-(01, 09): LESS(OP) '<'
[27](01, 10)-(01, 13): NAME(NAME) 'len'
[27](01, 13)-(01, 14): LPAR(OP) '('
[27](01, 14)-(01, 20): NAME(NAME) 'string'
[27](01, 20)-(01, 21): RPAR(OP) ')'
[27](01, 21)-(01, 22): COLON(OP) ':'
[27](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 07): NAME(NAME) 'for'
[28](01, 08)-(01, 12): NAME(NAME) 'test'
[28](01, 13)-(01, 15): NAME(NAME) 'in'
[28](01, 16)-(01, 17): LSQB(OP) '['
[28](01, 17)-(01, 18): NAME(NAME) 'a'
[28](01, 18)-(01, 19): COMMA(OP) ','
[28](01, 20)-(01, 21): NAME(NAME) 'b'
[28](01, 21)-(01, 22): COMMA(OP) ','
[28](01, 23)-(01, 24): NAME(NAME) 'c'
[28](01, 24)-(01, 25): COMMA(OP) ','
[28](01, 26)-(01, 27): NAME(NAME) 'd'
[28](01, 27)-(01, 28): COMMA(OP) ','
[28](01, 29)-(01, 30): NAME(NAME) 'e'
[28](01, 30)-(01, 31): COMMA(OP) ','
[28](01, 32)-(01, 33): NAME(NAME) 'f'
[28](01, 33)-(01, 34): COMMA(OP) ','
[28](01, 35)-(01, 36): NAME(NAME) 'g'
[28](01, 36)-(01, 37): COMMA(OP) ','
[28](01, 38)-(01, 39): NAME(NAME) 'h'
[28](01, 39)-(01, 40): COMMA(OP) ','
[28](01, 41)-(01, 42): NAME(NAME) 'i'
[28](01, 42)-(01, 43): COMMA(OP) ','
[28](01, 44)-(01, 45): NAME(NAME) 'j'
[28](01, 45)-(01, 46): COMMA(OP) ','
[28](01, 47)-(01, 48): NAME(NAME) 'k'
[28](01, 48)-(01, 49): COMMA(OP) ','
[28](01, 50)-(01, 51): NAME(NAME) 'l'
[28](01, 51)-(01, 52): COMMA(OP) ','
[28](01, 53)-(01, 54): NAME(NAME) 'm'
[28](01, 54)-(01, 55): COMMA(OP) ','
[28](01, 56)-(01, 57): NAME(NAME) 'n'
[28](01, 57)-(01, 58): COMMA(OP) ','
[28](01, 59)-(01, 60): NAME(NAME) 'o'
[28](01, 60)-(01, 61): COMMA(OP) ','
[28](01, 62)-(01, 63): NAME(NAME) 'p'
[28](01, 63)-(01, 64): COMMA(OP) ','
[28](01, 65)-(01, 66): NAME(NAME) 'q'
[28](01, 66)-(01, 67): COMMA(OP) ','
[28](01, 68)-(01, 69): NAME(NAME) 'r'
[28](01, 69)-(01, 70): COMMA(OP) ','
[28](01, 71)-(01, 72): NAME(NAME) 's'
[28](01, 72)-(01, 73): COMMA(OP) ','
[28](01, 74)-(01, 75): NAME(NAME) 't'
[28](01, 75)-(01, 76): COMMA(OP) ','
[28](01, 77)-(01, 78): NAME(NAME) 'u'
[28](01, 78)-(01, 79): COMMA(OP) ','
[28](01, 80)-(01, 81): NAME(NAME) 'v'
[28](01, 81)-(01, 82): COMMA(OP) ','
[28](01, 83)-(01, 84): NAME(NAME) 'w'
[28](01, 84)-(01, 85): COMMA(OP) ','
[28](01, 86)-(01, 87): NAME(NAME) 'x'
[28](01, 87)-(01, 88): COMMA(OP) ','
[28](01, 89)-(01, 90): NAME(NAME) 'y'
[28](01, 90)-(01, 91): COMMA(OP) ','
[28](01, 92)-(01, 93): NAME(NAME) 'z'
[28](01, 93)-(01, 94): RSQB(OP) ']'
[28](01, 94)-(01, 95): COLON(OP) ':'
[28](01, 95)-(01, 96): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 10): NAME(NAME) 'if'
[29](01, 11)-(01, 17): NAME(NAME) 'string'
[29](01, 17)-(01, 18): LSQB(OP) '['
[29](01, 18)-(01, 19): NAME(NAME) 'i'
[29](01, 19)-(01, 20): RSQB(OP) ']'
[29](01, 21)-(01, 23): EQEQUAL(OP) '=='
[29](01, 24)-(01, 30): STRING(STRING) '"test"'
[29](01, 30)-(01, 31): COLON(OP) ':'
[29](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 16): NAME(NAME) 'test'
[30](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[30](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[30](01, 21)-(01, 22): NEWLINE(NEWLINE)
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

