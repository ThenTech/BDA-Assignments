[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 07): NAME(NAME) 'alfabet'
[00](01, 08)-(01, 09): EQUAL(OP) '='
[00](01, 10)-(01, 64): STRING(STRING) "'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz'"
[00](01, 64)-(01, 65): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'def'
[02](01, 04)-(01, 08): NAME(NAME) 'find'
[02](01, 08)-(01, 09): LPAR(OP) '('
[02](01, 09)-(01, 10): NAME(NAME) 's'
[02](01, 10)-(01, 11): COMMA(OP) ','
[02](01, 12)-(01, 14): NAME(NAME) 'ch'
[02](01, 14)-(01, 15): RPAR(OP) ')'
[02](01, 15)-(01, 16): COLON(OP) ':'
[02](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 05): NAME(NAME) 'x'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'while'
[04](01, 10)-(01, 11): NAME(NAME) 'x'
[04](01, 12)-(01, 13): LESS(OP) '<'
[04](01, 14)-(01, 17): NAME(NAME) 'len'
[04](01, 17)-(01, 18): LPAR(OP) '('
[04](01, 18)-(01, 19): NAME(NAME) 's'
[04](01, 19)-(01, 20): RPAR(OP) ')'
[04](01, 20)-(01, 21): COLON(OP) ':'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 12): NAME(NAME) 's'
[05](01, 12)-(01, 13): LSQB(OP) '['
[05](01, 13)-(01, 14): NAME(NAME) 'x'
[05](01, 14)-(01, 15): RSQB(OP) ']'
[05](01, 16)-(01, 18): EQEQUAL(OP) '=='
[05](01, 19)-(01, 21): NAME(NAME) 'ch'
[05](01, 21)-(01, 22): COLON(OP) ':'
[05](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 18): NAME(NAME) 'return'
[06](01, 19)-(01, 20): NAME(NAME) 'x'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 09): NAME(NAME) 'x'
[07](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[07](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[07](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 10): NAME(NAME) 'return'
[08](01, 11)-(01, 12): MINUS(OP) '-'
[08](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 03): NAME(NAME) 'def'
[10](01, 04)-(01, 10): NAME(NAME) 'encode'
[10](01, 10)-(01, 11): LPAR(OP) '('
[10](01, 11)-(01, 12): NAME(NAME) 's'
[10](01, 12)-(01, 13): COMMA(OP) ','
[10](01, 14)-(01, 15): NAME(NAME) 'n'
[10](01, 15)-(01, 16): RPAR(OP) ')'
[10](01, 16)-(01, 17): COLON(OP) ':'
[10](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 12): NAME(NAME) 'uitkomst'
[11](01, 13)-(01, 14): EQUAL(OP) '='
[11](01, 14)-(01, 16): STRING(STRING) "''"
[11](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 07): NAME(NAME) 'for'
[12](01, 08)-(01, 14): NAME(NAME) 'letter'
[12](01, 15)-(01, 17): NAME(NAME) 'in'
[12](01, 18)-(01, 19): NAME(NAME) 's'
[12](01, 19)-(01, 20): COLON(OP) ':'
[12](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 17): NAME(NAME) 'letter'
[13](01, 18)-(01, 20): NAME(NAME) 'in'
[13](01, 21)-(01, 28): NAME(NAME) 'alfabet'
[13](01, 28)-(01, 29): COLON(OP) ':'
[13](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 28): NAME(NAME) 'positieinalfabet'
[14](01, 29)-(01, 30): EQUAL(OP) '='
[14](01, 31)-(01, 35): NAME(NAME) 'find'
[14](01, 35)-(01, 36): LPAR(OP) '('
[14](01, 36)-(01, 43): NAME(NAME) 'alfabet'
[14](01, 43)-(01, 44): COMMA(OP) ','
[14](01, 45)-(01, 51): NAME(NAME) 'letter'
[14](01, 51)-(01, 52): RPAR(OP) ')'
[14](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 34): NAME(NAME) 'nieuwepositieinalfabet'
[15](01, 35)-(01, 36): EQUAL(OP) '='
[15](01, 37)-(01, 53): NAME(NAME) 'positieinalfabet'
[15](01, 53)-(01, 54): PLUS(OP) '+'
[15](01, 54)-(01, 55): NAME(NAME) 'n'
[15](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 18): NAME(NAME) 'letter'
[16](01, 19)-(01, 20): EQUAL(OP) '='
[16](01, 21)-(01, 28): NAME(NAME) 'alfabet'
[16](01, 28)-(01, 29): LSQB(OP) '['
[16](01, 29)-(01, 51): NAME(NAME) 'nieuwepositieinalfabet'
[16](01, 51)-(01, 52): RSQB(OP) ']'
[16](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 20): NAME(NAME) 'uitkomst'
[17](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[17](01, 24)-(01, 30): NAME(NAME) 'letter'
[17](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 12): NAME(NAME) 'else'
[18](01, 12)-(01, 13): COLON(OP) ':'
[18](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 20): NAME(NAME) 'uitkomst'
[19](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[19](01, 24)-(01, 30): NAME(NAME) 'letter'
[19](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 10): NAME(NAME) 'return'
[20](01, 11)-(01, 19): NAME(NAME) 'uitkomst'
[20](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 06): NAME(NAME) 'encode'
[21](01, 06)-(01, 07): LPAR(OP) '('
[21](01, 07)-(01, 13): STRING(STRING) '"sean"'
[21](01, 13)-(01, 14): COMMA(OP) ','
[21](01, 15)-(01, 16): NUMBER(NUMBER) '5'
[21](01, 16)-(01, 17): RPAR(OP) ')'
[21](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 03): NAME(NAME) 'def'
[24](01, 04)-(01, 10): NAME(NAME) 'decode'
[24](01, 10)-(01, 11): LPAR(OP) '('
[24](01, 11)-(01, 12): NAME(NAME) 's'
[24](01, 12)-(01, 13): COMMA(OP) ','
[24](01, 14)-(01, 15): NAME(NAME) 'n'
[24](01, 15)-(01, 16): RPAR(OP) ')'
[24](01, 16)-(01, 17): COLON(OP) ':'
[24](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 12): NAME(NAME) 'uitkomst'
[25](01, 13)-(01, 14): EQUAL(OP) '='
[25](01, 15)-(01, 17): STRING(STRING) "''"
[25](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 07): NAME(NAME) 'for'
[26](01, 08)-(01, 14): NAME(NAME) 'letter'
[26](01, 15)-(01, 17): NAME(NAME) 'in'
[26](01, 18)-(01, 19): NAME(NAME) 's'
[26](01, 19)-(01, 20): COLON(OP) ':'
[26](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 10): NAME(NAME) 'if'
[27](01, 11)-(01, 17): NAME(NAME) 'letter'
[27](01, 18)-(01, 20): NAME(NAME) 'in'
[27](01, 21)-(01, 28): NAME(NAME) 'alfabet'
[27](01, 28)-(01, 29): COLON(OP) ':'
[27](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 28): NAME(NAME) 'positieinalfabet'
[28](01, 29)-(01, 30): EQUAL(OP) '='
[28](01, 31)-(01, 35): NAME(NAME) 'find'
[28](01, 35)-(01, 36): LPAR(OP) '('
[28](01, 36)-(01, 43): NAME(NAME) 'alfabet'
[28](01, 43)-(01, 44): COMMA(OP) ','
[28](01, 45)-(01, 51): NAME(NAME) 'letter'
[28](01, 51)-(01, 52): RPAR(OP) ')'
[28](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 12): INDENT(INDENT) '            '
[29](01, 12)-(01, 34): NAME(NAME) 'nieuwepositieinalfabet'
[29](01, 35)-(01, 36): EQUAL(OP) '='
[29](01, 37)-(01, 53): NAME(NAME) 'positieinalfabet'
[29](01, 54)-(01, 55): MINUS(OP) '-'
[29](01, 56)-(01, 57): NAME(NAME) 'n'
[29](01, 58)-(01, 59): PLUS(OP) '+'
[29](01, 59)-(01, 60): NUMBER(NUMBER) '1'
[29](01, 60)-(01, 61): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 18): NAME(NAME) 'letter'
[30](01, 19)-(01, 20): EQUAL(OP) '='
[30](01, 21)-(01, 28): NAME(NAME) 'alfabet'
[30](01, 28)-(01, 29): LSQB(OP) '['
[30](01, 29)-(01, 51): NAME(NAME) 'nieuwepositieinalfabet'
[30](01, 51)-(01, 52): RSQB(OP) ']'
[30](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 20): NAME(NAME) 'uitkomst'
[31](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[31](01, 24)-(01, 30): NAME(NAME) 'letter'
[31](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 12): NAME(NAME) 'else'
[32](01, 12)-(01, 13): COLON(OP) ':'
[32](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 12): INDENT(INDENT) '            '
[33](01, 12)-(01, 20): NAME(NAME) 'uitkomst'
[33](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[33](01, 24)-(01, 30): NAME(NAME) 'letter'
[33](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 10): NAME(NAME) 'return'
[34](01, 11)-(01, 19): NAME(NAME) 'uitkomst'
[34](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 01): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 05): NAME(NAME) 'print'
[36](01, 05)-(01, 06): LPAR(OP) '('
[36](01, 06)-(01, 12): NAME(NAME) 'decode'
[36](01, 12)-(01, 13): LPAR(OP) '('
[36](01, 13)-(01, 18): STRING(STRING) '"gcp"'
[36](01, 18)-(01, 19): COMMA(OP) ','
[36](01, 20)-(01, 21): NUMBER(NUMBER) '3'
[36](01, 21)-(01, 22): RPAR(OP) ')'
[36](01, 22)-(01, 23): RPAR(OP) ')'
[36](01, 23)-(01, 24): NEWLINE(NEWLINE)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

