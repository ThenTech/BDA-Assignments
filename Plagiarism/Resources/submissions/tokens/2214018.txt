[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 04): NAME(NAME) 'ones'
[00](01, 05)-(01, 06): EQUAL(OP) '='
[00](01, 07)-(01, 12): NAME(NAME) 'input'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 34): STRING(STRING) '"amount of 1 cents: "'
[00](01, 34)-(01, 35): RPAR(OP) ')'
[00](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): NAME(NAME) 'twos'
[01](01, 05)-(01, 06): EQUAL(OP) '='
[01](01, 07)-(01, 12): NAME(NAME) 'input'
[01](01, 12)-(01, 13): LPAR(OP) '('
[01](01, 13)-(01, 34): STRING(STRING) '"amount of 2 cents: "'
[01](01, 34)-(01, 35): RPAR(OP) ')'
[01](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 05): NAME(NAME) 'fives'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 13): NAME(NAME) 'input'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 35): STRING(STRING) '"amount of 5 cents: "'
[02](01, 35)-(01, 36): RPAR(OP) ')'
[02](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): NAME(NAME) 'tens'
[03](01, 05)-(01, 06): EQUAL(OP) '='
[03](01, 07)-(01, 12): NAME(NAME) 'input'
[03](01, 12)-(01, 13): LPAR(OP) '('
[03](01, 13)-(01, 35): STRING(STRING) '"amount of 10 cents: "'
[03](01, 35)-(01, 36): RPAR(OP) ')'
[03](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): NAME(NAME) 'twen'
[04](01, 05)-(01, 06): EQUAL(OP) '='
[04](01, 07)-(01, 12): NAME(NAME) 'input'
[04](01, 12)-(01, 13): LPAR(OP) '('
[04](01, 13)-(01, 35): STRING(STRING) '"amount of 20 cents: "'
[04](01, 35)-(01, 36): RPAR(OP) ')'
[04](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 06): NAME(NAME) 'c_ones'
[05](01, 07)-(01, 08): EQUAL(OP) '='
[05](01, 09)-(01, 12): NAME(NAME) 'int'
[05](01, 12)-(01, 13): LPAR(OP) '('
[05](01, 13)-(01, 17): NAME(NAME) 'ones'
[05](01, 17)-(01, 18): RPAR(OP) ')'
[05](01, 19)-(01, 20): STAR(OP) '*'
[05](01, 21)-(01, 25): NUMBER(NUMBER) '0.01'
[05](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 06): NAME(NAME) 'c_twos'
[06](01, 07)-(01, 08): EQUAL(OP) '='
[06](01, 09)-(01, 12): NAME(NAME) 'int'
[06](01, 12)-(01, 13): LPAR(OP) '('
[06](01, 13)-(01, 17): NAME(NAME) 'twos'
[06](01, 17)-(01, 18): RPAR(OP) ')'
[06](01, 19)-(01, 20): STAR(OP) '*'
[06](01, 21)-(01, 25): NUMBER(NUMBER) '0.02'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 07): NAME(NAME) 'c_fives'
[07](01, 08)-(01, 09): EQUAL(OP) '='
[07](01, 10)-(01, 13): NAME(NAME) 'int'
[07](01, 13)-(01, 14): LPAR(OP) '('
[07](01, 14)-(01, 19): NAME(NAME) 'fives'
[07](01, 19)-(01, 20): RPAR(OP) ')'
[07](01, 21)-(01, 22): STAR(OP) '*'
[07](01, 23)-(01, 27): NUMBER(NUMBER) '0.05'
[07](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 06): NAME(NAME) 'c_tens'
[08](01, 07)-(01, 08): EQUAL(OP) '='
[08](01, 09)-(01, 12): NAME(NAME) 'int'
[08](01, 12)-(01, 13): LPAR(OP) '('
[08](01, 13)-(01, 17): NAME(NAME) 'tens'
[08](01, 17)-(01, 18): RPAR(OP) ')'
[08](01, 19)-(01, 20): STAR(OP) '*'
[08](01, 21)-(01, 25): NUMBER(NUMBER) '0.10'
[08](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 06): NAME(NAME) 'c_twen'
[09](01, 07)-(01, 08): EQUAL(OP) '='
[09](01, 09)-(01, 12): NAME(NAME) 'int'
[09](01, 12)-(01, 13): LPAR(OP) '('
[09](01, 13)-(01, 17): NAME(NAME) 'twen'
[09](01, 17)-(01, 18): RPAR(OP) ')'
[09](01, 19)-(01, 20): STAR(OP) '*'
[09](01, 21)-(01, 25): NUMBER(NUMBER) '0.20'
[09](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 05): NAME(NAME) 'total'
[10](01, 06)-(01, 07): EQUAL(OP) '='
[10](01, 08)-(01, 14): NAME(NAME) 'c_ones'
[10](01, 15)-(01, 16): PLUS(OP) '+'
[10](01, 17)-(01, 23): NAME(NAME) 'c_twos'
[10](01, 24)-(01, 25): PLUS(OP) '+'
[10](01, 26)-(01, 33): NAME(NAME) 'c_fives'
[10](01, 34)-(01, 35): PLUS(OP) '+'
[10](01, 36)-(01, 42): NAME(NAME) 'c_tens'
[10](01, 43)-(01, 44): PLUS(OP) '+'
[10](01, 45)-(01, 51): NAME(NAME) 'c_twen'
[10](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NAME(NAME) 'x'
[11](01, 02)-(01, 03): EQUAL(OP) '='
[11](01, 04)-(01, 07): NAME(NAME) 'int'
[11](01, 07)-(01, 08): LPAR(OP) '('
[11](01, 08)-(01, 13): NAME(NAME) 'total'
[11](01, 13)-(01, 14): RPAR(OP) ')'
[11](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NAME(NAME) 'y'
[12](01, 02)-(01, 03): EQUAL(OP) '='
[12](01, 04)-(01, 07): NAME(NAME) 'int'
[12](01, 07)-(01, 08): LPAR(OP) '('
[12](01, 08)-(01, 09): LPAR(OP) '('
[12](01, 09)-(01, 14): NAME(NAME) 'total'
[12](01, 15)-(01, 16): MINUS(OP) '-'
[12](01, 17)-(01, 20): NAME(NAME) 'int'
[12](01, 20)-(01, 21): LPAR(OP) '('
[12](01, 21)-(01, 26): NAME(NAME) 'total'
[12](01, 26)-(01, 27): RPAR(OP) ')'
[12](01, 27)-(01, 28): RPAR(OP) ')'
[12](01, 28)-(01, 29): STAR(OP) '*'
[12](01, 29)-(01, 31): NUMBER(NUMBER) '10'
[12](01, 31)-(01, 32): RPAR(OP) ')'
[12](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NAME(NAME) 'z'
[13](01, 02)-(01, 03): EQUAL(OP) '='
[13](01, 04)-(01, 07): NAME(NAME) 'int'
[13](01, 07)-(01, 08): LPAR(OP) '('
[13](01, 08)-(01, 09): LPAR(OP) '('
[13](01, 09)-(01, 10): LPAR(OP) '('
[13](01, 10)-(01, 15): NAME(NAME) 'total'
[13](01, 16)-(01, 17): MINUS(OP) '-'
[13](01, 18)-(01, 21): NAME(NAME) 'int'
[13](01, 21)-(01, 22): LPAR(OP) '('
[13](01, 22)-(01, 27): NAME(NAME) 'total'
[13](01, 27)-(01, 28): RPAR(OP) ')'
[13](01, 29)-(01, 30): MINUS(OP) '-'
[13](01, 31)-(01, 32): LPAR(OP) '('
[13](01, 32)-(01, 33): NAME(NAME) 'y'
[13](01, 33)-(01, 34): SLASH(OP) '/'
[13](01, 34)-(01, 36): NUMBER(NUMBER) '10'
[13](01, 36)-(01, 37): RPAR(OP) ')'
[13](01, 37)-(01, 38): RPAR(OP) ')'
[13](01, 38)-(01, 39): STAR(OP) '*'
[13](01, 39)-(01, 42): NUMBER(NUMBER) '100'
[13](01, 43)-(01, 44): RPAR(OP) ')'
[13](01, 44)-(01, 45): RPAR(OP) ')'
[13](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 05): NAME(NAME) 'print'
[16](01, 05)-(01, 06): LPAR(OP) '('
[16](01, 06)-(01, 17): STRING(STRING) '"You have "'
[16](01, 17)-(01, 18): COMMA(OP) ','
[16](01, 19)-(01, 20): NAME(NAME) 'x'
[16](01, 20)-(01, 21): COMMA(OP) ','
[16](01, 22)-(01, 25): STRING(STRING) '"."'
[16](01, 25)-(01, 26): COMMA(OP) ','
[16](01, 27)-(01, 28): NAME(NAME) 'y'
[16](01, 28)-(01, 29): COMMA(OP) ','
[16](01, 30)-(01, 31): NAME(NAME) 'z'
[16](01, 31)-(01, 32): COMMA(OP) ','
[16](01, 33)-(01, 41): STRING(STRING) '" euro!"'
[16](01, 41)-(01, 42): COMMA(OP) ','
[16](01, 43)-(01, 46): NAME(NAME) 'sep'
[16](01, 46)-(01, 47): EQUAL(OP) '='
[16](01, 47)-(01, 49): STRING(STRING) '""'
[16](01, 49)-(01, 50): RPAR(OP) ')'
[16](01, 50)-(01, 51): NEWLINE(NEWLINE)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

