[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 09): NAME(NAME) 'start'
[01](01, 10)-(01, 11): EQUAL(OP) '='
[01](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 11): NAME(NAME) 'counter'
[02](01, 12)-(01, 13): EQUAL(OP) '='
[02](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 12): NAME(NAME) 'sentence'
[03](01, 13)-(01, 14): EQUAL(OP) '='
[03](01, 15)-(01, 17): STRING(STRING) '""'
[03](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 20): NAME(NAME) 'pattern'
[04](01, 20)-(01, 21): LSQB(OP) '['
[04](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[04](01, 22)-(01, 23): RSQB(OP) ']'
[04](01, 23)-(01, 24): COLON(OP) ':'
[04](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 11): NAME(NAME) 'for'
[05](01, 12)-(01, 13): NAME(NAME) 'j'
[05](01, 14)-(01, 16): NAME(NAME) 'in'
[05](01, 17)-(01, 23): NAME(NAME) 'corpus'
[05](01, 23)-(01, 24): COLON(OP) ':'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 14): NAME(NAME) 'if'
[06](01, 15)-(01, 16): NAME(NAME) 'j'
[06](01, 17)-(01, 19): NOTEQUAL(OP) '!='
[06](01, 20)-(01, 21): NAME(NAME) 'i'
[06](01, 21)-(01, 22): COLON(OP) ':'
[06](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 16): INDENT(INDENT) '                '
[07](01, 16)-(01, 23): NAME(NAME) 'counter'
[07](01, 24)-(01, 25): EQUAL(OP) '='
[07](01, 26)-(01, 33): NAME(NAME) 'counter'
[07](01, 34)-(01, 35): PLUS(OP) '+'
[07](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[07](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 14): NAME(NAME) 'if'
[08](01, 15)-(01, 21): NAME(NAME) 'corpus'
[08](01, 21)-(01, 22): LSQB(OP) '['
[08](01, 22)-(01, 29): NAME(NAME) 'counter'
[08](01, 29)-(01, 30): COLON(OP) ':'
[08](01, 30)-(01, 37): NAME(NAME) 'counter'
[08](01, 37)-(01, 38): PLUS(OP) '+'
[08](01, 38)-(01, 41): NAME(NAME) 'len'
[08](01, 41)-(01, 42): LPAR(OP) '('
[08](01, 42)-(01, 49): NAME(NAME) 'pattern'
[08](01, 49)-(01, 50): RPAR(OP) ')'
[08](01, 50)-(01, 51): RSQB(OP) ']'
[08](01, 52)-(01, 54): EQEQUAL(OP) '=='
[08](01, 55)-(01, 62): NAME(NAME) 'pattern'
[08](01, 62)-(01, 63): COLON(OP) ':'
[08](01, 63)-(01, 64): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 19): NAME(NAME) 'end'
[09](01, 20)-(01, 21): EQUAL(OP) '='
[09](01, 22)-(01, 29): NAME(NAME) 'counter'
[09](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 24): NAME(NAME) 'sentence'
[10](01, 25)-(01, 26): EQUAL(OP) '='
[10](01, 27)-(01, 35): NAME(NAME) 'sentence'
[10](01, 36)-(01, 37): PLUS(OP) '+'
[10](01, 38)-(01, 44): NAME(NAME) 'corpus'
[10](01, 44)-(01, 45): LSQB(OP) '['
[10](01, 45)-(01, 50): NAME(NAME) 'start'
[10](01, 50)-(01, 51): COLON(OP) ':'
[10](01, 51)-(01, 54): NAME(NAME) 'end'
[10](01, 54)-(01, 55): RSQB(OP) ']'
[10](01, 56)-(01, 57): PLUS(OP) '+'
[10](01, 58)-(01, 69): NAME(NAME) 'replacement'
[10](01, 69)-(01, 70): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 21): NAME(NAME) 'start'
[11](01, 22)-(01, 23): EQUAL(OP) '='
[11](01, 24)-(01, 27): NAME(NAME) 'end'
[11](01, 28)-(01, 29): PLUS(OP) '+'
[11](01, 30)-(01, 33): NAME(NAME) 'len'
[11](01, 33)-(01, 34): LPAR(OP) '('
[11](01, 34)-(01, 41): NAME(NAME) 'pattern'
[11](01, 41)-(01, 42): RPAR(OP) ')'
[11](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 23): NAME(NAME) 'counter'
[12](01, 24)-(01, 25): EQUAL(OP) '='
[12](01, 26)-(01, 33): NAME(NAME) 'counter'
[12](01, 34)-(01, 35): PLUS(OP) '+'
[12](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[12](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 14): NAME(NAME) 'if'
[13](01, 15)-(01, 22): NAME(NAME) 'counter'
[13](01, 23)-(01, 25): EQEQUAL(OP) '=='
[13](01, 26)-(01, 29): NAME(NAME) 'len'
[13](01, 29)-(01, 30): LPAR(OP) '('
[13](01, 30)-(01, 36): NAME(NAME) 'corpus'
[13](01, 36)-(01, 37): RPAR(OP) ')'
[13](01, 37)-(01, 38): MINUS(OP) '-'
[13](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[13](01, 39)-(01, 40): COLON(OP) ':'
[13](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 24): NAME(NAME) 'sentence'
[14](01, 25)-(01, 26): EQUAL(OP) '='
[14](01, 27)-(01, 35): NAME(NAME) 'sentence'
[14](01, 36)-(01, 37): PLUS(OP) '+'
[14](01, 38)-(01, 44): NAME(NAME) 'corpus'
[14](01, 44)-(01, 45): LSQB(OP) '['
[14](01, 45)-(01, 50): NAME(NAME) 'start'
[14](01, 50)-(01, 51): COLON(OP) ':'
[14](01, 51)-(01, 52): RSQB(OP) ']'
[14](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 22): NAME(NAME) 'return'
[15](01, 23)-(01, 31): NAME(NAME) 'sentence'
[15](01, 31)-(01, 32): NEWLINE(NEWLINE)
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

