[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 24): NAME(NAME) 'convert_to_uppercase'
[00](01, 24)-(01, 25): LPAR(OP) '('
[00](01, 25)-(01, 31): NAME(NAME) 'string'
[00](01, 31)-(01, 32): RPAR(OP) ')'
[00](01, 32)-(01, 33): COLON(OP) ':'
[00](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'word'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 13): STRING(STRING) '""'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'y'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 19): NAME(NAME) 'string'
[02](01, 19)-(01, 20): COLON(OP) ':'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 14): NAME(NAME) 'ord'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 16): NAME(NAME) 'y'
[03](01, 16)-(01, 17): RPAR(OP) ')'
[03](01, 18)-(01, 19): GREATER(OP) '>'
[03](01, 20)-(01, 22): NUMBER(NUMBER) '64'
[03](01, 23)-(01, 26): NAME(NAME) 'and'
[03](01, 27)-(01, 30): NAME(NAME) 'ord'
[03](01, 30)-(01, 31): LPAR(OP) '('
[03](01, 31)-(01, 32): NAME(NAME) 'y'
[03](01, 32)-(01, 33): RPAR(OP) ')'
[03](01, 34)-(01, 35): LESS(OP) '<'
[03](01, 36)-(01, 38): NUMBER(NUMBER) '91'
[03](01, 38)-(01, 39): COLON(OP) ':'
[03](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 16): NAME(NAME) 'word'
[04](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[04](01, 20)-(01, 21): NAME(NAME) 'y'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 12): NAME(NAME) 'else'
[05](01, 12)-(01, 13): COLON(OP) ':'
[05](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 13): NAME(NAME) 'z'
[06](01, 14)-(01, 15): EQUAL(OP) '='
[06](01, 16)-(01, 19): NAME(NAME) 'ord'
[06](01, 19)-(01, 20): LPAR(OP) '('
[06](01, 20)-(01, 21): NAME(NAME) 'y'
[06](01, 21)-(01, 22): RPAR(OP) ')'
[06](01, 22)-(01, 23): PLUS(OP) '+'
[06](01, 23)-(01, 25): NUMBER(NUMBER) '32'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 16): NAME(NAME) 'word'
[07](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[07](01, 20)-(01, 23): NAME(NAME) 'chr'
[07](01, 23)-(01, 24): LPAR(OP) '('
[07](01, 24)-(01, 25): NAME(NAME) 'z'
[07](01, 25)-(01, 26): RPAR(OP) ')'
[07](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 10): NAME(NAME) 'return'
[09](01, 11)-(01, 15): NAME(NAME) 'word'
[09](01, 15)-(01, 16): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

