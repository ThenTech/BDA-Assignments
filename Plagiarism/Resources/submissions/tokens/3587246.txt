[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 18): NAME(NAME) 'cleanup_spaces'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 20): NAME(NAME) 's'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): COLON(OP) ':'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 16): NAME(NAME) 'letterPassed'
[01](01, 17)-(01, 18): EQUAL(OP) '='
[01](01, 19)-(01, 24): NAME(NAME) 'False'
[01](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 21): NAME(NAME) 'punctuationPassed'
[02](01, 22)-(01, 23): EQUAL(OP) '='
[02](01, 24)-(01, 29): NAME(NAME) 'False'
[02](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 14): NAME(NAME) 'tempString'
[03](01, 15)-(01, 16): EQUAL(OP) '='
[03](01, 17)-(01, 19): STRING(STRING) '""'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 04)-(01, 05): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 12): NAME(NAME) 'in'
[05](01, 13)-(01, 18): NAME(NAME) 'range'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 22): NAME(NAME) 'len'
[05](01, 22)-(01, 23): LPAR(OP) '('
[05](01, 23)-(01, 24): NAME(NAME) 's'
[05](01, 24)-(01, 25): RPAR(OP) ')'
[05](01, 25)-(01, 26): RPAR(OP) ')'
[05](01, 26)-(01, 27): COLON(OP) ':'
[05](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 14): STRING(STRING) "'a'"
[06](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[06](01, 18)-(01, 19): NAME(NAME) 's'
[06](01, 19)-(01, 20): LSQB(OP) '['
[06](01, 20)-(01, 21): NAME(NAME) 'i'
[06](01, 21)-(01, 22): RSQB(OP) ']'
[06](01, 22)-(01, 23): DOT(OP) '.'
[06](01, 23)-(01, 28): NAME(NAME) 'lower'
[06](01, 28)-(01, 29): LPAR(OP) '('
[06](01, 29)-(01, 30): RPAR(OP) ')'
[06](01, 31)-(01, 33): LESSEQUAL(OP) '<='
[06](01, 34)-(01, 37): STRING(STRING) "'z'"
[06](01, 37)-(01, 38): COLON(OP) ':'
[06](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 24): NAME(NAME) 'letterPassed'
[07](01, 25)-(01, 26): EQUAL(OP) '='
[07](01, 27)-(01, 31): NAME(NAME) 'True'
[07](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 22): NAME(NAME) 'tempString'
[08](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[08](01, 26)-(01, 27): NAME(NAME) 's'
[08](01, 27)-(01, 28): LSQB(OP) '['
[08](01, 28)-(01, 29): NAME(NAME) 'i'
[08](01, 29)-(01, 30): RSQB(OP) ']'
[08](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 12)-(01, 13): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 12): NAME(NAME) 'elif'
[10](01, 13)-(01, 14): NAME(NAME) 's'
[10](01, 14)-(01, 15): LSQB(OP) '['
[10](01, 15)-(01, 16): NAME(NAME) 'i'
[10](01, 16)-(01, 17): RSQB(OP) ']'
[10](01, 18)-(01, 20): NOTEQUAL(OP) '!='
[10](01, 21)-(01, 24): STRING(STRING) '" "'
[10](01, 25)-(01, 28): NAME(NAME) 'and'
[10](01, 29)-(01, 32): NAME(NAME) 'not'
[10](01, 32)-(01, 33): LPAR(OP) '('
[10](01, 33)-(01, 36): STRING(STRING) "'a'"
[10](01, 37)-(01, 39): LESSEQUAL(OP) '<='
[10](01, 40)-(01, 41): NAME(NAME) 's'
[10](01, 41)-(01, 42): LSQB(OP) '['
[10](01, 42)-(01, 43): NAME(NAME) 'i'
[10](01, 43)-(01, 44): RSQB(OP) ']'
[10](01, 44)-(01, 45): DOT(OP) '.'
[10](01, 45)-(01, 50): NAME(NAME) 'lower'
[10](01, 50)-(01, 51): LPAR(OP) '('
[10](01, 51)-(01, 52): RPAR(OP) ')'
[10](01, 53)-(01, 55): LESSEQUAL(OP) '<='
[10](01, 56)-(01, 59): STRING(STRING) "'z'"
[10](01, 59)-(01, 60): RPAR(OP) ')'
[10](01, 60)-(01, 61): COLON(OP) ':'
[10](01, 61)-(01, 62): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 29): NAME(NAME) 'punctuationPassed'
[11](01, 30)-(01, 31): EQUAL(OP) '='
[11](01, 32)-(01, 36): NAME(NAME) 'True'
[11](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 22): NAME(NAME) 'tempString'
[12](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[12](01, 26)-(01, 27): NAME(NAME) 's'
[12](01, 27)-(01, 28): LSQB(OP) '['
[12](01, 28)-(01, 29): NAME(NAME) 'i'
[12](01, 29)-(01, 30): RSQB(OP) ']'
[12](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 12)-(01, 13): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 12): NAME(NAME) 'elif'
[14](01, 13)-(01, 14): NAME(NAME) 's'
[14](01, 14)-(01, 15): LSQB(OP) '['
[14](01, 15)-(01, 16): NAME(NAME) 'i'
[14](01, 16)-(01, 17): RSQB(OP) ']'
[14](01, 18)-(01, 20): EQEQUAL(OP) '=='
[14](01, 21)-(01, 24): STRING(STRING) '" "'
[14](01, 25)-(01, 28): NAME(NAME) 'and'
[14](01, 29)-(01, 30): LPAR(OP) '('
[14](01, 30)-(01, 42): NAME(NAME) 'letterPassed'
[14](01, 43)-(01, 45): NAME(NAME) 'or'
[14](01, 46)-(01, 63): NAME(NAME) 'punctuationPassed'
[14](01, 63)-(01, 64): RPAR(OP) ')'
[14](01, 65)-(01, 68): NAME(NAME) 'and'
[14](01, 69)-(01, 70): NAME(NAME) 's'
[14](01, 70)-(01, 71): LSQB(OP) '['
[14](01, 71)-(01, 72): NAME(NAME) 'i'
[14](01, 72)-(01, 73): PLUS(OP) '+'
[14](01, 73)-(01, 74): NUMBER(NUMBER) '1'
[14](01, 74)-(01, 75): RSQB(OP) ']'
[14](01, 76)-(01, 78): NOTEQUAL(OP) '!='
[14](01, 79)-(01, 82): STRING(STRING) '" "'
[14](01, 82)-(01, 83): COLON(OP) ':'
[14](01, 83)-(01, 84): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 22): NAME(NAME) 'tempString'
[15](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[15](01, 26)-(01, 27): NAME(NAME) 's'
[15](01, 27)-(01, 28): LSQB(OP) '['
[15](01, 28)-(01, 29): NAME(NAME) 'i'
[15](01, 29)-(01, 30): RSQB(OP) ']'
[15](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 24): NAME(NAME) 'letterPassed'
[16](01, 25)-(01, 26): EQUAL(OP) '='
[16](01, 27)-(01, 32): NAME(NAME) 'False'
[16](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 29): NAME(NAME) 'punctuationPassed'
[17](01, 30)-(01, 31): EQUAL(OP) '='
[17](01, 32)-(01, 37): NAME(NAME) 'False'
[17](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 12)-(01, 13): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 10): NAME(NAME) 'return'
[21](01, 11)-(01, 21): NAME(NAME) 'tempString'
[21](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

