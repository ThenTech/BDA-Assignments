[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'x'
[00](01, 01)-(01, 02): EQUAL(OP) '='
[00](01, 02)-(01, 05): NAME(NAME) 'int'
[00](01, 05)-(01, 06): LPAR(OP) '('
[00](01, 06)-(01, 11): NAME(NAME) 'input'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 24): STRING(STRING) '"geef getal"'
[00](01, 24)-(01, 25): RPAR(OP) ')'
[00](01, 25)-(01, 26): RPAR(OP) ')'
[00](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 07): NAME(NAME) 'product'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[01](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'som'
[02](01, 03)-(01, 04): EQUAL(OP) '='
[02](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[02](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'for'
[03](01, 04)-(01, 05): NAME(NAME) 'i'
[03](01, 06)-(01, 08): NAME(NAME) 'in'
[03](01, 09)-(01, 14): NAME(NAME) 'range'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[03](01, 16)-(01, 17): COMMA(OP) ','
[03](01, 17)-(01, 18): NAME(NAME) 'x'
[03](01, 18)-(01, 19): PLUS(OP) '+'
[03](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[03](01, 20)-(01, 21): RPAR(OP) ')'
[03](01, 21)-(01, 22): COLON(OP) ':'
[03](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 11): NAME(NAME) 'product'
[04](01, 11)-(01, 12): EQUAL(OP) '='
[04](01, 12)-(01, 19): NAME(NAME) 'product'
[04](01, 19)-(01, 20): STAR(OP) '*'
[04](01, 20)-(01, 21): LPAR(OP) '('
[04](01, 21)-(01, 22): NAME(NAME) 'x'
[04](01, 22)-(01, 23): MINUS(OP) '-'
[04](01, 23)-(01, 24): NAME(NAME) 'i'
[04](01, 24)-(01, 25): PLUS(OP) '+'
[04](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[04](01, 26)-(01, 27): RPAR(OP) ')'
[04](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'som'
[05](01, 07)-(01, 08): EQUAL(OP) '='
[05](01, 08)-(01, 11): NAME(NAME) 'som'
[05](01, 11)-(01, 12): PLUS(OP) '+'
[05](01, 12)-(01, 19): NAME(NAME) 'product'
[05](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 05): NAME(NAME) 'print'
[06](01, 05)-(01, 06): LPAR(OP) '('
[06](01, 06)-(01, 09): NAME(NAME) 'som'
[06](01, 09)-(01, 10): RPAR(OP) ')'
[06](01, 10)-(01, 11): NEWLINE(NEWLINE)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

