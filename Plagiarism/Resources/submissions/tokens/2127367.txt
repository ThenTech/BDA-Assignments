[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'a'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 07): NAME(NAME) 'int'
[00](01, 07)-(01, 08): LPAR(OP) '('
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 46): STRING(STRING) '"How many 1 cents do you have: "'
[00](01, 46)-(01, 47): RPAR(OP) ')'
[00](01, 47)-(01, 48): RPAR(OP) ')'
[00](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'b'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 07): NAME(NAME) 'int'
[01](01, 07)-(01, 08): LPAR(OP) '('
[01](01, 08)-(01, 13): NAME(NAME) 'input'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 46): STRING(STRING) '"How many 2 cents do you have: "'
[01](01, 46)-(01, 47): RPAR(OP) ')'
[01](01, 47)-(01, 48): RPAR(OP) ')'
[01](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'c'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 07): NAME(NAME) 'int'
[02](01, 07)-(01, 08): LPAR(OP) '('
[02](01, 08)-(01, 13): NAME(NAME) 'input'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 46): STRING(STRING) '"How many 5 cents do you have: "'
[02](01, 46)-(01, 47): RPAR(OP) ')'
[02](01, 47)-(01, 48): RPAR(OP) ')'
[02](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'd'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 04)-(01, 07): NAME(NAME) 'int'
[03](01, 07)-(01, 08): LPAR(OP) '('
[03](01, 08)-(01, 13): NAME(NAME) 'input'
[03](01, 13)-(01, 14): LPAR(OP) '('
[03](01, 14)-(01, 47): STRING(STRING) '"How many 10 cents do you have: "'
[03](01, 47)-(01, 48): RPAR(OP) ')'
[03](01, 48)-(01, 49): RPAR(OP) ')'
[03](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NAME(NAME) 'e'
[04](01, 02)-(01, 03): EQUAL(OP) '='
[04](01, 04)-(01, 07): NAME(NAME) 'int'
[04](01, 07)-(01, 08): LPAR(OP) '('
[04](01, 08)-(01, 13): NAME(NAME) 'input'
[04](01, 13)-(01, 14): LPAR(OP) '('
[04](01, 14)-(01, 47): STRING(STRING) '"How many 20 cents do you have: "'
[04](01, 47)-(01, 48): RPAR(OP) ')'
[04](01, 48)-(01, 49): RPAR(OP) ')'
[04](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 05): NAME(NAME) 'total'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 08)-(01, 09): LPAR(OP) '('
[05](01, 09)-(01, 10): NUMBER(NUMBER) '1'
[05](01, 10)-(01, 11): STAR(OP) '*'
[05](01, 11)-(01, 12): NAME(NAME) 'a'
[05](01, 12)-(01, 13): RPAR(OP) ')'
[05](01, 13)-(01, 14): PLUS(OP) '+'
[05](01, 14)-(01, 15): LPAR(OP) '('
[05](01, 15)-(01, 16): NUMBER(NUMBER) '2'
[05](01, 16)-(01, 17): STAR(OP) '*'
[05](01, 17)-(01, 18): NAME(NAME) 'b'
[05](01, 18)-(01, 19): RPAR(OP) ')'
[05](01, 19)-(01, 20): PLUS(OP) '+'
[05](01, 20)-(01, 21): LPAR(OP) '('
[05](01, 21)-(01, 22): NUMBER(NUMBER) '5'
[05](01, 22)-(01, 23): STAR(OP) '*'
[05](01, 23)-(01, 24): NAME(NAME) 'c'
[05](01, 24)-(01, 25): RPAR(OP) ')'
[05](01, 25)-(01, 26): PLUS(OP) '+'
[05](01, 26)-(01, 27): LPAR(OP) '('
[05](01, 27)-(01, 29): NUMBER(NUMBER) '10'
[05](01, 29)-(01, 30): STAR(OP) '*'
[05](01, 30)-(01, 31): NAME(NAME) 'd'
[05](01, 31)-(01, 32): RPAR(OP) ')'
[05](01, 32)-(01, 33): PLUS(OP) '+'
[05](01, 33)-(01, 34): LPAR(OP) '('
[05](01, 34)-(01, 36): NUMBER(NUMBER) '20'
[05](01, 36)-(01, 37): STAR(OP) '*'
[05](01, 37)-(01, 38): NAME(NAME) 'e'
[05](01, 38)-(01, 39): RPAR(OP) ')'
[05](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): NAME(NAME) 'euro'
[06](01, 05)-(01, 06): EQUAL(OP) '='
[06](01, 07)-(01, 12): NAME(NAME) 'total'
[06](01, 13)-(01, 15): DOUBLESLASH(OP) '//'
[06](01, 16)-(01, 19): NUMBER(NUMBER) '100'
[06](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NAME(NAME) 'f'
[07](01, 02)-(01, 03): EQUAL(OP) '='
[07](01, 04)-(01, 09): NAME(NAME) 'total'
[07](01, 09)-(01, 10): PERCENT(OP) '%'
[07](01, 10)-(01, 13): NUMBER(NUMBER) '100'
[07](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NAME(NAME) 'g'
[08](01, 02)-(01, 03): EQUAL(OP) '='
[08](01, 04)-(01, 05): NAME(NAME) 'f'
[08](01, 05)-(01, 07): DOUBLESLASH(OP) '//'
[08](01, 07)-(01, 09): NUMBER(NUMBER) '10'
[08](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NAME(NAME) 'h'
[09](01, 02)-(01, 03): EQUAL(OP) '='
[09](01, 04)-(01, 05): NAME(NAME) 'f'
[09](01, 05)-(01, 06): PERCENT(OP) '%'
[09](01, 06)-(01, 08): NUMBER(NUMBER) '10'
[09](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 05): NAME(NAME) 'print'
[10](01, 05)-(01, 06): LPAR(OP) '('
[10](01, 06)-(01, 17): STRING(STRING) '"You have "'
[10](01, 17)-(01, 18): COMMA(OP) ','
[10](01, 19)-(01, 23): NAME(NAME) 'euro'
[10](01, 23)-(01, 24): COMMA(OP) ','
[10](01, 25)-(01, 28): STRING(STRING) '"."'
[10](01, 28)-(01, 29): COMMA(OP) ','
[10](01, 30)-(01, 31): NAME(NAME) 'g'
[10](01, 31)-(01, 32): COMMA(OP) ','
[10](01, 33)-(01, 34): NAME(NAME) 'h'
[10](01, 34)-(01, 35): COMMA(OP) ','
[10](01, 36)-(01, 44): STRING(STRING) '" euro!"'
[10](01, 44)-(01, 45): COMMA(OP) ','
[10](01, 46)-(01, 49): NAME(NAME) 'sep'
[10](01, 49)-(01, 50): EQUAL(OP) '='
[10](01, 50)-(01, 52): STRING(STRING) '""'
[10](01, 52)-(01, 53): RPAR(OP) ')'
[10](01, 53)-(01, 54): NEWLINE(NEWLINE)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

