[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'string'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): NAME(NAME) 'word'
[02](01, 05)-(01, 06): EQUAL(OP) '='
[02](01, 07)-(01, 12): NAME(NAME) 'False'
[02](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'begin'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'for'
[04](01, 04)-(01, 05): NAME(NAME) 'c'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 14): NAME(NAME) 'range'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 18): NAME(NAME) 'len'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 25): NAME(NAME) 'string'
[04](01, 25)-(01, 26): RPAR(OP) ')'
[04](01, 26)-(01, 27): RPAR(OP) ')'
[04](01, 27)-(01, 28): COLON(OP) ':'
[04](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 10): STRING(STRING) "'a'"
[05](01, 11)-(01, 13): LESSEQUAL(OP) '<='
[05](01, 14)-(01, 20): NAME(NAME) 'string'
[05](01, 20)-(01, 21): LSQB(OP) '['
[05](01, 21)-(01, 22): NAME(NAME) 'c'
[05](01, 22)-(01, 23): RSQB(OP) ']'
[05](01, 24)-(01, 26): LESSEQUAL(OP) '<='
[05](01, 27)-(01, 30): STRING(STRING) "'z'"
[05](01, 31)-(01, 33): NAME(NAME) 'or'
[05](01, 34)-(01, 37): STRING(STRING) "'A'"
[05](01, 38)-(01, 40): LESSEQUAL(OP) '<='
[05](01, 41)-(01, 47): NAME(NAME) 'string'
[05](01, 47)-(01, 48): LSQB(OP) '['
[05](01, 48)-(01, 49): NAME(NAME) 'c'
[05](01, 49)-(01, 50): RSQB(OP) ']'
[05](01, 51)-(01, 53): LESSEQUAL(OP) '<='
[05](01, 54)-(01, 57): STRING(STRING) "'Z'"
[05](01, 57)-(01, 58): COLON(OP) ':'
[05](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 14): NAME(NAME) 'not'
[06](01, 15)-(01, 19): NAME(NAME) 'word'
[06](01, 19)-(01, 20): COLON(OP) ':'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 17): NAME(NAME) 'begin'
[07](01, 18)-(01, 19): EQUAL(OP) '='
[07](01, 20)-(01, 21): NAME(NAME) 'c'
[07](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 16): NAME(NAME) 'word'
[08](01, 17)-(01, 18): EQUAL(OP) '='
[08](01, 19)-(01, 23): NAME(NAME) 'True'
[08](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 17): NAME(NAME) 'print'
[09](01, 17)-(01, 18): LPAR(OP) '('
[09](01, 18)-(01, 24): NAME(NAME) 'string'
[09](01, 24)-(01, 25): LSQB(OP) '['
[09](01, 25)-(01, 26): NAME(NAME) 'c'
[09](01, 26)-(01, 27): RSQB(OP) ']'
[09](01, 27)-(01, 28): COMMA(OP) ','
[09](01, 29)-(01, 32): NAME(NAME) 'end'
[09](01, 32)-(01, 33): EQUAL(OP) '='
[09](01, 33)-(01, 35): STRING(STRING) '""'
[09](01, 35)-(01, 36): RPAR(OP) ')'
[09](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 12): NAME(NAME) 'else'
[10](01, 12)-(01, 13): COLON(OP) ':'
[10](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 17): NAME(NAME) 'print'
[11](01, 17)-(01, 18): LPAR(OP) '('
[11](01, 18)-(01, 24): NAME(NAME) 'string'
[11](01, 24)-(01, 25): LSQB(OP) '['
[11](01, 25)-(01, 26): NAME(NAME) 'c'
[11](01, 26)-(01, 27): RSQB(OP) ']'
[11](01, 27)-(01, 28): COMMA(OP) ','
[11](01, 29)-(01, 32): NAME(NAME) 'end'
[11](01, 32)-(01, 33): EQUAL(OP) '='
[11](01, 33)-(01, 35): STRING(STRING) '""'
[11](01, 35)-(01, 36): RPAR(OP) ')'
[11](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 10): NAME(NAME) 'if'
[12](01, 11)-(01, 12): NAME(NAME) 'c'
[12](01, 13)-(01, 15): EQEQUAL(OP) '=='
[12](01, 16)-(01, 19): NAME(NAME) 'len'
[12](01, 19)-(01, 20): LPAR(OP) '('
[12](01, 20)-(01, 26): NAME(NAME) 'string'
[12](01, 26)-(01, 27): RPAR(OP) ')'
[12](01, 27)-(01, 28): COLON(OP) ':'
[12](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 17): NAME(NAME) 'print'
[13](01, 17)-(01, 18): LPAR(OP) '('
[13](01, 18)-(01, 21): STRING(STRING) '" "'
[13](01, 21)-(01, 22): COMMA(OP) ','
[13](01, 23)-(01, 24): LPAR(OP) '('
[13](01, 24)-(01, 25): NAME(NAME) 'c'
[13](01, 26)-(01, 27): MINUS(OP) '-'
[13](01, 28)-(01, 33): NAME(NAME) 'begin'
[13](01, 33)-(01, 34): RPAR(OP) ')'
[13](01, 34)-(01, 35): COMMA(OP) ','
[13](01, 36)-(01, 39): NAME(NAME) 'sep'
[13](01, 39)-(01, 40): EQUAL(OP) '='
[13](01, 40)-(01, 42): STRING(STRING) '""'
[13](01, 42)-(01, 43): RPAR(OP) ')'
[13](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 08): NAME(NAME) 'else'
[14](01, 08)-(01, 09): COLON(OP) ':'
[14](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 10): NAME(NAME) 'if'
[15](01, 11)-(01, 15): NAME(NAME) 'word'
[15](01, 15)-(01, 16): COLON(OP) ':'
[15](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 17): NAME(NAME) 'print'
[16](01, 17)-(01, 18): LPAR(OP) '('
[16](01, 18)-(01, 21): STRING(STRING) '" "'
[16](01, 21)-(01, 22): COMMA(OP) ','
[16](01, 23)-(01, 24): LPAR(OP) '('
[16](01, 24)-(01, 25): NAME(NAME) 'c'
[16](01, 26)-(01, 27): MINUS(OP) '-'
[16](01, 28)-(01, 33): NAME(NAME) 'begin'
[16](01, 33)-(01, 34): RPAR(OP) ')'
[16](01, 34)-(01, 35): COMMA(OP) ','
[16](01, 36)-(01, 39): NAME(NAME) 'sep'
[16](01, 39)-(01, 40): EQUAL(OP) '='
[16](01, 40)-(01, 42): STRING(STRING) '""'
[16](01, 42)-(01, 43): RPAR(OP) ')'
[16](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 16): NAME(NAME) 'word'
[17](01, 17)-(01, 18): EQUAL(OP) '='
[17](01, 19)-(01, 24): NAME(NAME) 'False'
[17](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

