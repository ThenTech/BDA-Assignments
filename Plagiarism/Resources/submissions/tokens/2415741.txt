[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 11): NAME(NAME) 'subset_list'
[00](01, 12)-(01, 13): EQUAL(OP) '='
[00](01, 14)-(01, 15): LSQB(OP) '['
[00](01, 15)-(01, 16): RSQB(OP) ']'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 17): NAME(NAME) 'print_subsets'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 25): NAME(NAME) 'numbers'
[03](01, 25)-(01, 26): COMMA(OP) ','
[03](01, 27)-(01, 41): NAME(NAME) 'current_number'
[03](01, 41)-(01, 42): COMMA(OP) ','
[03](01, 43)-(01, 62): NAME(NAME) 'current_subset_list'
[03](01, 62)-(01, 63): RPAR(OP) ')'
[03](01, 63)-(01, 64): COLON(OP) ':'
[03](01, 64)-(01, 65): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 10): NAME(NAME) 'global'
[04](01, 11)-(01, 22): NAME(NAME) 'subset_list'
[04](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'print'
[05](01, 09)-(01, 10): LPAR(OP) '('
[05](01, 10)-(01, 24): NAME(NAME) 'current_number'
[05](01, 24)-(01, 25): RPAR(OP) ')'
[05](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 06): NAME(NAME) 'if'
[07](01, 07)-(01, 10): NAME(NAME) 'len'
[07](01, 10)-(01, 11): LPAR(OP) '('
[07](01, 11)-(01, 25): NAME(NAME) 'current_number'
[07](01, 25)-(01, 26): RPAR(OP) ')'
[07](01, 27)-(01, 29): EQEQUAL(OP) '=='
[07](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[07](01, 31)-(01, 32): COLON(OP) ':'
[07](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 14): NAME(NAME) 'return'
[08](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 08): NAME(NAME) 'else'
[09](01, 08)-(01, 09): COLON(OP) ':'
[09](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 19): NAME(NAME) 'subset_list'
[10](01, 19)-(01, 20): DOT(OP) '.'
[10](01, 20)-(01, 26): NAME(NAME) 'append'
[10](01, 26)-(01, 27): LPAR(OP) '('
[10](01, 27)-(01, 41): NAME(NAME) 'current_number'
[10](01, 41)-(01, 42): RPAR(OP) ')'
[10](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 06): NAME(NAME) 'if'
[12](01, 07)-(01, 10): NAME(NAME) 'len'
[12](01, 10)-(01, 11): LPAR(OP) '('
[12](01, 11)-(01, 22): NAME(NAME) 'subset_list'
[12](01, 22)-(01, 23): RPAR(OP) ')'
[12](01, 24)-(01, 26): GREATEREQUAL(OP) '>='
[12](01, 27)-(01, 28): NUMBER(NUMBER) '2'
[12](01, 28)-(01, 29): COLON(OP) ':'
[12](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 14): NAME(NAME) 'len'
[13](01, 14)-(01, 15): LPAR(OP) '('
[13](01, 15)-(01, 29): NAME(NAME) 'current_number'
[13](01, 29)-(01, 30): RPAR(OP) ')'
[13](01, 31)-(01, 32): GREATER(OP) '>'
[13](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[13](01, 34)-(01, 35): COLON(OP) ':'
[13](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 18): NAME(NAME) 'return'
[14](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 12): NAME(NAME) 'else'
[15](01, 12)-(01, 13): COLON(OP) ':'
[15](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 15): NAME(NAME) 'for'
[16](01, 16)-(01, 22): NAME(NAME) 'subset'
[16](01, 23)-(01, 25): NAME(NAME) 'in'
[16](01, 26)-(01, 45): NAME(NAME) 'current_subset_list'
[16](01, 45)-(01, 46): COLON(OP) ':'
[16](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 29): NAME(NAME) 'print_subsets'
[17](01, 29)-(01, 30): LPAR(OP) '('
[17](01, 30)-(01, 37): NAME(NAME) 'numbers'
[17](01, 37)-(01, 38): COMMA(OP) ','
[17](01, 39)-(01, 53): NAME(NAME) 'current_number'
[17](01, 54)-(01, 55): PLUS(OP) '+'
[17](01, 56)-(01, 59): STRING(STRING) '" "'
[17](01, 60)-(01, 61): PLUS(OP) '+'
[17](01, 62)-(01, 68): NAME(NAME) 'subset'
[17](01, 68)-(01, 69): COMMA(OP) ','
[17](01, 70)-(01, 89): NAME(NAME) 'current_subset_list'
[17](01, 89)-(01, 90): RPAR(OP) ')'
[17](01, 90)-(01, 91): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 06): NAME(NAME) 'if'
[19](01, 07)-(01, 18): NAME(NAME) 'subset_list'
[19](01, 18)-(01, 19): LSQB(OP) '['
[19](01, 19)-(01, 20): MINUS(OP) '-'
[19](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[19](01, 21)-(01, 22): RSQB(OP) ']'
[19](01, 23)-(01, 25): EQEQUAL(OP) '=='
[19](01, 26)-(01, 33): NAME(NAME) 'numbers'
[19](01, 33)-(01, 34): COLON(OP) ':'
[19](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 14): NAME(NAME) 'return'
[20](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 03): NAME(NAME) 'def'
[23](01, 04)-(01, 14): NAME(NAME) 'get_number'
[23](01, 14)-(01, 15): LPAR(OP) '('
[23](01, 15)-(01, 22): NAME(NAME) 'numbers'
[23](01, 22)-(01, 23): RPAR(OP) ')'
[23](01, 23)-(01, 24): COLON(OP) ':'
[23](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 10): NAME(NAME) 'global'
[24](01, 11)-(01, 22): NAME(NAME) 'subset_list'
[24](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 17): NAME(NAME) 'print_subsets'
[25](01, 17)-(01, 18): LPAR(OP) '('
[25](01, 18)-(01, 25): NAME(NAME) 'numbers'
[25](01, 25)-(01, 26): COMMA(OP) ','
[25](01, 27)-(01, 29): STRING(STRING) "''"
[25](01, 29)-(01, 30): COMMA(OP) ','
[25](01, 31)-(01, 42): NAME(NAME) 'subset_list'
[25](01, 42)-(01, 43): RPAR(OP) ')'
[25](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 07): NAME(NAME) 'for'
[26](01, 08)-(01, 14): NAME(NAME) 'number'
[26](01, 15)-(01, 17): NAME(NAME) 'in'
[26](01, 18)-(01, 25): NAME(NAME) 'reverse'
[26](01, 25)-(01, 26): LPAR(OP) '('
[26](01, 26)-(01, 33): NAME(NAME) 'numbers'
[26](01, 33)-(01, 34): RPAR(OP) ')'
[26](01, 34)-(01, 35): COLON(OP) ':'
[26](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 10): NAME(NAME) 'if'
[27](01, 11)-(01, 17): NAME(NAME) 'number'
[27](01, 18)-(01, 20): NAME(NAME) 'is'
[27](01, 21)-(01, 24): NAME(NAME) 'not'
[27](01, 25)-(01, 28): STRING(STRING) "' '"
[27](01, 28)-(01, 29): COLON(OP) ':'
[27](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 31): NAME(NAME) 'current_subset_list'
[28](01, 32)-(01, 33): EQUAL(OP) '='
[28](01, 34)-(01, 45): NAME(NAME) 'subset_list'
[28](01, 45)-(01, 46): LSQB(OP) '['
[28](01, 46)-(01, 47): COLON(OP) ':'
[28](01, 47)-(01, 48): RSQB(OP) ']'
[28](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 12): INDENT(INDENT) '            '
[29](01, 12)-(01, 25): NAME(NAME) 'print_subsets'
[29](01, 25)-(01, 26): LPAR(OP) '('
[29](01, 26)-(01, 33): NAME(NAME) 'numbers'
[29](01, 33)-(01, 34): COMMA(OP) ','
[29](01, 35)-(01, 41): NAME(NAME) 'number'
[29](01, 41)-(01, 42): COMMA(OP) ','
[29](01, 43)-(01, 62): NAME(NAME) 'current_subset_list'
[29](01, 62)-(01, 63): RPAR(OP) ')'
[29](01, 63)-(01, 64): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 01): NL(NL) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 01): NL(NL) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 03): NAME(NAME) 'def'
[32](01, 04)-(01, 11): NAME(NAME) 'reverse'
[32](01, 11)-(01, 12): LPAR(OP) '('
[32](01, 12)-(01, 18): NAME(NAME) 'string'
[32](01, 18)-(01, 19): RPAR(OP) ')'
[32](01, 19)-(01, 20): COLON(OP) ':'
[32](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 17): NAME(NAME) 'reversed_list'
[33](01, 18)-(01, 19): EQUAL(OP) '='
[33](01, 20)-(01, 21): LSQB(OP) '['
[33](01, 21)-(01, 22): RSQB(OP) ']'
[33](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 07): NAME(NAME) 'for'
[34](01, 08)-(01, 12): NAME(NAME) 'char'
[34](01, 13)-(01, 15): NAME(NAME) 'in'
[34](01, 16)-(01, 22): NAME(NAME) 'string'
[34](01, 22)-(01, 23): COLON(OP) ':'
[34](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 21): NAME(NAME) 'reversed_list'
[35](01, 21)-(01, 22): LSQB(OP) '['
[35](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[35](01, 23)-(01, 24): COLON(OP) ':'
[35](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[35](01, 25)-(01, 26): RSQB(OP) ']'
[35](01, 27)-(01, 28): EQUAL(OP) '='
[35](01, 29)-(01, 33): NAME(NAME) 'char'
[35](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 04): INDENT(INDENT) '    '
[36](01, 04)-(01, 10): NAME(NAME) 'return'
[36](01, 11)-(01, 24): NAME(NAME) 'reversed_list'
[36](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 01): NL(NL) '\n'
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 01): NL(NL) '\n'
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 07): NAME(NAME) 'numbers'
[39](01, 08)-(01, 09): EQUAL(OP) '='
[39](01, 10)-(01, 15): NAME(NAME) 'input'
[39](01, 15)-(01, 16): LPAR(OP) '('
[39](01, 16)-(01, 27): STRING(STRING) "'Numbers: '"
[39](01, 27)-(01, 28): RPAR(OP) ')'
[39](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 10): NAME(NAME) 'get_number'
[40](01, 10)-(01, 11): LPAR(OP) '('
[40](01, 11)-(01, 18): NAME(NAME) 'numbers'
[40](01, 18)-(01, 19): RPAR(OP) ')'
[40](01, 19)-(01, 20): NEWLINE(NEWLINE)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

