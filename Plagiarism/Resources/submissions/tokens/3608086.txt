[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'i'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[00](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'def'
[01](01, 04)-(01, 11): NAME(NAME) 'convert'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 18): NAME(NAME) 'number'
[01](01, 18)-(01, 19): RPAR(OP) ')'
[01](01, 19)-(01, 20): COLON(OP) ':'
[01](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'while'
[02](01, 10)-(01, 13): NAME(NAME) 'len'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 20): NAME(NAME) 'number'
[02](01, 20)-(01, 21): RPAR(OP) ')'
[02](01, 22)-(01, 23): GREATER(OP) '>'
[02](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[02](01, 25)-(01, 26): COLON(OP) ':'
[02](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 14): NAME(NAME) 'return'
[03](01, 15)-(01, 18): NAME(NAME) 'int'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 25): NAME(NAME) 'number'
[03](01, 25)-(01, 26): LSQB(OP) '['
[03](01, 26)-(01, 27): NAME(NAME) 'i'
[03](01, 27)-(01, 28): RSQB(OP) ']'
[03](01, 28)-(01, 29): RPAR(OP) ')'
[03](01, 30)-(01, 31): STAR(OP) '*'
[03](01, 32)-(01, 34): NUMBER(NUMBER) '10'
[03](01, 35)-(01, 37): DOUBLESTAR(OP) '**'
[03](01, 38)-(01, 39): LPAR(OP) '('
[03](01, 39)-(01, 42): NAME(NAME) 'len'
[03](01, 42)-(01, 43): LPAR(OP) '('
[03](01, 43)-(01, 49): NAME(NAME) 'number'
[03](01, 49)-(01, 50): RPAR(OP) ')'
[03](01, 51)-(01, 52): MINUS(OP) '-'
[03](01, 53)-(01, 54): NUMBER(NUMBER) '1'
[03](01, 54)-(01, 55): RPAR(OP) ')'
[03](01, 56)-(01, 57): PLUS(OP) '+'
[03](01, 58)-(01, 65): NAME(NAME) 'convert'
[03](01, 65)-(01, 66): LPAR(OP) '('
[03](01, 66)-(01, 72): NAME(NAME) 'number'
[03](01, 72)-(01, 73): LSQB(OP) '['
[03](01, 73)-(01, 74): NAME(NAME) 'i'
[03](01, 74)-(01, 75): PLUS(OP) '+'
[03](01, 75)-(01, 76): NUMBER(NUMBER) '1'
[03](01, 76)-(01, 77): COLON(OP) ':'
[03](01, 77)-(01, 78): RSQB(OP) ']'
[03](01, 78)-(01, 79): RPAR(OP) ')'
[03](01, 79)-(01, 80): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 10): NAME(NAME) 'len'
[04](01, 10)-(01, 11): LPAR(OP) '('
[04](01, 11)-(01, 17): NAME(NAME) 'number'
[04](01, 17)-(01, 18): RPAR(OP) ')'
[04](01, 19)-(01, 21): EQEQUAL(OP) '=='
[04](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[04](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 14): NAME(NAME) 'return'
[05](01, 15)-(01, 18): NAME(NAME) 'int'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 25): NAME(NAME) 'number'
[05](01, 25)-(01, 26): RPAR(OP) ')'
[05](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 04)-(01, 05): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

