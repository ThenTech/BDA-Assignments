[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'euro1'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 11): NAME(NAME) 'int'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 17): NAME(NAME) 'input'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 27): STRING(STRING) '"1 cent?"'
[01](01, 27)-(01, 28): RPAR(OP) ')'
[01](01, 28)-(01, 29): RPAR(OP) ')'
[01](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 05): NAME(NAME) 'euro2'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 11): NAME(NAME) 'int'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 17): NAME(NAME) 'input'
[02](01, 17)-(01, 18): LPAR(OP) '('
[02](01, 18)-(01, 28): STRING(STRING) '"2 cents?"'
[02](01, 28)-(01, 29): RPAR(OP) ')'
[02](01, 29)-(01, 30): RPAR(OP) ')'
[02](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'euro5'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 11): NAME(NAME) 'int'
[03](01, 11)-(01, 12): LPAR(OP) '('
[03](01, 12)-(01, 17): NAME(NAME) 'input'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 28): STRING(STRING) '"5 cents?"'
[03](01, 28)-(01, 29): RPAR(OP) ')'
[03](01, 29)-(01, 30): RPAR(OP) ')'
[03](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 06): NAME(NAME) 'euro10'
[04](01, 07)-(01, 08): EQUAL(OP) '='
[04](01, 09)-(01, 12): NAME(NAME) 'int'
[04](01, 12)-(01, 13): LPAR(OP) '('
[04](01, 13)-(01, 18): NAME(NAME) 'input'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 30): STRING(STRING) '"10 cents?"'
[04](01, 30)-(01, 31): RPAR(OP) ')'
[04](01, 31)-(01, 32): RPAR(OP) ')'
[04](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 06): NAME(NAME) 'euro20'
[05](01, 07)-(01, 08): EQUAL(OP) '='
[05](01, 09)-(01, 12): NAME(NAME) 'int'
[05](01, 12)-(01, 13): LPAR(OP) '('
[05](01, 13)-(01, 18): NAME(NAME) 'input'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 30): STRING(STRING) '"20 cents?"'
[05](01, 30)-(01, 31): RPAR(OP) ')'
[05](01, 31)-(01, 32): RPAR(OP) ')'
[05](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 05): NAME(NAME) 'total'
[06](01, 06)-(01, 07): EQUAL(OP) '='
[06](01, 08)-(01, 12): NUMBER(NUMBER) '0.01'
[06](01, 13)-(01, 14): STAR(OP) '*'
[06](01, 15)-(01, 20): NAME(NAME) 'euro1'
[06](01, 21)-(01, 22): PLUS(OP) '+'
[06](01, 23)-(01, 27): NUMBER(NUMBER) '0.02'
[06](01, 28)-(01, 29): STAR(OP) '*'
[06](01, 30)-(01, 35): NAME(NAME) 'euro2'
[06](01, 36)-(01, 37): PLUS(OP) '+'
[06](01, 38)-(01, 42): NUMBER(NUMBER) '0.05'
[06](01, 43)-(01, 44): STAR(OP) '*'
[06](01, 45)-(01, 50): NAME(NAME) 'euro5'
[06](01, 51)-(01, 52): PLUS(OP) '+'
[06](01, 53)-(01, 57): NUMBER(NUMBER) '0.10'
[06](01, 58)-(01, 59): STAR(OP) '*'
[06](01, 60)-(01, 66): NAME(NAME) 'euro10'
[06](01, 67)-(01, 68): PLUS(OP) '+'
[06](01, 69)-(01, 73): NUMBER(NUMBER) '0.20'
[06](01, 74)-(01, 75): STAR(OP) '*'
[06](01, 76)-(01, 82): NAME(NAME) 'euro20'
[06](01, 82)-(01, 83): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 05): NAME(NAME) 'print'
[07](01, 05)-(01, 06): LPAR(OP) '('
[07](01, 06)-(01, 17): STRING(STRING) '"You have "'
[07](01, 17)-(01, 18): COMMA(OP) ','
[07](01, 19)-(01, 24): NAME(NAME) 'total'
[07](01, 24)-(01, 25): COMMA(OP) ','
[07](01, 26)-(01, 33): STRING(STRING) '"euro!"'
[07](01, 33)-(01, 34): RPAR(OP) ')'
[07](01, 34)-(01, 35): NEWLINE(NEWLINE)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

