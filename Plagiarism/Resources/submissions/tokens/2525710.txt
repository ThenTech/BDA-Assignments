[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'total'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 11): NAME(NAME) 'int'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 17): NAME(NAME) 'input'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 37): STRING(STRING) '"Totaal eurocent: "'
[00](01, 37)-(01, 38): RPAR(OP) ')'
[00](01, 38)-(01, 39): RPAR(OP) ')'
[00](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'for'
[01](01, 04)-(01, 05): NAME(NAME) 'k'
[01](01, 06)-(01, 08): NAME(NAME) 'in'
[01](01, 09)-(01, 10): LSQB(OP) '['
[01](01, 10)-(01, 13): STRING(STRING) '"2"'
[01](01, 13)-(01, 14): COMMA(OP) ','
[01](01, 15)-(01, 18): STRING(STRING) '"1"'
[01](01, 18)-(01, 19): COMMA(OP) ','
[01](01, 20)-(01, 25): STRING(STRING) '"50c"'
[01](01, 25)-(01, 26): COMMA(OP) ','
[01](01, 27)-(01, 32): STRING(STRING) '"20c"'
[01](01, 32)-(01, 33): COMMA(OP) ','
[01](01, 34)-(01, 39): STRING(STRING) '"10c"'
[01](01, 39)-(01, 40): COMMA(OP) ','
[01](01, 41)-(01, 45): STRING(STRING) '"5c"'
[01](01, 45)-(01, 46): COMMA(OP) ','
[01](01, 47)-(01, 51): STRING(STRING) '"2c"'
[01](01, 51)-(01, 52): COMMA(OP) ','
[01](01, 53)-(01, 57): STRING(STRING) '"1c"'
[01](01, 57)-(01, 58): RSQB(OP) ']'
[01](01, 58)-(01, 59): COLON(OP) ':'
[01](01, 59)-(01, 60): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 08): NAME(NAME) 'k'
[02](01, 09)-(01, 11): EQEQUAL(OP) '=='
[02](01, 12)-(01, 15): STRING(STRING) '"2"'
[02](01, 16)-(01, 18): NAME(NAME) 'or'
[02](01, 19)-(01, 20): NAME(NAME) 'k'
[02](01, 21)-(01, 23): EQEQUAL(OP) '=='
[02](01, 24)-(01, 27): STRING(STRING) '"1"'
[02](01, 27)-(01, 28): COLON(OP) ':'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 13): NAME(NAME) 'print'
[03](01, 13)-(01, 14): LPAR(OP) '('
[03](01, 14)-(01, 15): NAME(NAME) 'k'
[03](01, 16)-(01, 17): PLUS(OP) '+'
[03](01, 18)-(01, 27): STRING(STRING) '"-euros:"'
[03](01, 27)-(01, 28): COMMA(OP) ','
[03](01, 29)-(01, 34): NAME(NAME) 'total'
[03](01, 35)-(01, 37): DOUBLESLASH(OP) '//'
[03](01, 38)-(01, 39): LPAR(OP) '('
[03](01, 39)-(01, 42): NAME(NAME) 'int'
[03](01, 42)-(01, 43): LPAR(OP) '('
[03](01, 43)-(01, 44): NAME(NAME) 'k'
[03](01, 44)-(01, 45): RPAR(OP) ')'
[03](01, 46)-(01, 47): STAR(OP) '*'
[03](01, 48)-(01, 51): NUMBER(NUMBER) '100'
[03](01, 51)-(01, 52): RPAR(OP) ')'
[03](01, 52)-(01, 53): RPAR(OP) ')'
[03](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'total'
[04](01, 14)-(01, 15): EQUAL(OP) '='
[04](01, 16)-(01, 21): NAME(NAME) 'total'
[04](01, 22)-(01, 23): PERCENT(OP) '%'
[04](01, 24)-(01, 25): LPAR(OP) '('
[04](01, 25)-(01, 28): NAME(NAME) 'int'
[04](01, 28)-(01, 29): LPAR(OP) '('
[04](01, 29)-(01, 30): NAME(NAME) 'k'
[04](01, 30)-(01, 31): RPAR(OP) ')'
[04](01, 32)-(01, 33): STAR(OP) '*'
[04](01, 34)-(01, 37): NUMBER(NUMBER) '100'
[04](01, 37)-(01, 38): RPAR(OP) ')'
[04](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'elif'
[05](01, 09)-(01, 10): NAME(NAME) 'k'
[05](01, 11)-(01, 13): EQEQUAL(OP) '=='
[05](01, 14)-(01, 19): STRING(STRING) '"50c"'
[05](01, 20)-(01, 22): NAME(NAME) 'or'
[05](01, 23)-(01, 24): NAME(NAME) 'k'
[05](01, 25)-(01, 27): EQEQUAL(OP) '=='
[05](01, 28)-(01, 33): STRING(STRING) '"20c"'
[05](01, 34)-(01, 36): NAME(NAME) 'or'
[05](01, 37)-(01, 38): NAME(NAME) 'k'
[05](01, 39)-(01, 41): EQEQUAL(OP) '=='
[05](01, 42)-(01, 47): STRING(STRING) '"10c"'
[05](01, 47)-(01, 48): COLON(OP) ':'
[05](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'print'
[06](01, 13)-(01, 14): LPAR(OP) '('
[06](01, 14)-(01, 15): NAME(NAME) 'k'
[06](01, 16)-(01, 17): PLUS(OP) '+'
[06](01, 18)-(01, 27): STRING(STRING) '"-euros:"'
[06](01, 27)-(01, 28): COMMA(OP) ','
[06](01, 29)-(01, 34): NAME(NAME) 'total'
[06](01, 35)-(01, 37): DOUBLESLASH(OP) '//'
[06](01, 38)-(01, 41): NAME(NAME) 'int'
[06](01, 41)-(01, 42): LPAR(OP) '('
[06](01, 42)-(01, 43): NAME(NAME) 'k'
[06](01, 43)-(01, 44): LSQB(OP) '['
[06](01, 44)-(01, 45): NUMBER(NUMBER) '0'
[06](01, 45)-(01, 46): COLON(OP) ':'
[06](01, 46)-(01, 47): NUMBER(NUMBER) '2'
[06](01, 47)-(01, 48): RSQB(OP) ']'
[06](01, 48)-(01, 49): RPAR(OP) ')'
[06](01, 49)-(01, 50): RPAR(OP) ')'
[06](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 13): NAME(NAME) 'total'
[07](01, 14)-(01, 15): EQUAL(OP) '='
[07](01, 16)-(01, 21): NAME(NAME) 'total'
[07](01, 22)-(01, 23): PERCENT(OP) '%'
[07](01, 24)-(01, 25): LPAR(OP) '('
[07](01, 25)-(01, 28): NAME(NAME) 'int'
[07](01, 28)-(01, 29): LPAR(OP) '('
[07](01, 29)-(01, 30): NAME(NAME) 'k'
[07](01, 30)-(01, 31): LSQB(OP) '['
[07](01, 31)-(01, 32): NUMBER(NUMBER) '0'
[07](01, 32)-(01, 33): COLON(OP) ':'
[07](01, 33)-(01, 34): NUMBER(NUMBER) '2'
[07](01, 34)-(01, 35): RSQB(OP) ']'
[07](01, 35)-(01, 36): RPAR(OP) ')'
[07](01, 36)-(01, 37): RPAR(OP) ')'
[07](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 08): NAME(NAME) 'else'
[08](01, 08)-(01, 09): COLON(OP) ':'
[08](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 13): NAME(NAME) 'print'
[09](01, 13)-(01, 14): LPAR(OP) '('
[09](01, 14)-(01, 15): NAME(NAME) 'k'
[09](01, 16)-(01, 17): PLUS(OP) '+'
[09](01, 18)-(01, 27): STRING(STRING) '"-euros:"'
[09](01, 27)-(01, 28): COMMA(OP) ','
[09](01, 29)-(01, 34): NAME(NAME) 'total'
[09](01, 35)-(01, 37): DOUBLESLASH(OP) '//'
[09](01, 38)-(01, 41): NAME(NAME) 'int'
[09](01, 41)-(01, 42): LPAR(OP) '('
[09](01, 42)-(01, 43): NAME(NAME) 'k'
[09](01, 43)-(01, 44): LSQB(OP) '['
[09](01, 44)-(01, 45): NUMBER(NUMBER) '0'
[09](01, 45)-(01, 46): RSQB(OP) ']'
[09](01, 46)-(01, 47): RPAR(OP) ')'
[09](01, 47)-(01, 48): RPAR(OP) ')'
[09](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 13): NAME(NAME) 'total'
[10](01, 14)-(01, 15): EQUAL(OP) '='
[10](01, 16)-(01, 21): NAME(NAME) 'total'
[10](01, 22)-(01, 23): PERCENT(OP) '%'
[10](01, 24)-(01, 27): NAME(NAME) 'int'
[10](01, 27)-(01, 28): LPAR(OP) '('
[10](01, 28)-(01, 29): NAME(NAME) 'k'
[10](01, 29)-(01, 30): LSQB(OP) '['
[10](01, 30)-(01, 31): NUMBER(NUMBER) '0'
[10](01, 31)-(01, 32): RSQB(OP) ']'
[10](01, 32)-(01, 33): RPAR(OP) ')'
[10](01, 33)-(01, 34): NEWLINE(NEWLINE)
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

