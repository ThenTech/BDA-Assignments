[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 12): NAME(NAME) 'sub_sets'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 17): NAME(NAME) 'list'
[00](01, 17)-(01, 18): RPAR(OP) ')'
[00](01, 18)-(01, 19): COLON(OP) ':'
[00](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'return'
[01](01, 11)-(01, 25): NAME(NAME) 'sub_sets_recur'
[01](01, 25)-(01, 26): LPAR(OP) '('
[01](01, 26)-(01, 27): LSQB(OP) '['
[01](01, 27)-(01, 28): RSQB(OP) ']'
[01](01, 28)-(01, 29): COMMA(OP) ','
[01](01, 30)-(01, 34): NAME(NAME) 'list'
[01](01, 34)-(01, 35): RPAR(OP) ')'
[01](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 18): NAME(NAME) 'sub_sets_recur'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 26): NAME(NAME) 'current'
[03](01, 26)-(01, 27): COMMA(OP) ','
[03](01, 28)-(01, 34): NAME(NAME) 'subset'
[03](01, 34)-(01, 35): RPAR(OP) ')'
[03](01, 35)-(01, 36): COLON(OP) ':'
[03](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 10): NAME(NAME) 'len'
[04](01, 10)-(01, 11): LPAR(OP) '('
[04](01, 11)-(01, 17): NAME(NAME) 'subset'
[04](01, 17)-(01, 18): RPAR(OP) ')'
[04](01, 19)-(01, 21): EQEQUAL(OP) '=='
[04](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[04](01, 23)-(01, 24): COLON(OP) ':'
[04](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 14): NAME(NAME) 'return'
[05](01, 15)-(01, 16): LSQB(OP) '['
[05](01, 16)-(01, 23): NAME(NAME) 'current'
[05](01, 23)-(01, 24): RSQB(OP) ']'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 10): NAME(NAME) 'return'
[06](01, 11)-(01, 25): NAME(NAME) 'sub_sets_recur'
[06](01, 25)-(01, 26): LPAR(OP) '('
[06](01, 26)-(01, 33): NAME(NAME) 'current'
[06](01, 33)-(01, 34): COMMA(OP) ','
[06](01, 35)-(01, 41): NAME(NAME) 'subset'
[06](01, 41)-(01, 42): LSQB(OP) '['
[06](01, 42)-(01, 43): NUMBER(NUMBER) '1'
[06](01, 43)-(01, 44): COLON(OP) ':'
[06](01, 44)-(01, 45): RSQB(OP) ']'
[06](01, 45)-(01, 46): RPAR(OP) ')'
[06](01, 46)-(01, 47): PLUS(OP) '+'
[06](01, 47)-(01, 61): NAME(NAME) 'sub_sets_recur'
[06](01, 61)-(01, 62): LPAR(OP) '('
[06](01, 62)-(01, 69): NAME(NAME) 'current'
[06](01, 69)-(01, 70): PLUS(OP) '+'
[06](01, 70)-(01, 76): NAME(NAME) 'subset'
[06](01, 76)-(01, 77): LSQB(OP) '['
[06](01, 77)-(01, 78): NUMBER(NUMBER) '0'
[06](01, 78)-(01, 79): RSQB(OP) ']'
[06](01, 79)-(01, 80): COMMA(OP) ','
[06](01, 81)-(01, 87): NAME(NAME) 'subset'
[06](01, 87)-(01, 88): LSQB(OP) '['
[06](01, 88)-(01, 89): NUMBER(NUMBER) '1'
[06](01, 89)-(01, 90): COLON(OP) ':'
[06](01, 90)-(01, 91): RSQB(OP) ']'
[06](01, 91)-(01, 92): RPAR(OP) ')'
[06](01, 92)-(01, 93): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 08)-(01, 09): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): NAME(NAME) 'data'
[08](01, 05)-(01, 06): EQUAL(OP) '='
[08](01, 07)-(01, 11): NAME(NAME) 'list'
[08](01, 11)-(01, 12): LPAR(OP) '('
[08](01, 12)-(01, 17): NAME(NAME) 'input'
[08](01, 17)-(01, 18): LPAR(OP) '('
[08](01, 18)-(01, 19): RPAR(OP) ')'
[08](01, 19)-(01, 20): RPAR(OP) ')'
[08](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): NAME(NAME) 'new_data'
[09](01, 09)-(01, 10): EQUAL(OP) '='
[09](01, 11)-(01, 19): NAME(NAME) 'sub_sets'
[09](01, 19)-(01, 20): LPAR(OP) '('
[09](01, 20)-(01, 24): NAME(NAME) 'data'
[09](01, 24)-(01, 25): RPAR(OP) ')'
[09](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 03): NAME(NAME) 'for'
[10](01, 04)-(01, 05): NAME(NAME) 'i'
[10](01, 06)-(01, 08): NAME(NAME) 'in'
[10](01, 09)-(01, 17): NAME(NAME) 'new_data'
[10](01, 17)-(01, 18): COLON(OP) ':'
[10](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 07): NAME(NAME) 'for'
[11](01, 08)-(01, 09): NAME(NAME) 'j'
[11](01, 10)-(01, 12): NAME(NAME) 'in'
[11](01, 13)-(01, 14): NAME(NAME) 'i'
[11](01, 14)-(01, 15): COLON(OP) ':'
[11](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 13): NAME(NAME) 'print'
[12](01, 13)-(01, 14): LPAR(OP) '('
[12](01, 14)-(01, 15): NAME(NAME) 'j'
[12](01, 15)-(01, 16): COMMA(OP) ','
[12](01, 17)-(01, 20): NAME(NAME) 'end'
[12](01, 20)-(01, 21): EQUAL(OP) '='
[12](01, 21)-(01, 23): STRING(STRING) '""'
[12](01, 23)-(01, 24): RPAR(OP) ')'
[12](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 09): NAME(NAME) 'print'
[13](01, 09)-(01, 10): LPAR(OP) '('
[13](01, 10)-(01, 11): RPAR(OP) ')'
[13](01, 11)-(01, 12): NEWLINE(NEWLINE)
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

