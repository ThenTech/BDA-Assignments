[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 13): NAME(NAME) 'substring'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 17): NAME(NAME) 'str'
[00](01, 17)-(01, 18): COMMA(OP) ','
[00](01, 19)-(01, 24): NAME(NAME) 'start'
[00](01, 24)-(01, 25): COMMA(OP) ','
[00](01, 26)-(01, 32): NAME(NAME) 'lenght'
[00](01, 32)-(01, 33): RPAR(OP) ')'
[00](01, 33)-(01, 34): COLON(OP) ':'
[00](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'new_str'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 16): STRING(STRING) '""'
[01](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 12): NAME(NAME) 'start'
[02](01, 12)-(01, 13): PLUS(OP) '+'
[02](01, 13)-(01, 19): NAME(NAME) 'lenght'
[02](01, 20)-(01, 21): GREATER(OP) '>'
[02](01, 22)-(01, 25): NAME(NAME) 'len'
[02](01, 25)-(01, 26): LPAR(OP) '('
[02](01, 26)-(01, 29): NAME(NAME) 'str'
[02](01, 29)-(01, 30): RPAR(OP) ')'
[02](01, 30)-(01, 31): COLON(OP) ':'
[02](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 14): NAME(NAME) 'return'
[03](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 18): NAME(NAME) 'range'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 24): NAME(NAME) 'start'
[04](01, 24)-(01, 25): PLUS(OP) '+'
[04](01, 25)-(01, 31): NAME(NAME) 'lenght'
[04](01, 31)-(01, 32): RPAR(OP) ')'
[04](01, 32)-(01, 33): COLON(OP) ':'
[04](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 12): NAME(NAME) 'i'
[05](01, 13)-(01, 15): GREATEREQUAL(OP) '>='
[05](01, 16)-(01, 21): NAME(NAME) 'start'
[05](01, 21)-(01, 22): COLON(OP) ':'
[05](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 19): NAME(NAME) 'new_str'
[06](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[06](01, 23)-(01, 26): NAME(NAME) 'str'
[06](01, 26)-(01, 27): LSQB(OP) '['
[06](01, 27)-(01, 28): NAME(NAME) 'i'
[06](01, 28)-(01, 29): RSQB(OP) ']'
[06](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'return'
[07](01, 11)-(01, 18): NAME(NAME) 'new_str'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'def'
[09](01, 04)-(01, 12): NAME(NAME) 'find_pos'
[09](01, 12)-(01, 13): LPAR(OP) '('
[09](01, 13)-(01, 17): NAME(NAME) 'word'
[09](01, 17)-(01, 18): COMMA(OP) ','
[09](01, 19)-(01, 26): NAME(NAME) 'stringy'
[09](01, 26)-(01, 27): RPAR(OP) ')'
[09](01, 27)-(01, 28): COLON(OP) ':'
[09](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 11): NAME(NAME) 'counter'
[10](01, 12)-(01, 13): EQUAL(OP) '='
[10](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[10](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 07): NAME(NAME) 'for'
[11](01, 08)-(01, 09): NAME(NAME) 'i'
[11](01, 10)-(01, 12): NAME(NAME) 'in'
[11](01, 13)-(01, 20): NAME(NAME) 'stringy'
[11](01, 20)-(01, 21): COLON(OP) ':'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 10): NAME(NAME) 'if'
[12](01, 11)-(01, 15): NAME(NAME) 'word'
[12](01, 15)-(01, 16): LSQB(OP) '['
[12](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[12](01, 17)-(01, 18): RSQB(OP) ']'
[12](01, 19)-(01, 21): EQEQUAL(OP) '=='
[12](01, 22)-(01, 23): NAME(NAME) 'i'
[12](01, 23)-(01, 24): COLON(OP) ':'
[12](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 14): NAME(NAME) 'if'
[13](01, 15)-(01, 24): NAME(NAME) 'substring'
[13](01, 24)-(01, 25): LPAR(OP) '('
[13](01, 25)-(01, 32): NAME(NAME) 'stringy'
[13](01, 32)-(01, 33): COMMA(OP) ','
[13](01, 34)-(01, 41): NAME(NAME) 'counter'
[13](01, 41)-(01, 42): COMMA(OP) ','
[13](01, 43)-(01, 46): NAME(NAME) 'len'
[13](01, 46)-(01, 47): LPAR(OP) '('
[13](01, 47)-(01, 51): NAME(NAME) 'word'
[13](01, 51)-(01, 52): RPAR(OP) ')'
[13](01, 52)-(01, 53): RPAR(OP) ')'
[13](01, 54)-(01, 56): EQEQUAL(OP) '=='
[13](01, 57)-(01, 61): NAME(NAME) 'word'
[13](01, 61)-(01, 62): COLON(OP) ':'
[13](01, 62)-(01, 63): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 22): NAME(NAME) 'return'
[14](01, 23)-(01, 30): NAME(NAME) 'counter'
[14](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 19): NAME(NAME) 'counter'
[15](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[15](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[15](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 12): NAME(NAME) 'else'
[16](01, 12)-(01, 13): COLON(OP) ':'
[16](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 19): NAME(NAME) 'counter'
[17](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[17](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[17](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 03): NAME(NAME) 'def'
[19](01, 04)-(01, 13): NAME(NAME) 'in_string'
[19](01, 13)-(01, 14): LPAR(OP) '('
[19](01, 14)-(01, 18): NAME(NAME) 'word'
[19](01, 18)-(01, 19): COMMA(OP) ','
[19](01, 20)-(01, 27): NAME(NAME) 'stringy'
[19](01, 27)-(01, 28): RPAR(OP) ')'
[19](01, 28)-(01, 29): COLON(OP) ':'
[19](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 06): NAME(NAME) 'if'
[20](01, 07)-(01, 15): NAME(NAME) 'find_pos'
[20](01, 15)-(01, 16): LPAR(OP) '('
[20](01, 16)-(01, 20): NAME(NAME) 'word'
[20](01, 20)-(01, 21): COMMA(OP) ','
[20](01, 22)-(01, 29): NAME(NAME) 'stringy'
[20](01, 29)-(01, 30): RPAR(OP) ')'
[20](01, 31)-(01, 33): EQEQUAL(OP) '=='
[20](01, 34)-(01, 38): NAME(NAME) 'None'
[20](01, 38)-(01, 39): COLON(OP) ':'
[20](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 14): NAME(NAME) 'return'
[21](01, 15)-(01, 20): NAME(NAME) 'False'
[21](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 08): NAME(NAME) 'else'
[22](01, 08)-(01, 09): COLON(OP) ':'
[22](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 14): NAME(NAME) 'return'
[23](01, 15)-(01, 19): NAME(NAME) 'True'
[23](01, 19)-(01, 20): NEWLINE(NEWLINE)
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

