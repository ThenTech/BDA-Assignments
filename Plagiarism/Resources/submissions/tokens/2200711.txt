[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 22): NAME(NAME) 'remove_punctuation'
[00](01, 22)-(01, 23): LPAR(OP) '('
[00](01, 23)-(01, 29): NAME(NAME) 'string'
[00](01, 29)-(01, 30): RPAR(OP) ')'
[00](01, 30)-(01, 31): COLON(OP) ':'
[00](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 14): NAME(NAME) 'new_string'
[01](01, 14)-(01, 15): EQUAL(OP) '='
[01](01, 15)-(01, 17): STRING(STRING) '""'
[01](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 19): NAME(NAME) 'verboden_tekens'
[02](01, 20)-(01, 21): EQUAL(OP) '='
[02](01, 22)-(01, 23): LSQB(OP) '['
[02](01, 23)-(01, 26): STRING(STRING) '","'
[02](01, 26)-(01, 27): COMMA(OP) ','
[02](01, 28)-(01, 31): STRING(STRING) '"!"'
[02](01, 31)-(01, 32): COMMA(OP) ','
[02](01, 33)-(01, 36): STRING(STRING) '"."'
[02](01, 36)-(01, 37): COMMA(OP) ','
[02](01, 37)-(01, 40): STRING(STRING) '":"'
[02](01, 40)-(01, 41): COMMA(OP) ','
[02](01, 41)-(01, 44): STRING(STRING) '"?"'
[02](01, 44)-(01, 45): COMMA(OP) ','
[02](01, 45)-(01, 48): STRING(STRING) '"0"'
[02](01, 48)-(01, 49): COMMA(OP) ','
[02](01, 49)-(01, 52): STRING(STRING) '"1"'
[02](01, 52)-(01, 53): COMMA(OP) ','
[02](01, 53)-(01, 56): STRING(STRING) '"2"'
[02](01, 56)-(01, 57): COMMA(OP) ','
[02](01, 57)-(01, 60): STRING(STRING) '"3"'
[02](01, 60)-(01, 61): COMMA(OP) ','
[02](01, 61)-(01, 64): STRING(STRING) '"4"'
[02](01, 64)-(01, 65): COMMA(OP) ','
[02](01, 65)-(01, 68): STRING(STRING) '"5"'
[02](01, 68)-(01, 69): COMMA(OP) ','
[02](01, 69)-(01, 72): STRING(STRING) '"6"'
[02](01, 72)-(01, 73): COMMA(OP) ','
[02](01, 73)-(01, 76): STRING(STRING) '"7"'
[02](01, 76)-(01, 77): COMMA(OP) ','
[02](01, 77)-(01, 80): STRING(STRING) '"8"'
[02](01, 80)-(01, 81): COMMA(OP) ','
[02](01, 81)-(01, 84): STRING(STRING) '"9"'
[02](01, 84)-(01, 85): RSQB(OP) ']'
[02](01, 85)-(01, 86): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'i'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 18): NAME(NAME) 'range'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[03](01, 21)-(01, 22): COMMA(OP) ','
[03](01, 23)-(01, 26): NAME(NAME) 'len'
[03](01, 26)-(01, 27): LPAR(OP) '('
[03](01, 27)-(01, 33): NAME(NAME) 'string'
[03](01, 33)-(01, 34): RPAR(OP) ')'
[03](01, 34)-(01, 35): RPAR(OP) ')'
[03](01, 35)-(01, 36): COLON(OP) ':'
[03](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'letter'
[04](01, 15)-(01, 16): EQUAL(OP) '='
[04](01, 17)-(01, 23): NAME(NAME) 'string'
[04](01, 23)-(01, 24): LSQB(OP) '['
[04](01, 24)-(01, 25): NAME(NAME) 'i'
[04](01, 25)-(01, 26): RSQB(OP) ']'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 17): NAME(NAME) 'letter'
[05](01, 18)-(01, 20): NAME(NAME) 'in'
[05](01, 21)-(01, 36): NAME(NAME) 'verboden_tekens'
[05](01, 36)-(01, 37): COLON(OP) ':'
[05](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 18): NAME(NAME) 'letter'
[06](01, 19)-(01, 20): EQUAL(OP) '='
[06](01, 21)-(01, 24): STRING(STRING) '" "'
[06](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 18): NAME(NAME) 'new_string'
[07](01, 19)-(01, 20): EQUAL(OP) '='
[07](01, 21)-(01, 31): NAME(NAME) 'new_string'
[07](01, 32)-(01, 33): PLUS(OP) '+'
[07](01, 34)-(01, 40): NAME(NAME) 'letter'
[07](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 10): NAME(NAME) 'return'
[08](01, 11)-(01, 21): NAME(NAME) 'new_string'
[08](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): NAME(NAME) 'lijn'
[10](01, 05)-(01, 06): EQUAL(OP) '='
[10](01, 07)-(01, 12): NAME(NAME) 'input'
[10](01, 12)-(01, 13): LPAR(OP) '('
[10](01, 13)-(01, 41): STRING(STRING) '"Geef een random string op."'
[10](01, 41)-(01, 42): RPAR(OP) ')'
[10](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 05): NAME(NAME) 'lijst'
[11](01, 06)-(01, 07): EQUAL(OP) '='
[11](01, 08)-(01, 26): NAME(NAME) 'remove_punctuation'
[11](01, 26)-(01, 27): LPAR(OP) '('
[11](01, 27)-(01, 31): NAME(NAME) 'lijn'
[11](01, 31)-(01, 32): RPAR(OP) ')'
[11](01, 32)-(01, 33): DOT(OP) '.'
[11](01, 33)-(01, 38): NAME(NAME) 'split'
[11](01, 38)-(01, 39): LPAR(OP) '('
[11](01, 39)-(01, 40): RPAR(OP) ')'
[11](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 03): NAME(NAME) 'for'
[12](01, 04)-(01, 05): NAME(NAME) 'i'
[12](01, 06)-(01, 08): NAME(NAME) 'in'
[12](01, 09)-(01, 14): NAME(NAME) 'range'
[12](01, 15)-(01, 16): LPAR(OP) '('
[12](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[12](01, 17)-(01, 18): COMMA(OP) ','
[12](01, 18)-(01, 21): NAME(NAME) 'len'
[12](01, 21)-(01, 22): LPAR(OP) '('
[12](01, 22)-(01, 27): NAME(NAME) 'lijst'
[12](01, 27)-(01, 28): RPAR(OP) ')'
[12](01, 28)-(01, 29): RPAR(OP) ')'
[12](01, 29)-(01, 30): COLON(OP) ':'
[12](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 09): NAME(NAME) 'woord'
[13](01, 10)-(01, 11): EQUAL(OP) '='
[13](01, 12)-(01, 17): NAME(NAME) 'lijst'
[13](01, 17)-(01, 18): LSQB(OP) '['
[13](01, 18)-(01, 19): NAME(NAME) 'i'
[13](01, 19)-(01, 20): RSQB(OP) ']'
[13](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 12): NAME(NAME) 'uitkomst'
[14](01, 13)-(01, 14): EQUAL(OP) '='
[14](01, 15)-(01, 18): NAME(NAME) 'len'
[14](01, 18)-(01, 19): LPAR(OP) '('
[14](01, 19)-(01, 24): NAME(NAME) 'woord'
[14](01, 24)-(01, 25): RPAR(OP) ')'
[14](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 09): NAME(NAME) 'print'
[15](01, 09)-(01, 10): LPAR(OP) '('
[15](01, 10)-(01, 15): NAME(NAME) 'woord'
[15](01, 15)-(01, 16): COMMA(OP) ','
[15](01, 17)-(01, 25): NAME(NAME) 'uitkomst'
[15](01, 25)-(01, 26): RPAR(OP) ')'
[15](01, 26)-(01, 27): NEWLINE(NEWLINE)
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

