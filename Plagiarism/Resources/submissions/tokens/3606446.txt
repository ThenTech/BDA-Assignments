[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 02): NAME(NAME) 'w1'
[00](01, 03)-(01, 04): EQUAL(OP) '='
[00](01, 05)-(01, 10): NAME(NAME) 'input'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): RPAR(OP) ')'
[00](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 02): NAME(NAME) 'w2'
[01](01, 03)-(01, 04): EQUAL(OP) '='
[01](01, 05)-(01, 10): NAME(NAME) 'input'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 12): RPAR(OP) ')'
[01](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 11): NAME(NAME) 'anagram'
[03](01, 11)-(01, 12): LPAR(OP) '('
[03](01, 12)-(01, 14): NAME(NAME) 'w1'
[03](01, 14)-(01, 15): COMMA(OP) ','
[03](01, 16)-(01, 18): NAME(NAME) 'w2'
[03](01, 18)-(01, 19): RPAR(OP) ')'
[03](01, 19)-(01, 20): COLON(OP) ':'
[03](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 14): NAME(NAME) 'letter'
[04](01, 15)-(01, 17): NAME(NAME) 'in'
[04](01, 18)-(01, 20): NAME(NAME) 'w2'
[04](01, 20)-(01, 21): COLON(OP) ':'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 17): NAME(NAME) 'letter'
[05](01, 18)-(01, 21): NAME(NAME) 'not'
[05](01, 22)-(01, 24): NAME(NAME) 'in'
[05](01, 25)-(01, 27): NAME(NAME) 'w1'
[05](01, 27)-(01, 28): COLON(OP) ':'
[05](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 18): NAME(NAME) 'return'
[06](01, 19)-(01, 21): NAME(NAME) 'w1'
[06](01, 22)-(01, 23): PLUS(OP) '+'
[06](01, 24)-(01, 31): STRING(STRING) '" and "'
[06](01, 32)-(01, 34): NAME(NAME) 'w2'
[06](01, 35)-(01, 50): STRING(STRING) '" are anagrams"'
[06](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'return'
[07](01, 11)-(01, 13): NAME(NAME) 'w1'
[07](01, 14)-(01, 15): PLUS(OP) '+'
[07](01, 16)-(01, 23): STRING(STRING) '" and "'
[07](01, 24)-(01, 26): NAME(NAME) 'w2'
[07](01, 27)-(01, 46): STRING(STRING) '" are not anagrams"'
[07](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 04)-(01, 05): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 07): NAME(NAME) 'anagram'
[09](01, 07)-(01, 08): LPAR(OP) '('
[09](01, 08)-(01, 10): NAME(NAME) 'w1'
[09](01, 10)-(01, 11): COMMA(OP) ','
[09](01, 12)-(01, 14): NAME(NAME) 'w2'
[09](01, 14)-(01, 15): RPAR(OP) ')'
[09](01, 15)-(01, 16): NEWLINE(NEWLINE)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

