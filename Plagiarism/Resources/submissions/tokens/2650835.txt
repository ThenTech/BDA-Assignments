[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 42): COMMENT(COMMENT) '# a version that returns a list of results'
[00](01, 42)-(01, 43): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'def'
[01](01, 04)-(01, 13): NAME(NAME) 'ss_helper'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 15): NAME(NAME) 's'
[01](01, 15)-(01, 16): COMMA(OP) ','
[01](01, 17)-(01, 24): NAME(NAME) 'current'
[01](01, 24)-(01, 25): RPAR(OP) ')'
[01](01, 25)-(01, 26): COLON(OP) ':'
[01](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 10): NAME(NAME) 'len'
[02](01, 10)-(01, 11): LPAR(OP) '('
[02](01, 11)-(01, 12): NAME(NAME) 's'
[02](01, 12)-(01, 13): RPAR(OP) ')'
[02](01, 14)-(01, 16): EQEQUAL(OP) '=='
[02](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[02](01, 18)-(01, 19): COLON(OP) ':'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 14): NAME(NAME) 'return'
[03](01, 15)-(01, 16): LSQB(OP) '['
[03](01, 16)-(01, 23): NAME(NAME) 'current'
[03](01, 23)-(01, 24): RSQB(OP) ']'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 08): NAME(NAME) 'else'
[04](01, 08)-(01, 09): COLON(OP) ':'
[04](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 12): NAME(NAME) 'head'
[05](01, 13)-(01, 14): EQUAL(OP) '='
[05](01, 15)-(01, 16): NAME(NAME) 's'
[05](01, 16)-(01, 17): LSQB(OP) '['
[05](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[05](01, 18)-(01, 19): RSQB(OP) ']'
[05](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 12): NAME(NAME) 'tail'
[06](01, 13)-(01, 14): EQUAL(OP) '='
[06](01, 15)-(01, 16): NAME(NAME) 's'
[06](01, 16)-(01, 17): LSQB(OP) '['
[06](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[06](01, 18)-(01, 19): COLON(OP) ':'
[06](01, 19)-(01, 20): RSQB(OP) ']'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 20): NAME(NAME) 'includedsets'
[07](01, 21)-(01, 22): EQUAL(OP) '='
[07](01, 23)-(01, 32): NAME(NAME) 'ss_helper'
[07](01, 32)-(01, 33): LPAR(OP) '('
[07](01, 33)-(01, 37): NAME(NAME) 'tail'
[07](01, 37)-(01, 38): COMMA(OP) ','
[07](01, 39)-(01, 46): NAME(NAME) 'current'
[07](01, 46)-(01, 47): RPAR(OP) ')'
[07](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 20): NAME(NAME) 'excludedsets'
[08](01, 21)-(01, 22): EQUAL(OP) '='
[08](01, 23)-(01, 32): NAME(NAME) 'ss_helper'
[08](01, 32)-(01, 33): LPAR(OP) '('
[08](01, 33)-(01, 37): NAME(NAME) 'tail'
[08](01, 37)-(01, 38): COMMA(OP) ','
[08](01, 39)-(01, 46): NAME(NAME) 'current'
[08](01, 47)-(01, 48): PLUS(OP) '+'
[08](01, 49)-(01, 50): LSQB(OP) '['
[08](01, 50)-(01, 54): NAME(NAME) 'head'
[08](01, 54)-(01, 55): RSQB(OP) ']'
[08](01, 55)-(01, 56): RPAR(OP) ')'
[08](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 14): NAME(NAME) 'return'
[09](01, 15)-(01, 27): NAME(NAME) 'includedsets'
[09](01, 28)-(01, 29): PLUS(OP) '+'
[09](01, 30)-(01, 42): NAME(NAME) 'excludedsets'
[09](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 03): NAME(NAME) 'def'
[11](01, 04)-(01, 11): NAME(NAME) 'subsets'
[11](01, 11)-(01, 12): LPAR(OP) '('
[11](01, 12)-(01, 13): NAME(NAME) 's'
[11](01, 13)-(01, 14): RPAR(OP) ')'
[11](01, 14)-(01, 15): COLON(OP) ':'
[11](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 10): NAME(NAME) 'return'
[12](01, 11)-(01, 20): NAME(NAME) 'ss_helper'
[12](01, 20)-(01, 21): LPAR(OP) '('
[12](01, 21)-(01, 22): NAME(NAME) 's'
[12](01, 22)-(01, 23): COMMA(OP) ','
[12](01, 24)-(01, 25): LSQB(OP) '['
[12](01, 25)-(01, 26): RSQB(OP) ']'
[12](01, 26)-(01, 27): RPAR(OP) ')'
[12](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 03): NAME(NAME) 'def'
[14](01, 04)-(01, 15): NAME(NAME) 'set_printer'
[14](01, 15)-(01, 16): LPAR(OP) '('
[14](01, 16)-(01, 21): NAME(NAME) 'lijst'
[14](01, 21)-(01, 22): RPAR(OP) ')'
[14](01, 22)-(01, 23): COLON(OP) ':'
[14](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'for'
[15](01, 08)-(01, 09): NAME(NAME) 'i'
[15](01, 10)-(01, 12): NAME(NAME) 'in'
[15](01, 13)-(01, 18): NAME(NAME) 'range'
[15](01, 18)-(01, 19): LPAR(OP) '('
[15](01, 19)-(01, 22): NAME(NAME) 'len'
[15](01, 22)-(01, 23): LPAR(OP) '('
[15](01, 23)-(01, 28): NAME(NAME) 'lijst'
[15](01, 28)-(01, 29): RPAR(OP) ')'
[15](01, 29)-(01, 30): RPAR(OP) ')'
[15](01, 30)-(01, 31): COLON(OP) ':'
[15](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 10): NAME(NAME) 'if'
[16](01, 11)-(01, 14): NAME(NAME) 'len'
[16](01, 14)-(01, 15): LPAR(OP) '('
[16](01, 15)-(01, 20): NAME(NAME) 'lijst'
[16](01, 20)-(01, 21): LSQB(OP) '['
[16](01, 21)-(01, 22): NAME(NAME) 'i'
[16](01, 22)-(01, 23): RSQB(OP) ']'
[16](01, 23)-(01, 24): RPAR(OP) ')'
[16](01, 25)-(01, 27): EQEQUAL(OP) '=='
[16](01, 28)-(01, 29): NAME(NAME) 'm'
[16](01, 29)-(01, 30): COLON(OP) ':'
[16](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 15): NAME(NAME) 'for'
[17](01, 16)-(01, 17): NAME(NAME) 'j'
[17](01, 18)-(01, 20): NAME(NAME) 'in'
[17](01, 21)-(01, 26): NAME(NAME) 'range'
[17](01, 26)-(01, 27): LPAR(OP) '('
[17](01, 27)-(01, 30): NAME(NAME) 'len'
[17](01, 30)-(01, 31): LPAR(OP) '('
[17](01, 31)-(01, 36): NAME(NAME) 'lijst'
[17](01, 36)-(01, 37): LSQB(OP) '['
[17](01, 37)-(01, 38): NAME(NAME) 'i'
[17](01, 38)-(01, 39): RSQB(OP) ']'
[17](01, 39)-(01, 40): RPAR(OP) ')'
[17](01, 40)-(01, 41): RPAR(OP) ')'
[17](01, 41)-(01, 42): COLON(OP) ':'
[17](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 18): NAME(NAME) 'if'
[18](01, 19)-(01, 20): NAME(NAME) 'j'
[18](01, 21)-(01, 23): EQEQUAL(OP) '=='
[18](01, 24)-(01, 27): NAME(NAME) 'len'
[18](01, 27)-(01, 28): LPAR(OP) '('
[18](01, 28)-(01, 33): NAME(NAME) 'lijst'
[18](01, 33)-(01, 34): LSQB(OP) '['
[18](01, 34)-(01, 35): NAME(NAME) 'i'
[18](01, 35)-(01, 36): RSQB(OP) ']'
[18](01, 36)-(01, 37): RPAR(OP) ')'
[18](01, 38)-(01, 39): MINUS(OP) '-'
[18](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[18](01, 41)-(01, 42): COLON(OP) ':'
[18](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 20): INDENT(INDENT) '                    '
[19](01, 20)-(01, 25): NAME(NAME) 'print'
[19](01, 25)-(01, 26): LPAR(OP) '('
[19](01, 26)-(01, 31): NAME(NAME) 'lijst'
[19](01, 31)-(01, 32): LSQB(OP) '['
[19](01, 32)-(01, 33): NAME(NAME) 'i'
[19](01, 33)-(01, 34): RSQB(OP) ']'
[19](01, 34)-(01, 35): LSQB(OP) '['
[19](01, 35)-(01, 36): NAME(NAME) 'j'
[19](01, 36)-(01, 37): RSQB(OP) ']'
[19](01, 37)-(01, 38): COMMA(OP) ','
[19](01, 39)-(01, 42): NAME(NAME) 'end'
[19](01, 42)-(01, 43): EQUAL(OP) '='
[19](01, 43)-(01, 45): STRING(STRING) '""'
[19](01, 45)-(01, 46): RPAR(OP) ')'
[19](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 16): INDENT(INDENT) '                '
[20](01, 16)-(01, 20): NAME(NAME) 'else'
[20](01, 20)-(01, 21): COLON(OP) ':'
[20](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 20): INDENT(INDENT) '                    '
[21](01, 20)-(01, 25): NAME(NAME) 'print'
[21](01, 25)-(01, 26): LPAR(OP) '('
[21](01, 26)-(01, 31): NAME(NAME) 'lijst'
[21](01, 31)-(01, 32): LSQB(OP) '['
[21](01, 32)-(01, 33): NAME(NAME) 'i'
[21](01, 33)-(01, 34): RSQB(OP) ']'
[21](01, 34)-(01, 35): LSQB(OP) '['
[21](01, 35)-(01, 36): NAME(NAME) 'j'
[21](01, 36)-(01, 37): RSQB(OP) ']'
[21](01, 37)-(01, 38): COMMA(OP) ','
[21](01, 39)-(01, 42): NAME(NAME) 'end'
[21](01, 42)-(01, 43): EQUAL(OP) '='
[21](01, 43)-(01, 46): STRING(STRING) '" "'
[21](01, 46)-(01, 47): RPAR(OP) ')'
[21](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 17): NAME(NAME) 'print'
[22](01, 17)-(01, 18): LPAR(OP) '('
[22](01, 18)-(01, 19): RPAR(OP) ')'
[22](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NAME(NAME) 'n'
[24](01, 02)-(01, 03): EQUAL(OP) '='
[24](01, 04)-(01, 07): NAME(NAME) 'int'
[24](01, 07)-(01, 08): LPAR(OP) '('
[24](01, 08)-(01, 13): NAME(NAME) 'input'
[24](01, 13)-(01, 14): LPAR(OP) '('
[24](01, 14)-(01, 26): STRING(STRING) '"Lengte set"'
[24](01, 26)-(01, 27): RPAR(OP) ')'
[24](01, 27)-(01, 28): RPAR(OP) ')'
[24](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NAME(NAME) 'm'
[25](01, 02)-(01, 03): EQUAL(OP) '='
[25](01, 04)-(01, 07): NAME(NAME) 'int'
[25](01, 07)-(01, 08): LPAR(OP) '('
[25](01, 08)-(01, 13): NAME(NAME) 'input'
[25](01, 13)-(01, 14): LPAR(OP) '('
[25](01, 14)-(01, 31): STRING(STRING) '"Maximaal aantal"'
[25](01, 31)-(01, 32): RPAR(OP) ')'
[25](01, 32)-(01, 33): RPAR(OP) ')'
[25](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): NAME(NAME) 'main_set'
[27](01, 09)-(01, 10): EQUAL(OP) '='
[27](01, 11)-(01, 12): LSQB(OP) '['
[27](01, 12)-(01, 13): NAME(NAME) 'i'
[27](01, 14)-(01, 17): NAME(NAME) 'for'
[27](01, 18)-(01, 19): NAME(NAME) 'i'
[27](01, 20)-(01, 22): NAME(NAME) 'in'
[27](01, 23)-(01, 28): NAME(NAME) 'range'
[27](01, 28)-(01, 29): LPAR(OP) '('
[27](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[27](01, 30)-(01, 31): COMMA(OP) ','
[27](01, 32)-(01, 33): NAME(NAME) 'n'
[27](01, 34)-(01, 35): PLUS(OP) '+'
[27](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[27](01, 37)-(01, 38): RPAR(OP) ')'
[27](01, 38)-(01, 39): RSQB(OP) ']'
[27](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 08): NAME(NAME) 'powerset'
[28](01, 09)-(01, 10): EQUAL(OP) '='
[28](01, 11)-(01, 18): NAME(NAME) 'subsets'
[28](01, 18)-(01, 19): LPAR(OP) '('
[28](01, 19)-(01, 27): NAME(NAME) 'main_set'
[28](01, 27)-(01, 28): RPAR(OP) ')'
[28](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 11): NAME(NAME) 'set_printer'
[30](01, 11)-(01, 12): LPAR(OP) '('
[30](01, 12)-(01, 20): NAME(NAME) 'powerset'
[30](01, 20)-(01, 21): RPAR(OP) ')'
[30](01, 21)-(01, 22): NEWLINE(NEWLINE)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

