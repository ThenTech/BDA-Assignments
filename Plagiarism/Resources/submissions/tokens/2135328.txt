[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'string'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 44): STRING(STRING) '"Give a word or a sentence: "'
[00](01, 44)-(01, 45): RPAR(OP) ')'
[00](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'length'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 12): NAME(NAME) 'len'
[01](01, 12)-(01, 13): LPAR(OP) '('
[01](01, 13)-(01, 19): NAME(NAME) 'string'
[01](01, 19)-(01, 20): RPAR(OP) ')'
[01](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): NAME(NAME) 'this'
[02](01, 05)-(01, 06): EQUAL(OP) '='
[02](01, 07)-(01, 08): NUMBER(NUMBER) '0'
[02](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 02): NAME(NAME) 'a1'
[03](01, 03)-(01, 04): EQUAL(OP) '='
[03](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[03](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 02): NAME(NAME) 'b1'
[04](01, 03)-(01, 04): EQUAL(OP) '='
[04](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[04](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 02): NAME(NAME) 'c1'
[05](01, 03)-(01, 04): EQUAL(OP) '='
[05](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[05](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 02): NAME(NAME) 'd1'
[06](01, 03)-(01, 04): EQUAL(OP) '='
[06](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[06](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 02): NAME(NAME) 'e1'
[07](01, 03)-(01, 04): EQUAL(OP) '='
[07](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[07](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 02): NAME(NAME) 'f1'
[08](01, 03)-(01, 04): EQUAL(OP) '='
[08](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[08](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 02): NAME(NAME) 'g1'
[09](01, 03)-(01, 04): EQUAL(OP) '='
[09](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[09](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 02): NAME(NAME) 'h1'
[10](01, 03)-(01, 04): EQUAL(OP) '='
[10](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[10](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 02): NAME(NAME) 'i1'
[11](01, 03)-(01, 04): EQUAL(OP) '='
[11](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[11](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 02): NAME(NAME) 'j1'
[12](01, 03)-(01, 04): EQUAL(OP) '='
[12](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[12](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 02): NAME(NAME) 'k1'
[13](01, 03)-(01, 04): EQUAL(OP) '='
[13](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[13](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 02): NAME(NAME) 'l1'
[14](01, 02)-(01, 03): EQUAL(OP) '='
[14](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[14](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 02): NAME(NAME) 'm1'
[15](01, 02)-(01, 03): EQUAL(OP) '='
[15](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[15](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 02): NAME(NAME) 'n1'
[16](01, 03)-(01, 04): EQUAL(OP) '='
[16](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[16](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 02): NAME(NAME) 'o1'
[17](01, 03)-(01, 04): EQUAL(OP) '='
[17](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[17](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 02): NAME(NAME) 'p1'
[18](01, 03)-(01, 04): EQUAL(OP) '='
[18](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[18](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 02): NAME(NAME) 'q1'
[19](01, 03)-(01, 04): EQUAL(OP) '='
[19](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[19](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 02): NAME(NAME) 'r1'
[20](01, 03)-(01, 04): EQUAL(OP) '='
[20](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[20](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 02): NAME(NAME) 's1'
[21](01, 03)-(01, 04): EQUAL(OP) '='
[21](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[21](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 02): NAME(NAME) 't1'
[22](01, 03)-(01, 04): EQUAL(OP) '='
[22](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[22](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 02): NAME(NAME) 'u1'
[23](01, 03)-(01, 04): EQUAL(OP) '='
[23](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[23](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 02): NAME(NAME) 'v1'
[24](01, 03)-(01, 04): EQUAL(OP) '='
[24](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[24](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 02): NAME(NAME) 'w1'
[25](01, 03)-(01, 04): EQUAL(OP) '='
[25](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[25](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 02): NAME(NAME) 'x1'
[26](01, 03)-(01, 04): EQUAL(OP) '='
[26](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[26](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 02): NAME(NAME) 'y1'
[27](01, 03)-(01, 04): EQUAL(OP) '='
[27](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[27](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 02): NAME(NAME) 'z1'
[28](01, 03)-(01, 04): EQUAL(OP) '='
[28](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[28](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 05): NAME(NAME) 'while'
[30](01, 06)-(01, 10): NAME(NAME) 'this'
[30](01, 11)-(01, 12): LESS(OP) '<'
[30](01, 13)-(01, 19): NAME(NAME) 'length'
[30](01, 19)-(01, 20): COLON(OP) ':'
[30](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 06): NAME(NAME) 'if'
[31](01, 07)-(01, 13): NAME(NAME) 'string'
[31](01, 13)-(01, 14): LSQB(OP) '['
[31](01, 14)-(01, 18): NAME(NAME) 'this'
[31](01, 18)-(01, 19): RSQB(OP) ']'
[31](01, 20)-(01, 22): NAME(NAME) 'in'
[31](01, 23)-(01, 24): LSQB(OP) '['
[31](01, 24)-(01, 27): STRING(STRING) '"a"'
[31](01, 27)-(01, 28): RSQB(OP) ']'
[31](01, 28)-(01, 29): COLON(OP) ':'
[31](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 10): NAME(NAME) 'a1'
[32](01, 11)-(01, 12): EQUAL(OP) '='
[32](01, 13)-(01, 15): NAME(NAME) 'a1'
[32](01, 16)-(01, 17): PLUS(OP) '+'
[32](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[32](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 12): NAME(NAME) 'this'
[33](01, 13)-(01, 14): EQUAL(OP) '='
[33](01, 15)-(01, 19): NAME(NAME) 'this'
[33](01, 20)-(01, 21): PLUS(OP) '+'
[33](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[33](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 08): NAME(NAME) 'elif'
[34](01, 09)-(01, 15): NAME(NAME) 'string'
[34](01, 15)-(01, 16): LSQB(OP) '['
[34](01, 16)-(01, 20): NAME(NAME) 'this'
[34](01, 20)-(01, 21): RSQB(OP) ']'
[34](01, 22)-(01, 24): NAME(NAME) 'in'
[34](01, 25)-(01, 26): LSQB(OP) '['
[34](01, 26)-(01, 29): STRING(STRING) '"b"'
[34](01, 29)-(01, 30): RSQB(OP) ']'
[34](01, 30)-(01, 31): COLON(OP) ':'
[34](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 10): NAME(NAME) 'b1'
[35](01, 11)-(01, 12): EQUAL(OP) '='
[35](01, 13)-(01, 15): NAME(NAME) 'b1'
[35](01, 16)-(01, 17): PLUS(OP) '+'
[35](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[35](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 08): INDENT(INDENT) '        '
[36](01, 08)-(01, 12): NAME(NAME) 'this'
[36](01, 13)-(01, 14): EQUAL(OP) '='
[36](01, 15)-(01, 19): NAME(NAME) 'this'
[36](01, 20)-(01, 21): PLUS(OP) '+'
[36](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[36](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 04): INDENT(INDENT) '    '
[37](01, 04)-(01, 08): NAME(NAME) 'elif'
[37](01, 09)-(01, 15): NAME(NAME) 'string'
[37](01, 15)-(01, 16): LSQB(OP) '['
[37](01, 16)-(01, 20): NAME(NAME) 'this'
[37](01, 20)-(01, 21): RSQB(OP) ']'
[37](01, 22)-(01, 24): NAME(NAME) 'in'
[37](01, 25)-(01, 26): LSQB(OP) '['
[37](01, 26)-(01, 29): STRING(STRING) '"c"'
[37](01, 29)-(01, 30): RSQB(OP) ']'
[37](01, 30)-(01, 31): COLON(OP) ':'
[37](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 08): INDENT(INDENT) '        '
[38](01, 08)-(01, 10): NAME(NAME) 'c1'
[38](01, 11)-(01, 12): EQUAL(OP) '='
[38](01, 13)-(01, 15): NAME(NAME) 'c1'
[38](01, 16)-(01, 17): PLUS(OP) '+'
[38](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[38](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 08): INDENT(INDENT) '        '
[39](01, 08)-(01, 12): NAME(NAME) 'this'
[39](01, 13)-(01, 14): EQUAL(OP) '='
[39](01, 15)-(01, 19): NAME(NAME) 'this'
[39](01, 20)-(01, 21): PLUS(OP) '+'
[39](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[39](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 04): INDENT(INDENT) '    '
[40](01, 04)-(01, 08): NAME(NAME) 'elif'
[40](01, 09)-(01, 15): NAME(NAME) 'string'
[40](01, 15)-(01, 16): LSQB(OP) '['
[40](01, 16)-(01, 20): NAME(NAME) 'this'
[40](01, 20)-(01, 21): RSQB(OP) ']'
[40](01, 22)-(01, 24): NAME(NAME) 'in'
[40](01, 25)-(01, 26): LSQB(OP) '['
[40](01, 26)-(01, 29): STRING(STRING) '"d"'
[40](01, 29)-(01, 30): RSQB(OP) ']'
[40](01, 30)-(01, 31): COLON(OP) ':'
[40](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 08): INDENT(INDENT) '        '
[41](01, 08)-(01, 10): NAME(NAME) 'd1'
[41](01, 11)-(01, 12): EQUAL(OP) '='
[41](01, 13)-(01, 15): NAME(NAME) 'd1'
[41](01, 16)-(01, 17): PLUS(OP) '+'
[41](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[41](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 08): INDENT(INDENT) '        '
[42](01, 08)-(01, 12): NAME(NAME) 'this'
[42](01, 13)-(01, 14): EQUAL(OP) '='
[42](01, 15)-(01, 19): NAME(NAME) 'this'
[42](01, 20)-(01, 21): PLUS(OP) '+'
[42](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[42](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 04): INDENT(INDENT) '    '
[43](01, 04)-(01, 08): NAME(NAME) 'elif'
[43](01, 09)-(01, 15): NAME(NAME) 'string'
[43](01, 15)-(01, 16): LSQB(OP) '['
[43](01, 16)-(01, 20): NAME(NAME) 'this'
[43](01, 20)-(01, 21): RSQB(OP) ']'
[43](01, 22)-(01, 24): NAME(NAME) 'in'
[43](01, 25)-(01, 26): LSQB(OP) '['
[43](01, 26)-(01, 29): STRING(STRING) '"e"'
[43](01, 29)-(01, 30): RSQB(OP) ']'
[43](01, 30)-(01, 31): COLON(OP) ':'
[43](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 08): INDENT(INDENT) '        '
[44](01, 08)-(01, 10): NAME(NAME) 'e1'
[44](01, 11)-(01, 12): EQUAL(OP) '='
[44](01, 13)-(01, 15): NAME(NAME) 'e1'
[44](01, 16)-(01, 17): PLUS(OP) '+'
[44](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[44](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 08): INDENT(INDENT) '        '
[45](01, 08)-(01, 12): NAME(NAME) 'this'
[45](01, 13)-(01, 14): EQUAL(OP) '='
[45](01, 15)-(01, 19): NAME(NAME) 'this'
[45](01, 20)-(01, 21): PLUS(OP) '+'
[45](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[45](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 04): INDENT(INDENT) '    '
[46](01, 04)-(01, 08): NAME(NAME) 'elif'
[46](01, 09)-(01, 15): NAME(NAME) 'string'
[46](01, 15)-(01, 16): LSQB(OP) '['
[46](01, 16)-(01, 20): NAME(NAME) 'this'
[46](01, 20)-(01, 21): RSQB(OP) ']'
[46](01, 22)-(01, 24): NAME(NAME) 'in'
[46](01, 25)-(01, 26): LSQB(OP) '['
[46](01, 26)-(01, 29): STRING(STRING) '"f"'
[46](01, 29)-(01, 30): RSQB(OP) ']'
[46](01, 30)-(01, 31): COLON(OP) ':'
[46](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 08): INDENT(INDENT) '        '
[47](01, 08)-(01, 10): NAME(NAME) 'f1'
[47](01, 11)-(01, 12): EQUAL(OP) '='
[47](01, 13)-(01, 15): NAME(NAME) 'f1'
[47](01, 16)-(01, 17): PLUS(OP) '+'
[47](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[47](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 08): INDENT(INDENT) '        '
[48](01, 08)-(01, 12): NAME(NAME) 'this'
[48](01, 13)-(01, 14): EQUAL(OP) '='
[48](01, 15)-(01, 19): NAME(NAME) 'this'
[48](01, 20)-(01, 21): PLUS(OP) '+'
[48](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[48](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 04): INDENT(INDENT) '    '
[49](01, 04)-(01, 08): NAME(NAME) 'elif'
[49](01, 09)-(01, 15): NAME(NAME) 'string'
[49](01, 15)-(01, 16): LSQB(OP) '['
[49](01, 16)-(01, 20): NAME(NAME) 'this'
[49](01, 20)-(01, 21): RSQB(OP) ']'
[49](01, 22)-(01, 24): NAME(NAME) 'in'
[49](01, 25)-(01, 26): LSQB(OP) '['
[49](01, 26)-(01, 29): STRING(STRING) '"g"'
[49](01, 29)-(01, 30): RSQB(OP) ']'
[49](01, 30)-(01, 31): COLON(OP) ':'
[49](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 08): INDENT(INDENT) '        '
[50](01, 08)-(01, 10): NAME(NAME) 'g1'
[50](01, 11)-(01, 12): EQUAL(OP) '='
[50](01, 13)-(01, 15): NAME(NAME) 'g1'
[50](01, 16)-(01, 17): PLUS(OP) '+'
[50](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[50](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 08): INDENT(INDENT) '        '
[51](01, 08)-(01, 12): NAME(NAME) 'this'
[51](01, 13)-(01, 14): EQUAL(OP) '='
[51](01, 15)-(01, 19): NAME(NAME) 'this'
[51](01, 20)-(01, 21): PLUS(OP) '+'
[51](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[51](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[51](02, 00)-(02, 00): DEDENT(DEDENT)
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 04): INDENT(INDENT) '    '
[52](01, 04)-(01, 08): NAME(NAME) 'elif'
[52](01, 09)-(01, 15): NAME(NAME) 'string'
[52](01, 15)-(01, 16): LSQB(OP) '['
[52](01, 16)-(01, 20): NAME(NAME) 'this'
[52](01, 20)-(01, 21): RSQB(OP) ']'
[52](01, 22)-(01, 24): NAME(NAME) 'in'
[52](01, 25)-(01, 26): LSQB(OP) '['
[52](01, 26)-(01, 29): STRING(STRING) '"h"'
[52](01, 29)-(01, 30): RSQB(OP) ']'
[52](01, 30)-(01, 31): COLON(OP) ':'
[52](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[52](02, 00)-(02, 00): DEDENT(DEDENT)
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 08): INDENT(INDENT) '        '
[53](01, 08)-(01, 10): NAME(NAME) 'h1'
[53](01, 11)-(01, 12): EQUAL(OP) '='
[53](01, 13)-(01, 15): NAME(NAME) 'h1'
[53](01, 16)-(01, 17): PLUS(OP) '+'
[53](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[53](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[53](02, 00)-(02, 00): DEDENT(DEDENT)
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 08): INDENT(INDENT) '        '
[54](01, 08)-(01, 12): NAME(NAME) 'this'
[54](01, 13)-(01, 14): EQUAL(OP) '='
[54](01, 15)-(01, 19): NAME(NAME) 'this'
[54](01, 20)-(01, 21): PLUS(OP) '+'
[54](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[54](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): DEDENT(DEDENT)
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 04): INDENT(INDENT) '    '
[55](01, 04)-(01, 08): NAME(NAME) 'elif'
[55](01, 09)-(01, 15): NAME(NAME) 'string'
[55](01, 15)-(01, 16): LSQB(OP) '['
[55](01, 16)-(01, 20): NAME(NAME) 'this'
[55](01, 20)-(01, 21): RSQB(OP) ']'
[55](01, 22)-(01, 24): NAME(NAME) 'in'
[55](01, 25)-(01, 26): LSQB(OP) '['
[55](01, 26)-(01, 29): STRING(STRING) '"i"'
[55](01, 29)-(01, 30): RSQB(OP) ']'
[55](01, 30)-(01, 31): COLON(OP) ':'
[55](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[55](02, 00)-(02, 00): DEDENT(DEDENT)
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[56](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[56](01, 00)-(01, 08): INDENT(INDENT) '        '
[56](01, 08)-(01, 10): NAME(NAME) 'i1'
[56](01, 11)-(01, 12): EQUAL(OP) '='
[56](01, 13)-(01, 15): NAME(NAME) 'i1'
[56](01, 16)-(01, 17): PLUS(OP) '+'
[56](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[56](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[56](02, 00)-(02, 00): DEDENT(DEDENT)
[56](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[57](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[57](01, 00)-(01, 08): INDENT(INDENT) '        '
[57](01, 08)-(01, 12): NAME(NAME) 'this'
[57](01, 13)-(01, 14): EQUAL(OP) '='
[57](01, 15)-(01, 19): NAME(NAME) 'this'
[57](01, 20)-(01, 21): PLUS(OP) '+'
[57](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[57](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[57](02, 00)-(02, 00): DEDENT(DEDENT)
[57](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[58](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[58](01, 00)-(01, 04): INDENT(INDENT) '    '
[58](01, 04)-(01, 08): NAME(NAME) 'elif'
[58](01, 09)-(01, 15): NAME(NAME) 'string'
[58](01, 15)-(01, 16): LSQB(OP) '['
[58](01, 16)-(01, 20): NAME(NAME) 'this'
[58](01, 20)-(01, 21): RSQB(OP) ']'
[58](01, 22)-(01, 24): NAME(NAME) 'in'
[58](01, 25)-(01, 26): LSQB(OP) '['
[58](01, 26)-(01, 29): STRING(STRING) '"j"'
[58](01, 29)-(01, 30): RSQB(OP) ']'
[58](01, 30)-(01, 31): COLON(OP) ':'
[58](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[58](02, 00)-(02, 00): DEDENT(DEDENT)
[58](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[59](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[59](01, 00)-(01, 08): INDENT(INDENT) '        '
[59](01, 08)-(01, 10): NAME(NAME) 'j1'
[59](01, 11)-(01, 12): EQUAL(OP) '='
[59](01, 13)-(01, 15): NAME(NAME) 'j1'
[59](01, 16)-(01, 17): PLUS(OP) '+'
[59](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[59](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[59](02, 00)-(02, 00): DEDENT(DEDENT)
[59](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[60](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[60](01, 00)-(01, 08): INDENT(INDENT) '        '
[60](01, 08)-(01, 12): NAME(NAME) 'this'
[60](01, 13)-(01, 14): EQUAL(OP) '='
[60](01, 15)-(01, 19): NAME(NAME) 'this'
[60](01, 20)-(01, 21): PLUS(OP) '+'
[60](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[60](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[60](02, 00)-(02, 00): DEDENT(DEDENT)
[60](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[61](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[61](01, 00)-(01, 04): INDENT(INDENT) '    '
[61](01, 04)-(01, 08): NAME(NAME) 'elif'
[61](01, 09)-(01, 15): NAME(NAME) 'string'
[61](01, 15)-(01, 16): LSQB(OP) '['
[61](01, 16)-(01, 20): NAME(NAME) 'this'
[61](01, 20)-(01, 21): RSQB(OP) ']'
[61](01, 22)-(01, 24): NAME(NAME) 'in'
[61](01, 25)-(01, 26): LSQB(OP) '['
[61](01, 26)-(01, 29): STRING(STRING) '"k"'
[61](01, 29)-(01, 30): RSQB(OP) ']'
[61](01, 30)-(01, 31): COLON(OP) ':'
[61](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[61](02, 00)-(02, 00): DEDENT(DEDENT)
[61](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[62](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[62](01, 00)-(01, 08): INDENT(INDENT) '        '
[62](01, 08)-(01, 10): NAME(NAME) 'k1'
[62](01, 11)-(01, 12): EQUAL(OP) '='
[62](01, 13)-(01, 15): NAME(NAME) 'k1'
[62](01, 16)-(01, 17): PLUS(OP) '+'
[62](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[62](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[62](02, 00)-(02, 00): DEDENT(DEDENT)
[62](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[63](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[63](01, 00)-(01, 08): INDENT(INDENT) '        '
[63](01, 08)-(01, 12): NAME(NAME) 'this'
[63](01, 13)-(01, 14): EQUAL(OP) '='
[63](01, 15)-(01, 19): NAME(NAME) 'this'
[63](01, 20)-(01, 21): PLUS(OP) '+'
[63](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[63](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[63](02, 00)-(02, 00): DEDENT(DEDENT)
[63](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[64](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[64](01, 00)-(01, 04): INDENT(INDENT) '    '
[64](01, 04)-(01, 08): NAME(NAME) 'elif'
[64](01, 09)-(01, 15): NAME(NAME) 'string'
[64](01, 15)-(01, 16): LSQB(OP) '['
[64](01, 16)-(01, 20): NAME(NAME) 'this'
[64](01, 20)-(01, 21): RSQB(OP) ']'
[64](01, 22)-(01, 24): NAME(NAME) 'in'
[64](01, 25)-(01, 26): LSQB(OP) '['
[64](01, 26)-(01, 29): STRING(STRING) '"l"'
[64](01, 29)-(01, 30): RSQB(OP) ']'
[64](01, 30)-(01, 31): COLON(OP) ':'
[64](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[64](02, 00)-(02, 00): DEDENT(DEDENT)
[64](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[65](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[65](01, 00)-(01, 08): INDENT(INDENT) '        '
[65](01, 08)-(01, 10): NAME(NAME) 'l1'
[65](01, 11)-(01, 12): EQUAL(OP) '='
[65](01, 13)-(01, 15): NAME(NAME) 'l1'
[65](01, 16)-(01, 17): PLUS(OP) '+'
[65](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[65](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[65](02, 00)-(02, 00): DEDENT(DEDENT)
[65](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[66](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[66](01, 00)-(01, 08): INDENT(INDENT) '        '
[66](01, 08)-(01, 12): NAME(NAME) 'this'
[66](01, 13)-(01, 14): EQUAL(OP) '='
[66](01, 15)-(01, 19): NAME(NAME) 'this'
[66](01, 20)-(01, 21): PLUS(OP) '+'
[66](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[66](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[66](02, 00)-(02, 00): DEDENT(DEDENT)
[66](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[67](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[67](01, 00)-(01, 04): INDENT(INDENT) '    '
[67](01, 04)-(01, 08): NAME(NAME) 'elif'
[67](01, 09)-(01, 15): NAME(NAME) 'string'
[67](01, 15)-(01, 16): LSQB(OP) '['
[67](01, 16)-(01, 20): NAME(NAME) 'this'
[67](01, 20)-(01, 21): RSQB(OP) ']'
[67](01, 22)-(01, 24): NAME(NAME) 'in'
[67](01, 25)-(01, 26): LSQB(OP) '['
[67](01, 26)-(01, 29): STRING(STRING) '"m"'
[67](01, 29)-(01, 30): RSQB(OP) ']'
[67](01, 30)-(01, 31): COLON(OP) ':'
[67](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[67](02, 00)-(02, 00): DEDENT(DEDENT)
[67](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[68](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[68](01, 00)-(01, 08): INDENT(INDENT) '        '
[68](01, 08)-(01, 10): NAME(NAME) 'm1'
[68](01, 11)-(01, 12): EQUAL(OP) '='
[68](01, 13)-(01, 15): NAME(NAME) 'm1'
[68](01, 16)-(01, 17): PLUS(OP) '+'
[68](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[68](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[68](02, 00)-(02, 00): DEDENT(DEDENT)
[68](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[69](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[69](01, 00)-(01, 08): INDENT(INDENT) '        '
[69](01, 08)-(01, 12): NAME(NAME) 'this'
[69](01, 13)-(01, 14): EQUAL(OP) '='
[69](01, 15)-(01, 19): NAME(NAME) 'this'
[69](01, 20)-(01, 21): PLUS(OP) '+'
[69](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[69](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[69](02, 00)-(02, 00): DEDENT(DEDENT)
[69](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[70](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[70](01, 00)-(01, 04): INDENT(INDENT) '    '
[70](01, 04)-(01, 08): NAME(NAME) 'elif'
[70](01, 09)-(01, 15): NAME(NAME) 'string'
[70](01, 15)-(01, 16): LSQB(OP) '['
[70](01, 16)-(01, 20): NAME(NAME) 'this'
[70](01, 20)-(01, 21): RSQB(OP) ']'
[70](01, 22)-(01, 24): NAME(NAME) 'in'
[70](01, 25)-(01, 26): LSQB(OP) '['
[70](01, 26)-(01, 29): STRING(STRING) '"n"'
[70](01, 29)-(01, 30): RSQB(OP) ']'
[70](01, 30)-(01, 31): COLON(OP) ':'
[70](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[70](02, 00)-(02, 00): DEDENT(DEDENT)
[70](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[71](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[71](01, 00)-(01, 08): INDENT(INDENT) '        '
[71](01, 08)-(01, 10): NAME(NAME) 'n1'
[71](01, 11)-(01, 12): EQUAL(OP) '='
[71](01, 13)-(01, 15): NAME(NAME) 'n1'
[71](01, 16)-(01, 17): PLUS(OP) '+'
[71](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[71](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[71](02, 00)-(02, 00): DEDENT(DEDENT)
[71](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[72](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[72](01, 00)-(01, 08): INDENT(INDENT) '        '
[72](01, 08)-(01, 12): NAME(NAME) 'this'
[72](01, 13)-(01, 14): EQUAL(OP) '='
[72](01, 15)-(01, 19): NAME(NAME) 'this'
[72](01, 20)-(01, 21): PLUS(OP) '+'
[72](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[72](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[72](02, 00)-(02, 00): DEDENT(DEDENT)
[72](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[73](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[73](01, 00)-(01, 04): INDENT(INDENT) '    '
[73](01, 04)-(01, 08): NAME(NAME) 'elif'
[73](01, 09)-(01, 15): NAME(NAME) 'string'
[73](01, 15)-(01, 16): LSQB(OP) '['
[73](01, 16)-(01, 20): NAME(NAME) 'this'
[73](01, 20)-(01, 21): RSQB(OP) ']'
[73](01, 22)-(01, 24): NAME(NAME) 'in'
[73](01, 25)-(01, 26): LSQB(OP) '['
[73](01, 26)-(01, 29): STRING(STRING) '"o"'
[73](01, 29)-(01, 30): RSQB(OP) ']'
[73](01, 30)-(01, 31): COLON(OP) ':'
[73](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[73](02, 00)-(02, 00): DEDENT(DEDENT)
[73](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[74](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[74](01, 00)-(01, 08): INDENT(INDENT) '        '
[74](01, 08)-(01, 10): NAME(NAME) 'o1'
[74](01, 11)-(01, 12): EQUAL(OP) '='
[74](01, 13)-(01, 15): NAME(NAME) 'o1'
[74](01, 16)-(01, 17): PLUS(OP) '+'
[74](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[74](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[74](02, 00)-(02, 00): DEDENT(DEDENT)
[74](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[75](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[75](01, 00)-(01, 08): INDENT(INDENT) '        '
[75](01, 08)-(01, 12): NAME(NAME) 'this'
[75](01, 13)-(01, 14): EQUAL(OP) '='
[75](01, 15)-(01, 19): NAME(NAME) 'this'
[75](01, 20)-(01, 21): PLUS(OP) '+'
[75](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[75](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[75](02, 00)-(02, 00): DEDENT(DEDENT)
[75](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[76](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[76](01, 00)-(01, 04): INDENT(INDENT) '    '
[76](01, 04)-(01, 08): NAME(NAME) 'elif'
[76](01, 09)-(01, 15): NAME(NAME) 'string'
[76](01, 15)-(01, 16): LSQB(OP) '['
[76](01, 16)-(01, 20): NAME(NAME) 'this'
[76](01, 20)-(01, 21): RSQB(OP) ']'
[76](01, 22)-(01, 24): NAME(NAME) 'in'
[76](01, 25)-(01, 26): LSQB(OP) '['
[76](01, 26)-(01, 29): STRING(STRING) '"p"'
[76](01, 29)-(01, 30): RSQB(OP) ']'
[76](01, 30)-(01, 31): COLON(OP) ':'
[76](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[76](02, 00)-(02, 00): DEDENT(DEDENT)
[76](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[77](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[77](01, 00)-(01, 08): INDENT(INDENT) '        '
[77](01, 08)-(01, 10): NAME(NAME) 'p1'
[77](01, 11)-(01, 12): EQUAL(OP) '='
[77](01, 13)-(01, 15): NAME(NAME) 'p1'
[77](01, 16)-(01, 17): PLUS(OP) '+'
[77](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[77](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[77](02, 00)-(02, 00): DEDENT(DEDENT)
[77](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[78](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[78](01, 00)-(01, 08): INDENT(INDENT) '        '
[78](01, 08)-(01, 12): NAME(NAME) 'this'
[78](01, 13)-(01, 14): EQUAL(OP) '='
[78](01, 15)-(01, 19): NAME(NAME) 'this'
[78](01, 20)-(01, 21): PLUS(OP) '+'
[78](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[78](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[78](02, 00)-(02, 00): DEDENT(DEDENT)
[78](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[79](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[79](01, 00)-(01, 04): INDENT(INDENT) '    '
[79](01, 04)-(01, 08): NAME(NAME) 'elif'
[79](01, 09)-(01, 15): NAME(NAME) 'string'
[79](01, 15)-(01, 16): LSQB(OP) '['
[79](01, 16)-(01, 20): NAME(NAME) 'this'
[79](01, 20)-(01, 21): RSQB(OP) ']'
[79](01, 22)-(01, 24): NAME(NAME) 'in'
[79](01, 25)-(01, 26): LSQB(OP) '['
[79](01, 26)-(01, 29): STRING(STRING) '"q"'
[79](01, 29)-(01, 30): RSQB(OP) ']'
[79](01, 30)-(01, 31): COLON(OP) ':'
[79](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[79](02, 00)-(02, 00): DEDENT(DEDENT)
[79](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[80](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[80](01, 00)-(01, 08): INDENT(INDENT) '        '
[80](01, 08)-(01, 10): NAME(NAME) 'q1'
[80](01, 11)-(01, 12): EQUAL(OP) '='
[80](01, 13)-(01, 15): NAME(NAME) 'q1'
[80](01, 16)-(01, 17): PLUS(OP) '+'
[80](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[80](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[80](02, 00)-(02, 00): DEDENT(DEDENT)
[80](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[81](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[81](01, 00)-(01, 08): INDENT(INDENT) '        '
[81](01, 08)-(01, 12): NAME(NAME) 'this'
[81](01, 13)-(01, 14): EQUAL(OP) '='
[81](01, 15)-(01, 19): NAME(NAME) 'this'
[81](01, 20)-(01, 21): PLUS(OP) '+'
[81](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[81](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[81](02, 00)-(02, 00): DEDENT(DEDENT)
[81](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[82](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[82](01, 00)-(01, 04): INDENT(INDENT) '    '
[82](01, 04)-(01, 08): NAME(NAME) 'elif'
[82](01, 09)-(01, 15): NAME(NAME) 'string'
[82](01, 15)-(01, 16): LSQB(OP) '['
[82](01, 16)-(01, 20): NAME(NAME) 'this'
[82](01, 20)-(01, 21): RSQB(OP) ']'
[82](01, 22)-(01, 24): NAME(NAME) 'in'
[82](01, 25)-(01, 26): LSQB(OP) '['
[82](01, 26)-(01, 29): STRING(STRING) '"r"'
[82](01, 29)-(01, 30): RSQB(OP) ']'
[82](01, 30)-(01, 31): COLON(OP) ':'
[82](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[82](02, 00)-(02, 00): DEDENT(DEDENT)
[82](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[83](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[83](01, 00)-(01, 08): INDENT(INDENT) '        '
[83](01, 08)-(01, 10): NAME(NAME) 'r1'
[83](01, 11)-(01, 12): EQUAL(OP) '='
[83](01, 13)-(01, 15): NAME(NAME) 'r1'
[83](01, 16)-(01, 17): PLUS(OP) '+'
[83](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[83](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[83](02, 00)-(02, 00): DEDENT(DEDENT)
[83](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[84](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[84](01, 00)-(01, 08): INDENT(INDENT) '        '
[84](01, 08)-(01, 12): NAME(NAME) 'this'
[84](01, 13)-(01, 14): EQUAL(OP) '='
[84](01, 15)-(01, 19): NAME(NAME) 'this'
[84](01, 20)-(01, 21): PLUS(OP) '+'
[84](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[84](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[84](02, 00)-(02, 00): DEDENT(DEDENT)
[84](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[85](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[85](01, 00)-(01, 04): INDENT(INDENT) '    '
[85](01, 04)-(01, 08): NAME(NAME) 'elif'
[85](01, 09)-(01, 15): NAME(NAME) 'string'
[85](01, 15)-(01, 16): LSQB(OP) '['
[85](01, 16)-(01, 20): NAME(NAME) 'this'
[85](01, 20)-(01, 21): RSQB(OP) ']'
[85](01, 22)-(01, 24): NAME(NAME) 'in'
[85](01, 25)-(01, 26): LSQB(OP) '['
[85](01, 26)-(01, 29): STRING(STRING) '"s"'
[85](01, 29)-(01, 30): RSQB(OP) ']'
[85](01, 30)-(01, 31): COLON(OP) ':'
[85](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[85](02, 00)-(02, 00): DEDENT(DEDENT)
[85](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[86](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[86](01, 00)-(01, 08): INDENT(INDENT) '        '
[86](01, 08)-(01, 10): NAME(NAME) 's1'
[86](01, 11)-(01, 12): EQUAL(OP) '='
[86](01, 13)-(01, 15): NAME(NAME) 's1'
[86](01, 16)-(01, 17): PLUS(OP) '+'
[86](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[86](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[86](02, 00)-(02, 00): DEDENT(DEDENT)
[86](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[87](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[87](01, 00)-(01, 08): INDENT(INDENT) '        '
[87](01, 08)-(01, 12): NAME(NAME) 'this'
[87](01, 13)-(01, 14): EQUAL(OP) '='
[87](01, 15)-(01, 19): NAME(NAME) 'this'
[87](01, 20)-(01, 21): PLUS(OP) '+'
[87](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[87](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[87](02, 00)-(02, 00): DEDENT(DEDENT)
[87](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[88](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[88](01, 00)-(01, 04): INDENT(INDENT) '    '
[88](01, 04)-(01, 08): NAME(NAME) 'elif'
[88](01, 09)-(01, 15): NAME(NAME) 'string'
[88](01, 15)-(01, 16): LSQB(OP) '['
[88](01, 16)-(01, 20): NAME(NAME) 'this'
[88](01, 20)-(01, 21): RSQB(OP) ']'
[88](01, 22)-(01, 24): NAME(NAME) 'in'
[88](01, 25)-(01, 26): LSQB(OP) '['
[88](01, 26)-(01, 29): STRING(STRING) '"t"'
[88](01, 29)-(01, 30): RSQB(OP) ']'
[88](01, 30)-(01, 31): COLON(OP) ':'
[88](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[88](02, 00)-(02, 00): DEDENT(DEDENT)
[88](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[89](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[89](01, 00)-(01, 08): INDENT(INDENT) '        '
[89](01, 08)-(01, 10): NAME(NAME) 't1'
[89](01, 11)-(01, 12): EQUAL(OP) '='
[89](01, 13)-(01, 15): NAME(NAME) 't1'
[89](01, 16)-(01, 17): PLUS(OP) '+'
[89](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[89](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[89](02, 00)-(02, 00): DEDENT(DEDENT)
[89](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[90](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[90](01, 00)-(01, 08): INDENT(INDENT) '        '
[90](01, 08)-(01, 12): NAME(NAME) 'this'
[90](01, 13)-(01, 14): EQUAL(OP) '='
[90](01, 15)-(01, 19): NAME(NAME) 'this'
[90](01, 20)-(01, 21): PLUS(OP) '+'
[90](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[90](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[90](02, 00)-(02, 00): DEDENT(DEDENT)
[90](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[91](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[91](01, 00)-(01, 04): INDENT(INDENT) '    '
[91](01, 04)-(01, 08): NAME(NAME) 'elif'
[91](01, 09)-(01, 15): NAME(NAME) 'string'
[91](01, 15)-(01, 16): LSQB(OP) '['
[91](01, 16)-(01, 20): NAME(NAME) 'this'
[91](01, 20)-(01, 21): RSQB(OP) ']'
[91](01, 22)-(01, 24): NAME(NAME) 'in'
[91](01, 25)-(01, 26): LSQB(OP) '['
[91](01, 26)-(01, 29): STRING(STRING) '"u"'
[91](01, 29)-(01, 30): RSQB(OP) ']'
[91](01, 30)-(01, 31): COLON(OP) ':'
[91](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[91](02, 00)-(02, 00): DEDENT(DEDENT)
[91](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[92](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[92](01, 00)-(01, 08): INDENT(INDENT) '        '
[92](01, 08)-(01, 10): NAME(NAME) 'u1'
[92](01, 11)-(01, 12): EQUAL(OP) '='
[92](01, 13)-(01, 15): NAME(NAME) 'u1'
[92](01, 16)-(01, 17): PLUS(OP) '+'
[92](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[92](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[92](02, 00)-(02, 00): DEDENT(DEDENT)
[92](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[93](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[93](01, 00)-(01, 08): INDENT(INDENT) '        '
[93](01, 08)-(01, 12): NAME(NAME) 'this'
[93](01, 13)-(01, 14): EQUAL(OP) '='
[93](01, 15)-(01, 19): NAME(NAME) 'this'
[93](01, 20)-(01, 21): PLUS(OP) '+'
[93](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[93](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[93](02, 00)-(02, 00): DEDENT(DEDENT)
[93](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[94](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[94](01, 00)-(01, 04): INDENT(INDENT) '    '
[94](01, 04)-(01, 08): NAME(NAME) 'elif'
[94](01, 09)-(01, 15): NAME(NAME) 'string'
[94](01, 15)-(01, 16): LSQB(OP) '['
[94](01, 16)-(01, 20): NAME(NAME) 'this'
[94](01, 20)-(01, 21): RSQB(OP) ']'
[94](01, 22)-(01, 24): NAME(NAME) 'in'
[94](01, 25)-(01, 26): LSQB(OP) '['
[94](01, 26)-(01, 29): STRING(STRING) '"v"'
[94](01, 29)-(01, 30): RSQB(OP) ']'
[94](01, 30)-(01, 31): COLON(OP) ':'
[94](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[94](02, 00)-(02, 00): DEDENT(DEDENT)
[94](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[95](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[95](01, 00)-(01, 08): INDENT(INDENT) '        '
[95](01, 08)-(01, 10): NAME(NAME) 'v1'
[95](01, 11)-(01, 12): EQUAL(OP) '='
[95](01, 13)-(01, 15): NAME(NAME) 'v1'
[95](01, 16)-(01, 17): PLUS(OP) '+'
[95](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[95](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[95](02, 00)-(02, 00): DEDENT(DEDENT)
[95](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[96](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[96](01, 00)-(01, 08): INDENT(INDENT) '        '
[96](01, 08)-(01, 12): NAME(NAME) 'this'
[96](01, 13)-(01, 14): EQUAL(OP) '='
[96](01, 15)-(01, 19): NAME(NAME) 'this'
[96](01, 20)-(01, 21): PLUS(OP) '+'
[96](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[96](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[96](02, 00)-(02, 00): DEDENT(DEDENT)
[96](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[97](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[97](01, 00)-(01, 04): INDENT(INDENT) '    '
[97](01, 04)-(01, 08): NAME(NAME) 'elif'
[97](01, 09)-(01, 15): NAME(NAME) 'string'
[97](01, 15)-(01, 16): LSQB(OP) '['
[97](01, 16)-(01, 20): NAME(NAME) 'this'
[97](01, 20)-(01, 21): RSQB(OP) ']'
[97](01, 22)-(01, 24): NAME(NAME) 'in'
[97](01, 25)-(01, 26): LSQB(OP) '['
[97](01, 26)-(01, 29): STRING(STRING) '"w"'
[97](01, 29)-(01, 30): RSQB(OP) ']'
[97](01, 30)-(01, 31): COLON(OP) ':'
[97](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[97](02, 00)-(02, 00): DEDENT(DEDENT)
[97](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[98](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[98](01, 00)-(01, 08): INDENT(INDENT) '        '
[98](01, 08)-(01, 10): NAME(NAME) 'w1'
[98](01, 11)-(01, 12): EQUAL(OP) '='
[98](01, 13)-(01, 15): NAME(NAME) 'w1'
[98](01, 16)-(01, 17): PLUS(OP) '+'
[98](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[98](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[98](02, 00)-(02, 00): DEDENT(DEDENT)
[98](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[99](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[99](01, 00)-(01, 08): INDENT(INDENT) '        '
[99](01, 08)-(01, 12): NAME(NAME) 'this'
[99](01, 13)-(01, 14): EQUAL(OP) '='
[99](01, 15)-(01, 19): NAME(NAME) 'this'
[99](01, 20)-(01, 21): PLUS(OP) '+'
[99](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[99](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[99](02, 00)-(02, 00): DEDENT(DEDENT)
[99](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[100](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[100](01, 00)-(01, 04): INDENT(INDENT) '    '
[100](01, 04)-(01, 08): NAME(NAME) 'elif'
[100](01, 09)-(01, 15): NAME(NAME) 'string'
[100](01, 15)-(01, 16): LSQB(OP) '['
[100](01, 16)-(01, 20): NAME(NAME) 'this'
[100](01, 20)-(01, 21): RSQB(OP) ']'
[100](01, 22)-(01, 24): NAME(NAME) 'in'
[100](01, 25)-(01, 26): LSQB(OP) '['
[100](01, 26)-(01, 29): STRING(STRING) '"x"'
[100](01, 29)-(01, 30): RSQB(OP) ']'
[100](01, 30)-(01, 31): COLON(OP) ':'
[100](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[100](02, 00)-(02, 00): DEDENT(DEDENT)
[100](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[101](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[101](01, 00)-(01, 08): INDENT(INDENT) '        '
[101](01, 08)-(01, 10): NAME(NAME) 'x1'
[101](01, 11)-(01, 12): EQUAL(OP) '='
[101](01, 13)-(01, 15): NAME(NAME) 'x1'
[101](01, 16)-(01, 17): PLUS(OP) '+'
[101](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[101](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[101](02, 00)-(02, 00): DEDENT(DEDENT)
[101](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[102](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[102](01, 00)-(01, 08): INDENT(INDENT) '        '
[102](01, 08)-(01, 12): NAME(NAME) 'this'
[102](01, 13)-(01, 14): EQUAL(OP) '='
[102](01, 15)-(01, 19): NAME(NAME) 'this'
[102](01, 20)-(01, 21): PLUS(OP) '+'
[102](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[102](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[102](02, 00)-(02, 00): DEDENT(DEDENT)
[102](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[103](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[103](01, 00)-(01, 04): INDENT(INDENT) '    '
[103](01, 04)-(01, 08): NAME(NAME) 'elif'
[103](01, 09)-(01, 15): NAME(NAME) 'string'
[103](01, 15)-(01, 16): LSQB(OP) '['
[103](01, 16)-(01, 20): NAME(NAME) 'this'
[103](01, 20)-(01, 21): RSQB(OP) ']'
[103](01, 22)-(01, 24): NAME(NAME) 'in'
[103](01, 25)-(01, 26): LSQB(OP) '['
[103](01, 26)-(01, 29): STRING(STRING) '"y"'
[103](01, 29)-(01, 30): RSQB(OP) ']'
[103](01, 30)-(01, 31): COLON(OP) ':'
[103](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[103](02, 00)-(02, 00): DEDENT(DEDENT)
[103](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[104](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[104](01, 00)-(01, 08): INDENT(INDENT) '        '
[104](01, 08)-(01, 10): NAME(NAME) 'y1'
[104](01, 11)-(01, 12): EQUAL(OP) '='
[104](01, 13)-(01, 15): NAME(NAME) 'y1'
[104](01, 16)-(01, 17): PLUS(OP) '+'
[104](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[104](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[104](02, 00)-(02, 00): DEDENT(DEDENT)
[104](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[105](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[105](01, 00)-(01, 08): INDENT(INDENT) '        '
[105](01, 08)-(01, 12): NAME(NAME) 'this'
[105](01, 13)-(01, 14): EQUAL(OP) '='
[105](01, 15)-(01, 19): NAME(NAME) 'this'
[105](01, 20)-(01, 21): PLUS(OP) '+'
[105](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[105](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[105](02, 00)-(02, 00): DEDENT(DEDENT)
[105](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[106](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[106](01, 00)-(01, 04): INDENT(INDENT) '    '
[106](01, 04)-(01, 08): NAME(NAME) 'elif'
[106](01, 09)-(01, 15): NAME(NAME) 'string'
[106](01, 15)-(01, 16): LSQB(OP) '['
[106](01, 16)-(01, 20): NAME(NAME) 'this'
[106](01, 20)-(01, 21): RSQB(OP) ']'
[106](01, 22)-(01, 24): NAME(NAME) 'in'
[106](01, 25)-(01, 26): LSQB(OP) '['
[106](01, 26)-(01, 29): STRING(STRING) '"z"'
[106](01, 29)-(01, 30): RSQB(OP) ']'
[106](01, 30)-(01, 31): COLON(OP) ':'
[106](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[106](02, 00)-(02, 00): DEDENT(DEDENT)
[106](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[107](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[107](01, 00)-(01, 08): INDENT(INDENT) '        '
[107](01, 08)-(01, 10): NAME(NAME) 'z1'
[107](01, 11)-(01, 12): EQUAL(OP) '='
[107](01, 13)-(01, 15): NAME(NAME) 'z1'
[107](01, 16)-(01, 17): PLUS(OP) '+'
[107](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[107](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[107](02, 00)-(02, 00): DEDENT(DEDENT)
[107](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[108](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[108](01, 00)-(01, 08): INDENT(INDENT) '        '
[108](01, 08)-(01, 12): NAME(NAME) 'this'
[108](01, 13)-(01, 14): EQUAL(OP) '='
[108](01, 15)-(01, 19): NAME(NAME) 'this'
[108](01, 20)-(01, 21): PLUS(OP) '+'
[108](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[108](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[108](02, 00)-(02, 00): DEDENT(DEDENT)
[108](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[109](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[109](01, 00)-(01, 01): NL(NL) '\n'
[109](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[110](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[110](01, 00)-(01, 05): NAME(NAME) 'print'
[110](01, 05)-(01, 06): LPAR(OP) '('
[110](01, 06)-(01, 10): STRING(STRING) '"a:"'
[110](01, 10)-(01, 11): COMMA(OP) ','
[110](01, 12)-(01, 14): NAME(NAME) 'a1'
[110](01, 14)-(01, 15): RPAR(OP) ')'
[110](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[110](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[111](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[111](01, 00)-(01, 05): NAME(NAME) 'print'
[111](01, 05)-(01, 06): LPAR(OP) '('
[111](01, 06)-(01, 10): STRING(STRING) '"b:"'
[111](01, 10)-(01, 11): COMMA(OP) ','
[111](01, 12)-(01, 14): NAME(NAME) 'b1'
[111](01, 14)-(01, 15): RPAR(OP) ')'
[111](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[111](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[112](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[112](01, 00)-(01, 05): NAME(NAME) 'print'
[112](01, 05)-(01, 06): LPAR(OP) '('
[112](01, 06)-(01, 10): STRING(STRING) '"c:"'
[112](01, 10)-(01, 11): COMMA(OP) ','
[112](01, 12)-(01, 14): NAME(NAME) 'c1'
[112](01, 14)-(01, 15): RPAR(OP) ')'
[112](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[112](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[113](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[113](01, 00)-(01, 05): NAME(NAME) 'print'
[113](01, 05)-(01, 06): LPAR(OP) '('
[113](01, 06)-(01, 10): STRING(STRING) '"d:"'
[113](01, 10)-(01, 11): COMMA(OP) ','
[113](01, 12)-(01, 14): NAME(NAME) 'd1'
[113](01, 14)-(01, 15): RPAR(OP) ')'
[113](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[113](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[114](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[114](01, 00)-(01, 05): NAME(NAME) 'print'
[114](01, 05)-(01, 06): LPAR(OP) '('
[114](01, 06)-(01, 10): STRING(STRING) '"e:"'
[114](01, 10)-(01, 11): COMMA(OP) ','
[114](01, 12)-(01, 14): NAME(NAME) 'e1'
[114](01, 14)-(01, 15): RPAR(OP) ')'
[114](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[114](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[115](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[115](01, 00)-(01, 05): NAME(NAME) 'print'
[115](01, 05)-(01, 06): LPAR(OP) '('
[115](01, 06)-(01, 10): STRING(STRING) '"f:"'
[115](01, 10)-(01, 11): COMMA(OP) ','
[115](01, 12)-(01, 14): NAME(NAME) 'f1'
[115](01, 14)-(01, 15): RPAR(OP) ')'
[115](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[115](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[116](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[116](01, 00)-(01, 05): NAME(NAME) 'print'
[116](01, 05)-(01, 06): LPAR(OP) '('
[116](01, 06)-(01, 10): STRING(STRING) '"g:"'
[116](01, 10)-(01, 11): COMMA(OP) ','
[116](01, 12)-(01, 14): NAME(NAME) 'g1'
[116](01, 14)-(01, 15): RPAR(OP) ')'
[116](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[116](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[117](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[117](01, 00)-(01, 05): NAME(NAME) 'print'
[117](01, 05)-(01, 06): LPAR(OP) '('
[117](01, 06)-(01, 10): STRING(STRING) '"h:"'
[117](01, 10)-(01, 11): COMMA(OP) ','
[117](01, 12)-(01, 14): NAME(NAME) 'h1'
[117](01, 14)-(01, 15): RPAR(OP) ')'
[117](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[117](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[118](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[118](01, 00)-(01, 05): NAME(NAME) 'print'
[118](01, 05)-(01, 06): LPAR(OP) '('
[118](01, 06)-(01, 10): STRING(STRING) '"i:"'
[118](01, 10)-(01, 11): COMMA(OP) ','
[118](01, 12)-(01, 14): NAME(NAME) 'i1'
[118](01, 14)-(01, 15): RPAR(OP) ')'
[118](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[118](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[119](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[119](01, 00)-(01, 05): NAME(NAME) 'print'
[119](01, 05)-(01, 06): LPAR(OP) '('
[119](01, 06)-(01, 10): STRING(STRING) '"j:"'
[119](01, 10)-(01, 11): COMMA(OP) ','
[119](01, 12)-(01, 14): NAME(NAME) 'j1'
[119](01, 14)-(01, 15): RPAR(OP) ')'
[119](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[119](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[120](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[120](01, 00)-(01, 05): NAME(NAME) 'print'
[120](01, 05)-(01, 06): LPAR(OP) '('
[120](01, 06)-(01, 10): STRING(STRING) '"k:"'
[120](01, 10)-(01, 11): COMMA(OP) ','
[120](01, 12)-(01, 14): NAME(NAME) 'k1'
[120](01, 14)-(01, 15): RPAR(OP) ')'
[120](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[120](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[121](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[121](01, 00)-(01, 05): NAME(NAME) 'print'
[121](01, 05)-(01, 06): LPAR(OP) '('
[121](01, 06)-(01, 10): STRING(STRING) '"l:"'
[121](01, 10)-(01, 11): COMMA(OP) ','
[121](01, 12)-(01, 14): NAME(NAME) 'l1'
[121](01, 14)-(01, 15): RPAR(OP) ')'
[121](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[121](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[122](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[122](01, 00)-(01, 05): NAME(NAME) 'print'
[122](01, 05)-(01, 06): LPAR(OP) '('
[122](01, 06)-(01, 10): STRING(STRING) '"m:"'
[122](01, 10)-(01, 11): COMMA(OP) ','
[122](01, 12)-(01, 14): NAME(NAME) 'm1'
[122](01, 14)-(01, 15): RPAR(OP) ')'
[122](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[122](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[123](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[123](01, 00)-(01, 05): NAME(NAME) 'print'
[123](01, 05)-(01, 06): LPAR(OP) '('
[123](01, 06)-(01, 10): STRING(STRING) '"n:"'
[123](01, 10)-(01, 11): COMMA(OP) ','
[123](01, 12)-(01, 14): NAME(NAME) 'n1'
[123](01, 14)-(01, 15): RPAR(OP) ')'
[123](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[123](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[124](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[124](01, 00)-(01, 05): NAME(NAME) 'print'
[124](01, 05)-(01, 06): LPAR(OP) '('
[124](01, 06)-(01, 10): STRING(STRING) '"o:"'
[124](01, 10)-(01, 11): COMMA(OP) ','
[124](01, 12)-(01, 14): NAME(NAME) 'o1'
[124](01, 14)-(01, 15): RPAR(OP) ')'
[124](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[124](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[125](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[125](01, 00)-(01, 05): NAME(NAME) 'print'
[125](01, 05)-(01, 06): LPAR(OP) '('
[125](01, 06)-(01, 10): STRING(STRING) '"p:"'
[125](01, 10)-(01, 11): COMMA(OP) ','
[125](01, 12)-(01, 14): NAME(NAME) 'p1'
[125](01, 14)-(01, 15): RPAR(OP) ')'
[125](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[125](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[126](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[126](01, 00)-(01, 05): NAME(NAME) 'print'
[126](01, 05)-(01, 06): LPAR(OP) '('
[126](01, 06)-(01, 10): STRING(STRING) '"q:"'
[126](01, 10)-(01, 11): COMMA(OP) ','
[126](01, 12)-(01, 14): NAME(NAME) 'q1'
[126](01, 14)-(01, 15): RPAR(OP) ')'
[126](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[126](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[127](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[127](01, 00)-(01, 05): NAME(NAME) 'print'
[127](01, 05)-(01, 06): LPAR(OP) '('
[127](01, 06)-(01, 10): STRING(STRING) '"r:"'
[127](01, 10)-(01, 11): COMMA(OP) ','
[127](01, 12)-(01, 14): NAME(NAME) 'r1'
[127](01, 14)-(01, 15): RPAR(OP) ')'
[127](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[127](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[128](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[128](01, 00)-(01, 05): NAME(NAME) 'print'
[128](01, 05)-(01, 06): LPAR(OP) '('
[128](01, 06)-(01, 10): STRING(STRING) '"s:"'
[128](01, 10)-(01, 11): COMMA(OP) ','
[128](01, 12)-(01, 14): NAME(NAME) 's1'
[128](01, 14)-(01, 15): RPAR(OP) ')'
[128](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[128](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[129](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[129](01, 00)-(01, 05): NAME(NAME) 'print'
[129](01, 05)-(01, 06): LPAR(OP) '('
[129](01, 06)-(01, 10): STRING(STRING) '"t:"'
[129](01, 10)-(01, 11): COMMA(OP) ','
[129](01, 12)-(01, 14): NAME(NAME) 't1'
[129](01, 14)-(01, 15): RPAR(OP) ')'
[129](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[129](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[130](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[130](01, 00)-(01, 05): NAME(NAME) 'print'
[130](01, 05)-(01, 06): LPAR(OP) '('
[130](01, 06)-(01, 10): STRING(STRING) '"u:"'
[130](01, 10)-(01, 11): COMMA(OP) ','
[130](01, 12)-(01, 14): NAME(NAME) 'u1'
[130](01, 14)-(01, 15): RPAR(OP) ')'
[130](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[130](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[131](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[131](01, 00)-(01, 05): NAME(NAME) 'print'
[131](01, 05)-(01, 06): LPAR(OP) '('
[131](01, 06)-(01, 10): STRING(STRING) '"v:"'
[131](01, 10)-(01, 11): COMMA(OP) ','
[131](01, 12)-(01, 14): NAME(NAME) 'v1'
[131](01, 14)-(01, 15): RPAR(OP) ')'
[131](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[131](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[132](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[132](01, 00)-(01, 05): NAME(NAME) 'print'
[132](01, 05)-(01, 06): LPAR(OP) '('
[132](01, 06)-(01, 10): STRING(STRING) '"w:"'
[132](01, 10)-(01, 11): COMMA(OP) ','
[132](01, 12)-(01, 14): NAME(NAME) 'w1'
[132](01, 14)-(01, 15): RPAR(OP) ')'
[132](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[132](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[133](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[133](01, 00)-(01, 05): NAME(NAME) 'print'
[133](01, 05)-(01, 06): LPAR(OP) '('
[133](01, 06)-(01, 10): STRING(STRING) '"x:"'
[133](01, 10)-(01, 11): COMMA(OP) ','
[133](01, 12)-(01, 14): NAME(NAME) 'x1'
[133](01, 14)-(01, 15): RPAR(OP) ')'
[133](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[133](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[134](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[134](01, 00)-(01, 05): NAME(NAME) 'print'
[134](01, 05)-(01, 06): LPAR(OP) '('
[134](01, 06)-(01, 10): STRING(STRING) '"y:"'
[134](01, 10)-(01, 11): COMMA(OP) ','
[134](01, 12)-(01, 14): NAME(NAME) 'y1'
[134](01, 14)-(01, 15): RPAR(OP) ')'
[134](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[134](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[135](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[135](01, 00)-(01, 05): NAME(NAME) 'print'
[135](01, 05)-(01, 06): LPAR(OP) '('
[135](01, 06)-(01, 10): STRING(STRING) '"z:"'
[135](01, 10)-(01, 11): COMMA(OP) ','
[135](01, 12)-(01, 14): NAME(NAME) 'z1'
[135](01, 14)-(01, 15): RPAR(OP) ')'
[135](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[135](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

