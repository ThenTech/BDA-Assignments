[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'remove_punc'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 24): NAME(NAME) 'sentence'
[00](01, 24)-(01, 25): RPAR(OP) ')'
[00](01, 25)-(01, 26): COLON(OP) ':'
[00](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 13): NAME(NAME) 'sans_punc'
[01](01, 14)-(01, 15): EQUAL(OP) '='
[01](01, 16)-(01, 18): STRING(STRING) '""'
[01](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 21): NAME(NAME) 'sentence'
[02](01, 21)-(01, 22): COLON(OP) ':'
[02](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 14): STRING(STRING) '"a"'
[03](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[03](01, 18)-(01, 19): NAME(NAME) 'i'
[03](01, 20)-(01, 22): LESSEQUAL(OP) '<='
[03](01, 23)-(01, 26): STRING(STRING) '"z"'
[03](01, 27)-(01, 29): NAME(NAME) 'or'
[03](01, 30)-(01, 33): STRING(STRING) '"A"'
[03](01, 34)-(01, 36): LESSEQUAL(OP) '<='
[03](01, 37)-(01, 38): NAME(NAME) 'i'
[03](01, 39)-(01, 41): LESSEQUAL(OP) '<='
[03](01, 42)-(01, 45): STRING(STRING) '"Z"'
[03](01, 45)-(01, 46): COLON(OP) ':'
[03](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 21): NAME(NAME) 'sans_punc'
[04](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[04](01, 25)-(01, 26): NAME(NAME) 'i'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'return'
[05](01, 11)-(01, 20): NAME(NAME) 'sans_punc'
[05](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 03): NAME(NAME) 'def'
[08](01, 04)-(01, 16): NAME(NAME) 'remove_upper'
[08](01, 16)-(01, 17): LPAR(OP) '('
[08](01, 17)-(01, 26): NAME(NAME) 'sans_punc'
[08](01, 26)-(01, 27): RPAR(OP) ')'
[08](01, 27)-(01, 28): COLON(OP) ':'
[08](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 14): NAME(NAME) 'sans_upper'
[09](01, 15)-(01, 16): EQUAL(OP) '='
[09](01, 17)-(01, 19): STRING(STRING) '""'
[09](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 07): NAME(NAME) 'for'
[10](01, 08)-(01, 09): NAME(NAME) 'i'
[10](01, 10)-(01, 12): NAME(NAME) 'in'
[10](01, 13)-(01, 22): NAME(NAME) 'sans_punc'
[10](01, 22)-(01, 23): COLON(OP) ':'
[10](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 14): STRING(STRING) '"A"'
[11](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[11](01, 18)-(01, 19): NAME(NAME) 'i'
[11](01, 20)-(01, 22): LESSEQUAL(OP) '<='
[11](01, 23)-(01, 26): STRING(STRING) '"Z"'
[11](01, 26)-(01, 27): COLON(OP) ':'
[11](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 18): NAME(NAME) 'result'
[12](01, 19)-(01, 20): EQUAL(OP) '='
[12](01, 21)-(01, 24): NAME(NAME) 'chr'
[12](01, 24)-(01, 25): LPAR(OP) '('
[12](01, 25)-(01, 28): NAME(NAME) 'ord'
[12](01, 28)-(01, 29): LPAR(OP) '('
[12](01, 29)-(01, 30): NAME(NAME) 'i'
[12](01, 30)-(01, 31): RPAR(OP) ')'
[12](01, 32)-(01, 33): MINUS(OP) '-'
[12](01, 34)-(01, 37): NAME(NAME) 'ord'
[12](01, 37)-(01, 38): LPAR(OP) '('
[12](01, 38)-(01, 41): STRING(STRING) '"A"'
[12](01, 41)-(01, 42): RPAR(OP) ')'
[12](01, 43)-(01, 44): PLUS(OP) '+'
[12](01, 45)-(01, 48): NAME(NAME) 'ord'
[12](01, 48)-(01, 49): LPAR(OP) '('
[12](01, 49)-(01, 52): STRING(STRING) '"a"'
[12](01, 52)-(01, 53): RPAR(OP) ')'
[12](01, 53)-(01, 54): RPAR(OP) ')'
[12](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 22): NAME(NAME) 'sans_upper'
[13](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[13](01, 26)-(01, 32): NAME(NAME) 'result'
[13](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 12): NAME(NAME) 'else'
[14](01, 12)-(01, 13): COLON(OP) ':'
[14](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 22): NAME(NAME) 'sans_upper'
[15](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[15](01, 26)-(01, 27): NAME(NAME) 'i'
[15](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 10): NAME(NAME) 'return'
[16](01, 11)-(01, 21): NAME(NAME) 'sans_upper'
[16](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 03): NAME(NAME) 'def'
[19](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[19](01, 26)-(01, 27): LPAR(OP) '('
[19](01, 27)-(01, 35): NAME(NAME) 'sentence'
[19](01, 35)-(01, 36): RPAR(OP) ')'
[19](01, 36)-(01, 37): COLON(OP) ':'
[19](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 09): NAME(NAME) 'palin'
[20](01, 10)-(01, 11): EQUAL(OP) '='
[20](01, 12)-(01, 16): NAME(NAME) 'True'
[20](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 13): NAME(NAME) 'sans_punc'
[21](01, 14)-(01, 15): EQUAL(OP) '='
[21](01, 16)-(01, 27): NAME(NAME) 'remove_punc'
[21](01, 27)-(01, 28): LPAR(OP) '('
[21](01, 28)-(01, 36): NAME(NAME) 'sentence'
[21](01, 36)-(01, 37): RPAR(OP) ')'
[21](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 12): NAME(NAME) 'no_upper'
[22](01, 13)-(01, 14): EQUAL(OP) '='
[22](01, 15)-(01, 27): NAME(NAME) 'remove_upper'
[22](01, 27)-(01, 28): LPAR(OP) '('
[22](01, 28)-(01, 37): NAME(NAME) 'sans_punc'
[22](01, 37)-(01, 38): RPAR(OP) ')'
[22](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 07): NAME(NAME) 'for'
[23](01, 08)-(01, 09): NAME(NAME) 'i'
[23](01, 10)-(01, 12): NAME(NAME) 'in'
[23](01, 13)-(01, 18): NAME(NAME) 'range'
[23](01, 18)-(01, 19): LPAR(OP) '('
[23](01, 19)-(01, 22): NAME(NAME) 'len'
[23](01, 22)-(01, 23): LPAR(OP) '('
[23](01, 23)-(01, 31): NAME(NAME) 'no_upper'
[23](01, 31)-(01, 32): RPAR(OP) ')'
[23](01, 32)-(01, 33): RPAR(OP) ')'
[23](01, 33)-(01, 34): COLON(OP) ':'
[23](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 13): NAME(NAME) 'palin'
[24](01, 14)-(01, 15): EQUAL(OP) '='
[24](01, 16)-(01, 24): NAME(NAME) 'no_upper'
[24](01, 24)-(01, 25): LSQB(OP) '['
[24](01, 25)-(01, 26): NAME(NAME) 'i'
[24](01, 26)-(01, 27): RSQB(OP) ']'
[24](01, 28)-(01, 30): EQEQUAL(OP) '=='
[24](01, 31)-(01, 39): NAME(NAME) 'no_upper'
[24](01, 39)-(01, 40): LSQB(OP) '['
[24](01, 40)-(01, 43): NAME(NAME) 'len'
[24](01, 43)-(01, 44): LPAR(OP) '('
[24](01, 44)-(01, 52): NAME(NAME) 'no_upper'
[24](01, 52)-(01, 53): RPAR(OP) ')'
[24](01, 54)-(01, 55): MINUS(OP) '-'
[24](01, 56)-(01, 57): NAME(NAME) 'i'
[24](01, 58)-(01, 59): MINUS(OP) '-'
[24](01, 60)-(01, 61): NUMBER(NUMBER) '1'
[24](01, 61)-(01, 62): RSQB(OP) ']'
[24](01, 62)-(01, 63): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 08): INDENT(INDENT) '        '
[25](01, 08)-(01, 10): NAME(NAME) 'if'
[25](01, 11)-(01, 16): NAME(NAME) 'palin'
[25](01, 16)-(01, 17): COLON(OP) ':'
[25](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 12): INDENT(INDENT) '            '
[26](01, 12)-(01, 13): NAME(NAME) 'i'
[26](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[26](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[26](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 12): NAME(NAME) 'else'
[27](01, 12)-(01, 13): COLON(OP) ':'
[27](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 18): NAME(NAME) 'return'
[28](01, 19)-(01, 24): NAME(NAME) 'palin'
[28](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 10): NAME(NAME) 'return'
[29](01, 11)-(01, 16): NAME(NAME) 'palin'
[29](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 01): NL(NL) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 03): NAME(NAME) 'def'
[31](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[31](01, 26)-(01, 27): LPAR(OP) '('
[31](01, 27)-(01, 37): NAME(NAME) 'sans_upper'
[31](01, 37)-(01, 38): RPAR(OP) ')'
[31](01, 38)-(01, 39): COLON(OP) ':'
[31](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 09): NAME(NAME) 'palin'
[32](01, 10)-(01, 11): EQUAL(OP) '='
[32](01, 12)-(01, 16): NAME(NAME) 'True'
[32](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 07): NAME(NAME) 'for'
[33](01, 08)-(01, 09): NAME(NAME) 'i'
[33](01, 10)-(01, 12): NAME(NAME) 'in'
[33](01, 13)-(01, 18): NAME(NAME) 'range'
[33](01, 18)-(01, 19): LPAR(OP) '('
[33](01, 19)-(01, 22): NAME(NAME) 'len'
[33](01, 22)-(01, 23): LPAR(OP) '('
[33](01, 23)-(01, 33): NAME(NAME) 'sans_upper'
[33](01, 33)-(01, 34): RPAR(OP) ')'
[33](01, 34)-(01, 35): RPAR(OP) ')'
[33](01, 35)-(01, 36): COLON(OP) ':'
[33](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 08): INDENT(INDENT) '        '
[34](01, 08)-(01, 13): NAME(NAME) 'palin'
[34](01, 14)-(01, 15): EQUAL(OP) '='
[34](01, 16)-(01, 26): NAME(NAME) 'sans_upper'
[34](01, 26)-(01, 27): LSQB(OP) '['
[34](01, 27)-(01, 28): NAME(NAME) 'i'
[34](01, 28)-(01, 29): RSQB(OP) ']'
[34](01, 30)-(01, 32): EQEQUAL(OP) '=='
[34](01, 33)-(01, 43): NAME(NAME) 'sans_upper'
[34](01, 43)-(01, 44): LSQB(OP) '['
[34](01, 44)-(01, 47): NAME(NAME) 'len'
[34](01, 47)-(01, 48): LPAR(OP) '('
[34](01, 48)-(01, 58): NAME(NAME) 'sans_upper'
[34](01, 58)-(01, 59): RPAR(OP) ')'
[34](01, 60)-(01, 61): MINUS(OP) '-'
[34](01, 62)-(01, 63): NAME(NAME) 'i'
[34](01, 64)-(01, 65): MINUS(OP) '-'
[34](01, 66)-(01, 67): NUMBER(NUMBER) '1'
[34](01, 67)-(01, 68): RSQB(OP) ']'
[34](01, 68)-(01, 69): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 10): NAME(NAME) 'if'
[35](01, 11)-(01, 16): NAME(NAME) 'palin'
[35](01, 16)-(01, 17): COLON(OP) ':'
[35](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 12): INDENT(INDENT) '            '
[36](01, 12)-(01, 13): NAME(NAME) 'i'
[36](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[36](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[36](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 08): INDENT(INDENT) '        '
[37](01, 08)-(01, 12): NAME(NAME) 'else'
[37](01, 12)-(01, 13): COLON(OP) ':'
[37](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 12): INDENT(INDENT) '            '
[38](01, 12)-(01, 18): NAME(NAME) 'return'
[38](01, 19)-(01, 24): NAME(NAME) 'palin'
[38](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 04): INDENT(INDENT) '    '
[39](01, 04)-(01, 10): NAME(NAME) 'return'
[39](01, 11)-(01, 16): NAME(NAME) 'palin'
[39](01, 16)-(01, 17): NEWLINE(NEWLINE)
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

