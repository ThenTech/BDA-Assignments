[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): COMMA(OP) ','
[00](01, 14)-(01, 15): NAME(NAME) 'n'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'string'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 15): STRING(STRING) '""'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 22): NAME(NAME) 'len'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 24): NAME(NAME) 's'
[02](01, 24)-(01, 25): RPAR(OP) ')'
[02](01, 25)-(01, 26): RPAR(OP) ')'
[02](01, 26)-(01, 27): COLON(OP) ':'
[02](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 12): NAME(NAME) 's'
[03](01, 12)-(01, 13): LSQB(OP) '['
[03](01, 13)-(01, 14): NAME(NAME) 'i'
[03](01, 14)-(01, 15): RSQB(OP) ']'
[03](01, 16)-(01, 18): EQEQUAL(OP) '=='
[03](01, 19)-(01, 22): STRING(STRING) '" "'
[03](01, 22)-(01, 23): COLON(OP) ':'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 18): NAME(NAME) 'string'
[04](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[04](01, 22)-(01, 25): STRING(STRING) '" "'
[04](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 12): NAME(NAME) 'else'
[05](01, 12)-(01, 13): COLON(OP) ':'
[05](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 18): NAME(NAME) 'string'
[06](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[06](01, 22)-(01, 25): NAME(NAME) 'chr'
[06](01, 25)-(01, 26): LPAR(OP) '('
[06](01, 26)-(01, 27): LPAR(OP) '('
[06](01, 27)-(01, 30): NAME(NAME) 'ord'
[06](01, 30)-(01, 31): LPAR(OP) '('
[06](01, 31)-(01, 32): NAME(NAME) 's'
[06](01, 32)-(01, 33): LSQB(OP) '['
[06](01, 33)-(01, 34): NAME(NAME) 'i'
[06](01, 34)-(01, 35): RSQB(OP) ']'
[06](01, 35)-(01, 36): RPAR(OP) ')'
[06](01, 37)-(01, 38): PLUS(OP) '+'
[06](01, 39)-(01, 40): NAME(NAME) 'n'
[06](01, 41)-(01, 42): MINUS(OP) '-'
[06](01, 43)-(01, 45): NUMBER(NUMBER) '97'
[06](01, 45)-(01, 46): RPAR(OP) ')'
[06](01, 46)-(01, 47): PERCENT(OP) '%'
[06](01, 47)-(01, 49): NUMBER(NUMBER) '26'
[06](01, 49)-(01, 50): PLUS(OP) '+'
[06](01, 50)-(01, 52): NUMBER(NUMBER) '97'
[06](01, 52)-(01, 53): RPAR(OP) ')'
[06](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'return'
[07](01, 11)-(01, 17): NAME(NAME) 'string'
[07](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 03): NAME(NAME) 'def'
[10](01, 04)-(01, 10): NAME(NAME) 'decode'
[10](01, 10)-(01, 11): LPAR(OP) '('
[10](01, 11)-(01, 12): NAME(NAME) 's'
[10](01, 12)-(01, 13): COMMA(OP) ','
[10](01, 14)-(01, 15): NAME(NAME) 'n'
[10](01, 15)-(01, 16): RPAR(OP) ')'
[10](01, 16)-(01, 17): COLON(OP) ':'
[10](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'string'
[11](01, 11)-(01, 12): EQUAL(OP) '='
[11](01, 13)-(01, 15): STRING(STRING) '""'
[11](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 07): NAME(NAME) 'for'
[12](01, 08)-(01, 09): NAME(NAME) 'i'
[12](01, 10)-(01, 12): NAME(NAME) 'in'
[12](01, 13)-(01, 18): NAME(NAME) 'range'
[12](01, 18)-(01, 19): LPAR(OP) '('
[12](01, 19)-(01, 22): NAME(NAME) 'len'
[12](01, 22)-(01, 23): LPAR(OP) '('
[12](01, 23)-(01, 24): NAME(NAME) 's'
[12](01, 24)-(01, 25): RPAR(OP) ')'
[12](01, 25)-(01, 26): RPAR(OP) ')'
[12](01, 26)-(01, 27): COLON(OP) ':'
[12](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 12): NAME(NAME) 's'
[13](01, 12)-(01, 13): LSQB(OP) '['
[13](01, 13)-(01, 14): NAME(NAME) 'i'
[13](01, 14)-(01, 15): RSQB(OP) ']'
[13](01, 16)-(01, 18): EQEQUAL(OP) '=='
[13](01, 19)-(01, 22): STRING(STRING) '" "'
[13](01, 22)-(01, 23): COLON(OP) ':'
[13](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 18): NAME(NAME) 'string'
[14](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[14](01, 22)-(01, 25): STRING(STRING) '" "'
[14](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 12): NAME(NAME) 'else'
[15](01, 12)-(01, 13): COLON(OP) ':'
[15](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 18): NAME(NAME) 'string'
[16](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[16](01, 22)-(01, 25): NAME(NAME) 'chr'
[16](01, 25)-(01, 26): LPAR(OP) '('
[16](01, 26)-(01, 27): LPAR(OP) '('
[16](01, 27)-(01, 30): NAME(NAME) 'ord'
[16](01, 30)-(01, 31): LPAR(OP) '('
[16](01, 31)-(01, 32): NAME(NAME) 's'
[16](01, 32)-(01, 33): LSQB(OP) '['
[16](01, 33)-(01, 34): NAME(NAME) 'i'
[16](01, 34)-(01, 35): RSQB(OP) ']'
[16](01, 35)-(01, 36): RPAR(OP) ')'
[16](01, 37)-(01, 38): MINUS(OP) '-'
[16](01, 39)-(01, 40): NAME(NAME) 'n'
[16](01, 41)-(01, 42): MINUS(OP) '-'
[16](01, 43)-(01, 45): NUMBER(NUMBER) '97'
[16](01, 45)-(01, 46): RPAR(OP) ')'
[16](01, 46)-(01, 47): PERCENT(OP) '%'
[16](01, 47)-(01, 49): NUMBER(NUMBER) '26'
[16](01, 49)-(01, 50): PLUS(OP) '+'
[16](01, 50)-(01, 52): NUMBER(NUMBER) '97'
[16](01, 52)-(01, 53): RPAR(OP) ')'
[16](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 10): NAME(NAME) 'return'
[17](01, 11)-(01, 17): NAME(NAME) 'string'
[17](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

