[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 04): NAME(NAME) 'year'
[00](01, 05)-(01, 06): EQUAL(OP) '='
[00](01, 07)-(01, 10): NAME(NAME) 'int'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 16): NAME(NAME) 'input'
[00](01, 16)-(01, 17): LPAR(OP) '('
[00](01, 17)-(01, 19): STRING(STRING) '""'
[00](01, 19)-(01, 20): RPAR(OP) ')'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 08): NAME(NAME) 'not_leap'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 15): NAME(NAME) 'year'
[01](01, 16)-(01, 17): PERCENT(OP) '%'
[01](01, 18)-(01, 21): NUMBER(NUMBER) '100'
[01](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): NAME(NAME) 'leap'
[02](01, 05)-(01, 06): EQUAL(OP) '='
[02](01, 07)-(01, 11): NAME(NAME) 'year'
[02](01, 12)-(01, 13): PERCENT(OP) '%'
[02](01, 14)-(01, 15): NUMBER(NUMBER) '4'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 02): NAME(NAME) 'if'
[04](01, 03)-(01, 11): NAME(NAME) 'not_leap'
[04](01, 12)-(01, 14): EQEQUAL(OP) '=='
[04](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[04](01, 16)-(01, 17): COLON(OP) ':'
[04](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): INDENT(INDENT) '\t'
[05](01, 01)-(01, 06): NAME(NAME) 'print'
[05](01, 06)-(01, 07): LPAR(OP) '('
[05](01, 07)-(01, 11): NAME(NAME) 'year'
[05](01, 11)-(01, 12): COMMA(OP) ','
[05](01, 13)-(01, 33): STRING(STRING) '"is not a leap year"'
[05](01, 33)-(01, 34): RPAR(OP) ')'
[05](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): NAME(NAME) 'elif'
[07](01, 05)-(01, 09): NAME(NAME) 'leap'
[07](01, 10)-(01, 12): EQEQUAL(OP) '=='
[07](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[07](01, 14)-(01, 15): COLON(OP) ':'
[07](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): INDENT(INDENT) '\t'
[08](01, 01)-(01, 06): NAME(NAME) 'print'
[08](01, 06)-(01, 07): LPAR(OP) '('
[08](01, 07)-(01, 11): NAME(NAME) 'year'
[08](01, 11)-(01, 12): COMMA(OP) ','
[08](01, 13)-(01, 29): STRING(STRING) '"is a leap year"'
[08](01, 29)-(01, 30): RPAR(OP) ')'
[08](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): NAME(NAME) 'else'
[10](01, 04)-(01, 05): COLON(OP) ':'
[10](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): INDENT(INDENT) '\t'
[11](01, 01)-(01, 06): NAME(NAME) 'print'
[11](01, 06)-(01, 07): LPAR(OP) '('
[11](01, 07)-(01, 11): NAME(NAME) 'year'
[11](01, 11)-(01, 12): COMMA(OP) ','
[11](01, 13)-(01, 33): STRING(STRING) '"is not a leap year"'
[11](01, 33)-(01, 34): RPAR(OP) ')'
[11](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

