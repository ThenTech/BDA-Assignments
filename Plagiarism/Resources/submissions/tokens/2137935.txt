[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'w_1'
[00](01, 04)-(01, 05): EQUAL(OP) '='
[00](01, 06)-(01, 11): NAME(NAME) 'input'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'w_2'
[01](01, 04)-(01, 05): EQUAL(OP) '='
[01](01, 06)-(01, 11): NAME(NAME) 'input'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 13): RPAR(OP) ')'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): NAME(NAME) 'alphabet'
[03](01, 09)-(01, 10): EQUAL(OP) '='
[03](01, 11)-(01, 39): STRING(STRING) "'abcdefghijklmnopqrstuvwxyz'"
[03](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 09): NAME(NAME) 'ammountw1'
[04](01, 10)-(01, 11): EQUAL(OP) '='
[04](01, 12)-(01, 38): NUMBER(NUMBER) '00000000000000000000000000'
[04](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 09): NAME(NAME) 'ammountw2'
[05](01, 10)-(01, 11): EQUAL(OP) '='
[05](01, 12)-(01, 38): NUMBER(NUMBER) '00000000000000000000000000'
[05](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): NAME(NAME) 'for'
[07](01, 04)-(01, 05): NAME(NAME) 'i'
[07](01, 06)-(01, 08): NAME(NAME) 'in'
[07](01, 09)-(01, 14): NAME(NAME) 'range'
[07](01, 14)-(01, 15): LPAR(OP) '('
[07](01, 15)-(01, 18): NAME(NAME) 'len'
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 22): NAME(NAME) 'w_1'
[07](01, 22)-(01, 23): RPAR(OP) ')'
[07](01, 23)-(01, 24): RPAR(OP) ')'
[07](01, 24)-(01, 25): COLON(OP) ':'
[07](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 07): NAME(NAME) 'for'
[08](01, 08)-(01, 09): NAME(NAME) 'j'
[08](01, 10)-(01, 12): NAME(NAME) 'in'
[08](01, 13)-(01, 18): NAME(NAME) 'range'
[08](01, 18)-(01, 19): LPAR(OP) '('
[08](01, 19)-(01, 22): NAME(NAME) 'len'
[08](01, 22)-(01, 23): LPAR(OP) '('
[08](01, 23)-(01, 31): NAME(NAME) 'alphabet'
[08](01, 31)-(01, 32): RPAR(OP) ')'
[08](01, 32)-(01, 33): RPAR(OP) ')'
[08](01, 33)-(01, 34): COLON(OP) ':'
[08](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 14): NAME(NAME) 'w_1'
[09](01, 14)-(01, 15): LSQB(OP) '['
[09](01, 15)-(01, 16): NAME(NAME) 'i'
[09](01, 16)-(01, 17): RSQB(OP) ']'
[09](01, 18)-(01, 20): EQEQUAL(OP) '=='
[09](01, 21)-(01, 29): NAME(NAME) 'alphabet'
[09](01, 29)-(01, 30): LSQB(OP) '['
[09](01, 30)-(01, 31): NAME(NAME) 'j'
[09](01, 31)-(01, 32): RSQB(OP) ']'
[09](01, 32)-(01, 33): COLON(OP) ':'
[09](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 21): NAME(NAME) 'ammountw1'
[10](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[10](01, 25)-(01, 27): NUMBER(NUMBER) '10'
[10](01, 27)-(01, 29): DOUBLESTAR(OP) '**'
[10](01, 29)-(01, 30): NAME(NAME) 'j'
[10](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 17): NAME(NAME) 'break'
[11](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 03): NAME(NAME) 'for'
[13](01, 04)-(01, 05): NAME(NAME) 'i'
[13](01, 06)-(01, 08): NAME(NAME) 'in'
[13](01, 09)-(01, 14): NAME(NAME) 'range'
[13](01, 14)-(01, 15): LPAR(OP) '('
[13](01, 15)-(01, 18): NAME(NAME) 'len'
[13](01, 18)-(01, 19): LPAR(OP) '('
[13](01, 19)-(01, 22): NAME(NAME) 'w_2'
[13](01, 22)-(01, 23): RPAR(OP) ')'
[13](01, 23)-(01, 24): RPAR(OP) ')'
[13](01, 24)-(01, 25): COLON(OP) ':'
[13](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 07): NAME(NAME) 'for'
[14](01, 08)-(01, 09): NAME(NAME) 'j'
[14](01, 10)-(01, 12): NAME(NAME) 'in'
[14](01, 13)-(01, 18): NAME(NAME) 'range'
[14](01, 18)-(01, 19): LPAR(OP) '('
[14](01, 19)-(01, 22): NAME(NAME) 'len'
[14](01, 22)-(01, 23): LPAR(OP) '('
[14](01, 23)-(01, 31): NAME(NAME) 'alphabet'
[14](01, 31)-(01, 32): RPAR(OP) ')'
[14](01, 32)-(01, 33): RPAR(OP) ')'
[14](01, 33)-(01, 34): COLON(OP) ':'
[14](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 10): NAME(NAME) 'if'
[15](01, 11)-(01, 14): NAME(NAME) 'w_2'
[15](01, 14)-(01, 15): LSQB(OP) '['
[15](01, 15)-(01, 16): NAME(NAME) 'i'
[15](01, 16)-(01, 17): RSQB(OP) ']'
[15](01, 18)-(01, 20): EQEQUAL(OP) '=='
[15](01, 21)-(01, 29): NAME(NAME) 'alphabet'
[15](01, 29)-(01, 30): LSQB(OP) '['
[15](01, 30)-(01, 31): NAME(NAME) 'j'
[15](01, 31)-(01, 32): RSQB(OP) ']'
[15](01, 32)-(01, 33): COLON(OP) ':'
[15](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 21): NAME(NAME) 'ammountw2'
[16](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[16](01, 25)-(01, 27): NUMBER(NUMBER) '10'
[16](01, 27)-(01, 29): DOUBLESTAR(OP) '**'
[16](01, 29)-(01, 30): NAME(NAME) 'j'
[16](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 17): NAME(NAME) 'break'
[17](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 02): NAME(NAME) 'if'
[19](01, 03)-(01, 12): NAME(NAME) 'ammountw1'
[19](01, 13)-(01, 15): EQEQUAL(OP) '=='
[19](01, 16)-(01, 25): NAME(NAME) 'ammountw2'
[19](01, 25)-(01, 26): COLON(OP) ':'
[19](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 09): NAME(NAME) 'print'
[20](01, 09)-(01, 10): LPAR(OP) '('
[20](01, 10)-(01, 13): NAME(NAME) 'w_1'
[20](01, 13)-(01, 14): COMMA(OP) ','
[20](01, 14)-(01, 19): STRING(STRING) "'and'"
[20](01, 19)-(01, 20): COMMA(OP) ','
[20](01, 20)-(01, 23): NAME(NAME) 'w_2'
[20](01, 23)-(01, 24): COMMA(OP) ','
[20](01, 24)-(01, 38): STRING(STRING) "'are anagrams'"
[20](01, 38)-(01, 39): RPAR(OP) ')'
[20](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): NAME(NAME) 'else'
[21](01, 04)-(01, 05): COLON(OP) ':'
[21](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 09): NAME(NAME) 'print'
[22](01, 09)-(01, 10): LPAR(OP) '('
[22](01, 10)-(01, 13): NAME(NAME) 'w_1'
[22](01, 13)-(01, 14): COMMA(OP) ','
[22](01, 14)-(01, 19): STRING(STRING) "'and'"
[22](01, 19)-(01, 20): COMMA(OP) ','
[22](01, 20)-(01, 23): NAME(NAME) 'w_2'
[22](01, 23)-(01, 24): COMMA(OP) ','
[22](01, 24)-(01, 42): STRING(STRING) "'are not anagrams'"
[22](01, 42)-(01, 43): RPAR(OP) ')'
[22](01, 43)-(01, 44): NEWLINE(NEWLINE)
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

