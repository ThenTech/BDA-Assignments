[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'dna'
[00](01, 04)-(01, 05): EQUAL(OP) '='
[00](01, 06)-(01, 12): STRING(STRING) "'ACGT'"
[00](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'count'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 11): NAME(NAME) 'int'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 17): NAME(NAME) 'input'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 27): STRING(STRING) "'Count: '"
[01](01, 27)-(01, 28): RPAR(OP) ')'
[01](01, 28)-(01, 29): RPAR(OP) ')'
[01](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'n'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 07): NAME(NAME) 'len'
[02](01, 07)-(01, 08): LPAR(OP) '('
[02](01, 08)-(01, 11): NAME(NAME) 'dna'
[02](01, 11)-(01, 12): RPAR(OP) ')'
[02](01, 13)-(01, 15): DOUBLESTAR(OP) '**'
[02](01, 16)-(01, 21): NAME(NAME) 'count'
[02](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'def'
[05](01, 04)-(01, 23): NAME(NAME) 'print_possibilities'
[05](01, 23)-(01, 24): LPAR(OP) '('
[05](01, 24)-(01, 25): NAME(NAME) 'n'
[05](01, 25)-(01, 26): RPAR(OP) ')'
[05](01, 26)-(01, 27): COLON(OP) ':'
[05](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'x'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 20): NAME(NAME) 'n'
[06](01, 20)-(01, 21): RPAR(OP) ')'
[06](01, 21)-(01, 22): COLON(OP) ':'
[06](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 11): NAME(NAME) 'for'
[07](01, 12)-(01, 13): NAME(NAME) 'i'
[07](01, 14)-(01, 16): NAME(NAME) 'in'
[07](01, 17)-(01, 22): NAME(NAME) 'range'
[07](01, 22)-(01, 23): LPAR(OP) '('
[07](01, 23)-(01, 28): NAME(NAME) 'count'
[07](01, 29)-(01, 30): MINUS(OP) '-'
[07](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[07](01, 32)-(01, 33): COMMA(OP) ','
[07](01, 34)-(01, 35): MINUS(OP) '-'
[07](01, 35)-(01, 36): NUMBER(NUMBER) '1'
[07](01, 36)-(01, 37): COMMA(OP) ','
[07](01, 38)-(01, 39): MINUS(OP) '-'
[07](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[07](01, 40)-(01, 41): RPAR(OP) ')'
[07](01, 41)-(01, 42): COLON(OP) ':'
[07](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 17): NAME(NAME) 'print'
[08](01, 17)-(01, 18): LPAR(OP) '('
[08](01, 18)-(01, 21): NAME(NAME) 'dna'
[08](01, 21)-(01, 22): LSQB(OP) '['
[08](01, 22)-(01, 25): NAME(NAME) 'int'
[08](01, 25)-(01, 26): LPAR(OP) '('
[08](01, 26)-(01, 27): NAME(NAME) 'x'
[08](01, 28)-(01, 29): SLASH(OP) '/'
[08](01, 30)-(01, 31): NUMBER(NUMBER) '4'
[08](01, 32)-(01, 34): DOUBLESTAR(OP) '**'
[08](01, 35)-(01, 36): NAME(NAME) 'i'
[08](01, 36)-(01, 37): RPAR(OP) ')'
[08](01, 38)-(01, 39): PERCENT(OP) '%'
[08](01, 40)-(01, 43): NAME(NAME) 'len'
[08](01, 43)-(01, 44): LPAR(OP) '('
[08](01, 44)-(01, 47): NAME(NAME) 'dna'
[08](01, 47)-(01, 48): RPAR(OP) ')'
[08](01, 48)-(01, 49): RSQB(OP) ']'
[08](01, 49)-(01, 50): COMMA(OP) ','
[08](01, 51)-(01, 54): NAME(NAME) 'end'
[08](01, 54)-(01, 55): EQUAL(OP) '='
[08](01, 55)-(01, 57): STRING(STRING) '""'
[08](01, 57)-(01, 58): RPAR(OP) ')'
[08](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 13): NAME(NAME) 'print'
[09](01, 13)-(01, 14): LPAR(OP) '('
[09](01, 14)-(01, 15): RPAR(OP) ')'
[09](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 19): NAME(NAME) 'print_possibilities'
[12](01, 19)-(01, 20): LPAR(OP) '('
[12](01, 20)-(01, 21): NAME(NAME) 'n'
[12](01, 21)-(01, 22): RPAR(OP) ')'
[12](01, 22)-(01, 23): NEWLINE(NEWLINE)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

