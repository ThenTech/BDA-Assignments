[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 09): NAME(NAME) 'shift'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 11): NAME(NAME) 'l'
[00](01, 11)-(01, 12): COMMA(OP) ','
[00](01, 13)-(01, 14): NAME(NAME) 'n'
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): COLON(OP) ':'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 09): NAME(NAME) 'while'
[01](01, 10)-(01, 11): NAME(NAME) 'n'
[01](01, 12)-(01, 13): GREATER(OP) '>'
[01](01, 14)-(01, 17): NAME(NAME) 'len'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 19): NAME(NAME) 'l'
[01](01, 19)-(01, 20): RPAR(OP) ')'
[01](01, 20)-(01, 21): COLON(OP) ':'
[01](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 09): NAME(NAME) 'n'
[02](01, 10)-(01, 12): MINEQUAL(OP) '-='
[02](01, 13)-(01, 16): NAME(NAME) 'len'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 18): NAME(NAME) 'l'
[02](01, 18)-(01, 19): RPAR(OP) ')'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'while'
[03](01, 10)-(01, 11): NAME(NAME) 'n'
[03](01, 12)-(01, 13): LESS(OP) '<'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 16): MINUS(OP) '-'
[03](01, 16)-(01, 19): NAME(NAME) 'len'
[03](01, 19)-(01, 20): LPAR(OP) '('
[03](01, 20)-(01, 21): NAME(NAME) 'l'
[03](01, 21)-(01, 22): RPAR(OP) ')'
[03](01, 22)-(01, 23): RPAR(OP) ')'
[03](01, 23)-(01, 24): COLON(OP) ':'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 09): NAME(NAME) 'n'
[04](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[04](01, 13)-(01, 16): NAME(NAME) 'len'
[04](01, 16)-(01, 17): LPAR(OP) '('
[04](01, 17)-(01, 18): NAME(NAME) 'l'
[04](01, 18)-(01, 19): RPAR(OP) ')'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 06): NAME(NAME) 'if'
[06](01, 07)-(01, 08): NAME(NAME) 'n'
[06](01, 09)-(01, 10): GREATER(OP) '>'
[06](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[06](01, 12)-(01, 13): COLON(OP) ':'
[06](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 09): NAME(NAME) 'l'
[07](01, 10)-(01, 11): EQUAL(OP) '='
[07](01, 11)-(01, 12): NAME(NAME) 'l'
[07](01, 12)-(01, 13): LSQB(OP) '['
[07](01, 13)-(01, 16): NAME(NAME) 'len'
[07](01, 16)-(01, 17): LPAR(OP) '('
[07](01, 17)-(01, 18): NAME(NAME) 'l'
[07](01, 18)-(01, 19): RPAR(OP) ')'
[07](01, 19)-(01, 20): MINUS(OP) '-'
[07](01, 20)-(01, 21): NAME(NAME) 'n'
[07](01, 21)-(01, 22): COLON(OP) ':'
[07](01, 22)-(01, 23): RSQB(OP) ']'
[07](01, 24)-(01, 25): PLUS(OP) '+'
[07](01, 26)-(01, 27): NAME(NAME) 'l'
[07](01, 27)-(01, 28): LSQB(OP) '['
[07](01, 28)-(01, 29): COLON(OP) ':'
[07](01, 29)-(01, 32): NAME(NAME) 'len'
[07](01, 32)-(01, 33): LPAR(OP) '('
[07](01, 33)-(01, 34): NAME(NAME) 'l'
[07](01, 34)-(01, 35): RPAR(OP) ')'
[07](01, 35)-(01, 36): MINUS(OP) '-'
[07](01, 36)-(01, 37): NAME(NAME) 'n'
[07](01, 37)-(01, 38): RSQB(OP) ']'
[07](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 06): NAME(NAME) 'if'
[08](01, 07)-(01, 08): NAME(NAME) 'n'
[08](01, 09)-(01, 10): LESS(OP) '<'
[08](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[08](01, 12)-(01, 13): COLON(OP) ':'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 09): NAME(NAME) 'l'
[09](01, 10)-(01, 11): EQUAL(OP) '='
[09](01, 12)-(01, 13): NAME(NAME) 'l'
[09](01, 13)-(01, 14): LSQB(OP) '['
[09](01, 14)-(01, 15): LPAR(OP) '('
[09](01, 15)-(01, 16): MINUS(OP) '-'
[09](01, 16)-(01, 17): NAME(NAME) 'n'
[09](01, 17)-(01, 18): RPAR(OP) ')'
[09](01, 18)-(01, 19): COLON(OP) ':'
[09](01, 19)-(01, 20): RSQB(OP) ']'
[09](01, 21)-(01, 22): PLUS(OP) '+'
[09](01, 23)-(01, 24): NAME(NAME) 'l'
[09](01, 24)-(01, 25): LSQB(OP) '['
[09](01, 25)-(01, 26): COLON(OP) ':'
[09](01, 26)-(01, 27): LPAR(OP) '('
[09](01, 27)-(01, 28): MINUS(OP) '-'
[09](01, 28)-(01, 29): NAME(NAME) 'n'
[09](01, 29)-(01, 30): RPAR(OP) ')'
[09](01, 30)-(01, 31): RSQB(OP) ']'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'return'
[11](01, 11)-(01, 12): NAME(NAME) 'l'
[11](01, 12)-(01, 13): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

