[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'word1'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 21): STRING(STRING) "'Word?'"
[00](01, 21)-(01, 22): RPAR(OP) ')'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'word2'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 13): NAME(NAME) 'input'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 23): STRING(STRING) "'Word 2?'"
[01](01, 23)-(01, 24): RPAR(OP) ')'
[01](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): NAME(NAME) 'alphabet'
[02](01, 09)-(01, 10): EQUAL(OP) '='
[02](01, 11)-(01, 66): STRING(STRING) "'abcdefghijklmnopqrstu vwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'"
[02](01, 66)-(01, 67): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'i'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 04)-(01, 07): NAME(NAME) 'len'
[03](01, 07)-(01, 08): LPAR(OP) '('
[03](01, 08)-(01, 13): NAME(NAME) 'word1'
[03](01, 13)-(01, 14): RPAR(OP) ')'
[03](01, 15)-(01, 16): MINUS(OP) '-'
[03](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[03](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NAME(NAME) 'q'
[04](01, 02)-(01, 03): EQUAL(OP) '='
[04](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[04](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NAME(NAME) 'w'
[05](01, 02)-(01, 03): EQUAL(OP) '='
[05](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[05](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 07): NAME(NAME) 'anagram'
[06](01, 08)-(01, 09): EQUAL(OP) '='
[06](01, 10)-(01, 14): NAME(NAME) 'True'
[06](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): NAME(NAME) 'for'
[07](01, 04)-(01, 05): NAME(NAME) 'k'
[07](01, 06)-(01, 08): NAME(NAME) 'in'
[07](01, 09)-(01, 14): NAME(NAME) 'range'
[07](01, 14)-(01, 15): LPAR(OP) '('
[07](01, 15)-(01, 18): NAME(NAME) 'len'
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 27): NAME(NAME) 'alphabet'
[07](01, 27)-(01, 28): RPAR(OP) ')'
[07](01, 28)-(01, 29): RPAR(OP) ')'
[07](01, 29)-(01, 30): COLON(OP) ':'
[07](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'while'
[08](01, 10)-(01, 11): NAME(NAME) 'i'
[08](01, 12)-(01, 14): GREATEREQUAL(OP) '>='
[08](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[08](01, 16)-(01, 17): COLON(OP) ':'
[08](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 16): NAME(NAME) 'word1'
[09](01, 16)-(01, 17): LSQB(OP) '['
[09](01, 17)-(01, 18): NAME(NAME) 'i'
[09](01, 18)-(01, 19): RSQB(OP) ']'
[09](01, 20)-(01, 22): EQEQUAL(OP) '=='
[09](01, 23)-(01, 31): NAME(NAME) 'alphabet'
[09](01, 31)-(01, 32): LSQB(OP) '['
[09](01, 32)-(01, 33): NAME(NAME) 'k'
[09](01, 33)-(01, 34): RSQB(OP) ']'
[09](01, 34)-(01, 35): COLON(OP) ':'
[09](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 13): NAME(NAME) 'q'
[10](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[10](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[10](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 16): NAME(NAME) 'word2'
[11](01, 16)-(01, 17): LSQB(OP) '['
[11](01, 17)-(01, 18): NAME(NAME) 'i'
[11](01, 18)-(01, 19): RSQB(OP) ']'
[11](01, 20)-(01, 22): EQEQUAL(OP) '=='
[11](01, 23)-(01, 31): NAME(NAME) 'alphabet'
[11](01, 31)-(01, 32): LSQB(OP) '['
[11](01, 32)-(01, 33): NAME(NAME) 'k'
[11](01, 33)-(01, 34): RSQB(OP) ']'
[11](01, 34)-(01, 35): COLON(OP) ':'
[11](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 13): NAME(NAME) 'w'
[12](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[12](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[12](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 09): NAME(NAME) 'i'
[13](01, 10)-(01, 12): MINEQUAL(OP) '-='
[13](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[13](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 06): NAME(NAME) 'if'
[14](01, 07)-(01, 08): NAME(NAME) 'w'
[14](01, 09)-(01, 11): NOTEQUAL(OP) '!='
[14](01, 12)-(01, 13): NAME(NAME) 'q'
[14](01, 13)-(01, 14): COLON(OP) ':'
[14](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 13): NAME(NAME) 'print'
[15](01, 13)-(01, 14): LPAR(OP) '('
[15](01, 14)-(01, 19): NAME(NAME) 'word1'
[15](01, 19)-(01, 20): COMMA(OP) ','
[15](01, 21)-(01, 26): STRING(STRING) "'and'"
[15](01, 26)-(01, 27): COMMA(OP) ','
[15](01, 28)-(01, 33): NAME(NAME) 'word2'
[15](01, 33)-(01, 34): COMMA(OP) ','
[15](01, 35)-(01, 53): STRING(STRING) "'are not anagrams'"
[15](01, 53)-(01, 54): RPAR(OP) ')'
[15](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 15): NAME(NAME) 'anagram'
[16](01, 16)-(01, 17): EQUAL(OP) '='
[16](01, 18)-(01, 23): NAME(NAME) 'False'
[16](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 13): NAME(NAME) 'break'
[17](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 05): NAME(NAME) 'i'
[18](01, 06)-(01, 07): EQUAL(OP) '='
[18](01, 08)-(01, 11): NAME(NAME) 'len'
[18](01, 11)-(01, 12): LPAR(OP) '('
[18](01, 12)-(01, 17): NAME(NAME) 'word1'
[18](01, 17)-(01, 18): RPAR(OP) ')'
[18](01, 19)-(01, 20): MINUS(OP) '-'
[18](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[18](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 05): NAME(NAME) 'q'
[19](01, 06)-(01, 07): EQUAL(OP) '='
[19](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[19](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 05): NAME(NAME) 'w'
[20](01, 06)-(01, 07): EQUAL(OP) '='
[20](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[20](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 02): NAME(NAME) 'if'
[21](01, 03)-(01, 10): NAME(NAME) 'anagram'
[21](01, 11)-(01, 13): EQEQUAL(OP) '=='
[21](01, 14)-(01, 18): NAME(NAME) 'True'
[21](01, 18)-(01, 19): COLON(OP) ':'
[21](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 09): NAME(NAME) 'print'
[22](01, 09)-(01, 10): LPAR(OP) '('
[22](01, 10)-(01, 15): NAME(NAME) 'word1'
[22](01, 15)-(01, 16): COMMA(OP) ','
[22](01, 17)-(01, 22): STRING(STRING) "'and'"
[22](01, 22)-(01, 23): COMMA(OP) ','
[22](01, 24)-(01, 29): NAME(NAME) 'word2'
[22](01, 29)-(01, 30): COMMA(OP) ','
[22](01, 31)-(01, 45): STRING(STRING) "'are anagrams'"
[22](01, 45)-(01, 46): RPAR(OP) ')'
[22](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

