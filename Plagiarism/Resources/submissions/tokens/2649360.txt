[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'convert'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 13): NAME(NAME) 's'
[00](01, 13)-(01, 14): RPAR(OP) ')'
[00](01, 14)-(01, 15): COLON(OP) ':'
[00](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 09): NAME(NAME) 'getal'
[01](01, 10)-(01, 11): EQUAL(OP) '='
[01](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 10): NAME(NAME) 'len'
[02](01, 10)-(01, 11): LPAR(OP) '('
[02](01, 11)-(01, 12): NAME(NAME) 's'
[02](01, 12)-(01, 13): RPAR(OP) ')'
[02](01, 14)-(01, 16): EQEQUAL(OP) '=='
[02](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[02](01, 18)-(01, 19): COLON(OP) ':'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 13): NAME(NAME) 'getal'
[03](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[03](01, 17)-(01, 20): NAME(NAME) 'int'
[03](01, 20)-(01, 21): LPAR(OP) '('
[03](01, 21)-(01, 22): NAME(NAME) 's'
[03](01, 22)-(01, 23): RPAR(OP) ')'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 08): NAME(NAME) 'else'
[04](01, 08)-(01, 09): COLON(OP) ':'
[04](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 13): NAME(NAME) 'getal'
[05](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[05](01, 17)-(01, 20): NAME(NAME) 'int'
[05](01, 20)-(01, 21): LPAR(OP) '('
[05](01, 21)-(01, 22): NAME(NAME) 's'
[05](01, 22)-(01, 23): LSQB(OP) '['
[05](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[05](01, 24)-(01, 25): RSQB(OP) ']'
[05](01, 25)-(01, 26): RPAR(OP) ')'
[05](01, 26)-(01, 27): STAR(OP) '*'
[05](01, 27)-(01, 29): NUMBER(NUMBER) '10'
[05](01, 29)-(01, 31): DOUBLESTAR(OP) '**'
[05](01, 31)-(01, 32): LPAR(OP) '('
[05](01, 32)-(01, 35): NAME(NAME) 'len'
[05](01, 35)-(01, 36): LPAR(OP) '('
[05](01, 36)-(01, 37): NAME(NAME) 's'
[05](01, 37)-(01, 38): RPAR(OP) ')'
[05](01, 39)-(01, 40): MINUS(OP) '-'
[05](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[05](01, 42)-(01, 43): RPAR(OP) ')'
[05](01, 44)-(01, 45): PLUS(OP) '+'
[05](01, 46)-(01, 49): NAME(NAME) 'int'
[05](01, 49)-(01, 50): LPAR(OP) '('
[05](01, 50)-(01, 57): NAME(NAME) 'convert'
[05](01, 57)-(01, 58): LPAR(OP) '('
[05](01, 58)-(01, 59): NAME(NAME) 's'
[05](01, 59)-(01, 60): LSQB(OP) '['
[05](01, 60)-(01, 61): NUMBER(NUMBER) '1'
[05](01, 61)-(01, 62): COLON(OP) ':'
[05](01, 62)-(01, 63): RSQB(OP) ']'
[05](01, 63)-(01, 64): RPAR(OP) ')'
[05](01, 64)-(01, 65): RPAR(OP) ')'
[05](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 10): NAME(NAME) 'return'
[06](01, 11)-(01, 16): NAME(NAME) 'getal'
[06](01, 16)-(01, 17): NEWLINE(NEWLINE)
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

