[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 13): NAME(NAME) 'is_unique'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 15): NAME(NAME) 'l'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'teller'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 14): MINUS(OP) '-'
[01](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'kopie'
[02](01, 10)-(01, 11): EQUAL(OP) '='
[02](01, 12)-(01, 13): NAME(NAME) 'l'
[02](01, 13)-(01, 14): LSQB(OP) '['
[02](01, 14)-(01, 15): COLON(OP) ':'
[02](01, 15)-(01, 16): RSQB(OP) ']'
[02](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 10): NAME(NAME) 'kopie2'
[03](01, 11)-(01, 12): EQUAL(OP) '='
[03](01, 13)-(01, 14): LSQB(OP) '['
[03](01, 14)-(01, 15): RSQB(OP) ']'
[03](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 15): NAME(NAME) 'element'
[04](01, 16)-(01, 18): NAME(NAME) 'in'
[04](01, 19)-(01, 20): NAME(NAME) 'l'
[04](01, 20)-(01, 21): COLON(OP) ':'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 14): NAME(NAME) 'teller'
[05](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[05](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[05](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 12)-(01, 19): NAME(NAME) 'element'
[06](01, 20)-(01, 22): NAME(NAME) 'in'
[06](01, 23)-(01, 28): NAME(NAME) 'kopie'
[06](01, 29)-(01, 32): NAME(NAME) 'and'
[06](01, 33)-(01, 40): NAME(NAME) 'element'
[06](01, 41)-(01, 44): NAME(NAME) 'not'
[06](01, 45)-(01, 47): NAME(NAME) 'in'
[06](01, 48)-(01, 54): NAME(NAME) 'kopie2'
[06](01, 54)-(01, 55): COLON(OP) ':'
[06](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 15): NAME(NAME) 'del'
[07](01, 16)-(01, 21): NAME(NAME) 'kopie'
[07](01, 21)-(01, 22): LSQB(OP) '['
[07](01, 22)-(01, 28): NAME(NAME) 'teller'
[07](01, 28)-(01, 29): RSQB(OP) ']'
[07](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 18): NAME(NAME) 'kopie2'
[08](01, 18)-(01, 19): DOT(OP) '.'
[08](01, 19)-(01, 25): NAME(NAME) 'append'
[08](01, 25)-(01, 26): LPAR(OP) '('
[08](01, 26)-(01, 33): NAME(NAME) 'element'
[08](01, 33)-(01, 34): RPAR(OP) ')'
[08](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 18): NAME(NAME) 'teller'
[09](01, 19)-(01, 20): EQUAL(OP) '='
[09](01, 21)-(01, 27): NAME(NAME) 'teller'
[09](01, 28)-(01, 29): MINUS(OP) '-'
[09](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 20): NAME(NAME) 'continue'
[10](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 12): NAME(NAME) 'elif'
[11](01, 13)-(01, 20): NAME(NAME) 'element'
[11](01, 21)-(01, 23): NAME(NAME) 'in'
[11](01, 24)-(01, 30): NAME(NAME) 'kopie2'
[11](01, 30)-(01, 31): COLON(OP) ':'
[11](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 18): NAME(NAME) 'return'
[12](01, 19)-(01, 24): NAME(NAME) 'False'
[12](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 10): NAME(NAME) 'return'
[13](01, 11)-(01, 15): NAME(NAME) 'True'
[13](01, 15)-(01, 16): NEWLINE(NEWLINE)
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

