[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): COLON(OP) ':'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'lengte'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 16): NAME(NAME) 'len'
[01](01, 16)-(01, 17): LPAR(OP) '('
[01](01, 17)-(01, 18): NAME(NAME) 's'
[01](01, 18)-(01, 19): RPAR(OP) ')'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 13): NAME(NAME) 'lengte'
[02](01, 14)-(01, 16): EQEQUAL(OP) '=='
[02](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[02](01, 18)-(01, 19): COLON(OP) ':'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 14): NAME(NAME) 'return'
[03](01, 15)-(01, 17): STRING(STRING) '""'
[03](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 13): NAME(NAME) 'lengte'
[04](01, 14)-(01, 16): EQEQUAL(OP) '=='
[04](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[04](01, 18)-(01, 19): COLON(OP) ':'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 18): NAME(NAME) 'return'
[05](01, 19)-(01, 22): STRING(STRING) '"0"'
[05](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 06): NAME(NAME) 'if'
[06](01, 07)-(01, 08): NAME(NAME) 's'
[06](01, 08)-(01, 09): LSQB(OP) '['
[06](01, 09)-(01, 10): NUMBER(NUMBER) '1'
[06](01, 10)-(01, 11): RSQB(OP) ']'
[06](01, 12)-(01, 14): EQEQUAL(OP) '=='
[06](01, 15)-(01, 18): STRING(STRING) '"X"'
[06](01, 18)-(01, 19): COLON(OP) ':'
[06](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 17): NAME(NAME) 'newstring'
[07](01, 18)-(01, 19): EQUAL(OP) '='
[07](01, 20)-(01, 23): STRING(STRING) '"1"'
[07](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 08): NAME(NAME) 'else'
[08](01, 08)-(01, 09): COLON(OP) ':'
[08](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 17): NAME(NAME) 'newstring'
[09](01, 18)-(01, 19): EQUAL(OP) '='
[09](01, 20)-(01, 23): STRING(STRING) '"0"'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 05): NAME(NAME) 'i'
[10](01, 06)-(01, 07): EQUAL(OP) '='
[10](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[10](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 09): NAME(NAME) 'while'
[11](01, 10)-(01, 11): NAME(NAME) 'i'
[11](01, 12)-(01, 13): LESS(OP) '<'
[11](01, 14)-(01, 20): NAME(NAME) 'lengte'
[11](01, 20)-(01, 21): MINUS(OP) '-'
[11](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[11](01, 22)-(01, 23): COLON(OP) ':'
[11](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 14): NAME(NAME) 'teller'
[12](01, 15)-(01, 16): EQUAL(OP) '='
[12](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[12](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 12): NAME(NAME) 's'
[13](01, 12)-(01, 13): LSQB(OP) '['
[13](01, 13)-(01, 14): NAME(NAME) 'i'
[13](01, 14)-(01, 15): MINUS(OP) '-'
[13](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[13](01, 16)-(01, 17): RSQB(OP) ']'
[13](01, 18)-(01, 20): EQEQUAL(OP) '=='
[13](01, 21)-(01, 24): STRING(STRING) '"X"'
[13](01, 24)-(01, 25): COLON(OP) ':'
[13](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 18): NAME(NAME) 'teller'
[14](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[14](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[14](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 10): NAME(NAME) 'if'
[15](01, 11)-(01, 12): NAME(NAME) 's'
[15](01, 12)-(01, 13): LSQB(OP) '['
[15](01, 13)-(01, 14): NAME(NAME) 'i'
[15](01, 14)-(01, 15): PLUS(OP) '+'
[15](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[15](01, 16)-(01, 17): RSQB(OP) ']'
[15](01, 18)-(01, 20): EQEQUAL(OP) '=='
[15](01, 21)-(01, 24): STRING(STRING) '"X"'
[15](01, 24)-(01, 25): COLON(OP) ':'
[15](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 18): NAME(NAME) 'teller'
[16](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[16](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[16](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 17): NAME(NAME) 'newstring'
[17](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[17](01, 21)-(01, 24): NAME(NAME) 'str'
[17](01, 24)-(01, 25): LPAR(OP) '('
[17](01, 25)-(01, 31): NAME(NAME) 'teller'
[17](01, 31)-(01, 32): RPAR(OP) ')'
[17](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 09): NAME(NAME) 'i'
[18](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[18](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[18](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 06): NAME(NAME) 'if'
[19](01, 07)-(01, 08): NAME(NAME) 's'
[19](01, 08)-(01, 09): LSQB(OP) '['
[19](01, 09)-(01, 10): NAME(NAME) 'i'
[19](01, 10)-(01, 11): MINUS(OP) '-'
[19](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[19](01, 12)-(01, 13): RSQB(OP) ']'
[19](01, 14)-(01, 16): EQEQUAL(OP) '=='
[19](01, 17)-(01, 20): STRING(STRING) '"X"'
[19](01, 20)-(01, 21): COLON(OP) ':'
[19](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 17): NAME(NAME) 'newstring'
[20](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[20](01, 21)-(01, 24): STRING(STRING) '"1"'
[20](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 08): NAME(NAME) 'else'
[21](01, 08)-(01, 09): COLON(OP) ':'
[21](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 17): NAME(NAME) 'newstring'
[22](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[22](01, 21)-(01, 24): STRING(STRING) '"0"'
[22](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 10): NAME(NAME) 'return'
[23](01, 11)-(01, 20): NAME(NAME) 'newstring'
[23](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 03): NAME(NAME) 'def'
[26](01, 04)-(01, 10): NAME(NAME) 'decode'
[26](01, 10)-(01, 11): LPAR(OP) '('
[26](01, 11)-(01, 12): NAME(NAME) 's'
[26](01, 12)-(01, 13): RPAR(OP) ')'
[26](01, 13)-(01, 14): COLON(OP) ':'
[26](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 10): NAME(NAME) 'lengte'
[27](01, 11)-(01, 12): EQUAL(OP) '='
[27](01, 13)-(01, 16): NAME(NAME) 'len'
[27](01, 16)-(01, 17): LPAR(OP) '('
[27](01, 17)-(01, 18): NAME(NAME) 's'
[27](01, 18)-(01, 19): RPAR(OP) ')'
[27](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 06): NAME(NAME) 'if'
[28](01, 07)-(01, 13): NAME(NAME) 'lengte'
[28](01, 14)-(01, 16): EQEQUAL(OP) '=='
[28](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[28](01, 18)-(01, 19): COLON(OP) ':'
[28](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 14): NAME(NAME) 'return'
[29](01, 15)-(01, 17): STRING(STRING) '""'
[29](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 06): NAME(NAME) 'if'
[30](01, 07)-(01, 13): NAME(NAME) 'lengte'
[30](01, 14)-(01, 16): EQEQUAL(OP) '=='
[30](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[30](01, 18)-(01, 19): COLON(OP) ':'
[30](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 14): NAME(NAME) 'return'
[31](01, 15)-(01, 18): STRING(STRING) '"X"'
[31](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 05): NAME(NAME) 'i'
[32](01, 06)-(01, 07): EQUAL(OP) '='
[32](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[32](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 13): NAME(NAME) 'newstring'
[33](01, 14)-(01, 15): EQUAL(OP) '='
[33](01, 16)-(01, 19): STRING(STRING) '"X"'
[33](01, 20)-(01, 21): STAR(OP) '*'
[33](01, 22)-(01, 28): NAME(NAME) 'lengte'
[33](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 13): NAME(NAME) 'newencode'
[34](01, 14)-(01, 15): EQUAL(OP) '='
[34](01, 16)-(01, 22): NAME(NAME) 'encode'
[34](01, 22)-(01, 23): LPAR(OP) '('
[34](01, 23)-(01, 32): NAME(NAME) 'newstring'
[34](01, 32)-(01, 33): RPAR(OP) ')'
[34](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 04): INDENT(INDENT) '    '
[35](01, 04)-(01, 09): NAME(NAME) 'while'
[35](01, 10)-(01, 11): NAME(NAME) 'i'
[35](01, 12)-(01, 13): LESS(OP) '<'
[35](01, 14)-(01, 20): NAME(NAME) 'lengte'
[35](01, 21)-(01, 22): MINUS(OP) '-'
[35](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[35](01, 23)-(01, 24): COLON(OP) ':'
[35](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 08): INDENT(INDENT) '        '
[36](01, 08)-(01, 10): NAME(NAME) 'if'
[36](01, 11)-(01, 20): NAME(NAME) 'newencode'
[36](01, 20)-(01, 21): LSQB(OP) '['
[36](01, 21)-(01, 22): NAME(NAME) 'i'
[36](01, 22)-(01, 23): RSQB(OP) ']'
[36](01, 24)-(01, 26): NOTEQUAL(OP) '!='
[36](01, 27)-(01, 28): NAME(NAME) 's'
[36](01, 28)-(01, 29): LSQB(OP) '['
[36](01, 29)-(01, 30): NAME(NAME) 'i'
[36](01, 30)-(01, 31): RSQB(OP) ']'
[36](01, 31)-(01, 32): COLON(OP) ':'
[36](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 12): INDENT(INDENT) '            '
[37](01, 12)-(01, 14): NAME(NAME) 'if'
[37](01, 15)-(01, 16): NAME(NAME) 's'
[37](01, 16)-(01, 17): LSQB(OP) '['
[37](01, 17)-(01, 18): NAME(NAME) 'i'
[37](01, 18)-(01, 19): RSQB(OP) ']'
[37](01, 20)-(01, 22): EQEQUAL(OP) '=='
[37](01, 23)-(01, 26): STRING(STRING) '"2"'
[37](01, 26)-(01, 27): COLON(OP) ':'
[37](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 16): INDENT(INDENT) '                '
[38](01, 16)-(01, 25): NAME(NAME) 'newstring'
[38](01, 26)-(01, 27): EQUAL(OP) '='
[38](01, 28)-(01, 37): NAME(NAME) 'newstring'
[38](01, 37)-(01, 38): LSQB(OP) '['
[38](01, 38)-(01, 39): COLON(OP) ':'
[38](01, 39)-(01, 40): NAME(NAME) 'i'
[38](01, 40)-(01, 41): MINUS(OP) '-'
[38](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[38](01, 42)-(01, 43): RSQB(OP) ']'
[38](01, 44)-(01, 45): PLUS(OP) '+'
[38](01, 46)-(01, 49): STRING(STRING) '"X"'
[38](01, 50)-(01, 51): PLUS(OP) '+'
[38](01, 52)-(01, 61): NAME(NAME) 'newstring'
[38](01, 61)-(01, 62): LSQB(OP) '['
[38](01, 62)-(01, 63): NAME(NAME) 'i'
[38](01, 63)-(01, 64): COLON(OP) ':'
[38](01, 64)-(01, 65): RSQB(OP) ']'
[38](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 16): INDENT(INDENT) '                '
[39](01, 16)-(01, 25): NAME(NAME) 'newstring'
[39](01, 26)-(01, 27): EQUAL(OP) '='
[39](01, 28)-(01, 37): NAME(NAME) 'newstring'
[39](01, 37)-(01, 38): LSQB(OP) '['
[39](01, 38)-(01, 39): COLON(OP) ':'
[39](01, 39)-(01, 40): NAME(NAME) 'i'
[39](01, 40)-(01, 41): PLUS(OP) '+'
[39](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[39](01, 42)-(01, 43): RSQB(OP) ']'
[39](01, 44)-(01, 45): PLUS(OP) '+'
[39](01, 46)-(01, 49): STRING(STRING) '"X"'
[39](01, 50)-(01, 51): PLUS(OP) '+'
[39](01, 52)-(01, 61): NAME(NAME) 'newstring'
[39](01, 61)-(01, 62): LSQB(OP) '['
[39](01, 62)-(01, 63): NAME(NAME) 'i'
[39](01, 63)-(01, 64): PLUS(OP) '+'
[39](01, 64)-(01, 65): NUMBER(NUMBER) '2'
[39](01, 65)-(01, 66): COLON(OP) ':'
[39](01, 66)-(01, 67): RSQB(OP) ']'
[39](01, 67)-(01, 68): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 12): INDENT(INDENT) '            '
[40](01, 12)-(01, 16): NAME(NAME) 'elif'
[40](01, 17)-(01, 18): NAME(NAME) 's'
[40](01, 18)-(01, 19): LSQB(OP) '['
[40](01, 19)-(01, 20): NAME(NAME) 'i'
[40](01, 20)-(01, 21): RSQB(OP) ']'
[40](01, 22)-(01, 24): EQEQUAL(OP) '=='
[40](01, 25)-(01, 28): STRING(STRING) '"0"'
[40](01, 28)-(01, 29): COLON(OP) ':'
[40](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 16): INDENT(INDENT) '                '
[41](01, 16)-(01, 25): NAME(NAME) 'newstring'
[41](01, 26)-(01, 27): EQUAL(OP) '='
[41](01, 28)-(01, 37): NAME(NAME) 'newstring'
[41](01, 37)-(01, 38): LSQB(OP) '['
[41](01, 38)-(01, 39): COLON(OP) ':'
[41](01, 39)-(01, 40): NAME(NAME) 'i'
[41](01, 40)-(01, 41): MINUS(OP) '-'
[41](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[41](01, 42)-(01, 43): RSQB(OP) ']'
[41](01, 44)-(01, 45): PLUS(OP) '+'
[41](01, 46)-(01, 49): STRING(STRING) '" "'
[41](01, 50)-(01, 51): PLUS(OP) '+'
[41](01, 52)-(01, 61): NAME(NAME) 'newstring'
[41](01, 61)-(01, 62): LSQB(OP) '['
[41](01, 62)-(01, 63): NAME(NAME) 'i'
[41](01, 63)-(01, 64): COLON(OP) ':'
[41](01, 64)-(01, 65): RSQB(OP) ']'
[41](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 16): INDENT(INDENT) '                '
[42](01, 16)-(01, 25): NAME(NAME) 'newstring'
[42](01, 26)-(01, 27): EQUAL(OP) '='
[42](01, 28)-(01, 37): NAME(NAME) 'newstring'
[42](01, 37)-(01, 38): LSQB(OP) '['
[42](01, 38)-(01, 39): COLON(OP) ':'
[42](01, 39)-(01, 40): NAME(NAME) 'i'
[42](01, 40)-(01, 41): PLUS(OP) '+'
[42](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[42](01, 42)-(01, 43): RSQB(OP) ']'
[42](01, 44)-(01, 45): PLUS(OP) '+'
[42](01, 46)-(01, 49): STRING(STRING) '" "'
[42](01, 50)-(01, 51): PLUS(OP) '+'
[42](01, 52)-(01, 61): NAME(NAME) 'newstring'
[42](01, 61)-(01, 62): LSQB(OP) '['
[42](01, 62)-(01, 63): NAME(NAME) 'i'
[42](01, 63)-(01, 64): PLUS(OP) '+'
[42](01, 64)-(01, 65): NUMBER(NUMBER) '2'
[42](01, 65)-(01, 66): COLON(OP) ':'
[42](01, 66)-(01, 67): RSQB(OP) ']'
[42](01, 67)-(01, 68): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 12): INDENT(INDENT) '            '
[43](01, 12)-(01, 16): NAME(NAME) 'else'
[43](01, 16)-(01, 17): COLON(OP) ':'
[43](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 16): INDENT(INDENT) '                '
[44](01, 16)-(01, 18): NAME(NAME) 'if'
[44](01, 19)-(01, 20): NAME(NAME) 's'
[44](01, 20)-(01, 21): LSQB(OP) '['
[44](01, 21)-(01, 22): NAME(NAME) 'i'
[44](01, 22)-(01, 23): MINUS(OP) '-'
[44](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[44](01, 24)-(01, 25): RSQB(OP) ']'
[44](01, 26)-(01, 28): EQEQUAL(OP) '=='
[44](01, 28)-(01, 31): STRING(STRING) '"2"'
[44](01, 31)-(01, 32): COLON(OP) ':'
[44](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 20): INDENT(INDENT) '                    '
[45](01, 20)-(01, 29): NAME(NAME) 'newstring'
[45](01, 30)-(01, 31): EQUAL(OP) '='
[45](01, 32)-(01, 41): NAME(NAME) 'newstring'
[45](01, 41)-(01, 42): LSQB(OP) '['
[45](01, 42)-(01, 43): COLON(OP) ':'
[45](01, 43)-(01, 44): NAME(NAME) 'i'
[45](01, 44)-(01, 45): PLUS(OP) '+'
[45](01, 45)-(01, 46): NUMBER(NUMBER) '1'
[45](01, 46)-(01, 47): RSQB(OP) ']'
[45](01, 48)-(01, 49): PLUS(OP) '+'
[45](01, 50)-(01, 53): STRING(STRING) '" "'
[45](01, 54)-(01, 55): PLUS(OP) '+'
[45](01, 56)-(01, 65): NAME(NAME) 'newstring'
[45](01, 65)-(01, 66): LSQB(OP) '['
[45](01, 66)-(01, 67): NAME(NAME) 'i'
[45](01, 67)-(01, 68): PLUS(OP) '+'
[45](01, 68)-(01, 69): NUMBER(NUMBER) '2'
[45](01, 69)-(01, 70): COLON(OP) ':'
[45](01, 70)-(01, 71): RSQB(OP) ']'
[45](01, 71)-(01, 72): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 16): INDENT(INDENT) '                '
[46](01, 16)-(01, 20): NAME(NAME) 'elif'
[46](01, 21)-(01, 22): NAME(NAME) 's'
[46](01, 22)-(01, 23): LSQB(OP) '['
[46](01, 23)-(01, 24): NAME(NAME) 'i'
[46](01, 24)-(01, 25): PLUS(OP) '+'
[46](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[46](01, 26)-(01, 27): RSQB(OP) ']'
[46](01, 28)-(01, 30): EQEQUAL(OP) '=='
[46](01, 30)-(01, 33): STRING(STRING) '"2"'
[46](01, 33)-(01, 34): COLON(OP) ':'
[46](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 20): INDENT(INDENT) '                    '
[47](01, 20)-(01, 29): NAME(NAME) 'newstring'
[47](01, 30)-(01, 31): EQUAL(OP) '='
[47](01, 32)-(01, 41): NAME(NAME) 'newstring'
[47](01, 41)-(01, 42): LSQB(OP) '['
[47](01, 42)-(01, 43): COLON(OP) ':'
[47](01, 43)-(01, 44): NAME(NAME) 'i'
[47](01, 44)-(01, 45): MINUS(OP) '-'
[47](01, 45)-(01, 46): NUMBER(NUMBER) '1'
[47](01, 46)-(01, 47): RSQB(OP) ']'
[47](01, 48)-(01, 49): PLUS(OP) '+'
[47](01, 50)-(01, 53): STRING(STRING) '" "'
[47](01, 54)-(01, 55): PLUS(OP) '+'
[47](01, 56)-(01, 65): NAME(NAME) 'newstring'
[47](01, 65)-(01, 66): LSQB(OP) '['
[47](01, 66)-(01, 67): NAME(NAME) 'i'
[47](01, 67)-(01, 68): COLON(OP) ':'
[47](01, 68)-(01, 69): RSQB(OP) ']'
[47](01, 69)-(01, 70): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 16): INDENT(INDENT) '                '
[48](01, 16)-(01, 20): NAME(NAME) 'else'
[48](01, 20)-(01, 21): COLON(OP) ':'
[48](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 20): INDENT(INDENT) '                    '
[49](01, 20)-(01, 29): NAME(NAME) 'newstring'
[49](01, 30)-(01, 31): EQUAL(OP) '='
[49](01, 32)-(01, 41): NAME(NAME) 'newstring'
[49](01, 41)-(01, 42): LSQB(OP) '['
[49](01, 42)-(01, 43): COLON(OP) ':'
[49](01, 43)-(01, 44): NAME(NAME) 'i'
[49](01, 44)-(01, 45): PLUS(OP) '+'
[49](01, 45)-(01, 46): NUMBER(NUMBER) '1'
[49](01, 46)-(01, 47): RSQB(OP) ']'
[49](01, 48)-(01, 49): PLUS(OP) '+'
[49](01, 50)-(01, 53): STRING(STRING) '" "'
[49](01, 54)-(01, 55): PLUS(OP) '+'
[49](01, 56)-(01, 65): NAME(NAME) 'newstring'
[49](01, 65)-(01, 66): LSQB(OP) '['
[49](01, 66)-(01, 67): NAME(NAME) 'i'
[49](01, 67)-(01, 68): PLUS(OP) '+'
[49](01, 68)-(01, 69): NUMBER(NUMBER) '2'
[49](01, 69)-(01, 70): COLON(OP) ':'
[49](01, 70)-(01, 71): RSQB(OP) ']'
[49](01, 71)-(01, 72): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 12): INDENT(INDENT) '            '
[50](01, 12)-(01, 21): NAME(NAME) 'newencode'
[50](01, 22)-(01, 23): EQUAL(OP) '='
[50](01, 24)-(01, 30): NAME(NAME) 'encode'
[50](01, 30)-(01, 31): LPAR(OP) '('
[50](01, 31)-(01, 40): NAME(NAME) 'newstring'
[50](01, 40)-(01, 41): RPAR(OP) ')'
[50](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 08): INDENT(INDENT) '        '
[51](01, 08)-(01, 10): NAME(NAME) 'if'
[51](01, 11)-(01, 20): NAME(NAME) 'newencode'
[51](01, 21)-(01, 23): EQEQUAL(OP) '=='
[51](01, 24)-(01, 25): NAME(NAME) 's'
[51](01, 25)-(01, 26): COLON(OP) ':'
[51](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[51](02, 00)-(02, 00): DEDENT(DEDENT)
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 12): INDENT(INDENT) '            '
[52](01, 12)-(01, 18): NAME(NAME) 'return'
[52](01, 19)-(01, 28): NAME(NAME) 'newstring'
[52](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[52](02, 00)-(02, 00): DEDENT(DEDENT)
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 08): INDENT(INDENT) '        '
[53](01, 08)-(01, 09): NAME(NAME) 'i'
[53](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[53](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[53](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[53](02, 00)-(02, 00): DEDENT(DEDENT)
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 04): INDENT(INDENT) '    '
[54](01, 04)-(01, 06): NAME(NAME) 'if'
[54](01, 07)-(01, 16): NAME(NAME) 'newencode'
[54](01, 16)-(01, 17): LSQB(OP) '['
[54](01, 17)-(01, 23): NAME(NAME) 'lengte'
[54](01, 23)-(01, 24): MINUS(OP) '-'
[54](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[54](01, 25)-(01, 26): RSQB(OP) ']'
[54](01, 27)-(01, 29): NOTEQUAL(OP) '!='
[54](01, 30)-(01, 31): NAME(NAME) 's'
[54](01, 31)-(01, 32): LSQB(OP) '['
[54](01, 32)-(01, 38): NAME(NAME) 'lengte'
[54](01, 39)-(01, 40): MINUS(OP) '-'
[54](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[54](01, 41)-(01, 42): RSQB(OP) ']'
[54](01, 42)-(01, 43): COLON(OP) ':'
[54](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): DEDENT(DEDENT)
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 08): INDENT(INDENT) '        '
[55](01, 08)-(01, 17): NAME(NAME) 'newstring'
[55](01, 18)-(01, 19): EQUAL(OP) '='
[55](01, 20)-(01, 29): NAME(NAME) 'newstring'
[55](01, 29)-(01, 30): LSQB(OP) '['
[55](01, 30)-(01, 31): COLON(OP) ':'
[55](01, 31)-(01, 32): NAME(NAME) 'i'
[55](01, 32)-(01, 33): MINUS(OP) '-'
[55](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[55](01, 34)-(01, 35): RSQB(OP) ']'
[55](01, 36)-(01, 37): PLUS(OP) '+'
[55](01, 38)-(01, 41): STRING(STRING) '" "'
[55](01, 42)-(01, 43): PLUS(OP) '+'
[55](01, 44)-(01, 53): NAME(NAME) 'newstring'
[55](01, 53)-(01, 54): LSQB(OP) '['
[55](01, 54)-(01, 55): NAME(NAME) 'i'
[55](01, 55)-(01, 56): COLON(OP) ':'
[55](01, 56)-(01, 57): RSQB(OP) ']'
[55](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[55](02, 00)-(02, 00): DEDENT(DEDENT)
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[56](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[56](01, 04)-(01, 05): NL(NL) '\n'
[56](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[57](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[57](01, 00)-(01, 04): INDENT(INDENT) '    '
[57](01, 04)-(01, 10): NAME(NAME) 'return'
[57](01, 11)-(01, 19): NAME(NAME) 'newstrin'
[57](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[57](02, 00)-(02, 00): DEDENT(DEDENT)
[57](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

