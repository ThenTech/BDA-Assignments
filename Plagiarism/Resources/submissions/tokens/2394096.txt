[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 18): NAME(NAME) 'cleanup_spaces'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 20): NAME(NAME) 's'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): COLON(OP) ':'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'n'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 10): STRING(STRING) '""'
[01](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[02](01, 20)-(01, 21): COMMA(OP) ','
[02](01, 21)-(01, 24): NAME(NAME) 'len'
[02](01, 24)-(01, 25): LPAR(OP) '('
[02](01, 25)-(01, 26): NAME(NAME) 's'
[02](01, 26)-(01, 27): RPAR(OP) ')'
[02](01, 27)-(01, 28): RPAR(OP) ')'
[02](01, 28)-(01, 29): COLON(OP) ':'
[02](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 09): NAME(NAME) 'k'
[03](01, 09)-(01, 10): EQUAL(OP) '='
[03](01, 10)-(01, 17): NAME(NAME) 'functie'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 20): NAME(NAME) 'i'
[03](01, 20)-(01, 21): COMMA(OP) ','
[03](01, 21)-(01, 22): NAME(NAME) 's'
[03](01, 22)-(01, 23): RPAR(OP) ')'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): NAME(NAME) 'k'
[04](01, 13)-(01, 15): NOTEQUAL(OP) '!='
[04](01, 16)-(01, 20): NAME(NAME) 'None'
[04](01, 20)-(01, 21): COLON(OP) ':'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 11): INDENT(INDENT) '           '
[05](01, 11)-(01, 12): NAME(NAME) 'n'
[05](01, 13)-(01, 15): PLUSEQUAL(OP) '+='
[05](01, 15)-(01, 16): NAME(NAME) 'k'
[05](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 12): NAME(NAME) 'i'
[06](01, 13)-(01, 15): EQEQUAL(OP) '=='
[06](01, 15)-(01, 18): NAME(NAME) 'len'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 20): NAME(NAME) 's'
[06](01, 20)-(01, 21): RPAR(OP) ')'
[06](01, 21)-(01, 22): COLON(OP) ':'
[06](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'return'
[07](01, 19)-(01, 20): NAME(NAME) 'n'
[07](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 03): NAME(NAME) 'def'
[08](01, 04)-(01, 11): NAME(NAME) 'functie'
[08](01, 11)-(01, 12): LPAR(OP) '('
[08](01, 12)-(01, 13): NAME(NAME) 'i'
[08](01, 13)-(01, 14): COMMA(OP) ','
[08](01, 14)-(01, 15): NAME(NAME) 's'
[08](01, 15)-(01, 16): RPAR(OP) ')'
[08](01, 16)-(01, 17): COLON(OP) ':'
[08](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 06): NAME(NAME) 'if'
[09](01, 07)-(01, 08): NAME(NAME) 'i'
[09](01, 08)-(01, 10): EQEQUAL(OP) '=='
[09](01, 10)-(01, 11): NUMBER(NUMBER) '1'
[09](01, 12)-(01, 15): NAME(NAME) 'and'
[09](01, 16)-(01, 17): NAME(NAME) 's'
[09](01, 17)-(01, 18): LSQB(OP) '['
[09](01, 18)-(01, 19): NAME(NAME) 'i'
[09](01, 19)-(01, 20): RSQB(OP) ']'
[09](01, 20)-(01, 22): NOTEQUAL(OP) '!='
[09](01, 22)-(01, 25): STRING(STRING) '" "'
[09](01, 25)-(01, 26): COLON(OP) ':'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'return'
[10](01, 15)-(01, 16): NAME(NAME) 's'
[10](01, 16)-(01, 17): LSQB(OP) '['
[10](01, 17)-(01, 18): NAME(NAME) 'i'
[10](01, 18)-(01, 19): RSQB(OP) ']'
[10](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 08): NAME(NAME) 'elif'
[11](01, 09)-(01, 10): NAME(NAME) 'i'
[11](01, 10)-(01, 12): EQEQUAL(OP) '=='
[11](01, 12)-(01, 15): NAME(NAME) 'len'
[11](01, 15)-(01, 16): LPAR(OP) '('
[11](01, 16)-(01, 17): NAME(NAME) 's'
[11](01, 17)-(01, 18): RPAR(OP) ')'
[11](01, 18)-(01, 19): MINUS(OP) '-'
[11](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[11](01, 21)-(01, 24): NAME(NAME) 'and'
[11](01, 25)-(01, 26): NAME(NAME) 's'
[11](01, 26)-(01, 27): LSQB(OP) '['
[11](01, 27)-(01, 28): NAME(NAME) 'i'
[11](01, 28)-(01, 29): RSQB(OP) ']'
[11](01, 30)-(01, 32): NOTEQUAL(OP) '!='
[11](01, 33)-(01, 36): STRING(STRING) '" "'
[11](01, 36)-(01, 37): COLON(OP) ':'
[11](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 14): NAME(NAME) 'return'
[12](01, 15)-(01, 16): NAME(NAME) 's'
[12](01, 16)-(01, 17): LSQB(OP) '['
[12](01, 17)-(01, 18): NAME(NAME) 'i'
[12](01, 18)-(01, 19): RSQB(OP) ']'
[12](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 08): NAME(NAME) 'elif'
[13](01, 10)-(01, 11): NAME(NAME) 's'
[13](01, 11)-(01, 12): LSQB(OP) '['
[13](01, 12)-(01, 13): NAME(NAME) 'i'
[13](01, 13)-(01, 14): RSQB(OP) ']'
[13](01, 15)-(01, 17): NOTEQUAL(OP) '!='
[13](01, 18)-(01, 21): STRING(STRING) '" "'
[13](01, 21)-(01, 22): COLON(OP) ':'
[13](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 14): NAME(NAME) 'return'
[14](01, 15)-(01, 16): NAME(NAME) 's'
[14](01, 16)-(01, 17): LSQB(OP) '['
[14](01, 17)-(01, 18): NAME(NAME) 'i'
[14](01, 18)-(01, 19): RSQB(OP) ']'
[14](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 08): NAME(NAME) 'elif'
[15](01, 09)-(01, 10): NAME(NAME) 's'
[15](01, 10)-(01, 11): LSQB(OP) '['
[15](01, 11)-(01, 12): NAME(NAME) 'i'
[15](01, 12)-(01, 13): PLUS(OP) '+'
[15](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[15](01, 14)-(01, 15): RSQB(OP) ']'
[15](01, 16)-(01, 18): NOTEQUAL(OP) '!='
[15](01, 18)-(01, 21): STRING(STRING) '" "'
[15](01, 22)-(01, 25): NAME(NAME) 'and'
[15](01, 26)-(01, 27): NAME(NAME) 's'
[15](01, 27)-(01, 28): LSQB(OP) '['
[15](01, 28)-(01, 29): NAME(NAME) 'i'
[15](01, 29)-(01, 30): RSQB(OP) ']'
[15](01, 30)-(01, 32): EQEQUAL(OP) '=='
[15](01, 32)-(01, 35): STRING(STRING) '" "'
[15](01, 35)-(01, 36): COLON(OP) ':'
[15](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 14): NAME(NAME) 'return'
[16](01, 15)-(01, 16): NAME(NAME) 's'
[16](01, 16)-(01, 17): LSQB(OP) '['
[16](01, 17)-(01, 18): NAME(NAME) 'i'
[16](01, 18)-(01, 19): RSQB(OP) ']'
[16](01, 19)-(01, 20): NEWLINE(NEWLINE)
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

