[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'filtro'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 16): NAME(NAME) 'frase'
[00](01, 16)-(01, 17): RPAR(OP) ')'
[00](01, 17)-(01, 18): COLON(OP) ':'
[00](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'minu'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 16): NAME(NAME) 'frase'
[01](01, 16)-(01, 17): DOT(OP) '.'
[01](01, 17)-(01, 22): NAME(NAME) 'lower'
[01](01, 22)-(01, 23): LPAR(OP) '('
[01](01, 23)-(01, 24): RPAR(OP) ')'
[01](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'rta'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 12): STRING(STRING) '""'
[02](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 13): NAME(NAME) 'letra'
[03](01, 14)-(01, 16): NAME(NAME) 'in'
[03](01, 17)-(01, 21): NAME(NAME) 'minu'
[03](01, 21)-(01, 22): COLON(OP) ':'
[03](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): LPAR(OP) '('
[04](01, 12)-(01, 15): STRING(STRING) "'a'"
[04](01, 16)-(01, 18): LESSEQUAL(OP) '<='
[04](01, 19)-(01, 24): NAME(NAME) 'letra'
[04](01, 25)-(01, 28): NAME(NAME) 'and'
[04](01, 29)-(01, 34): NAME(NAME) 'letra'
[04](01, 35)-(01, 37): LESSEQUAL(OP) '<='
[04](01, 38)-(01, 41): STRING(STRING) "'z'"
[04](01, 41)-(01, 42): RPAR(OP) ')'
[04](01, 42)-(01, 43): COLON(OP) ':'
[04](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 15): NAME(NAME) 'rta'
[05](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[05](01, 19)-(01, 24): NAME(NAME) 'letra'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 10): NAME(NAME) 'return'
[06](01, 11)-(01, 14): NAME(NAME) 'rta'
[06](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 03): NAME(NAME) 'def'
[10](01, 04)-(01, 17): NAME(NAME) 'is_palindrome'
[10](01, 17)-(01, 18): LPAR(OP) '('
[10](01, 18)-(01, 25): NAME(NAME) 'palabra'
[10](01, 25)-(01, 26): RPAR(OP) ')'
[10](01, 26)-(01, 27): COLON(OP) ':'
[10](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 07): NAME(NAME) 'for'
[11](01, 08)-(01, 09): NAME(NAME) 'i'
[11](01, 10)-(01, 12): NAME(NAME) 'in'
[11](01, 13)-(01, 18): NAME(NAME) 'range'
[11](01, 18)-(01, 19): LPAR(OP) '('
[11](01, 19)-(01, 22): NAME(NAME) 'len'
[11](01, 22)-(01, 23): LPAR(OP) '('
[11](01, 23)-(01, 30): NAME(NAME) 'palabra'
[11](01, 30)-(01, 31): RPAR(OP) ')'
[11](01, 32)-(01, 34): DOUBLESLASH(OP) '//'
[11](01, 35)-(01, 36): NUMBER(NUMBER) '2'
[11](01, 36)-(01, 37): RPAR(OP) ')'
[11](01, 37)-(01, 38): COLON(OP) ':'
[11](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 10): NAME(NAME) 'if'
[12](01, 11)-(01, 12): LPAR(OP) '('
[12](01, 12)-(01, 19): NAME(NAME) 'palabra'
[12](01, 19)-(01, 20): LSQB(OP) '['
[12](01, 20)-(01, 21): NAME(NAME) 'i'
[12](01, 21)-(01, 22): RSQB(OP) ']'
[12](01, 23)-(01, 25): NOTEQUAL(OP) '!='
[12](01, 26)-(01, 33): NAME(NAME) 'palabra'
[12](01, 33)-(01, 34): LSQB(OP) '['
[12](01, 34)-(01, 37): NAME(NAME) 'len'
[12](01, 37)-(01, 38): LPAR(OP) '('
[12](01, 38)-(01, 45): NAME(NAME) 'palabra'
[12](01, 45)-(01, 46): RPAR(OP) ')'
[12](01, 47)-(01, 48): MINUS(OP) '-'
[12](01, 49)-(01, 50): NAME(NAME) 'i'
[12](01, 51)-(01, 52): MINUS(OP) '-'
[12](01, 53)-(01, 54): NUMBER(NUMBER) '1'
[12](01, 54)-(01, 55): RSQB(OP) ']'
[12](01, 55)-(01, 56): RPAR(OP) ')'
[12](01, 56)-(01, 57): COLON(OP) ':'
[12](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 18): NAME(NAME) 'return'
[13](01, 19)-(01, 24): NAME(NAME) 'False'
[13](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 10): NAME(NAME) 'return'
[14](01, 11)-(01, 15): NAME(NAME) 'True'
[14](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 03): NAME(NAME) 'def'
[18](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[18](01, 26)-(01, 27): LPAR(OP) '('
[18](01, 27)-(01, 32): NAME(NAME) 'frase'
[18](01, 32)-(01, 33): RPAR(OP) ')'
[18](01, 33)-(01, 34): COLON(OP) ':'
[18](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 10): NAME(NAME) 'return'
[19](01, 11)-(01, 24): NAME(NAME) 'is_palindrome'
[19](01, 24)-(01, 25): LPAR(OP) '('
[19](01, 25)-(01, 31): NAME(NAME) 'filtro'
[19](01, 31)-(01, 32): LPAR(OP) '('
[19](01, 32)-(01, 37): NAME(NAME) 'frase'
[19](01, 37)-(01, 38): RPAR(OP) ')'
[19](01, 38)-(01, 39): RPAR(OP) ')'
[19](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 05): NAME(NAME) 'frase'
[23](01, 06)-(01, 07): EQUAL(OP) '='
[23](01, 08)-(01, 13): NAME(NAME) 'input'
[23](01, 13)-(01, 14): LPAR(OP) '('
[23](01, 14)-(01, 23): STRING(STRING) '"frase: "'
[23](01, 23)-(01, 24): RPAR(OP) ')'
[23](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 02): NAME(NAME) 'if'
[25](01, 03)-(01, 04): LPAR(OP) '('
[25](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[25](01, 26)-(01, 27): LPAR(OP) '('
[25](01, 27)-(01, 32): NAME(NAME) 'frase'
[25](01, 32)-(01, 33): RPAR(OP) ')'
[25](01, 33)-(01, 34): RPAR(OP) ')'
[25](01, 34)-(01, 35): COLON(OP) ':'
[25](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 09): NAME(NAME) 'print'
[26](01, 09)-(01, 10): LPAR(OP) '('
[26](01, 10)-(01, 16): STRING(STRING) '"True"'
[26](01, 16)-(01, 17): RPAR(OP) ')'
[26](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): NAME(NAME) 'else'
[27](01, 04)-(01, 05): COLON(OP) ':'
[27](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 09): NAME(NAME) 'print'
[28](01, 09)-(01, 10): LPAR(OP) '('
[28](01, 10)-(01, 17): STRING(STRING) '"False"'
[28](01, 17)-(01, 18): RPAR(OP) ')'
[28](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

