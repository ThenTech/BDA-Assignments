[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'import'
[00](01, 07)-(01, 11): NAME(NAME) 'math'
[00](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'import'
[01](01, 07)-(01, 13): NAME(NAME) 'string'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): NAME(NAME) 'alfabet'
[02](01, 07)-(01, 08): EQUAL(OP) '='
[02](01, 08)-(01, 36): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[02](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'def'
[04](01, 04)-(01, 08): NAME(NAME) 'find'
[04](01, 08)-(01, 09): LPAR(OP) '('
[04](01, 09)-(01, 10): NAME(NAME) 's'
[04](01, 10)-(01, 11): COMMA(OP) ','
[04](01, 12)-(01, 14): NAME(NAME) 'ch'
[04](01, 14)-(01, 15): RPAR(OP) ')'
[04](01, 15)-(01, 16): COLON(OP) ':'
[04](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 05): NAME(NAME) 'x'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[05](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'while'
[06](01, 10)-(01, 11): NAME(NAME) 'x'
[06](01, 12)-(01, 13): LESS(OP) '<'
[06](01, 14)-(01, 17): NAME(NAME) 'len'
[06](01, 17)-(01, 18): LPAR(OP) '('
[06](01, 18)-(01, 19): NAME(NAME) 's'
[06](01, 19)-(01, 20): RPAR(OP) ')'
[06](01, 20)-(01, 21): COLON(OP) ':'
[06](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 12): NAME(NAME) 's'
[07](01, 12)-(01, 13): LSQB(OP) '['
[07](01, 13)-(01, 14): NAME(NAME) 'x'
[07](01, 14)-(01, 15): RSQB(OP) ']'
[07](01, 16)-(01, 18): EQEQUAL(OP) '=='
[07](01, 19)-(01, 21): NAME(NAME) 'ch'
[07](01, 21)-(01, 22): COLON(OP) ':'
[07](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 18): NAME(NAME) 'return'
[08](01, 19)-(01, 20): NAME(NAME) 'x'
[08](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 09): NAME(NAME) 'x'
[09](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[09](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[09](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'return'
[10](01, 11)-(01, 12): MINUS(OP) '-'
[10](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[10](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 03): NAME(NAME) 'def'
[11](01, 04)-(01, 10): NAME(NAME) 'encode'
[11](01, 10)-(01, 11): LPAR(OP) '('
[11](01, 11)-(01, 12): NAME(NAME) 's'
[11](01, 12)-(01, 13): COMMA(OP) ','
[11](01, 13)-(01, 14): NAME(NAME) 'n'
[11](01, 14)-(01, 15): RPAR(OP) ')'
[11](01, 15)-(01, 16): COLON(OP) ':'
[11](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 12): NAME(NAME) 'antwoord'
[12](01, 13)-(01, 14): EQUAL(OP) '='
[12](01, 15)-(01, 17): STRING(STRING) '""'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 09): NAME(NAME) 'nieuw'
[13](01, 10)-(01, 11): EQUAL(OP) '='
[13](01, 12)-(01, 14): STRING(STRING) '""'
[13](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 06): NAME(NAME) 'if'
[14](01, 07)-(01, 08): NAME(NAME) 'n'
[14](01, 09)-(01, 10): LESS(OP) '<'
[14](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[14](01, 12)-(01, 13): COLON(OP) ':'
[14](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 09): NAME(NAME) 'n'
[15](01, 09)-(01, 10): EQUAL(OP) '='
[15](01, 10)-(01, 11): NAME(NAME) 'n'
[15](01, 12)-(01, 13): PLUS(OP) '+'
[15](01, 14)-(01, 16): NUMBER(NUMBER) '26'
[15](01, 16)-(01, 17): STAR(OP) '*'
[15](01, 17)-(01, 20): NAME(NAME) 'abs'
[15](01, 20)-(01, 21): LPAR(OP) '('
[15](01, 21)-(01, 25): NAME(NAME) 'math'
[15](01, 25)-(01, 26): DOT(OP) '.'
[15](01, 26)-(01, 31): NAME(NAME) 'floor'
[15](01, 31)-(01, 32): LPAR(OP) '('
[15](01, 32)-(01, 33): NAME(NAME) 'n'
[15](01, 33)-(01, 34): SLASH(OP) '/'
[15](01, 34)-(01, 36): NUMBER(NUMBER) '26'
[15](01, 36)-(01, 37): RPAR(OP) ')'
[15](01, 37)-(01, 38): RPAR(OP) ')'
[15](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 08): NAME(NAME) 'elif'
[16](01, 09)-(01, 10): NAME(NAME) 'n'
[16](01, 11)-(01, 12): GREATER(OP) '>'
[16](01, 13)-(01, 15): NUMBER(NUMBER) '25'
[16](01, 15)-(01, 16): COLON(OP) ':'
[16](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 09): NAME(NAME) 'n'
[17](01, 10)-(01, 11): EQUAL(OP) '='
[17](01, 12)-(01, 13): NAME(NAME) 'n'
[17](01, 14)-(01, 15): MINUS(OP) '-'
[17](01, 16)-(01, 18): NUMBER(NUMBER) '26'
[17](01, 18)-(01, 19): STAR(OP) '*'
[17](01, 19)-(01, 23): NAME(NAME) 'math'
[17](01, 23)-(01, 24): DOT(OP) '.'
[17](01, 24)-(01, 29): NAME(NAME) 'floor'
[17](01, 29)-(01, 30): LPAR(OP) '('
[17](01, 30)-(01, 31): NAME(NAME) 'n'
[17](01, 31)-(01, 32): SLASH(OP) '/'
[17](01, 32)-(01, 34): NUMBER(NUMBER) '26'
[17](01, 34)-(01, 35): RPAR(OP) ')'
[17](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 07): NAME(NAME) 'for'
[18](01, 08)-(01, 09): NAME(NAME) 'p'
[18](01, 10)-(01, 12): NAME(NAME) 'in'
[18](01, 13)-(01, 14): NAME(NAME) 's'
[18](01, 14)-(01, 15): COLON(OP) ':'
[18](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 10): NAME(NAME) 'if'
[19](01, 11)-(01, 12): NAME(NAME) 'p'
[19](01, 13)-(01, 15): EQEQUAL(OP) '=='
[19](01, 16)-(01, 19): STRING(STRING) '" "'
[19](01, 19)-(01, 20): COLON(OP) ':'
[19](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 20): NAME(NAME) 'antwoord'
[20](01, 21)-(01, 22): EQUAL(OP) '='
[20](01, 23)-(01, 31): NAME(NAME) 'antwoord'
[20](01, 32)-(01, 33): PLUS(OP) '+'
[20](01, 34)-(01, 37): STRING(STRING) '" "'
[20](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 12): NAME(NAME) 'elif'
[21](01, 13)-(01, 14): NAME(NAME) 'p'
[21](01, 15)-(01, 17): NAME(NAME) 'in'
[21](01, 18)-(01, 24): NAME(NAME) 'string'
[21](01, 24)-(01, 25): DOT(OP) '.'
[21](01, 25)-(01, 36): NAME(NAME) 'punctuation'
[21](01, 36)-(01, 37): COLON(OP) ':'
[21](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 17): NAME(NAME) 'nieuw'
[22](01, 18)-(01, 19): EQUAL(OP) '='
[22](01, 20)-(01, 28): NAME(NAME) 'antwoord'
[22](01, 28)-(01, 29): LSQB(OP) '['
[22](01, 29)-(01, 30): COLON(OP) ':'
[22](01, 30)-(01, 31): RSQB(OP) ']'
[22](01, 32)-(01, 33): PLUS(OP) '+'
[22](01, 34)-(01, 35): NAME(NAME) 'p'
[22](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 20): NAME(NAME) 'antwoord'
[23](01, 21)-(01, 22): EQUAL(OP) '='
[23](01, 23)-(01, 28): NAME(NAME) 'nieuw'
[23](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 12): NAME(NAME) 'else'
[24](01, 12)-(01, 13): COLON(OP) ':'
[24](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 13): NAME(NAME) 'g'
[25](01, 14)-(01, 15): EQUAL(OP) '='
[25](01, 16)-(01, 20): NAME(NAME) 'find'
[25](01, 20)-(01, 21): LPAR(OP) '('
[25](01, 21)-(01, 28): NAME(NAME) 'alfabet'
[25](01, 28)-(01, 29): COMMA(OP) ','
[25](01, 30)-(01, 31): NAME(NAME) 'p'
[25](01, 31)-(01, 32): RPAR(OP) ')'
[25](01, 33)-(01, 34): PLUS(OP) '+'
[25](01, 35)-(01, 36): NAME(NAME) 'n'
[25](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 12): INDENT(INDENT) '            '
[26](01, 12)-(01, 14): NAME(NAME) 'if'
[26](01, 15)-(01, 16): NAME(NAME) 'g'
[26](01, 17)-(01, 18): GREATER(OP) '>'
[26](01, 19)-(01, 21): NUMBER(NUMBER) '25'
[26](01, 21)-(01, 22): COLON(OP) ':'
[26](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 16): INDENT(INDENT) '                '
[27](01, 16)-(01, 17): NAME(NAME) 'g'
[27](01, 18)-(01, 19): EQUAL(OP) '='
[27](01, 20)-(01, 21): NAME(NAME) 'g'
[27](01, 22)-(01, 23): MINUS(OP) '-'
[27](01, 24)-(01, 26): NUMBER(NUMBER) '26'
[27](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 17): NAME(NAME) 'nieuw'
[28](01, 18)-(01, 19): EQUAL(OP) '='
[28](01, 20)-(01, 28): NAME(NAME) 'antwoord'
[28](01, 28)-(01, 29): LSQB(OP) '['
[28](01, 29)-(01, 30): COLON(OP) ':'
[28](01, 30)-(01, 31): RSQB(OP) ']'
[28](01, 32)-(01, 33): PLUS(OP) '+'
[28](01, 34)-(01, 41): NAME(NAME) 'alfabet'
[28](01, 41)-(01, 42): LSQB(OP) '['
[28](01, 42)-(01, 43): NAME(NAME) 'g'
[28](01, 43)-(01, 44): RSQB(OP) ']'
[28](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 12): INDENT(INDENT) '            '
[29](01, 12)-(01, 20): NAME(NAME) 'antwoord'
[29](01, 21)-(01, 22): EQUAL(OP) '='
[29](01, 23)-(01, 28): NAME(NAME) 'nieuw'
[29](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 10): NAME(NAME) 'return'
[30](01, 11)-(01, 16): NAME(NAME) 'nieuw'
[30](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 03): NAME(NAME) 'def'
[31](01, 04)-(01, 10): NAME(NAME) 'decode'
[31](01, 10)-(01, 11): LPAR(OP) '('
[31](01, 11)-(01, 12): NAME(NAME) 's'
[31](01, 12)-(01, 13): COMMA(OP) ','
[31](01, 13)-(01, 14): NAME(NAME) 'n'
[31](01, 14)-(01, 15): RPAR(OP) ')'
[31](01, 15)-(01, 16): COLON(OP) ':'
[31](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 12): NAME(NAME) 'antwoord'
[32](01, 13)-(01, 14): EQUAL(OP) '='
[32](01, 15)-(01, 17): STRING(STRING) '""'
[32](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 09): NAME(NAME) 'nieuw'
[33](01, 10)-(01, 11): EQUAL(OP) '='
[33](01, 12)-(01, 14): STRING(STRING) '""'
[33](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 06): NAME(NAME) 'if'
[34](01, 07)-(01, 08): NAME(NAME) 'n'
[34](01, 09)-(01, 10): LESS(OP) '<'
[34](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[34](01, 12)-(01, 13): COLON(OP) ':'
[34](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 09): NAME(NAME) 'n'
[35](01, 09)-(01, 10): EQUAL(OP) '='
[35](01, 10)-(01, 11): NAME(NAME) 'n'
[35](01, 12)-(01, 13): PLUS(OP) '+'
[35](01, 14)-(01, 16): NUMBER(NUMBER) '26'
[35](01, 16)-(01, 17): STAR(OP) '*'
[35](01, 17)-(01, 20): NAME(NAME) 'abs'
[35](01, 20)-(01, 21): LPAR(OP) '('
[35](01, 21)-(01, 25): NAME(NAME) 'math'
[35](01, 25)-(01, 26): DOT(OP) '.'
[35](01, 26)-(01, 31): NAME(NAME) 'floor'
[35](01, 31)-(01, 32): LPAR(OP) '('
[35](01, 32)-(01, 33): NAME(NAME) 'n'
[35](01, 33)-(01, 34): SLASH(OP) '/'
[35](01, 34)-(01, 36): NUMBER(NUMBER) '26'
[35](01, 36)-(01, 37): RPAR(OP) ')'
[35](01, 37)-(01, 38): RPAR(OP) ')'
[35](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 04): INDENT(INDENT) '    '
[36](01, 04)-(01, 08): NAME(NAME) 'elif'
[36](01, 09)-(01, 10): NAME(NAME) 'n'
[36](01, 11)-(01, 12): GREATER(OP) '>'
[36](01, 13)-(01, 15): NUMBER(NUMBER) '25'
[36](01, 15)-(01, 16): COLON(OP) ':'
[36](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 08): INDENT(INDENT) '        '
[37](01, 08)-(01, 09): NAME(NAME) 'n'
[37](01, 10)-(01, 11): EQUAL(OP) '='
[37](01, 12)-(01, 13): NAME(NAME) 'n'
[37](01, 14)-(01, 15): MINUS(OP) '-'
[37](01, 16)-(01, 18): NUMBER(NUMBER) '26'
[37](01, 18)-(01, 19): STAR(OP) '*'
[37](01, 19)-(01, 23): NAME(NAME) 'math'
[37](01, 23)-(01, 24): DOT(OP) '.'
[37](01, 24)-(01, 29): NAME(NAME) 'floor'
[37](01, 29)-(01, 30): LPAR(OP) '('
[37](01, 30)-(01, 31): NAME(NAME) 'n'
[37](01, 31)-(01, 32): SLASH(OP) '/'
[37](01, 32)-(01, 34): NUMBER(NUMBER) '26'
[37](01, 34)-(01, 35): RPAR(OP) ')'
[37](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 07): NAME(NAME) 'for'
[38](01, 08)-(01, 09): NAME(NAME) 'p'
[38](01, 10)-(01, 12): NAME(NAME) 'in'
[38](01, 13)-(01, 14): NAME(NAME) 's'
[38](01, 14)-(01, 15): COLON(OP) ':'
[38](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 08): INDENT(INDENT) '        '
[39](01, 08)-(01, 10): NAME(NAME) 'if'
[39](01, 11)-(01, 12): NAME(NAME) 'p'
[39](01, 13)-(01, 15): EQEQUAL(OP) '=='
[39](01, 16)-(01, 19): STRING(STRING) '" "'
[39](01, 19)-(01, 20): COLON(OP) ':'
[39](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 12): INDENT(INDENT) '            '
[40](01, 12)-(01, 20): NAME(NAME) 'antwoord'
[40](01, 21)-(01, 22): EQUAL(OP) '='
[40](01, 23)-(01, 31): NAME(NAME) 'antwoord'
[40](01, 32)-(01, 33): PLUS(OP) '+'
[40](01, 34)-(01, 37): STRING(STRING) '" "'
[40](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 08): INDENT(INDENT) '        '
[41](01, 08)-(01, 12): NAME(NAME) 'elif'
[41](01, 13)-(01, 14): NAME(NAME) 'p'
[41](01, 15)-(01, 17): NAME(NAME) 'in'
[41](01, 18)-(01, 24): NAME(NAME) 'string'
[41](01, 24)-(01, 25): DOT(OP) '.'
[41](01, 25)-(01, 36): NAME(NAME) 'punctuation'
[41](01, 36)-(01, 37): COLON(OP) ':'
[41](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 12): INDENT(INDENT) '            '
[42](01, 12)-(01, 17): NAME(NAME) 'nieuw'
[42](01, 18)-(01, 19): EQUAL(OP) '='
[42](01, 20)-(01, 28): NAME(NAME) 'antwoord'
[42](01, 28)-(01, 29): LSQB(OP) '['
[42](01, 29)-(01, 30): COLON(OP) ':'
[42](01, 30)-(01, 31): RSQB(OP) ']'
[42](01, 32)-(01, 33): PLUS(OP) '+'
[42](01, 34)-(01, 35): NAME(NAME) 'p'
[42](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 12): INDENT(INDENT) '            '
[43](01, 12)-(01, 20): NAME(NAME) 'antwoord'
[43](01, 21)-(01, 22): EQUAL(OP) '='
[43](01, 23)-(01, 28): NAME(NAME) 'nieuw'
[43](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 08): INDENT(INDENT) '        '
[44](01, 08)-(01, 12): NAME(NAME) 'else'
[44](01, 12)-(01, 13): COLON(OP) ':'
[44](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 12): INDENT(INDENT) '            '
[45](01, 12)-(01, 13): NAME(NAME) 'g'
[45](01, 14)-(01, 15): EQUAL(OP) '='
[45](01, 16)-(01, 20): NAME(NAME) 'find'
[45](01, 20)-(01, 21): LPAR(OP) '('
[45](01, 21)-(01, 28): NAME(NAME) 'alfabet'
[45](01, 28)-(01, 29): COMMA(OP) ','
[45](01, 30)-(01, 31): NAME(NAME) 'p'
[45](01, 31)-(01, 32): RPAR(OP) ')'
[45](01, 33)-(01, 34): MINUS(OP) '-'
[45](01, 35)-(01, 36): NAME(NAME) 'n'
[45](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 12): INDENT(INDENT) '            '
[46](01, 12)-(01, 14): NAME(NAME) 'if'
[46](01, 15)-(01, 16): NAME(NAME) 'g'
[46](01, 17)-(01, 18): LESS(OP) '<'
[46](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[46](01, 20)-(01, 21): COLON(OP) ':'
[46](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 16): INDENT(INDENT) '                '
[47](01, 16)-(01, 17): NAME(NAME) 'g'
[47](01, 18)-(01, 19): EQUAL(OP) '='
[47](01, 20)-(01, 21): NAME(NAME) 'g'
[47](01, 22)-(01, 23): PLUS(OP) '+'
[47](01, 24)-(01, 26): NUMBER(NUMBER) '26'
[47](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 12): INDENT(INDENT) '            '
[48](01, 12)-(01, 17): NAME(NAME) 'nieuw'
[48](01, 18)-(01, 19): EQUAL(OP) '='
[48](01, 20)-(01, 28): NAME(NAME) 'antwoord'
[48](01, 28)-(01, 29): LSQB(OP) '['
[48](01, 29)-(01, 30): COLON(OP) ':'
[48](01, 30)-(01, 31): RSQB(OP) ']'
[48](01, 32)-(01, 33): PLUS(OP) '+'
[48](01, 34)-(01, 41): NAME(NAME) 'alfabet'
[48](01, 41)-(01, 42): LSQB(OP) '['
[48](01, 42)-(01, 43): NAME(NAME) 'g'
[48](01, 43)-(01, 44): RSQB(OP) ']'
[48](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 12): INDENT(INDENT) '            '
[49](01, 12)-(01, 20): NAME(NAME) 'antwoord'
[49](01, 21)-(01, 22): EQUAL(OP) '='
[49](01, 23)-(01, 28): NAME(NAME) 'nieuw'
[49](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 04): INDENT(INDENT) '    '
[50](01, 04)-(01, 10): NAME(NAME) 'return'
[50](01, 11)-(01, 16): NAME(NAME) 'nieuw'
[50](01, 16)-(01, 17): NEWLINE(NEWLINE)
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

