[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'n'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 07): NAME(NAME) 'int'
[00](01, 07)-(01, 08): LPAR(OP) '('
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 44): STRING(STRING) '"Give value, greater than 0: "'
[00](01, 44)-(01, 45): RPAR(OP) ')'
[00](01, 45)-(01, 46): RPAR(OP) ')'
[00](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'while'
[01](01, 06)-(01, 07): NAME(NAME) 'n'
[01](01, 08)-(01, 09): LESS(OP) '<'
[01](01, 10)-(01, 11): NUMBER(NUMBER) '1'
[01](01, 11)-(01, 12): COLON(OP) ':'
[01](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 05): NAME(NAME) 'n'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 11): NAME(NAME) 'int'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 17): NAME(NAME) 'input'
[02](01, 17)-(01, 18): LPAR(OP) '('
[02](01, 18)-(01, 48): STRING(STRING) '"Give value, greater than 0: "'
[02](01, 48)-(01, 49): RPAR(OP) ')'
[02](01, 49)-(01, 50): RPAR(OP) ')'
[02](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 05): NAME(NAME) 'bases'
[04](01, 06)-(01, 07): EQUAL(OP) '='
[04](01, 08)-(01, 09): LSQB(OP) '['
[04](01, 09)-(01, 12): STRING(STRING) '"A"'
[04](01, 12)-(01, 13): COMMA(OP) ','
[04](01, 14)-(01, 17): STRING(STRING) '"C"'
[04](01, 17)-(01, 18): COMMA(OP) ','
[04](01, 19)-(01, 22): STRING(STRING) '"G"'
[04](01, 22)-(01, 23): COMMA(OP) ','
[04](01, 24)-(01, 27): STRING(STRING) '"T"'
[04](01, 27)-(01, 28): RSQB(OP) ']'
[04](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 02): NAME(NAME) 'if'
[06](01, 03)-(01, 04): NAME(NAME) 'n'
[06](01, 05)-(01, 07): EQEQUAL(OP) '=='
[06](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[06](01, 09)-(01, 10): COLON(OP) ':'
[06](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 07): NAME(NAME) 'for'
[07](01, 08)-(01, 09): NAME(NAME) 'i'
[07](01, 10)-(01, 12): NAME(NAME) 'in'
[07](01, 13)-(01, 18): NAME(NAME) 'bases'
[07](01, 18)-(01, 19): COLON(OP) ':'
[07](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 13): NAME(NAME) 'print'
[08](01, 13)-(01, 14): LPAR(OP) '('
[08](01, 14)-(01, 15): NAME(NAME) 'i'
[08](01, 15)-(01, 16): RPAR(OP) ')'
[08](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 02): NAME(NAME) 'if'
[12](01, 03)-(01, 04): NAME(NAME) 'n'
[12](01, 05)-(01, 07): EQEQUAL(OP) '=='
[12](01, 08)-(01, 09): NUMBER(NUMBER) '2'
[12](01, 09)-(01, 10): COLON(OP) ':'
[12](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 07): NAME(NAME) 'for'
[13](01, 08)-(01, 09): NAME(NAME) 'i'
[13](01, 10)-(01, 12): NAME(NAME) 'in'
[13](01, 13)-(01, 18): NAME(NAME) 'range'
[13](01, 18)-(01, 19): LPAR(OP) '('
[13](01, 19)-(01, 22): NAME(NAME) 'len'
[13](01, 22)-(01, 23): LPAR(OP) '('
[13](01, 23)-(01, 28): NAME(NAME) 'bases'
[13](01, 28)-(01, 29): RPAR(OP) ')'
[13](01, 29)-(01, 30): RPAR(OP) ')'
[13](01, 30)-(01, 31): COLON(OP) ':'
[13](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 11): NAME(NAME) 'for'
[14](01, 12)-(01, 13): NAME(NAME) 'j'
[14](01, 14)-(01, 16): NAME(NAME) 'in'
[14](01, 17)-(01, 22): NAME(NAME) 'range'
[14](01, 22)-(01, 23): LPAR(OP) '('
[14](01, 23)-(01, 26): NAME(NAME) 'len'
[14](01, 26)-(01, 27): LPAR(OP) '('
[14](01, 27)-(01, 32): NAME(NAME) 'bases'
[14](01, 32)-(01, 33): RPAR(OP) ')'
[14](01, 33)-(01, 34): RPAR(OP) ')'
[14](01, 34)-(01, 35): COLON(OP) ':'
[14](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 17): NAME(NAME) 'print'
[15](01, 17)-(01, 18): LPAR(OP) '('
[15](01, 18)-(01, 23): NAME(NAME) 'bases'
[15](01, 23)-(01, 24): LSQB(OP) '['
[15](01, 24)-(01, 25): NAME(NAME) 'i'
[15](01, 25)-(01, 26): RSQB(OP) ']'
[15](01, 26)-(01, 27): COMMA(OP) ','
[15](01, 28)-(01, 33): NAME(NAME) 'bases'
[15](01, 33)-(01, 34): LSQB(OP) '['
[15](01, 34)-(01, 35): NAME(NAME) 'j'
[15](01, 35)-(01, 36): RSQB(OP) ']'
[15](01, 36)-(01, 37): COMMA(OP) ','
[15](01, 38)-(01, 41): NAME(NAME) 'sep'
[15](01, 41)-(01, 42): EQUAL(OP) '='
[15](01, 42)-(01, 44): STRING(STRING) '""'
[15](01, 44)-(01, 45): RPAR(OP) ')'
[15](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 02): NAME(NAME) 'if'
[18](01, 03)-(01, 04): NAME(NAME) 'n'
[18](01, 05)-(01, 07): EQEQUAL(OP) '=='
[18](01, 08)-(01, 09): NUMBER(NUMBER) '3'
[18](01, 09)-(01, 10): COLON(OP) ':'
[18](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 07): NAME(NAME) 'for'
[19](01, 08)-(01, 09): NAME(NAME) 'i'
[19](01, 10)-(01, 12): NAME(NAME) 'in'
[19](01, 13)-(01, 18): NAME(NAME) 'range'
[19](01, 18)-(01, 19): LPAR(OP) '('
[19](01, 19)-(01, 22): NAME(NAME) 'len'
[19](01, 22)-(01, 23): LPAR(OP) '('
[19](01, 23)-(01, 28): NAME(NAME) 'bases'
[19](01, 28)-(01, 29): RPAR(OP) ')'
[19](01, 29)-(01, 30): RPAR(OP) ')'
[19](01, 30)-(01, 31): COLON(OP) ':'
[19](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 11): NAME(NAME) 'for'
[20](01, 12)-(01, 13): NAME(NAME) 'j'
[20](01, 14)-(01, 16): NAME(NAME) 'in'
[20](01, 17)-(01, 22): NAME(NAME) 'range'
[20](01, 22)-(01, 23): LPAR(OP) '('
[20](01, 23)-(01, 26): NAME(NAME) 'len'
[20](01, 26)-(01, 27): LPAR(OP) '('
[20](01, 27)-(01, 32): NAME(NAME) 'bases'
[20](01, 32)-(01, 33): RPAR(OP) ')'
[20](01, 33)-(01, 34): RPAR(OP) ')'
[20](01, 34)-(01, 35): COLON(OP) ':'
[20](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 15): NAME(NAME) 'for'
[21](01, 16)-(01, 17): NAME(NAME) 'k'
[21](01, 18)-(01, 20): NAME(NAME) 'in'
[21](01, 21)-(01, 26): NAME(NAME) 'range'
[21](01, 26)-(01, 27): LPAR(OP) '('
[21](01, 27)-(01, 30): NAME(NAME) 'len'
[21](01, 30)-(01, 31): LPAR(OP) '('
[21](01, 31)-(01, 36): NAME(NAME) 'bases'
[21](01, 36)-(01, 37): RPAR(OP) ')'
[21](01, 37)-(01, 38): RPAR(OP) ')'
[21](01, 38)-(01, 39): COLON(OP) ':'
[21](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 16): INDENT(INDENT) '                '
[22](01, 16)-(01, 21): NAME(NAME) 'print'
[22](01, 21)-(01, 22): LPAR(OP) '('
[22](01, 22)-(01, 27): NAME(NAME) 'bases'
[22](01, 27)-(01, 28): LSQB(OP) '['
[22](01, 28)-(01, 29): NAME(NAME) 'i'
[22](01, 29)-(01, 30): RSQB(OP) ']'
[22](01, 30)-(01, 31): COMMA(OP) ','
[22](01, 32)-(01, 37): NAME(NAME) 'bases'
[22](01, 37)-(01, 38): LSQB(OP) '['
[22](01, 38)-(01, 39): NAME(NAME) 'j'
[22](01, 39)-(01, 40): RSQB(OP) ']'
[22](01, 40)-(01, 41): COMMA(OP) ','
[22](01, 42)-(01, 47): NAME(NAME) 'bases'
[22](01, 47)-(01, 48): LSQB(OP) '['
[22](01, 48)-(01, 49): NAME(NAME) 'k'
[22](01, 49)-(01, 50): RSQB(OP) ']'
[22](01, 50)-(01, 51): COMMA(OP) ','
[22](01, 52)-(01, 55): NAME(NAME) 'sep'
[22](01, 55)-(01, 56): EQUAL(OP) '='
[22](01, 56)-(01, 58): STRING(STRING) '""'
[22](01, 58)-(01, 59): RPAR(OP) ')'
[22](01, 59)-(01, 60): NEWLINE(NEWLINE)
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

