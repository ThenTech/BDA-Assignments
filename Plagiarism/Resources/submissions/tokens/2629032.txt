[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): COLON(OP) ':'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 09): NAME(NAME) 'listy'
[01](01, 10)-(01, 11): EQUAL(OP) '='
[01](01, 12)-(01, 13): LSQB(OP) '['
[01](01, 13)-(01, 14): RSQB(OP) ']'
[01](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 13): NAME(NAME) 'listy_num'
[02](01, 14)-(01, 15): EQUAL(OP) '='
[02](01, 16)-(01, 17): LSQB(OP) '['
[02](01, 17)-(01, 18): RSQB(OP) ']'
[02](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'i'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 14): NAME(NAME) 's'
[03](01, 14)-(01, 15): COLON(OP) ':'
[03](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'listy'
[04](01, 13)-(01, 14): DOT(OP) '.'
[04](01, 14)-(01, 20): NAME(NAME) 'append'
[04](01, 20)-(01, 21): LPAR(OP) '('
[04](01, 21)-(01, 22): NAME(NAME) 'i'
[04](01, 22)-(01, 23): RPAR(OP) ')'
[04](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 17): NAME(NAME) 'listy_num'
[05](01, 17)-(01, 18): DOT(OP) '.'
[05](01, 18)-(01, 24): NAME(NAME) 'append'
[05](01, 24)-(01, 25): LPAR(OP) '('
[05](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[05](01, 26)-(01, 27): RPAR(OP) ')'
[05](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'i'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 22): NAME(NAME) 'len'
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 28): NAME(NAME) 'listy'
[06](01, 28)-(01, 29): RPAR(OP) ')'
[06](01, 29)-(01, 30): RPAR(OP) ')'
[06](01, 30)-(01, 31): COLON(OP) ':'
[06](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 12): NAME(NAME) 'i'
[07](01, 13)-(01, 15): EQEQUAL(OP) '=='
[07](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[07](01, 18)-(01, 21): NAME(NAME) 'and'
[07](01, 22)-(01, 23): NAME(NAME) 's'
[07](01, 23)-(01, 24): LSQB(OP) '['
[07](01, 24)-(01, 25): NAME(NAME) 'i'
[07](01, 25)-(01, 26): RSQB(OP) ']'
[07](01, 27)-(01, 29): EQEQUAL(OP) '=='
[07](01, 30)-(01, 33): STRING(STRING) '"X"'
[07](01, 33)-(01, 34): COLON(OP) ':'
[07](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 21): NAME(NAME) 'listy_num'
[08](01, 21)-(01, 22): LSQB(OP) '['
[08](01, 22)-(01, 23): NAME(NAME) 'i'
[08](01, 24)-(01, 25): PLUS(OP) '+'
[08](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[08](01, 27)-(01, 28): RSQB(OP) ']'
[08](01, 29)-(01, 31): PLUSEQUAL(OP) '+='
[08](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[08](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 12): NAME(NAME) 'elif'
[09](01, 13)-(01, 14): NAME(NAME) 'i'
[09](01, 15)-(01, 17): EQEQUAL(OP) '=='
[09](01, 18)-(01, 21): NAME(NAME) 'len'
[09](01, 21)-(01, 22): LPAR(OP) '('
[09](01, 22)-(01, 27): NAME(NAME) 'listy'
[09](01, 27)-(01, 28): RPAR(OP) ')'
[09](01, 28)-(01, 29): MINUS(OP) '-'
[09](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[09](01, 31)-(01, 34): NAME(NAME) 'and'
[09](01, 35)-(01, 36): NAME(NAME) 's'
[09](01, 36)-(01, 37): LSQB(OP) '['
[09](01, 37)-(01, 38): NAME(NAME) 'i'
[09](01, 38)-(01, 39): RSQB(OP) ']'
[09](01, 40)-(01, 42): EQEQUAL(OP) '=='
[09](01, 43)-(01, 46): STRING(STRING) '"X"'
[09](01, 46)-(01, 47): COLON(OP) ':'
[09](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 21): NAME(NAME) 'listy_num'
[10](01, 21)-(01, 22): LSQB(OP) '['
[10](01, 22)-(01, 23): NAME(NAME) 'i'
[10](01, 24)-(01, 25): MINUS(OP) '-'
[10](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[10](01, 27)-(01, 28): RSQB(OP) ']'
[10](01, 29)-(01, 31): PLUSEQUAL(OP) '+='
[10](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[10](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 12): NAME(NAME) 'elif'
[11](01, 13)-(01, 14): NAME(NAME) 'i'
[11](01, 15)-(01, 16): GREATER(OP) '>'
[11](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[11](01, 19)-(01, 22): NAME(NAME) 'and'
[11](01, 23)-(01, 24): NAME(NAME) 'i'
[11](01, 25)-(01, 26): LESS(OP) '<'
[11](01, 27)-(01, 30): NAME(NAME) 'len'
[11](01, 30)-(01, 31): LPAR(OP) '('
[11](01, 31)-(01, 36): NAME(NAME) 'listy'
[11](01, 36)-(01, 37): RPAR(OP) ')'
[11](01, 37)-(01, 38): MINUS(OP) '-'
[11](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[11](01, 39)-(01, 40): COLON(OP) ':'
[11](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 14): NAME(NAME) 'if'
[12](01, 15)-(01, 20): NAME(NAME) 'listy'
[12](01, 20)-(01, 21): LSQB(OP) '['
[12](01, 21)-(01, 22): NAME(NAME) 'i'
[12](01, 22)-(01, 23): RSQB(OP) ']'
[12](01, 24)-(01, 26): EQEQUAL(OP) '=='
[12](01, 27)-(01, 30): STRING(STRING) '" "'
[12](01, 30)-(01, 31): COLON(OP) ':'
[12](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 24): NAME(NAME) 'continue'
[13](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 16): NAME(NAME) 'else'
[14](01, 16)-(01, 17): COLON(OP) ':'
[14](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 25): NAME(NAME) 'listy_num'
[15](01, 25)-(01, 26): LSQB(OP) '['
[15](01, 26)-(01, 27): NAME(NAME) 'i'
[15](01, 27)-(01, 28): MINUS(OP) '-'
[15](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[15](01, 29)-(01, 30): RSQB(OP) ']'
[15](01, 31)-(01, 33): PLUSEQUAL(OP) '+='
[15](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[15](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 25): NAME(NAME) 'listy_num'
[16](01, 25)-(01, 26): LSQB(OP) '['
[16](01, 26)-(01, 27): NAME(NAME) 'i'
[16](01, 27)-(01, 28): PLUS(OP) '+'
[16](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[16](01, 29)-(01, 30): RSQB(OP) ']'
[16](01, 31)-(01, 33): PLUSEQUAL(OP) '+='
[16](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[16](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 08): NAME(NAME) 'hehe'
[17](01, 09)-(01, 10): EQUAL(OP) '='
[17](01, 11)-(01, 13): STRING(STRING) '""'
[17](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 07): NAME(NAME) 'for'
[18](01, 08)-(01, 09): NAME(NAME) 'i'
[18](01, 10)-(01, 12): NAME(NAME) 'in'
[18](01, 13)-(01, 22): NAME(NAME) 'listy_num'
[18](01, 22)-(01, 23): COLON(OP) ':'
[18](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 12): NAME(NAME) 'hehe'
[19](01, 13)-(01, 15): PLUSEQUAL(OP) '+='
[19](01, 16)-(01, 19): NAME(NAME) 'str'
[19](01, 19)-(01, 20): LPAR(OP) '('
[19](01, 20)-(01, 21): NAME(NAME) 'i'
[19](01, 21)-(01, 22): RPAR(OP) ')'
[19](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 10): NAME(NAME) 'return'
[20](01, 11)-(01, 15): NAME(NAME) 'hehe'
[20](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 03): NAME(NAME) 'def'
[22](01, 04)-(01, 19): NAME(NAME) 'make_empty_list'
[22](01, 19)-(01, 20): LPAR(OP) '('
[22](01, 20)-(01, 21): NAME(NAME) 's'
[22](01, 21)-(01, 22): RPAR(OP) ')'
[22](01, 22)-(01, 23): COLON(OP) ':'
[22](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 09): NAME(NAME) 'listy'
[23](01, 10)-(01, 11): EQUAL(OP) '='
[23](01, 12)-(01, 13): LSQB(OP) '['
[23](01, 13)-(01, 14): RSQB(OP) ']'
[23](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 13): NAME(NAME) 'listy_num'
[24](01, 14)-(01, 15): EQUAL(OP) '='
[24](01, 16)-(01, 17): LSQB(OP) '['
[24](01, 17)-(01, 18): RSQB(OP) ']'
[24](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 07): NAME(NAME) 'for'
[25](01, 08)-(01, 09): NAME(NAME) 'i'
[25](01, 10)-(01, 12): NAME(NAME) 'in'
[25](01, 13)-(01, 14): NAME(NAME) 's'
[25](01, 14)-(01, 15): COLON(OP) ':'
[25](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 08): INDENT(INDENT) '        '
[26](01, 08)-(01, 17): NAME(NAME) 'listy_num'
[26](01, 17)-(01, 18): DOT(OP) '.'
[26](01, 18)-(01, 24): NAME(NAME) 'append'
[26](01, 24)-(01, 25): LPAR(OP) '('
[26](01, 25)-(01, 26): NAME(NAME) 'i'
[26](01, 26)-(01, 27): RPAR(OP) ')'
[26](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 13): NAME(NAME) 'listy'
[27](01, 13)-(01, 14): DOT(OP) '.'
[27](01, 14)-(01, 20): NAME(NAME) 'append'
[27](01, 20)-(01, 21): LPAR(OP) '('
[27](01, 21)-(01, 23): STRING(STRING) '""'
[27](01, 23)-(01, 24): RPAR(OP) ')'
[27](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 10): NAME(NAME) 'return'
[28](01, 11)-(01, 12): LPAR(OP) '('
[28](01, 12)-(01, 21): NAME(NAME) 'listy_num'
[28](01, 21)-(01, 22): COMMA(OP) ','
[28](01, 23)-(01, 28): NAME(NAME) 'listy'
[28](01, 28)-(01, 29): RPAR(OP) ')'
[28](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 16): COMMENT(COMMENT) '# def decode(s):'
[30](01, 16)-(01, 17): NL(NL) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 26): COMMENT(COMMENT) '#     for i in [" ", "X"]:'
[31](01, 26)-(01, 27): NL(NL) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 47): COMMENT(COMMENT) '#         listy_num, listy = make_empty_list(s)'
[32](01, 47)-(01, 48): NL(NL) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 22): COMMENT(COMMENT) '#         listy[0] = i'
[33](01, 22)-(01, 23): NL(NL) '\n'
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 62): COMMENT(COMMENT) '#         for i in range(1, len(listy_num[1:len(listy_num)])):'
[34](01, 62)-(01, 63): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 39): COMMENT(COMMENT) '#             if listy_num[i-1] == "2":'
[35](01, 39)-(01, 40): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 32): COMMENT(COMMENT) '#                 listy[i] = "X"'
[36](01, 32)-(01, 33): NL(NL) '\n'
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 32): COMMENT(COMMENT) '#                 listy[i] = "X"'
[37](01, 32)-(01, 33): NL(NL) '\n'
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 63): COMMENT(COMMENT) '#             elif listy_num[i-1] == "1" and listy[i-1] == " ":'
[38](01, 63)-(01, 64): NL(NL) '\n'
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 32): COMMENT(COMMENT) '#                 listy[i] = "X"'
[39](01, 32)-(01, 33): NL(NL) '\n'
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 19): COMMENT(COMMENT) '#             else:'
[40](01, 19)-(01, 20): NL(NL) '\n'
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 32): COMMENT(COMMENT) '#                 listy[i] = " "'
[41](01, 32)-(01, 33): NL(NL) '\n'
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 01): NL(NL) '\n'
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 01): NL(NL) '\n'
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 01): NL(NL) '\n'
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 28): COMMENT(COMMENT) '# print(encode("XX     XX"))'
[45](01, 28)-(01, 29): NL(NL) '\n'
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 28): COMMENT(COMMENT) '# print(decode("112121211"))'
[46](01, 28)-(01, 28): NL(NL)
[46](01, 28)-(01, 29): NEWLINE(NEWLINE)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

