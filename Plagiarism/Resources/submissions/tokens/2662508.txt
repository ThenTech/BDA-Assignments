[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'convert'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 18): NAME(NAME) 'number'
[00](01, 18)-(01, 19): RPAR(OP) ')'
[00](01, 19)-(01, 20): COLON(OP) ':'
[00](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'return'
[01](01, 11)-(01, 25): NAME(NAME) 'convert_helper'
[01](01, 25)-(01, 26): LPAR(OP) '('
[01](01, 26)-(01, 32): NAME(NAME) 'number'
[01](01, 32)-(01, 33): COMMA(OP) ','
[01](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[01](01, 35)-(01, 36): RPAR(OP) ')'
[01](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'def'
[04](01, 04)-(01, 18): NAME(NAME) 'convert_helper'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 25): NAME(NAME) 'number'
[04](01, 25)-(01, 26): COMMA(OP) ','
[04](01, 27)-(01, 35): NAME(NAME) 'multiply'
[04](01, 35)-(01, 36): RPAR(OP) ')'
[04](01, 36)-(01, 37): COLON(OP) ':'
[04](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'total'
[05](01, 10)-(01, 11): EQUAL(OP) '='
[05](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[05](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 06): NAME(NAME) 'if'
[06](01, 07)-(01, 10): NAME(NAME) 'len'
[06](01, 10)-(01, 11): LPAR(OP) '('
[06](01, 11)-(01, 17): NAME(NAME) 'number'
[06](01, 17)-(01, 18): RPAR(OP) ')'
[06](01, 19)-(01, 21): NOTEQUAL(OP) '!='
[06](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[06](01, 23)-(01, 24): COLON(OP) ':'
[06](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 18): NAME(NAME) 'last_digit'
[07](01, 19)-(01, 20): EQUAL(OP) '='
[07](01, 21)-(01, 24): NAME(NAME) 'int'
[07](01, 24)-(01, 25): LPAR(OP) '('
[07](01, 25)-(01, 31): NAME(NAME) 'number'
[07](01, 31)-(01, 32): LSQB(OP) '['
[07](01, 32)-(01, 33): MINUS(OP) '-'
[07](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[07](01, 34)-(01, 35): RSQB(OP) ']'
[07](01, 35)-(01, 36): RPAR(OP) ')'
[07](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'rest'
[08](01, 13)-(01, 14): EQUAL(OP) '='
[08](01, 15)-(01, 21): NAME(NAME) 'number'
[08](01, 21)-(01, 22): LSQB(OP) '['
[08](01, 22)-(01, 23): COLON(OP) ':'
[08](01, 23)-(01, 24): MINUS(OP) '-'
[08](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[08](01, 25)-(01, 26): RSQB(OP) ']'
[08](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 13): NAME(NAME) 'total'
[09](01, 14)-(01, 15): EQUAL(OP) '='
[09](01, 16)-(01, 26): NAME(NAME) 'last_digit'
[09](01, 27)-(01, 28): STAR(OP) '*'
[09](01, 29)-(01, 37): NAME(NAME) 'multiply'
[09](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 13): NAME(NAME) 'total'
[10](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[10](01, 17)-(01, 31): NAME(NAME) 'convert_helper'
[10](01, 31)-(01, 32): LPAR(OP) '('
[10](01, 32)-(01, 36): NAME(NAME) 'rest'
[10](01, 36)-(01, 37): COMMA(OP) ','
[10](01, 38)-(01, 46): NAME(NAME) 'multiply'
[10](01, 47)-(01, 48): STAR(OP) '*'
[10](01, 49)-(01, 51): NUMBER(NUMBER) '10'
[10](01, 51)-(01, 52): RPAR(OP) ')'
[10](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'return'
[11](01, 11)-(01, 16): NAME(NAME) 'total'
[11](01, 16)-(01, 17): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

