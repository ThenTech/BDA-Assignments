[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'a'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[02](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'b'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[03](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NAME(NAME) 'c'
[04](01, 02)-(01, 03): EQUAL(OP) '='
[04](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[04](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NAME(NAME) 'd'
[05](01, 02)-(01, 03): EQUAL(OP) '='
[05](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[05](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NAME(NAME) 'e'
[06](01, 02)-(01, 03): EQUAL(OP) '='
[06](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[06](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NAME(NAME) 'f'
[07](01, 02)-(01, 03): EQUAL(OP) '='
[07](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[07](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NAME(NAME) 'g'
[08](01, 02)-(01, 03): EQUAL(OP) '='
[08](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[08](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NAME(NAME) 'h'
[09](01, 02)-(01, 03): EQUAL(OP) '='
[09](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[09](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NAME(NAME) 'i'
[10](01, 02)-(01, 03): EQUAL(OP) '='
[10](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[10](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NAME(NAME) 'j'
[11](01, 02)-(01, 03): EQUAL(OP) '='
[11](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[11](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NAME(NAME) 'k'
[12](01, 02)-(01, 03): EQUAL(OP) '='
[12](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[12](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NAME(NAME) 'l'
[13](01, 02)-(01, 03): EQUAL(OP) '='
[13](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[13](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NAME(NAME) 'm'
[14](01, 02)-(01, 03): EQUAL(OP) '='
[14](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[14](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NAME(NAME) 'n'
[15](01, 02)-(01, 03): EQUAL(OP) '='
[15](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[15](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NAME(NAME) 'o'
[16](01, 02)-(01, 03): EQUAL(OP) '='
[16](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[16](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NAME(NAME) 'p'
[17](01, 02)-(01, 03): EQUAL(OP) '='
[17](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[17](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NAME(NAME) 'q'
[18](01, 02)-(01, 03): EQUAL(OP) '='
[18](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[18](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NAME(NAME) 'r'
[19](01, 02)-(01, 03): EQUAL(OP) '='
[19](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[19](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NAME(NAME) 's'
[20](01, 02)-(01, 03): EQUAL(OP) '='
[20](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[20](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NAME(NAME) 't'
[21](01, 02)-(01, 03): EQUAL(OP) '='
[21](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[21](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NAME(NAME) 'u'
[22](01, 02)-(01, 03): EQUAL(OP) '='
[22](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[22](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NAME(NAME) 'v'
[23](01, 02)-(01, 03): EQUAL(OP) '='
[23](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[23](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NAME(NAME) 'w'
[24](01, 02)-(01, 03): EQUAL(OP) '='
[24](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[24](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NAME(NAME) 'x'
[25](01, 02)-(01, 03): EQUAL(OP) '='
[25](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[25](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NAME(NAME) 'y'
[26](01, 02)-(01, 03): EQUAL(OP) '='
[26](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[26](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 01): NAME(NAME) 'z'
[27](01, 02)-(01, 03): EQUAL(OP) '='
[27](01, 04)-(01, 05): NUMBER(NUMBER) '0'
[27](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 05): NAME(NAME) 'space'
[28](01, 06)-(01, 07): EQUAL(OP) '='
[28](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[28](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): NAME(NAME) 'sentence'
[30](01, 09)-(01, 10): EQUAL(OP) '='
[30](01, 11)-(01, 16): NAME(NAME) 'input'
[30](01, 16)-(01, 17): LPAR(OP) '('
[30](01, 17)-(01, 33): STRING(STRING) '"input string: "'
[30](01, 33)-(01, 34): RPAR(OP) ')'
[30](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 05): NAME(NAME) 'value'
[31](01, 06)-(01, 07): EQUAL(OP) '='
[31](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[31](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 01): NL(NL) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 05): NAME(NAME) 'while'
[33](01, 06)-(01, 11): NAME(NAME) 'value'
[33](01, 12)-(01, 13): PLUS(OP) '+'
[33](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[33](01, 16)-(01, 18): LESSEQUAL(OP) '<='
[33](01, 19)-(01, 22): NAME(NAME) 'len'
[33](01, 22)-(01, 23): LPAR(OP) '('
[33](01, 23)-(01, 31): NAME(NAME) 'sentence'
[33](01, 31)-(01, 32): RPAR(OP) ')'
[33](01, 32)-(01, 33): COLON(OP) ':'
[33](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 06): NAME(NAME) 'if'
[34](01, 07)-(01, 15): NAME(NAME) 'sentence'
[34](01, 15)-(01, 16): LSQB(OP) '['
[34](01, 16)-(01, 21): NAME(NAME) 'value'
[34](01, 21)-(01, 22): RSQB(OP) ']'
[34](01, 23)-(01, 25): EQEQUAL(OP) '=='
[34](01, 26)-(01, 29): STRING(STRING) '"a"'
[34](01, 29)-(01, 30): COLON(OP) ':'
[34](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 09): NAME(NAME) 'a'
[35](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[35](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[35](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 04): INDENT(INDENT) '    '
[36](01, 04)-(01, 08): NAME(NAME) 'elif'
[36](01, 09)-(01, 17): NAME(NAME) 'sentence'
[36](01, 17)-(01, 18): LSQB(OP) '['
[36](01, 18)-(01, 23): NAME(NAME) 'value'
[36](01, 23)-(01, 24): RSQB(OP) ']'
[36](01, 25)-(01, 27): EQEQUAL(OP) '=='
[36](01, 28)-(01, 31): STRING(STRING) '"b"'
[36](01, 31)-(01, 32): COLON(OP) ':'
[36](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 08): INDENT(INDENT) '        '
[37](01, 08)-(01, 09): NAME(NAME) 'b'
[37](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[37](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[37](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 08): NAME(NAME) 'elif'
[38](01, 09)-(01, 17): NAME(NAME) 'sentence'
[38](01, 17)-(01, 18): LSQB(OP) '['
[38](01, 18)-(01, 23): NAME(NAME) 'value'
[38](01, 23)-(01, 24): RSQB(OP) ']'
[38](01, 25)-(01, 27): EQEQUAL(OP) '=='
[38](01, 28)-(01, 31): STRING(STRING) '"c"'
[38](01, 31)-(01, 32): COLON(OP) ':'
[38](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 08): INDENT(INDENT) '        '
[39](01, 08)-(01, 09): NAME(NAME) 'c'
[39](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[39](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[39](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 04): INDENT(INDENT) '    '
[40](01, 04)-(01, 08): NAME(NAME) 'elif'
[40](01, 09)-(01, 17): NAME(NAME) 'sentence'
[40](01, 17)-(01, 18): LSQB(OP) '['
[40](01, 18)-(01, 23): NAME(NAME) 'value'
[40](01, 23)-(01, 24): RSQB(OP) ']'
[40](01, 25)-(01, 27): EQEQUAL(OP) '=='
[40](01, 28)-(01, 31): STRING(STRING) '"d"'
[40](01, 31)-(01, 32): COLON(OP) ':'
[40](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 08): INDENT(INDENT) '        '
[41](01, 08)-(01, 09): NAME(NAME) 'd'
[41](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[41](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[41](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 04): INDENT(INDENT) '    '
[42](01, 04)-(01, 08): NAME(NAME) 'elif'
[42](01, 09)-(01, 17): NAME(NAME) 'sentence'
[42](01, 17)-(01, 18): LSQB(OP) '['
[42](01, 18)-(01, 23): NAME(NAME) 'value'
[42](01, 23)-(01, 24): RSQB(OP) ']'
[42](01, 25)-(01, 27): EQEQUAL(OP) '=='
[42](01, 28)-(01, 31): STRING(STRING) '"e"'
[42](01, 31)-(01, 32): COLON(OP) ':'
[42](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 08): INDENT(INDENT) '        '
[43](01, 08)-(01, 09): NAME(NAME) 'e'
[43](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[43](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[43](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 04): INDENT(INDENT) '    '
[44](01, 04)-(01, 08): NAME(NAME) 'elif'
[44](01, 09)-(01, 17): NAME(NAME) 'sentence'
[44](01, 17)-(01, 18): LSQB(OP) '['
[44](01, 18)-(01, 23): NAME(NAME) 'value'
[44](01, 23)-(01, 24): RSQB(OP) ']'
[44](01, 25)-(01, 27): EQEQUAL(OP) '=='
[44](01, 28)-(01, 31): STRING(STRING) '"f"'
[44](01, 31)-(01, 32): COLON(OP) ':'
[44](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 08): INDENT(INDENT) '        '
[45](01, 08)-(01, 09): NAME(NAME) 'f'
[45](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[45](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[45](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 04): INDENT(INDENT) '    '
[46](01, 04)-(01, 08): NAME(NAME) 'elif'
[46](01, 09)-(01, 17): NAME(NAME) 'sentence'
[46](01, 17)-(01, 18): LSQB(OP) '['
[46](01, 18)-(01, 23): NAME(NAME) 'value'
[46](01, 23)-(01, 24): RSQB(OP) ']'
[46](01, 25)-(01, 27): EQEQUAL(OP) '=='
[46](01, 28)-(01, 31): STRING(STRING) '"g"'
[46](01, 31)-(01, 32): COLON(OP) ':'
[46](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 08): INDENT(INDENT) '        '
[47](01, 08)-(01, 09): NAME(NAME) 'g'
[47](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[47](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[47](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 04): INDENT(INDENT) '    '
[48](01, 04)-(01, 08): NAME(NAME) 'elif'
[48](01, 09)-(01, 17): NAME(NAME) 'sentence'
[48](01, 17)-(01, 18): LSQB(OP) '['
[48](01, 18)-(01, 23): NAME(NAME) 'value'
[48](01, 23)-(01, 24): RSQB(OP) ']'
[48](01, 25)-(01, 27): EQEQUAL(OP) '=='
[48](01, 28)-(01, 31): STRING(STRING) '"h"'
[48](01, 31)-(01, 32): COLON(OP) ':'
[48](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 08): INDENT(INDENT) '        '
[49](01, 08)-(01, 09): NAME(NAME) 'h'
[49](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[49](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[49](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 04): INDENT(INDENT) '    '
[50](01, 04)-(01, 08): NAME(NAME) 'elif'
[50](01, 09)-(01, 17): NAME(NAME) 'sentence'
[50](01, 17)-(01, 18): LSQB(OP) '['
[50](01, 18)-(01, 23): NAME(NAME) 'value'
[50](01, 23)-(01, 24): RSQB(OP) ']'
[50](01, 25)-(01, 27): EQEQUAL(OP) '=='
[50](01, 28)-(01, 31): STRING(STRING) '"i"'
[50](01, 31)-(01, 32): COLON(OP) ':'
[50](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 08): INDENT(INDENT) '        '
[51](01, 08)-(01, 09): NAME(NAME) 'i'
[51](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[51](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[51](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[51](02, 00)-(02, 00): DEDENT(DEDENT)
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 04): INDENT(INDENT) '    '
[52](01, 04)-(01, 08): NAME(NAME) 'elif'
[52](01, 09)-(01, 17): NAME(NAME) 'sentence'
[52](01, 17)-(01, 18): LSQB(OP) '['
[52](01, 18)-(01, 23): NAME(NAME) 'value'
[52](01, 23)-(01, 24): RSQB(OP) ']'
[52](01, 25)-(01, 27): EQEQUAL(OP) '=='
[52](01, 28)-(01, 31): STRING(STRING) '"j"'
[52](01, 31)-(01, 32): COLON(OP) ':'
[52](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[52](02, 00)-(02, 00): DEDENT(DEDENT)
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 08): INDENT(INDENT) '        '
[53](01, 08)-(01, 09): NAME(NAME) 'j'
[53](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[53](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[53](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[53](02, 00)-(02, 00): DEDENT(DEDENT)
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 04): INDENT(INDENT) '    '
[54](01, 04)-(01, 08): NAME(NAME) 'elif'
[54](01, 09)-(01, 17): NAME(NAME) 'sentence'
[54](01, 17)-(01, 18): LSQB(OP) '['
[54](01, 18)-(01, 23): NAME(NAME) 'value'
[54](01, 23)-(01, 24): RSQB(OP) ']'
[54](01, 25)-(01, 27): EQEQUAL(OP) '=='
[54](01, 28)-(01, 31): STRING(STRING) '"k"'
[54](01, 31)-(01, 32): COLON(OP) ':'
[54](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): DEDENT(DEDENT)
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 08): INDENT(INDENT) '        '
[55](01, 08)-(01, 09): NAME(NAME) 'k'
[55](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[55](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[55](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[55](02, 00)-(02, 00): DEDENT(DEDENT)
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[56](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[56](01, 00)-(01, 04): INDENT(INDENT) '    '
[56](01, 04)-(01, 08): NAME(NAME) 'elif'
[56](01, 09)-(01, 17): NAME(NAME) 'sentence'
[56](01, 17)-(01, 18): LSQB(OP) '['
[56](01, 18)-(01, 23): NAME(NAME) 'value'
[56](01, 23)-(01, 24): RSQB(OP) ']'
[56](01, 25)-(01, 27): EQEQUAL(OP) '=='
[56](01, 28)-(01, 31): STRING(STRING) '"l"'
[56](01, 31)-(01, 32): COLON(OP) ':'
[56](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[56](02, 00)-(02, 00): DEDENT(DEDENT)
[56](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[57](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[57](01, 00)-(01, 08): INDENT(INDENT) '        '
[57](01, 08)-(01, 09): NAME(NAME) 'l'
[57](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[57](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[57](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[57](02, 00)-(02, 00): DEDENT(DEDENT)
[57](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[58](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[58](01, 00)-(01, 04): INDENT(INDENT) '    '
[58](01, 04)-(01, 08): NAME(NAME) 'elif'
[58](01, 09)-(01, 17): NAME(NAME) 'sentence'
[58](01, 17)-(01, 18): LSQB(OP) '['
[58](01, 18)-(01, 23): NAME(NAME) 'value'
[58](01, 23)-(01, 24): RSQB(OP) ']'
[58](01, 25)-(01, 27): EQEQUAL(OP) '=='
[58](01, 28)-(01, 31): STRING(STRING) '"m"'
[58](01, 31)-(01, 32): COLON(OP) ':'
[58](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[58](02, 00)-(02, 00): DEDENT(DEDENT)
[58](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[59](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[59](01, 00)-(01, 08): INDENT(INDENT) '        '
[59](01, 08)-(01, 09): NAME(NAME) 'm'
[59](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[59](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[59](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[59](02, 00)-(02, 00): DEDENT(DEDENT)
[59](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[60](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[60](01, 00)-(01, 04): INDENT(INDENT) '    '
[60](01, 04)-(01, 08): NAME(NAME) 'elif'
[60](01, 09)-(01, 17): NAME(NAME) 'sentence'
[60](01, 17)-(01, 18): LSQB(OP) '['
[60](01, 18)-(01, 23): NAME(NAME) 'value'
[60](01, 23)-(01, 24): RSQB(OP) ']'
[60](01, 25)-(01, 27): EQEQUAL(OP) '=='
[60](01, 28)-(01, 31): STRING(STRING) '"n"'
[60](01, 31)-(01, 32): COLON(OP) ':'
[60](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[60](02, 00)-(02, 00): DEDENT(DEDENT)
[60](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[61](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[61](01, 00)-(01, 08): INDENT(INDENT) '        '
[61](01, 08)-(01, 09): NAME(NAME) 'n'
[61](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[61](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[61](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[61](02, 00)-(02, 00): DEDENT(DEDENT)
[61](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[62](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[62](01, 00)-(01, 04): INDENT(INDENT) '    '
[62](01, 04)-(01, 08): NAME(NAME) 'elif'
[62](01, 09)-(01, 17): NAME(NAME) 'sentence'
[62](01, 17)-(01, 18): LSQB(OP) '['
[62](01, 18)-(01, 23): NAME(NAME) 'value'
[62](01, 23)-(01, 24): RSQB(OP) ']'
[62](01, 25)-(01, 27): EQEQUAL(OP) '=='
[62](01, 28)-(01, 31): STRING(STRING) '"o"'
[62](01, 31)-(01, 32): COLON(OP) ':'
[62](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[62](02, 00)-(02, 00): DEDENT(DEDENT)
[62](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[63](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[63](01, 00)-(01, 08): INDENT(INDENT) '        '
[63](01, 08)-(01, 09): NAME(NAME) 'o'
[63](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[63](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[63](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[63](02, 00)-(02, 00): DEDENT(DEDENT)
[63](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[64](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[64](01, 00)-(01, 04): INDENT(INDENT) '    '
[64](01, 04)-(01, 08): NAME(NAME) 'elif'
[64](01, 09)-(01, 17): NAME(NAME) 'sentence'
[64](01, 17)-(01, 18): LSQB(OP) '['
[64](01, 18)-(01, 23): NAME(NAME) 'value'
[64](01, 23)-(01, 24): RSQB(OP) ']'
[64](01, 25)-(01, 27): EQEQUAL(OP) '=='
[64](01, 28)-(01, 31): STRING(STRING) '"p"'
[64](01, 31)-(01, 32): COLON(OP) ':'
[64](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[64](02, 00)-(02, 00): DEDENT(DEDENT)
[64](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[65](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[65](01, 00)-(01, 08): INDENT(INDENT) '        '
[65](01, 08)-(01, 09): NAME(NAME) 'p'
[65](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[65](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[65](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[65](02, 00)-(02, 00): DEDENT(DEDENT)
[65](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[66](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[66](01, 00)-(01, 04): INDENT(INDENT) '    '
[66](01, 04)-(01, 08): NAME(NAME) 'elif'
[66](01, 09)-(01, 17): NAME(NAME) 'sentence'
[66](01, 17)-(01, 18): LSQB(OP) '['
[66](01, 18)-(01, 23): NAME(NAME) 'value'
[66](01, 23)-(01, 24): RSQB(OP) ']'
[66](01, 25)-(01, 27): EQEQUAL(OP) '=='
[66](01, 28)-(01, 31): STRING(STRING) '"q"'
[66](01, 31)-(01, 32): COLON(OP) ':'
[66](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[66](02, 00)-(02, 00): DEDENT(DEDENT)
[66](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[67](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[67](01, 00)-(01, 08): INDENT(INDENT) '        '
[67](01, 08)-(01, 09): NAME(NAME) 'q'
[67](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[67](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[67](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[67](02, 00)-(02, 00): DEDENT(DEDENT)
[67](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[68](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[68](01, 00)-(01, 04): INDENT(INDENT) '    '
[68](01, 04)-(01, 08): NAME(NAME) 'elif'
[68](01, 09)-(01, 17): NAME(NAME) 'sentence'
[68](01, 17)-(01, 18): LSQB(OP) '['
[68](01, 18)-(01, 23): NAME(NAME) 'value'
[68](01, 23)-(01, 24): RSQB(OP) ']'
[68](01, 25)-(01, 27): EQEQUAL(OP) '=='
[68](01, 28)-(01, 31): STRING(STRING) '"r"'
[68](01, 31)-(01, 32): COLON(OP) ':'
[68](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[68](02, 00)-(02, 00): DEDENT(DEDENT)
[68](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[69](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[69](01, 00)-(01, 08): INDENT(INDENT) '        '
[69](01, 08)-(01, 09): NAME(NAME) 'r'
[69](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[69](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[69](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[69](02, 00)-(02, 00): DEDENT(DEDENT)
[69](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[70](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[70](01, 00)-(01, 04): INDENT(INDENT) '    '
[70](01, 04)-(01, 08): NAME(NAME) 'elif'
[70](01, 09)-(01, 17): NAME(NAME) 'sentence'
[70](01, 17)-(01, 18): LSQB(OP) '['
[70](01, 18)-(01, 23): NAME(NAME) 'value'
[70](01, 23)-(01, 24): RSQB(OP) ']'
[70](01, 25)-(01, 27): EQEQUAL(OP) '=='
[70](01, 28)-(01, 31): STRING(STRING) '"s"'
[70](01, 31)-(01, 32): COLON(OP) ':'
[70](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[70](02, 00)-(02, 00): DEDENT(DEDENT)
[70](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[71](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[71](01, 00)-(01, 08): INDENT(INDENT) '        '
[71](01, 08)-(01, 09): NAME(NAME) 's'
[71](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[71](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[71](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[71](02, 00)-(02, 00): DEDENT(DEDENT)
[71](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[72](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[72](01, 00)-(01, 04): INDENT(INDENT) '    '
[72](01, 04)-(01, 08): NAME(NAME) 'elif'
[72](01, 09)-(01, 17): NAME(NAME) 'sentence'
[72](01, 17)-(01, 18): LSQB(OP) '['
[72](01, 18)-(01, 23): NAME(NAME) 'value'
[72](01, 23)-(01, 24): RSQB(OP) ']'
[72](01, 25)-(01, 27): EQEQUAL(OP) '=='
[72](01, 28)-(01, 31): STRING(STRING) '"t"'
[72](01, 31)-(01, 32): COLON(OP) ':'
[72](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[72](02, 00)-(02, 00): DEDENT(DEDENT)
[72](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[73](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[73](01, 00)-(01, 08): INDENT(INDENT) '        '
[73](01, 08)-(01, 09): NAME(NAME) 't'
[73](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[73](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[73](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[73](02, 00)-(02, 00): DEDENT(DEDENT)
[73](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[74](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[74](01, 00)-(01, 04): INDENT(INDENT) '    '
[74](01, 04)-(01, 08): NAME(NAME) 'elif'
[74](01, 09)-(01, 17): NAME(NAME) 'sentence'
[74](01, 17)-(01, 18): LSQB(OP) '['
[74](01, 18)-(01, 23): NAME(NAME) 'value'
[74](01, 23)-(01, 24): RSQB(OP) ']'
[74](01, 25)-(01, 27): EQEQUAL(OP) '=='
[74](01, 28)-(01, 31): STRING(STRING) '"u"'
[74](01, 31)-(01, 32): COLON(OP) ':'
[74](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[74](02, 00)-(02, 00): DEDENT(DEDENT)
[74](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[75](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[75](01, 00)-(01, 08): INDENT(INDENT) '        '
[75](01, 08)-(01, 09): NAME(NAME) 'u'
[75](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[75](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[75](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[75](02, 00)-(02, 00): DEDENT(DEDENT)
[75](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[76](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[76](01, 00)-(01, 04): INDENT(INDENT) '    '
[76](01, 04)-(01, 08): NAME(NAME) 'elif'
[76](01, 09)-(01, 17): NAME(NAME) 'sentence'
[76](01, 17)-(01, 18): LSQB(OP) '['
[76](01, 18)-(01, 23): NAME(NAME) 'value'
[76](01, 23)-(01, 24): RSQB(OP) ']'
[76](01, 25)-(01, 27): EQEQUAL(OP) '=='
[76](01, 28)-(01, 31): STRING(STRING) '"v"'
[76](01, 31)-(01, 32): COLON(OP) ':'
[76](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[76](02, 00)-(02, 00): DEDENT(DEDENT)
[76](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[77](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[77](01, 00)-(01, 08): INDENT(INDENT) '        '
[77](01, 08)-(01, 09): NAME(NAME) 'v'
[77](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[77](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[77](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[77](02, 00)-(02, 00): DEDENT(DEDENT)
[77](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[78](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[78](01, 00)-(01, 04): INDENT(INDENT) '    '
[78](01, 04)-(01, 08): NAME(NAME) 'elif'
[78](01, 09)-(01, 17): NAME(NAME) 'sentence'
[78](01, 17)-(01, 18): LSQB(OP) '['
[78](01, 18)-(01, 23): NAME(NAME) 'value'
[78](01, 23)-(01, 24): RSQB(OP) ']'
[78](01, 25)-(01, 27): EQEQUAL(OP) '=='
[78](01, 28)-(01, 31): STRING(STRING) '"w"'
[78](01, 31)-(01, 32): COLON(OP) ':'
[78](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[78](02, 00)-(02, 00): DEDENT(DEDENT)
[78](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[79](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[79](01, 00)-(01, 08): INDENT(INDENT) '        '
[79](01, 08)-(01, 09): NAME(NAME) 'w'
[79](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[79](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[79](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[79](02, 00)-(02, 00): DEDENT(DEDENT)
[79](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[80](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[80](01, 00)-(01, 04): INDENT(INDENT) '    '
[80](01, 04)-(01, 08): NAME(NAME) 'elif'
[80](01, 09)-(01, 17): NAME(NAME) 'sentence'
[80](01, 17)-(01, 18): LSQB(OP) '['
[80](01, 18)-(01, 23): NAME(NAME) 'value'
[80](01, 23)-(01, 24): RSQB(OP) ']'
[80](01, 25)-(01, 27): EQEQUAL(OP) '=='
[80](01, 28)-(01, 31): STRING(STRING) '"x"'
[80](01, 31)-(01, 32): COLON(OP) ':'
[80](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[80](02, 00)-(02, 00): DEDENT(DEDENT)
[80](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[81](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[81](01, 00)-(01, 08): INDENT(INDENT) '        '
[81](01, 08)-(01, 09): NAME(NAME) 'x'
[81](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[81](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[81](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[81](02, 00)-(02, 00): DEDENT(DEDENT)
[81](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[82](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[82](01, 00)-(01, 04): INDENT(INDENT) '    '
[82](01, 04)-(01, 08): NAME(NAME) 'elif'
[82](01, 09)-(01, 17): NAME(NAME) 'sentence'
[82](01, 17)-(01, 18): LSQB(OP) '['
[82](01, 18)-(01, 23): NAME(NAME) 'value'
[82](01, 23)-(01, 24): RSQB(OP) ']'
[82](01, 25)-(01, 27): EQEQUAL(OP) '=='
[82](01, 28)-(01, 31): STRING(STRING) '"y"'
[82](01, 31)-(01, 32): COLON(OP) ':'
[82](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[82](02, 00)-(02, 00): DEDENT(DEDENT)
[82](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[83](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[83](01, 00)-(01, 08): INDENT(INDENT) '        '
[83](01, 08)-(01, 09): NAME(NAME) 'y'
[83](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[83](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[83](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[83](02, 00)-(02, 00): DEDENT(DEDENT)
[83](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[84](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[84](01, 00)-(01, 04): INDENT(INDENT) '    '
[84](01, 04)-(01, 08): NAME(NAME) 'elif'
[84](01, 09)-(01, 17): NAME(NAME) 'sentence'
[84](01, 17)-(01, 18): LSQB(OP) '['
[84](01, 18)-(01, 23): NAME(NAME) 'value'
[84](01, 23)-(01, 24): RSQB(OP) ']'
[84](01, 25)-(01, 27): EQEQUAL(OP) '=='
[84](01, 28)-(01, 31): STRING(STRING) '"z"'
[84](01, 31)-(01, 32): COLON(OP) ':'
[84](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[84](02, 00)-(02, 00): DEDENT(DEDENT)
[84](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[85](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[85](01, 00)-(01, 08): INDENT(INDENT) '        '
[85](01, 08)-(01, 09): NAME(NAME) 'z'
[85](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[85](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[85](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[85](02, 00)-(02, 00): DEDENT(DEDENT)
[85](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[86](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[86](01, 00)-(01, 04): INDENT(INDENT) '    '
[86](01, 04)-(01, 08): NAME(NAME) 'elif'
[86](01, 09)-(01, 17): NAME(NAME) 'sentence'
[86](01, 17)-(01, 18): LSQB(OP) '['
[86](01, 18)-(01, 23): NAME(NAME) 'value'
[86](01, 23)-(01, 24): RSQB(OP) ']'
[86](01, 25)-(01, 27): EQEQUAL(OP) '=='
[86](01, 28)-(01, 31): STRING(STRING) '" "'
[86](01, 31)-(01, 32): COLON(OP) ':'
[86](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[86](02, 00)-(02, 00): DEDENT(DEDENT)
[86](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[87](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[87](01, 00)-(01, 08): INDENT(INDENT) '        '
[87](01, 08)-(01, 13): NAME(NAME) 'space'
[87](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[87](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[87](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[87](02, 00)-(02, 00): DEDENT(DEDENT)
[87](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[88](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[88](01, 00)-(01, 04): INDENT(INDENT) '    '
[88](01, 04)-(01, 09): NAME(NAME) 'value'
[88](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[88](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[88](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[88](02, 00)-(02, 00): DEDENT(DEDENT)
[88](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[89](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[89](01, 04)-(01, 05): NL(NL) '\n'
[89](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[90](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[90](01, 00)-(01, 02): NAME(NAME) 'a1'
[90](01, 03)-(01, 04): EQUAL(OP) '='
[90](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[90](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[90](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[91](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[91](01, 00)-(01, 02): NAME(NAME) 'b1'
[91](01, 03)-(01, 04): EQUAL(OP) '='
[91](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[91](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[91](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[92](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[92](01, 00)-(01, 02): NAME(NAME) 'c1'
[92](01, 03)-(01, 04): EQUAL(OP) '='
[92](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[92](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[92](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[93](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[93](01, 00)-(01, 02): NAME(NAME) 'd1'
[93](01, 03)-(01, 04): EQUAL(OP) '='
[93](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[93](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[93](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[94](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[94](01, 00)-(01, 02): NAME(NAME) 'e1'
[94](01, 03)-(01, 04): EQUAL(OP) '='
[94](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[94](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[94](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[95](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[95](01, 00)-(01, 02): NAME(NAME) 'f1'
[95](01, 03)-(01, 04): EQUAL(OP) '='
[95](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[95](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[95](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[96](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[96](01, 00)-(01, 02): NAME(NAME) 'g1'
[96](01, 03)-(01, 04): EQUAL(OP) '='
[96](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[96](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[96](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[97](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[97](01, 00)-(01, 02): NAME(NAME) 'h1'
[97](01, 03)-(01, 04): EQUAL(OP) '='
[97](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[97](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[97](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[98](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[98](01, 00)-(01, 02): NAME(NAME) 'i1'
[98](01, 03)-(01, 04): EQUAL(OP) '='
[98](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[98](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[98](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[99](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[99](01, 00)-(01, 02): NAME(NAME) 'j1'
[99](01, 03)-(01, 04): EQUAL(OP) '='
[99](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[99](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[99](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[100](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[100](01, 00)-(01, 02): NAME(NAME) 'k1'
[100](01, 03)-(01, 04): EQUAL(OP) '='
[100](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[100](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[100](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[101](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[101](01, 00)-(01, 02): NAME(NAME) 'l1'
[101](01, 03)-(01, 04): EQUAL(OP) '='
[101](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[101](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[101](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[102](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[102](01, 00)-(01, 02): NAME(NAME) 'm1'
[102](01, 03)-(01, 04): EQUAL(OP) '='
[102](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[102](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[102](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[103](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[103](01, 00)-(01, 02): NAME(NAME) 'n1'
[103](01, 03)-(01, 04): EQUAL(OP) '='
[103](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[103](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[103](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[104](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[104](01, 00)-(01, 02): NAME(NAME) 'o1'
[104](01, 03)-(01, 04): EQUAL(OP) '='
[104](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[104](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[104](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[105](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[105](01, 00)-(01, 02): NAME(NAME) 'p1'
[105](01, 03)-(01, 04): EQUAL(OP) '='
[105](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[105](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[105](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[106](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[106](01, 00)-(01, 02): NAME(NAME) 'q1'
[106](01, 03)-(01, 04): EQUAL(OP) '='
[106](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[106](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[106](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[107](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[107](01, 00)-(01, 02): NAME(NAME) 'r1'
[107](01, 03)-(01, 04): EQUAL(OP) '='
[107](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[107](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[107](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[108](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[108](01, 00)-(01, 02): NAME(NAME) 's1'
[108](01, 03)-(01, 04): EQUAL(OP) '='
[108](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[108](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[108](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[109](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[109](01, 00)-(01, 02): NAME(NAME) 't1'
[109](01, 03)-(01, 04): EQUAL(OP) '='
[109](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[109](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[109](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[110](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[110](01, 00)-(01, 02): NAME(NAME) 'u1'
[110](01, 03)-(01, 04): EQUAL(OP) '='
[110](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[110](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[110](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[111](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[111](01, 00)-(01, 02): NAME(NAME) 'v1'
[111](01, 03)-(01, 04): EQUAL(OP) '='
[111](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[111](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[111](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[112](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[112](01, 00)-(01, 02): NAME(NAME) 'w1'
[112](01, 03)-(01, 04): EQUAL(OP) '='
[112](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[112](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[112](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[113](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[113](01, 00)-(01, 02): NAME(NAME) 'x1'
[113](01, 03)-(01, 04): EQUAL(OP) '='
[113](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[113](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[113](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[114](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[114](01, 00)-(01, 02): NAME(NAME) 'y1'
[114](01, 03)-(01, 04): EQUAL(OP) '='
[114](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[114](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[114](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[115](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[115](01, 00)-(01, 02): NAME(NAME) 'z1'
[115](01, 03)-(01, 04): EQUAL(OP) '='
[115](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[115](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[115](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[116](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[116](01, 00)-(01, 06): NAME(NAME) 'space1'
[116](01, 07)-(01, 08): EQUAL(OP) '='
[116](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[116](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[116](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[117](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[117](01, 04)-(01, 05): NL(NL) '\n'
[117](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[118](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[118](01, 00)-(01, 09): NAME(NAME) 'sentence1'
[118](01, 10)-(01, 11): EQUAL(OP) '='
[118](01, 12)-(01, 17): NAME(NAME) 'input'
[118](01, 17)-(01, 18): LPAR(OP) '('
[118](01, 18)-(01, 34): STRING(STRING) '"input string: "'
[118](01, 34)-(01, 35): RPAR(OP) ')'
[118](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[118](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[119](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[119](01, 00)-(01, 05): NAME(NAME) 'value'
[119](01, 06)-(01, 07): EQUAL(OP) '='
[119](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[119](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[119](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[120](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[120](01, 00)-(01, 01): NL(NL) '\n'
[120](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[121](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[121](01, 00)-(01, 05): NAME(NAME) 'while'
[121](01, 06)-(01, 11): NAME(NAME) 'value'
[121](01, 12)-(01, 13): PLUS(OP) '+'
[121](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[121](01, 16)-(01, 18): LESSEQUAL(OP) '<='
[121](01, 19)-(01, 22): NAME(NAME) 'len'
[121](01, 22)-(01, 23): LPAR(OP) '('
[121](01, 23)-(01, 32): NAME(NAME) 'sentence1'
[121](01, 32)-(01, 33): RPAR(OP) ')'
[121](01, 33)-(01, 34): COLON(OP) ':'
[121](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[121](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[122](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[122](01, 00)-(01, 04): INDENT(INDENT) '    '
[122](01, 04)-(01, 06): NAME(NAME) 'if'
[122](01, 07)-(01, 16): NAME(NAME) 'sentence1'
[122](01, 16)-(01, 17): LSQB(OP) '['
[122](01, 17)-(01, 22): NAME(NAME) 'value'
[122](01, 22)-(01, 23): RSQB(OP) ']'
[122](01, 24)-(01, 26): EQEQUAL(OP) '=='
[122](01, 27)-(01, 30): STRING(STRING) '"a"'
[122](01, 30)-(01, 31): COLON(OP) ':'
[122](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[122](02, 00)-(02, 00): DEDENT(DEDENT)
[122](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[123](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[123](01, 00)-(01, 08): INDENT(INDENT) '        '
[123](01, 08)-(01, 10): NAME(NAME) 'a1'
[123](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[123](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[123](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[123](02, 00)-(02, 00): DEDENT(DEDENT)
[123](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[124](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[124](01, 00)-(01, 04): INDENT(INDENT) '    '
[124](01, 04)-(01, 08): NAME(NAME) 'elif'
[124](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[124](01, 18)-(01, 19): LSQB(OP) '['
[124](01, 19)-(01, 24): NAME(NAME) 'value'
[124](01, 24)-(01, 25): RSQB(OP) ']'
[124](01, 26)-(01, 28): EQEQUAL(OP) '=='
[124](01, 29)-(01, 32): STRING(STRING) '"b"'
[124](01, 32)-(01, 33): COLON(OP) ':'
[124](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[124](02, 00)-(02, 00): DEDENT(DEDENT)
[124](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[125](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[125](01, 00)-(01, 08): INDENT(INDENT) '        '
[125](01, 08)-(01, 10): NAME(NAME) 'b1'
[125](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[125](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[125](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[125](02, 00)-(02, 00): DEDENT(DEDENT)
[125](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[126](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[126](01, 00)-(01, 04): INDENT(INDENT) '    '
[126](01, 04)-(01, 08): NAME(NAME) 'elif'
[126](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[126](01, 18)-(01, 19): LSQB(OP) '['
[126](01, 19)-(01, 24): NAME(NAME) 'value'
[126](01, 24)-(01, 25): RSQB(OP) ']'
[126](01, 26)-(01, 28): EQEQUAL(OP) '=='
[126](01, 29)-(01, 32): STRING(STRING) '"c"'
[126](01, 32)-(01, 33): COLON(OP) ':'
[126](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[126](02, 00)-(02, 00): DEDENT(DEDENT)
[126](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[127](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[127](01, 00)-(01, 08): INDENT(INDENT) '        '
[127](01, 08)-(01, 10): NAME(NAME) 'c1'
[127](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[127](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[127](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[127](02, 00)-(02, 00): DEDENT(DEDENT)
[127](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[128](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[128](01, 00)-(01, 04): INDENT(INDENT) '    '
[128](01, 04)-(01, 08): NAME(NAME) 'elif'
[128](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[128](01, 18)-(01, 19): LSQB(OP) '['
[128](01, 19)-(01, 24): NAME(NAME) 'value'
[128](01, 24)-(01, 25): RSQB(OP) ']'
[128](01, 26)-(01, 28): EQEQUAL(OP) '=='
[128](01, 29)-(01, 32): STRING(STRING) '"d"'
[128](01, 32)-(01, 33): COLON(OP) ':'
[128](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[128](02, 00)-(02, 00): DEDENT(DEDENT)
[128](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[129](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[129](01, 00)-(01, 08): INDENT(INDENT) '        '
[129](01, 08)-(01, 10): NAME(NAME) 'd1'
[129](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[129](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[129](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[129](02, 00)-(02, 00): DEDENT(DEDENT)
[129](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[130](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[130](01, 00)-(01, 04): INDENT(INDENT) '    '
[130](01, 04)-(01, 08): NAME(NAME) 'elif'
[130](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[130](01, 18)-(01, 19): LSQB(OP) '['
[130](01, 19)-(01, 24): NAME(NAME) 'value'
[130](01, 24)-(01, 25): RSQB(OP) ']'
[130](01, 26)-(01, 28): EQEQUAL(OP) '=='
[130](01, 29)-(01, 32): STRING(STRING) '"e"'
[130](01, 32)-(01, 33): COLON(OP) ':'
[130](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[130](02, 00)-(02, 00): DEDENT(DEDENT)
[130](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[131](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[131](01, 00)-(01, 08): INDENT(INDENT) '        '
[131](01, 08)-(01, 10): NAME(NAME) 'e1'
[131](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[131](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[131](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[131](02, 00)-(02, 00): DEDENT(DEDENT)
[131](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[132](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[132](01, 00)-(01, 04): INDENT(INDENT) '    '
[132](01, 04)-(01, 08): NAME(NAME) 'elif'
[132](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[132](01, 18)-(01, 19): LSQB(OP) '['
[132](01, 19)-(01, 24): NAME(NAME) 'value'
[132](01, 24)-(01, 25): RSQB(OP) ']'
[132](01, 26)-(01, 28): EQEQUAL(OP) '=='
[132](01, 29)-(01, 32): STRING(STRING) '"f"'
[132](01, 32)-(01, 33): COLON(OP) ':'
[132](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[132](02, 00)-(02, 00): DEDENT(DEDENT)
[132](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[133](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[133](01, 00)-(01, 08): INDENT(INDENT) '        '
[133](01, 08)-(01, 10): NAME(NAME) 'f1'
[133](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[133](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[133](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[133](02, 00)-(02, 00): DEDENT(DEDENT)
[133](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[134](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[134](01, 00)-(01, 04): INDENT(INDENT) '    '
[134](01, 04)-(01, 08): NAME(NAME) 'elif'
[134](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[134](01, 18)-(01, 19): LSQB(OP) '['
[134](01, 19)-(01, 24): NAME(NAME) 'value'
[134](01, 24)-(01, 25): RSQB(OP) ']'
[134](01, 26)-(01, 28): EQEQUAL(OP) '=='
[134](01, 29)-(01, 32): STRING(STRING) '"g"'
[134](01, 32)-(01, 33): COLON(OP) ':'
[134](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[134](02, 00)-(02, 00): DEDENT(DEDENT)
[134](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[135](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[135](01, 00)-(01, 08): INDENT(INDENT) '        '
[135](01, 08)-(01, 10): NAME(NAME) 'g1'
[135](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[135](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[135](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[135](02, 00)-(02, 00): DEDENT(DEDENT)
[135](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[136](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[136](01, 00)-(01, 04): INDENT(INDENT) '    '
[136](01, 04)-(01, 08): NAME(NAME) 'elif'
[136](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[136](01, 18)-(01, 19): LSQB(OP) '['
[136](01, 19)-(01, 24): NAME(NAME) 'value'
[136](01, 24)-(01, 25): RSQB(OP) ']'
[136](01, 26)-(01, 28): EQEQUAL(OP) '=='
[136](01, 29)-(01, 32): STRING(STRING) '"h"'
[136](01, 32)-(01, 33): COLON(OP) ':'
[136](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[136](02, 00)-(02, 00): DEDENT(DEDENT)
[136](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[137](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[137](01, 00)-(01, 08): INDENT(INDENT) '        '
[137](01, 08)-(01, 10): NAME(NAME) 'h1'
[137](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[137](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[137](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[137](02, 00)-(02, 00): DEDENT(DEDENT)
[137](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[138](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[138](01, 00)-(01, 04): INDENT(INDENT) '    '
[138](01, 04)-(01, 08): NAME(NAME) 'elif'
[138](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[138](01, 18)-(01, 19): LSQB(OP) '['
[138](01, 19)-(01, 24): NAME(NAME) 'value'
[138](01, 24)-(01, 25): RSQB(OP) ']'
[138](01, 26)-(01, 28): EQEQUAL(OP) '=='
[138](01, 29)-(01, 32): STRING(STRING) '"i"'
[138](01, 32)-(01, 33): COLON(OP) ':'
[138](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[138](02, 00)-(02, 00): DEDENT(DEDENT)
[138](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[139](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[139](01, 00)-(01, 08): INDENT(INDENT) '        '
[139](01, 08)-(01, 10): NAME(NAME) 'i1'
[139](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[139](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[139](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[139](02, 00)-(02, 00): DEDENT(DEDENT)
[139](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[140](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[140](01, 00)-(01, 04): INDENT(INDENT) '    '
[140](01, 04)-(01, 08): NAME(NAME) 'elif'
[140](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[140](01, 18)-(01, 19): LSQB(OP) '['
[140](01, 19)-(01, 24): NAME(NAME) 'value'
[140](01, 24)-(01, 25): RSQB(OP) ']'
[140](01, 26)-(01, 28): EQEQUAL(OP) '=='
[140](01, 29)-(01, 32): STRING(STRING) '"j"'
[140](01, 32)-(01, 33): COLON(OP) ':'
[140](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[140](02, 00)-(02, 00): DEDENT(DEDENT)
[140](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[141](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[141](01, 00)-(01, 08): INDENT(INDENT) '        '
[141](01, 08)-(01, 10): NAME(NAME) 'j1'
[141](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[141](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[141](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[141](02, 00)-(02, 00): DEDENT(DEDENT)
[141](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[142](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[142](01, 00)-(01, 04): INDENT(INDENT) '    '
[142](01, 04)-(01, 08): NAME(NAME) 'elif'
[142](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[142](01, 18)-(01, 19): LSQB(OP) '['
[142](01, 19)-(01, 24): NAME(NAME) 'value'
[142](01, 24)-(01, 25): RSQB(OP) ']'
[142](01, 26)-(01, 28): EQEQUAL(OP) '=='
[142](01, 29)-(01, 32): STRING(STRING) '"k"'
[142](01, 32)-(01, 33): COLON(OP) ':'
[142](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[142](02, 00)-(02, 00): DEDENT(DEDENT)
[142](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[143](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[143](01, 00)-(01, 08): INDENT(INDENT) '        '
[143](01, 08)-(01, 10): NAME(NAME) 'k1'
[143](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[143](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[143](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[143](02, 00)-(02, 00): DEDENT(DEDENT)
[143](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[144](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[144](01, 00)-(01, 04): INDENT(INDENT) '    '
[144](01, 04)-(01, 08): NAME(NAME) 'elif'
[144](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[144](01, 18)-(01, 19): LSQB(OP) '['
[144](01, 19)-(01, 24): NAME(NAME) 'value'
[144](01, 24)-(01, 25): RSQB(OP) ']'
[144](01, 26)-(01, 28): EQEQUAL(OP) '=='
[144](01, 29)-(01, 32): STRING(STRING) '"l"'
[144](01, 32)-(01, 33): COLON(OP) ':'
[144](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[144](02, 00)-(02, 00): DEDENT(DEDENT)
[144](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[145](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[145](01, 00)-(01, 08): INDENT(INDENT) '        '
[145](01, 08)-(01, 10): NAME(NAME) 'l1'
[145](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[145](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[145](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[145](02, 00)-(02, 00): DEDENT(DEDENT)
[145](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[146](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[146](01, 00)-(01, 04): INDENT(INDENT) '    '
[146](01, 04)-(01, 08): NAME(NAME) 'elif'
[146](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[146](01, 18)-(01, 19): LSQB(OP) '['
[146](01, 19)-(01, 24): NAME(NAME) 'value'
[146](01, 24)-(01, 25): RSQB(OP) ']'
[146](01, 26)-(01, 28): EQEQUAL(OP) '=='
[146](01, 29)-(01, 32): STRING(STRING) '"m"'
[146](01, 32)-(01, 33): COLON(OP) ':'
[146](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[146](02, 00)-(02, 00): DEDENT(DEDENT)
[146](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[147](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[147](01, 00)-(01, 08): INDENT(INDENT) '        '
[147](01, 08)-(01, 10): NAME(NAME) 'm1'
[147](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[147](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[147](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[147](02, 00)-(02, 00): DEDENT(DEDENT)
[147](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[148](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[148](01, 00)-(01, 04): INDENT(INDENT) '    '
[148](01, 04)-(01, 08): NAME(NAME) 'elif'
[148](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[148](01, 18)-(01, 19): LSQB(OP) '['
[148](01, 19)-(01, 24): NAME(NAME) 'value'
[148](01, 24)-(01, 25): RSQB(OP) ']'
[148](01, 26)-(01, 28): EQEQUAL(OP) '=='
[148](01, 29)-(01, 32): STRING(STRING) '"n"'
[148](01, 32)-(01, 33): COLON(OP) ':'
[148](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[148](02, 00)-(02, 00): DEDENT(DEDENT)
[148](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[149](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[149](01, 00)-(01, 08): INDENT(INDENT) '        '
[149](01, 08)-(01, 10): NAME(NAME) 'n1'
[149](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[149](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[149](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[149](02, 00)-(02, 00): DEDENT(DEDENT)
[149](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[150](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[150](01, 00)-(01, 04): INDENT(INDENT) '    '
[150](01, 04)-(01, 08): NAME(NAME) 'elif'
[150](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[150](01, 18)-(01, 19): LSQB(OP) '['
[150](01, 19)-(01, 24): NAME(NAME) 'value'
[150](01, 24)-(01, 25): RSQB(OP) ']'
[150](01, 26)-(01, 28): EQEQUAL(OP) '=='
[150](01, 29)-(01, 32): STRING(STRING) '"o"'
[150](01, 32)-(01, 33): COLON(OP) ':'
[150](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[150](02, 00)-(02, 00): DEDENT(DEDENT)
[150](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[151](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[151](01, 00)-(01, 08): INDENT(INDENT) '        '
[151](01, 08)-(01, 10): NAME(NAME) 'o1'
[151](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[151](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[151](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[151](02, 00)-(02, 00): DEDENT(DEDENT)
[151](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[152](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[152](01, 00)-(01, 04): INDENT(INDENT) '    '
[152](01, 04)-(01, 08): NAME(NAME) 'elif'
[152](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[152](01, 18)-(01, 19): LSQB(OP) '['
[152](01, 19)-(01, 24): NAME(NAME) 'value'
[152](01, 24)-(01, 25): RSQB(OP) ']'
[152](01, 26)-(01, 28): EQEQUAL(OP) '=='
[152](01, 29)-(01, 32): STRING(STRING) '"p"'
[152](01, 32)-(01, 33): COLON(OP) ':'
[152](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[152](02, 00)-(02, 00): DEDENT(DEDENT)
[152](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[153](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[153](01, 00)-(01, 08): INDENT(INDENT) '        '
[153](01, 08)-(01, 10): NAME(NAME) 'p1'
[153](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[153](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[153](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[153](02, 00)-(02, 00): DEDENT(DEDENT)
[153](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[154](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[154](01, 00)-(01, 04): INDENT(INDENT) '    '
[154](01, 04)-(01, 08): NAME(NAME) 'elif'
[154](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[154](01, 18)-(01, 19): LSQB(OP) '['
[154](01, 19)-(01, 24): NAME(NAME) 'value'
[154](01, 24)-(01, 25): RSQB(OP) ']'
[154](01, 26)-(01, 28): EQEQUAL(OP) '=='
[154](01, 29)-(01, 32): STRING(STRING) '"q"'
[154](01, 32)-(01, 33): COLON(OP) ':'
[154](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[154](02, 00)-(02, 00): DEDENT(DEDENT)
[154](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[155](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[155](01, 00)-(01, 08): INDENT(INDENT) '        '
[155](01, 08)-(01, 10): NAME(NAME) 'q1'
[155](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[155](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[155](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[155](02, 00)-(02, 00): DEDENT(DEDENT)
[155](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[156](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[156](01, 00)-(01, 04): INDENT(INDENT) '    '
[156](01, 04)-(01, 08): NAME(NAME) 'elif'
[156](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[156](01, 18)-(01, 19): LSQB(OP) '['
[156](01, 19)-(01, 24): NAME(NAME) 'value'
[156](01, 24)-(01, 25): RSQB(OP) ']'
[156](01, 26)-(01, 28): EQEQUAL(OP) '=='
[156](01, 29)-(01, 32): STRING(STRING) '"r"'
[156](01, 32)-(01, 33): COLON(OP) ':'
[156](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[156](02, 00)-(02, 00): DEDENT(DEDENT)
[156](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[157](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[157](01, 00)-(01, 08): INDENT(INDENT) '        '
[157](01, 08)-(01, 10): NAME(NAME) 'r1'
[157](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[157](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[157](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[157](02, 00)-(02, 00): DEDENT(DEDENT)
[157](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[158](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[158](01, 00)-(01, 04): INDENT(INDENT) '    '
[158](01, 04)-(01, 08): NAME(NAME) 'elif'
[158](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[158](01, 18)-(01, 19): LSQB(OP) '['
[158](01, 19)-(01, 24): NAME(NAME) 'value'
[158](01, 24)-(01, 25): RSQB(OP) ']'
[158](01, 26)-(01, 28): EQEQUAL(OP) '=='
[158](01, 29)-(01, 32): STRING(STRING) '"s"'
[158](01, 32)-(01, 33): COLON(OP) ':'
[158](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[158](02, 00)-(02, 00): DEDENT(DEDENT)
[158](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[159](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[159](01, 00)-(01, 08): INDENT(INDENT) '        '
[159](01, 08)-(01, 10): NAME(NAME) 's1'
[159](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[159](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[159](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[159](02, 00)-(02, 00): DEDENT(DEDENT)
[159](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[160](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[160](01, 00)-(01, 04): INDENT(INDENT) '    '
[160](01, 04)-(01, 08): NAME(NAME) 'elif'
[160](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[160](01, 18)-(01, 19): LSQB(OP) '['
[160](01, 19)-(01, 24): NAME(NAME) 'value'
[160](01, 24)-(01, 25): RSQB(OP) ']'
[160](01, 26)-(01, 28): EQEQUAL(OP) '=='
[160](01, 29)-(01, 32): STRING(STRING) '"t"'
[160](01, 32)-(01, 33): COLON(OP) ':'
[160](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[160](02, 00)-(02, 00): DEDENT(DEDENT)
[160](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[161](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[161](01, 00)-(01, 08): INDENT(INDENT) '        '
[161](01, 08)-(01, 10): NAME(NAME) 't1'
[161](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[161](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[161](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[161](02, 00)-(02, 00): DEDENT(DEDENT)
[161](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[162](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[162](01, 00)-(01, 04): INDENT(INDENT) '    '
[162](01, 04)-(01, 08): NAME(NAME) 'elif'
[162](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[162](01, 18)-(01, 19): LSQB(OP) '['
[162](01, 19)-(01, 24): NAME(NAME) 'value'
[162](01, 24)-(01, 25): RSQB(OP) ']'
[162](01, 26)-(01, 28): EQEQUAL(OP) '=='
[162](01, 29)-(01, 32): STRING(STRING) '"u"'
[162](01, 32)-(01, 33): COLON(OP) ':'
[162](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[162](02, 00)-(02, 00): DEDENT(DEDENT)
[162](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[163](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[163](01, 00)-(01, 08): INDENT(INDENT) '        '
[163](01, 08)-(01, 10): NAME(NAME) 'u1'
[163](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[163](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[163](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[163](02, 00)-(02, 00): DEDENT(DEDENT)
[163](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[164](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[164](01, 00)-(01, 04): INDENT(INDENT) '    '
[164](01, 04)-(01, 08): NAME(NAME) 'elif'
[164](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[164](01, 18)-(01, 19): LSQB(OP) '['
[164](01, 19)-(01, 24): NAME(NAME) 'value'
[164](01, 24)-(01, 25): RSQB(OP) ']'
[164](01, 26)-(01, 28): EQEQUAL(OP) '=='
[164](01, 29)-(01, 32): STRING(STRING) '"v"'
[164](01, 32)-(01, 33): COLON(OP) ':'
[164](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[164](02, 00)-(02, 00): DEDENT(DEDENT)
[164](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[165](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[165](01, 00)-(01, 08): INDENT(INDENT) '        '
[165](01, 08)-(01, 10): NAME(NAME) 'v1'
[165](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[165](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[165](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[165](02, 00)-(02, 00): DEDENT(DEDENT)
[165](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[166](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[166](01, 00)-(01, 04): INDENT(INDENT) '    '
[166](01, 04)-(01, 08): NAME(NAME) 'elif'
[166](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[166](01, 18)-(01, 19): LSQB(OP) '['
[166](01, 19)-(01, 24): NAME(NAME) 'value'
[166](01, 24)-(01, 25): RSQB(OP) ']'
[166](01, 26)-(01, 28): EQEQUAL(OP) '=='
[166](01, 29)-(01, 32): STRING(STRING) '"w"'
[166](01, 32)-(01, 33): COLON(OP) ':'
[166](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[166](02, 00)-(02, 00): DEDENT(DEDENT)
[166](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[167](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[167](01, 00)-(01, 08): INDENT(INDENT) '        '
[167](01, 08)-(01, 10): NAME(NAME) 'w1'
[167](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[167](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[167](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[167](02, 00)-(02, 00): DEDENT(DEDENT)
[167](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[168](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[168](01, 00)-(01, 04): INDENT(INDENT) '    '
[168](01, 04)-(01, 08): NAME(NAME) 'elif'
[168](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[168](01, 18)-(01, 19): LSQB(OP) '['
[168](01, 19)-(01, 24): NAME(NAME) 'value'
[168](01, 24)-(01, 25): RSQB(OP) ']'
[168](01, 26)-(01, 28): EQEQUAL(OP) '=='
[168](01, 29)-(01, 32): STRING(STRING) '"x"'
[168](01, 32)-(01, 33): COLON(OP) ':'
[168](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[168](02, 00)-(02, 00): DEDENT(DEDENT)
[168](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[169](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[169](01, 00)-(01, 08): INDENT(INDENT) '        '
[169](01, 08)-(01, 10): NAME(NAME) 'x1'
[169](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[169](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[169](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[169](02, 00)-(02, 00): DEDENT(DEDENT)
[169](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[170](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[170](01, 00)-(01, 04): INDENT(INDENT) '    '
[170](01, 04)-(01, 08): NAME(NAME) 'elif'
[170](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[170](01, 18)-(01, 19): LSQB(OP) '['
[170](01, 19)-(01, 24): NAME(NAME) 'value'
[170](01, 24)-(01, 25): RSQB(OP) ']'
[170](01, 26)-(01, 28): EQEQUAL(OP) '=='
[170](01, 29)-(01, 32): STRING(STRING) '"y"'
[170](01, 32)-(01, 33): COLON(OP) ':'
[170](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[170](02, 00)-(02, 00): DEDENT(DEDENT)
[170](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[171](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[171](01, 00)-(01, 08): INDENT(INDENT) '        '
[171](01, 08)-(01, 10): NAME(NAME) 'y1'
[171](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[171](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[171](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[171](02, 00)-(02, 00): DEDENT(DEDENT)
[171](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[172](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[172](01, 00)-(01, 04): INDENT(INDENT) '    '
[172](01, 04)-(01, 08): NAME(NAME) 'elif'
[172](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[172](01, 18)-(01, 19): LSQB(OP) '['
[172](01, 19)-(01, 24): NAME(NAME) 'value'
[172](01, 24)-(01, 25): RSQB(OP) ']'
[172](01, 26)-(01, 28): EQEQUAL(OP) '=='
[172](01, 29)-(01, 32): STRING(STRING) '"z"'
[172](01, 32)-(01, 33): COLON(OP) ':'
[172](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[172](02, 00)-(02, 00): DEDENT(DEDENT)
[172](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[173](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[173](01, 00)-(01, 08): INDENT(INDENT) '        '
[173](01, 08)-(01, 10): NAME(NAME) 'z1'
[173](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[173](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[173](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[173](02, 00)-(02, 00): DEDENT(DEDENT)
[173](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[174](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[174](01, 00)-(01, 04): INDENT(INDENT) '    '
[174](01, 04)-(01, 08): NAME(NAME) 'elif'
[174](01, 09)-(01, 18): NAME(NAME) 'sentence1'
[174](01, 18)-(01, 19): LSQB(OP) '['
[174](01, 19)-(01, 24): NAME(NAME) 'value'
[174](01, 24)-(01, 25): RSQB(OP) ']'
[174](01, 26)-(01, 28): EQEQUAL(OP) '=='
[174](01, 29)-(01, 32): STRING(STRING) '" "'
[174](01, 32)-(01, 33): COLON(OP) ':'
[174](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[174](02, 00)-(02, 00): DEDENT(DEDENT)
[174](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[175](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[175](01, 00)-(01, 08): INDENT(INDENT) '        '
[175](01, 08)-(01, 14): NAME(NAME) 'space1'
[175](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[175](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[175](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[175](02, 00)-(02, 00): DEDENT(DEDENT)
[175](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[176](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[176](01, 00)-(01, 04): INDENT(INDENT) '    '
[176](01, 04)-(01, 09): NAME(NAME) 'value'
[176](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[176](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[176](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[176](02, 00)-(02, 00): DEDENT(DEDENT)
[176](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[177](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[177](01, 04)-(01, 05): NL(NL) '\n'
[177](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[178](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[178](01, 00)-(01, 05): NAME(NAME) 'list2'
[178](01, 06)-(01, 07): EQUAL(OP) '='
[178](01, 08)-(01, 09): LSQB(OP) '['
[178](01, 09)-(01, 10): NAME(NAME) 'a'
[178](01, 10)-(01, 11): COMMA(OP) ','
[178](01, 12)-(01, 13): NAME(NAME) 'b'
[178](01, 13)-(01, 14): COMMA(OP) ','
[178](01, 15)-(01, 16): NAME(NAME) 'c'
[178](01, 16)-(01, 17): COMMA(OP) ','
[178](01, 18)-(01, 19): NAME(NAME) 'd'
[178](01, 19)-(01, 20): COMMA(OP) ','
[178](01, 21)-(01, 22): NAME(NAME) 'e'
[178](01, 22)-(01, 23): COMMA(OP) ','
[178](01, 24)-(01, 25): NAME(NAME) 'f'
[178](01, 25)-(01, 26): COMMA(OP) ','
[178](01, 27)-(01, 28): NAME(NAME) 'g'
[178](01, 28)-(01, 29): COMMA(OP) ','
[178](01, 30)-(01, 31): NAME(NAME) 'h'
[178](01, 31)-(01, 32): COMMA(OP) ','
[178](01, 33)-(01, 34): NAME(NAME) 'i'
[178](01, 34)-(01, 35): COMMA(OP) ','
[178](01, 36)-(01, 37): NAME(NAME) 'j'
[178](01, 37)-(01, 38): COMMA(OP) ','
[178](01, 39)-(01, 40): NAME(NAME) 'k'
[178](01, 40)-(01, 41): COMMA(OP) ','
[178](01, 42)-(01, 43): NAME(NAME) 'l'
[178](01, 43)-(01, 44): COMMA(OP) ','
[178](01, 45)-(01, 46): NAME(NAME) 'm'
[178](01, 46)-(01, 47): COMMA(OP) ','
[178](01, 48)-(01, 49): NAME(NAME) 'n'
[178](01, 49)-(01, 50): COMMA(OP) ','
[178](01, 51)-(01, 52): NAME(NAME) 'o'
[178](01, 52)-(01, 53): COMMA(OP) ','
[178](01, 54)-(01, 55): NAME(NAME) 'p'
[178](01, 55)-(01, 56): COMMA(OP) ','
[178](01, 57)-(01, 58): NAME(NAME) 'q'
[178](01, 58)-(01, 59): COMMA(OP) ','
[178](01, 60)-(01, 61): NAME(NAME) 'r'
[178](01, 61)-(01, 62): COMMA(OP) ','
[178](01, 63)-(01, 64): NAME(NAME) 's'
[178](01, 64)-(01, 65): COMMA(OP) ','
[178](01, 66)-(01, 67): NAME(NAME) 't'
[178](01, 67)-(01, 68): COMMA(OP) ','
[178](01, 69)-(01, 70): NAME(NAME) 'u'
[178](01, 70)-(01, 71): COMMA(OP) ','
[178](01, 72)-(01, 73): NAME(NAME) 'v'
[178](01, 73)-(01, 74): COMMA(OP) ','
[178](01, 75)-(01, 76): NAME(NAME) 'w'
[178](01, 76)-(01, 77): COMMA(OP) ','
[178](01, 78)-(01, 79): NAME(NAME) 'x'
[178](01, 79)-(01, 80): COMMA(OP) ','
[178](01, 81)-(01, 82): NAME(NAME) 'y'
[178](01, 82)-(01, 83): COMMA(OP) ','
[178](01, 84)-(01, 85): NAME(NAME) 'z'
[178](01, 85)-(01, 86): RSQB(OP) ']'
[178](01, 86)-(01, 87): NEWLINE(NEWLINE) '\n'
[178](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[179](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[179](01, 00)-(01, 05): NAME(NAME) 'list1'
[179](01, 06)-(01, 07): EQUAL(OP) '='
[179](01, 08)-(01, 09): LSQB(OP) '['
[179](01, 09)-(01, 11): NAME(NAME) 'a1'
[179](01, 11)-(01, 12): COMMA(OP) ','
[179](01, 13)-(01, 15): NAME(NAME) 'b1'
[179](01, 15)-(01, 16): COMMA(OP) ','
[179](01, 17)-(01, 19): NAME(NAME) 'c1'
[179](01, 19)-(01, 20): COMMA(OP) ','
[179](01, 21)-(01, 23): NAME(NAME) 'd1'
[179](01, 23)-(01, 24): COMMA(OP) ','
[179](01, 25)-(01, 27): NAME(NAME) 'e1'
[179](01, 27)-(01, 28): COMMA(OP) ','
[179](01, 29)-(01, 31): NAME(NAME) 'f1'
[179](01, 31)-(01, 32): COMMA(OP) ','
[179](01, 33)-(01, 35): NAME(NAME) 'g1'
[179](01, 35)-(01, 36): COMMA(OP) ','
[179](01, 37)-(01, 39): NAME(NAME) 'h1'
[179](01, 39)-(01, 40): COMMA(OP) ','
[179](01, 41)-(01, 43): NAME(NAME) 'i1'
[179](01, 43)-(01, 44): COMMA(OP) ','
[179](01, 45)-(01, 47): NAME(NAME) 'j1'
[179](01, 47)-(01, 48): COMMA(OP) ','
[179](01, 49)-(01, 51): NAME(NAME) 'k1'
[179](01, 51)-(01, 52): COMMA(OP) ','
[179](01, 53)-(01, 55): NAME(NAME) 'l1'
[179](01, 55)-(01, 56): COMMA(OP) ','
[179](01, 57)-(01, 59): NAME(NAME) 'm1'
[179](01, 59)-(01, 60): COMMA(OP) ','
[179](01, 61)-(01, 63): NAME(NAME) 'n1'
[179](01, 63)-(01, 64): COMMA(OP) ','
[179](01, 65)-(01, 67): NAME(NAME) 'o1'
[179](01, 67)-(01, 68): COMMA(OP) ','
[179](01, 69)-(01, 71): NAME(NAME) 'p1'
[179](01, 71)-(01, 72): COMMA(OP) ','
[179](01, 73)-(01, 75): NAME(NAME) 'q1'
[179](01, 75)-(01, 76): COMMA(OP) ','
[179](01, 77)-(01, 79): NAME(NAME) 'r1'
[179](01, 79)-(01, 80): COMMA(OP) ','
[179](01, 81)-(01, 83): NAME(NAME) 's1'
[179](01, 83)-(01, 84): COMMA(OP) ','
[179](01, 85)-(01, 87): NAME(NAME) 't1'
[179](01, 87)-(01, 88): COMMA(OP) ','
[179](01, 89)-(01, 91): NAME(NAME) 'u1'
[179](01, 91)-(01, 92): COMMA(OP) ','
[179](01, 93)-(01, 95): NAME(NAME) 'v1'
[179](01, 95)-(01, 96): COMMA(OP) ','
[179](01, 97)-(01, 99): NAME(NAME) 'w1'
[179](01, 99)-(01, 100): COMMA(OP) ','
[179](01, 101)-(01, 103): NAME(NAME) 'x1'
[179](01, 103)-(01, 104): COMMA(OP) ','
[179](01, 105)-(01, 107): NAME(NAME) 'y1'
[179](01, 107)-(01, 108): COMMA(OP) ','
[179](01, 109)-(01, 111): NAME(NAME) 'z1'
[179](01, 111)-(01, 112): RSQB(OP) ']'
[179](01, 112)-(01, 113): NEWLINE(NEWLINE) '\n'
[179](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[180](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[180](01, 00)-(01, 01): NL(NL) '\n'
[180](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[181](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[181](01, 00)-(01, 02): NAME(NAME) 'if'
[181](01, 03)-(01, 08): NAME(NAME) 'list1'
[181](01, 09)-(01, 11): EQEQUAL(OP) '=='
[181](01, 12)-(01, 17): NAME(NAME) 'list2'
[181](01, 17)-(01, 18): COLON(OP) ':'
[181](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[181](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[182](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[182](01, 00)-(01, 04): INDENT(INDENT) '    '
[182](01, 04)-(01, 09): NAME(NAME) 'print'
[182](01, 09)-(01, 10): LPAR(OP) '('
[182](01, 10)-(01, 18): NAME(NAME) 'sentence'
[182](01, 18)-(01, 19): COMMA(OP) ','
[182](01, 20)-(01, 25): STRING(STRING) '"and"'
[182](01, 25)-(01, 26): COMMA(OP) ','
[182](01, 27)-(01, 36): NAME(NAME) 'sentence1'
[182](01, 36)-(01, 37): COMMA(OP) ','
[182](01, 38)-(01, 52): STRING(STRING) '"are anagrams"'
[182](01, 52)-(01, 53): RPAR(OP) ')'
[182](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[182](02, 00)-(02, 00): DEDENT(DEDENT)
[182](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[183](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[183](01, 00)-(01, 04): NAME(NAME) 'elif'
[183](01, 05)-(01, 10): NAME(NAME) 'list1'
[183](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[183](01, 14)-(01, 19): NAME(NAME) 'list2'
[183](01, 19)-(01, 20): COLON(OP) ':'
[183](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[183](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[184](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[184](01, 00)-(01, 04): INDENT(INDENT) '    '
[184](01, 04)-(01, 09): NAME(NAME) 'print'
[184](01, 09)-(01, 10): LPAR(OP) '('
[184](01, 10)-(01, 18): NAME(NAME) 'sentence'
[184](01, 18)-(01, 19): COMMA(OP) ','
[184](01, 20)-(01, 25): STRING(STRING) '"and"'
[184](01, 25)-(01, 26): COMMA(OP) ','
[184](01, 27)-(01, 36): NAME(NAME) 'sentence1'
[184](01, 36)-(01, 37): COMMA(OP) ','
[184](01, 38)-(01, 56): STRING(STRING) '"are not anagrams"'
[184](01, 56)-(01, 57): RPAR(OP) ')'
[184](01, 57)-(01, 58): NEWLINE(NEWLINE)
[184](02, 00)-(02, 00): DEDENT(DEDENT)
[184](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

