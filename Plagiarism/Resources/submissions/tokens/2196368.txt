[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'in_alphabet'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'letter'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 12): NAME(NAME) 'alphabet'
[01](01, 13)-(01, 14): EQUAL(OP) '='
[01](01, 15)-(01, 69): STRING(STRING) '"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWZYZ"'
[01](01, 69)-(01, 70): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 15): NAME(NAME) 'letters'
[02](01, 16)-(01, 18): NAME(NAME) 'in'
[02](01, 19)-(01, 27): NAME(NAME) 'alphabet'
[02](01, 27)-(01, 28): COLON(OP) ':'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 12): INDENT(INDENT) '            '
[03](01, 12)-(01, 14): NAME(NAME) 'if'
[03](01, 15)-(01, 22): NAME(NAME) 'letters'
[03](01, 23)-(01, 25): EQEQUAL(OP) '=='
[03](01, 26)-(01, 32): NAME(NAME) 'letter'
[03](01, 32)-(01, 33): COLON(OP) ':'
[03](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 16): INDENT(INDENT) '                '
[04](01, 16)-(01, 22): NAME(NAME) 'return'
[04](01, 23)-(01, 27): NAME(NAME) 'True'
[04](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'return'
[05](01, 11)-(01, 16): NAME(NAME) 'False'
[05](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): NAME(NAME) 'def'
[07](01, 04)-(01, 18): NAME(NAME) 'cleanup_spaces'
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 20): NAME(NAME) 's'
[07](01, 20)-(01, 21): RPAR(OP) ')'
[07](01, 21)-(01, 22): COLON(OP) ':'
[07](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 15): NAME(NAME) 'placeholder'
[08](01, 16)-(01, 17): EQUAL(OP) '='
[08](01, 18)-(01, 20): STRING(STRING) '""'
[08](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 07): NAME(NAME) 'for'
[09](01, 08)-(01, 09): NAME(NAME) 'i'
[09](01, 10)-(01, 12): NAME(NAME) 'in'
[09](01, 13)-(01, 18): NAME(NAME) 'range'
[09](01, 18)-(01, 19): LPAR(OP) '('
[09](01, 19)-(01, 22): NAME(NAME) 'len'
[09](01, 22)-(01, 23): LPAR(OP) '('
[09](01, 23)-(01, 24): NAME(NAME) 's'
[09](01, 24)-(01, 25): RPAR(OP) ')'
[09](01, 25)-(01, 26): RPAR(OP) ')'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 10): NAME(NAME) 'if'
[10](01, 11)-(01, 22): NAME(NAME) 'in_alphabet'
[10](01, 22)-(01, 23): LPAR(OP) '('
[10](01, 23)-(01, 24): NAME(NAME) 'i'
[10](01, 24)-(01, 25): RPAR(OP) ')'
[10](01, 25)-(01, 26): COLON(OP) ':'
[10](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 17): NAME(NAME) 'start'
[11](01, 18)-(01, 19): EQUAL(OP) '='
[11](01, 20)-(01, 21): NAME(NAME) 'i'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 17): NAME(NAME) 'break'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 07): NAME(NAME) 'for'
[13](01, 08)-(01, 09): NAME(NAME) 'i'
[13](01, 10)-(01, 12): NAME(NAME) 'in'
[13](01, 13)-(01, 18): NAME(NAME) 'range'
[13](01, 18)-(01, 19): LPAR(OP) '('
[13](01, 19)-(01, 22): NAME(NAME) 'len'
[13](01, 22)-(01, 23): LPAR(OP) '('
[13](01, 23)-(01, 24): NAME(NAME) 's'
[13](01, 24)-(01, 25): RPAR(OP) ')'
[13](01, 25)-(01, 26): RPAR(OP) ')'
[13](01, 26)-(01, 27): COLON(OP) ':'
[13](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 10): NAME(NAME) 'if'
[14](01, 11)-(01, 22): NAME(NAME) 'in_alphabet'
[14](01, 22)-(01, 23): LPAR(OP) '('
[14](01, 23)-(01, 26): NAME(NAME) 'len'
[14](01, 26)-(01, 27): LPAR(OP) '('
[14](01, 27)-(01, 28): NAME(NAME) 's'
[14](01, 28)-(01, 29): RPAR(OP) ')'
[14](01, 29)-(01, 30): MINUS(OP) '-'
[14](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[14](01, 31)-(01, 32): MINUS(OP) '-'
[14](01, 32)-(01, 33): NAME(NAME) 'i'
[14](01, 33)-(01, 34): RPAR(OP) ')'
[14](01, 34)-(01, 35): COLON(OP) ':'
[14](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 15): NAME(NAME) 'end'
[15](01, 16)-(01, 17): EQUAL(OP) '='
[15](01, 18)-(01, 21): NAME(NAME) 'len'
[15](01, 21)-(01, 22): LPAR(OP) '('
[15](01, 22)-(01, 23): NAME(NAME) 's'
[15](01, 23)-(01, 24): RPAR(OP) ')'
[15](01, 24)-(01, 25): MINUS(OP) '-'
[15](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[15](01, 26)-(01, 27): MINUS(OP) '-'
[15](01, 27)-(01, 28): NAME(NAME) 'i'
[15](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 17): NAME(NAME) 'break'
[16](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 07): NAME(NAME) 'for'
[17](01, 08)-(01, 09): NAME(NAME) 'i'
[17](01, 10)-(01, 12): NAME(NAME) 'in'
[17](01, 13)-(01, 18): NAME(NAME) 'range'
[17](01, 18)-(01, 19): LPAR(OP) '('
[17](01, 19)-(01, 24): NAME(NAME) 'start'
[17](01, 24)-(01, 25): COMMA(OP) ','
[17](01, 26)-(01, 29): NAME(NAME) 'end'
[17](01, 29)-(01, 30): PLUS(OP) '+'
[17](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[17](01, 31)-(01, 32): RPAR(OP) ')'
[17](01, 32)-(01, 33): COLON(OP) ':'
[17](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 19): NAME(NAME) 'placeholder'
[18](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[18](01, 23)-(01, 24): NAME(NAME) 's'
[18](01, 24)-(01, 25): LSQB(OP) '['
[18](01, 25)-(01, 26): NAME(NAME) 'i'
[18](01, 26)-(01, 27): RSQB(OP) ']'
[18](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 05): NAME(NAME) 's'
[19](01, 06)-(01, 07): EQUAL(OP) '='
[19](01, 08)-(01, 19): NAME(NAME) 'placeholder'
[19](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 04)-(01, 05): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 11): NAME(NAME) 'counter'
[21](01, 12)-(01, 13): EQUAL(OP) '='
[21](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[21](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 04)-(01, 05): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 09): NAME(NAME) 'while'
[23](01, 10)-(01, 17): NAME(NAME) 'counter'
[23](01, 18)-(01, 19): LESS(OP) '<'
[23](01, 20)-(01, 23): NAME(NAME) 'len'
[23](01, 23)-(01, 24): LPAR(OP) '('
[23](01, 24)-(01, 25): NAME(NAME) 's'
[23](01, 25)-(01, 26): RPAR(OP) ')'
[23](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 19): NAME(NAME) 'placeholder'
[24](01, 20)-(01, 21): EQUAL(OP) '='
[24](01, 22)-(01, 24): STRING(STRING) '""'
[24](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 08): INDENT(INDENT) '        '
[25](01, 08)-(01, 10): NAME(NAME) 'if'
[25](01, 11)-(01, 12): NAME(NAME) 's'
[25](01, 12)-(01, 13): LSQB(OP) '['
[25](01, 13)-(01, 20): NAME(NAME) 'counter'
[25](01, 20)-(01, 21): RSQB(OP) ']'
[25](01, 22)-(01, 24): EQEQUAL(OP) '=='
[25](01, 25)-(01, 28): STRING(STRING) '" "'
[25](01, 29)-(01, 32): NAME(NAME) 'and'
[25](01, 33)-(01, 34): NAME(NAME) 's'
[25](01, 34)-(01, 35): LSQB(OP) '['
[25](01, 35)-(01, 42): NAME(NAME) 'counter'
[25](01, 42)-(01, 43): PLUS(OP) '+'
[25](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[25](01, 44)-(01, 45): RSQB(OP) ']'
[25](01, 46)-(01, 48): EQEQUAL(OP) '=='
[25](01, 49)-(01, 52): STRING(STRING) '" "'
[25](01, 52)-(01, 53): COLON(OP) ':'
[25](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 12): INDENT(INDENT) '            '
[26](01, 12)-(01, 17): NAME(NAME) 'place'
[26](01, 18)-(01, 19): EQUAL(OP) '='
[26](01, 20)-(01, 27): NAME(NAME) 'counter'
[26](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 12): INDENT(INDENT) '            '
[27](01, 12)-(01, 15): NAME(NAME) 'for'
[27](01, 16)-(01, 17): NAME(NAME) 'i'
[27](01, 18)-(01, 20): NAME(NAME) 'in'
[27](01, 21)-(01, 26): NAME(NAME) 'range'
[27](01, 26)-(01, 27): LPAR(OP) '('
[27](01, 27)-(01, 28): NUMBER(NUMBER) '0'
[27](01, 28)-(01, 29): COMMA(OP) ','
[27](01, 30)-(01, 37): NAME(NAME) 'counter'
[27](01, 37)-(01, 38): PLUS(OP) '+'
[27](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[27](01, 39)-(01, 40): RPAR(OP) ')'
[27](01, 40)-(01, 41): COLON(OP) ':'
[27](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 16): INDENT(INDENT) '                '
[28](01, 16)-(01, 27): NAME(NAME) 'placeholder'
[28](01, 28)-(01, 30): PLUSEQUAL(OP) '+='
[28](01, 31)-(01, 32): NAME(NAME) 's'
[28](01, 32)-(01, 33): LSQB(OP) '['
[28](01, 33)-(01, 34): NAME(NAME) 'i'
[28](01, 34)-(01, 35): RSQB(OP) ']'
[28](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 12): INDENT(INDENT) '            '
[29](01, 12)-(01, 15): NAME(NAME) 'for'
[29](01, 16)-(01, 17): NAME(NAME) 'i'
[29](01, 18)-(01, 20): NAME(NAME) 'in'
[29](01, 21)-(01, 26): NAME(NAME) 'range'
[29](01, 26)-(01, 27): LPAR(OP) '('
[29](01, 27)-(01, 34): NAME(NAME) 'counter'
[29](01, 34)-(01, 35): PLUS(OP) '+'
[29](01, 35)-(01, 36): NUMBER(NUMBER) '2'
[29](01, 36)-(01, 37): COMMA(OP) ','
[29](01, 38)-(01, 41): NAME(NAME) 'len'
[29](01, 41)-(01, 42): LPAR(OP) '('
[29](01, 42)-(01, 43): NAME(NAME) 's'
[29](01, 43)-(01, 44): RPAR(OP) ')'
[29](01, 44)-(01, 45): RPAR(OP) ')'
[29](01, 45)-(01, 46): COLON(OP) ':'
[29](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 16): INDENT(INDENT) '                '
[30](01, 16)-(01, 27): NAME(NAME) 'placeholder'
[30](01, 28)-(01, 30): PLUSEQUAL(OP) '+='
[30](01, 31)-(01, 32): NAME(NAME) 's'
[30](01, 32)-(01, 33): LSQB(OP) '['
[30](01, 33)-(01, 34): NAME(NAME) 'i'
[30](01, 34)-(01, 35): RSQB(OP) ']'
[30](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 13): NAME(NAME) 's'
[31](01, 14)-(01, 15): EQUAL(OP) '='
[31](01, 16)-(01, 27): NAME(NAME) 'placeholder'
[31](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 19): NAME(NAME) 'counter'
[32](01, 20)-(01, 21): EQUAL(OP) '='
[32](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[32](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 12)-(01, 13): NL(NL) '\n'
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 10): NAME(NAME) 'return'
[34](01, 11)-(01, 12): NAME(NAME) 's'
[34](01, 12)-(01, 13): NEWLINE(NEWLINE)
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

