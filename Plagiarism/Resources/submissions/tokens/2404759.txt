[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 04): NAME(NAME) 'list'
[00](01, 05)-(01, 06): EQUAL(OP) '='
[00](01, 07)-(01, 08): LSQB(OP) '['
[00](01, 08)-(01, 11): STRING(STRING) '"A"'
[00](01, 11)-(01, 12): COMMA(OP) ','
[00](01, 13)-(01, 16): STRING(STRING) '"C"'
[00](01, 16)-(01, 17): COMMA(OP) ','
[00](01, 18)-(01, 21): STRING(STRING) '"G"'
[00](01, 21)-(01, 22): COMMA(OP) ','
[00](01, 23)-(01, 26): STRING(STRING) '"T"'
[00](01, 26)-(01, 27): RSQB(OP) ']'
[00](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'list_2'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 10): LSQB(OP) '['
[01](01, 10)-(01, 11): RSQB(OP) ']'
[01](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): NAME(NAME) 'copy'
[02](01, 05)-(01, 06): EQUAL(OP) '='
[02](01, 07)-(01, 11): NAME(NAME) 'list'
[02](01, 11)-(01, 12): LSQB(OP) '['
[02](01, 12)-(01, 13): COLON(OP) ':'
[02](01, 13)-(01, 14): RSQB(OP) ']'
[02](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 07): NAME(NAME) 'counter'
[03](01, 08)-(01, 09): EQUAL(OP) '='
[03](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[03](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'def'
[04](01, 04)-(01, 07): NAME(NAME) 'dna'
[04](01, 07)-(01, 08): LPAR(OP) '('
[04](01, 08)-(01, 09): NAME(NAME) 'n'
[04](01, 09)-(01, 10): RPAR(OP) ')'
[04](01, 10)-(01, 11): COLON(OP) ':'
[04](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'global'
[05](01, 11)-(01, 18): NAME(NAME) 'counter'
[05](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 10): NAME(NAME) 'global'
[06](01, 11)-(01, 15): NAME(NAME) 'copy'
[06](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'global'
[07](01, 11)-(01, 15): NAME(NAME) 'list'
[07](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 10): NAME(NAME) 'global'
[08](01, 11)-(01, 17): NAME(NAME) 'list_2'
[08](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 11): NAME(NAME) 'counter'
[09](01, 12)-(01, 13): EQUAL(OP) '='
[09](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[09](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 06): NAME(NAME) 'if'
[10](01, 07)-(01, 10): NAME(NAME) 'len'
[10](01, 10)-(01, 11): LPAR(OP) '('
[10](01, 11)-(01, 15): NAME(NAME) 'list'
[10](01, 15)-(01, 16): RPAR(OP) ')'
[10](01, 17)-(01, 19): EQEQUAL(OP) '=='
[10](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[10](01, 21)-(01, 22): COLON(OP) ':'
[10](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 14): NAME(NAME) 'return'
[11](01, 15)-(01, 21): NAME(NAME) 'list_2'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 08): NAME(NAME) 'else'
[12](01, 08)-(01, 09): COLON(OP) ':'
[12](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 11): NAME(NAME) 'for'
[13](01, 12)-(01, 13): NAME(NAME) 'i'
[13](01, 14)-(01, 16): NAME(NAME) 'in'
[13](01, 17)-(01, 22): NAME(NAME) 'range'
[13](01, 22)-(01, 23): LPAR(OP) '('
[13](01, 23)-(01, 24): NUMBER(NUMBER) '4'
[13](01, 24)-(01, 25): RPAR(OP) ')'
[13](01, 25)-(01, 26): COLON(OP) ':'
[13](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 17): NAME(NAME) 'combo'
[14](01, 18)-(01, 19): EQUAL(OP) '='
[14](01, 20)-(01, 24): NAME(NAME) 'copy'
[14](01, 24)-(01, 25): LSQB(OP) '['
[14](01, 25)-(01, 32): NAME(NAME) 'counter'
[14](01, 32)-(01, 33): RSQB(OP) ']'
[14](01, 34)-(01, 35): PLUS(OP) '+'
[14](01, 36)-(01, 40): NAME(NAME) 'copy'
[14](01, 40)-(01, 41): LSQB(OP) '['
[14](01, 41)-(01, 42): NAME(NAME) 'i'
[14](01, 42)-(01, 43): RSQB(OP) ']'
[14](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 17): NAME(NAME) 'print'
[15](01, 17)-(01, 18): LPAR(OP) '('
[15](01, 18)-(01, 23): NAME(NAME) 'combo'
[15](01, 23)-(01, 24): RPAR(OP) ')'
[15](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 19): NAME(NAME) 'counter'
[16](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[16](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[16](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 11): NAME(NAME) 'del'
[17](01, 12)-(01, 16): NAME(NAME) 'list'
[17](01, 16)-(01, 17): LSQB(OP) '['
[17](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[17](01, 18)-(01, 19): RSQB(OP) ']'
[17](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 07): NAME(NAME) 'dna'
[18](01, 07)-(01, 08): LPAR(OP) '('
[18](01, 08)-(01, 09): NAME(NAME) 'n'
[18](01, 09)-(01, 10): RPAR(OP) ')'
[18](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 03): NAME(NAME) 'dna'
[20](01, 03)-(01, 04): LPAR(OP) '('
[20](01, 04)-(01, 05): NUMBER(NUMBER) '2'
[20](01, 05)-(01, 06): RPAR(OP) ')'
[20](01, 06)-(01, 07): NEWLINE(NEWLINE)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

