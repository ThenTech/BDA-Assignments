[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'import'
[00](01, 07)-(01, 13): NAME(NAME) 'string'
[00](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'def'
[02](01, 04)-(01, 10): NAME(NAME) 'encode'
[02](01, 10)-(01, 11): LPAR(OP) '('
[02](01, 11)-(01, 16): NAME(NAME) 'a_str'
[02](01, 16)-(01, 17): COMMA(OP) ','
[02](01, 18)-(01, 26): NAME(NAME) 'rotation'
[02](01, 26)-(01, 27): RPAR(OP) ')'
[02](01, 27)-(01, 28): COLON(OP) ':'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 18): NAME(NAME) 'encoded_string'
[03](01, 19)-(01, 20): EQUAL(OP) '='
[03](01, 21)-(01, 23): STRING(STRING) '""'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 12): NAME(NAME) 'char'
[04](01, 13)-(01, 15): NAME(NAME) 'in'
[04](01, 16)-(01, 21): NAME(NAME) 'a_str'
[04](01, 21)-(01, 22): COLON(OP) ':'
[04](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 15): NAME(NAME) 'char'
[05](01, 16)-(01, 18): NAME(NAME) 'in'
[05](01, 19)-(01, 25): NAME(NAME) 'string'
[05](01, 25)-(01, 26): DOT(OP) '.'
[05](01, 26)-(01, 41): NAME(NAME) 'ascii_lowercase'
[05](01, 41)-(01, 42): COLON(OP) ':'
[05](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 26): NAME(NAME) 'encoded_string'
[06](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[06](01, 30)-(01, 33): NAME(NAME) 'chr'
[06](01, 33)-(01, 34): LPAR(OP) '('
[06](01, 34)-(01, 35): LPAR(OP) '('
[06](01, 35)-(01, 38): NAME(NAME) 'ord'
[06](01, 38)-(01, 39): LPAR(OP) '('
[06](01, 39)-(01, 43): NAME(NAME) 'char'
[06](01, 43)-(01, 44): RPAR(OP) ')'
[06](01, 45)-(01, 46): PLUS(OP) '+'
[06](01, 47)-(01, 55): NAME(NAME) 'rotation'
[06](01, 55)-(01, 56): RPAR(OP) ')'
[06](01, 57)-(01, 58): PERCENT(OP) '%'
[06](01, 59)-(01, 60): LPAR(OP) '('
[06](01, 60)-(01, 62): NUMBER(NUMBER) '26'
[06](01, 63)-(01, 64): PLUS(OP) '+'
[06](01, 65)-(01, 68): NAME(NAME) 'ord'
[06](01, 68)-(01, 69): LPAR(OP) '('
[06](01, 69)-(01, 72): STRING(STRING) '"a"'
[06](01, 72)-(01, 73): RPAR(OP) ')'
[06](01, 73)-(01, 74): RPAR(OP) ')'
[06](01, 74)-(01, 75): RPAR(OP) ')'
[06](01, 75)-(01, 76): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 12): NAME(NAME) 'else'
[07](01, 12)-(01, 13): COLON(OP) ':'
[07](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 26): NAME(NAME) 'encoded_string'
[08](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[08](01, 30)-(01, 34): NAME(NAME) 'char'
[08](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 10): NAME(NAME) 'return'
[09](01, 11)-(01, 25): NAME(NAME) 'encoded_string'
[09](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 03): NAME(NAME) 'def'
[12](01, 04)-(01, 10): NAME(NAME) 'decode'
[12](01, 10)-(01, 11): LPAR(OP) '('
[12](01, 11)-(01, 16): NAME(NAME) 'a_str'
[12](01, 16)-(01, 17): COMMA(OP) ','
[12](01, 18)-(01, 26): NAME(NAME) 'rotation'
[12](01, 26)-(01, 27): RPAR(OP) ')'
[12](01, 27)-(01, 28): COLON(OP) ':'
[12](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 18): NAME(NAME) 'decoded_string'
[13](01, 19)-(01, 20): EQUAL(OP) '='
[13](01, 21)-(01, 23): STRING(STRING) '""'
[13](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 07): NAME(NAME) 'for'
[14](01, 08)-(01, 12): NAME(NAME) 'char'
[14](01, 13)-(01, 15): NAME(NAME) 'in'
[14](01, 16)-(01, 21): NAME(NAME) 'a_str'
[14](01, 21)-(01, 22): COLON(OP) ':'
[14](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 10): NAME(NAME) 'if'
[15](01, 11)-(01, 15): NAME(NAME) 'char'
[15](01, 16)-(01, 18): NAME(NAME) 'in'
[15](01, 19)-(01, 25): NAME(NAME) 'string'
[15](01, 25)-(01, 26): DOT(OP) '.'
[15](01, 26)-(01, 41): NAME(NAME) 'ascii_lowercase'
[15](01, 41)-(01, 42): COLON(OP) ':'
[15](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 26): NAME(NAME) 'decoded_string'
[16](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[16](01, 30)-(01, 33): NAME(NAME) 'chr'
[16](01, 33)-(01, 34): LPAR(OP) '('
[16](01, 34)-(01, 35): LPAR(OP) '('
[16](01, 35)-(01, 38): NAME(NAME) 'ord'
[16](01, 38)-(01, 39): LPAR(OP) '('
[16](01, 39)-(01, 43): NAME(NAME) 'char'
[16](01, 43)-(01, 44): RPAR(OP) ')'
[16](01, 45)-(01, 46): MINUS(OP) '-'
[16](01, 47)-(01, 55): NAME(NAME) 'rotation'
[16](01, 55)-(01, 56): RPAR(OP) ')'
[16](01, 57)-(01, 58): PERCENT(OP) '%'
[16](01, 59)-(01, 60): LPAR(OP) '('
[16](01, 60)-(01, 62): NUMBER(NUMBER) '26'
[16](01, 63)-(01, 64): PLUS(OP) '+'
[16](01, 65)-(01, 68): NAME(NAME) 'ord'
[16](01, 68)-(01, 69): LPAR(OP) '('
[16](01, 69)-(01, 72): STRING(STRING) '"a"'
[16](01, 72)-(01, 73): RPAR(OP) ')'
[16](01, 73)-(01, 74): RPAR(OP) ')'
[16](01, 74)-(01, 75): RPAR(OP) ')'
[16](01, 75)-(01, 76): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 12): NAME(NAME) 'else'
[17](01, 12)-(01, 13): COLON(OP) ':'
[17](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 26): NAME(NAME) 'decoded_string'
[18](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[18](01, 30)-(01, 34): NAME(NAME) 'char'
[18](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 10): NAME(NAME) 'return'
[19](01, 11)-(01, 25): NAME(NAME) 'decoded_string'
[19](01, 25)-(01, 26): NEWLINE(NEWLINE)
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

