[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 18): NAME(NAME) 'does_intersect'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 21): NAME(NAME) 'x1'
[00](01, 21)-(01, 22): COMMA(OP) ','
[00](01, 22)-(01, 24): NAME(NAME) 'y1'
[00](01, 24)-(01, 25): COMMA(OP) ','
[00](01, 25)-(01, 27): NAME(NAME) 'w1'
[00](01, 27)-(01, 28): COMMA(OP) ','
[00](01, 28)-(01, 30): NAME(NAME) 'h1'
[00](01, 30)-(01, 31): COMMA(OP) ','
[00](01, 31)-(01, 33): NAME(NAME) 'x2'
[00](01, 33)-(01, 34): COMMA(OP) ','
[00](01, 34)-(01, 36): NAME(NAME) 'y2'
[00](01, 36)-(01, 37): COMMA(OP) ','
[00](01, 37)-(01, 39): NAME(NAME) 'w2'
[00](01, 39)-(01, 40): COMMA(OP) ','
[00](01, 40)-(01, 42): NAME(NAME) 'h2'
[00](01, 42)-(01, 43): RPAR(OP) ')'
[00](01, 43)-(01, 44): COLON(OP) ':'
[00](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): INDENT(INDENT) '   '
[01](01, 03)-(01, 09): NAME(NAME) 'return'
[01](01, 10)-(01, 18): NAME(NAME) 'function'
[01](01, 18)-(01, 19): LPAR(OP) '('
[01](01, 19)-(01, 21): NAME(NAME) 'x1'
[01](01, 21)-(01, 22): COMMA(OP) ','
[01](01, 22)-(01, 24): NAME(NAME) 'x1'
[01](01, 24)-(01, 25): PLUS(OP) '+'
[01](01, 25)-(01, 27): NAME(NAME) 'w1'
[01](01, 27)-(01, 28): COMMA(OP) ','
[01](01, 28)-(01, 30): NAME(NAME) 'x2'
[01](01, 30)-(01, 31): COMMA(OP) ','
[01](01, 31)-(01, 33): NAME(NAME) 'x2'
[01](01, 33)-(01, 34): PLUS(OP) '+'
[01](01, 34)-(01, 36): NAME(NAME) 'w2'
[01](01, 36)-(01, 37): COMMA(OP) ','
[01](01, 37)-(01, 39): NAME(NAME) 'y1'
[01](01, 39)-(01, 40): COMMA(OP) ','
[01](01, 40)-(01, 42): NAME(NAME) 'y1'
[01](01, 42)-(01, 43): PLUS(OP) '+'
[01](01, 43)-(01, 45): NAME(NAME) 'h1'
[01](01, 45)-(01, 46): COMMA(OP) ','
[01](01, 46)-(01, 48): NAME(NAME) 'y2'
[01](01, 48)-(01, 49): COMMA(OP) ','
[01](01, 49)-(01, 51): NAME(NAME) 'y2'
[01](01, 51)-(01, 52): PLUS(OP) '+'
[01](01, 52)-(01, 54): NAME(NAME) 'h2'
[01](01, 54)-(01, 55): RPAR(OP) ')'
[01](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'def'
[02](01, 04)-(01, 12): NAME(NAME) 'function'
[02](01, 12)-(01, 13): LPAR(OP) '('
[02](01, 13)-(01, 18): NAME(NAME) 'x1min'
[02](01, 18)-(01, 19): COMMA(OP) ','
[02](01, 19)-(01, 24): NAME(NAME) 'x1max'
[02](01, 24)-(01, 25): COMMA(OP) ','
[02](01, 25)-(01, 30): NAME(NAME) 'x2min'
[02](01, 30)-(01, 31): COMMA(OP) ','
[02](01, 31)-(01, 36): NAME(NAME) 'x2max'
[02](01, 36)-(01, 37): COMMA(OP) ','
[02](01, 37)-(01, 42): NAME(NAME) 'y1min'
[02](01, 42)-(01, 43): COMMA(OP) ','
[02](01, 43)-(01, 48): NAME(NAME) 'y1max'
[02](01, 48)-(01, 49): COMMA(OP) ','
[02](01, 49)-(01, 54): NAME(NAME) 'y2min'
[02](01, 54)-(01, 55): COMMA(OP) ','
[02](01, 55)-(01, 60): NAME(NAME) 'y2max'
[02](01, 60)-(01, 61): RPAR(OP) ')'
[02](01, 61)-(01, 62): COLON(OP) ':'
[02](01, 62)-(01, 63): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): INDENT(INDENT) '   '
[03](01, 03)-(01, 05): NAME(NAME) 'if'
[03](01, 06)-(01, 11): NAME(NAME) 'x1max'
[03](01, 12)-(01, 14): LESSEQUAL(OP) '<='
[03](01, 15)-(01, 20): NAME(NAME) 'x2min'
[03](01, 21)-(01, 23): NAME(NAME) 'or'
[03](01, 24)-(01, 29): NAME(NAME) 'x2max'
[03](01, 30)-(01, 32): LESSEQUAL(OP) '<='
[03](01, 33)-(01, 38): NAME(NAME) 'x1min'
[03](01, 38)-(01, 39): COLON(OP) ':'
[03](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 06): INDENT(INDENT) '      '
[04](01, 06)-(01, 12): NAME(NAME) 'return'
[04](01, 13)-(01, 18): NAME(NAME) 'False'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): INDENT(INDENT) '   '
[05](01, 03)-(01, 05): NAME(NAME) 'if'
[05](01, 06)-(01, 11): NAME(NAME) 'y1max'
[05](01, 12)-(01, 14): LESSEQUAL(OP) '<='
[05](01, 15)-(01, 20): NAME(NAME) 'y2min'
[05](01, 21)-(01, 23): NAME(NAME) 'or'
[05](01, 24)-(01, 29): NAME(NAME) 'y2max'
[05](01, 30)-(01, 32): LESSEQUAL(OP) '<='
[05](01, 33)-(01, 38): NAME(NAME) 'y1min'
[05](01, 38)-(01, 39): COLON(OP) ':'
[05](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 06): INDENT(INDENT) '      '
[06](01, 06)-(01, 12): NAME(NAME) 'return'
[06](01, 13)-(01, 18): NAME(NAME) 'False'
[06](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): INDENT(INDENT) '   '
[07](01, 03)-(01, 09): NAME(NAME) 'return'
[07](01, 10)-(01, 14): NAME(NAME) 'True'
[07](01, 14)-(01, 15): NEWLINE(NEWLINE)
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

