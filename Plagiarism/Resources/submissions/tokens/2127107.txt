[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 02): NAME(NAME) 'c1'
[00](01, 03)-(01, 04): EQUAL(OP) '='
[00](01, 05)-(01, 10): NAME(NAME) 'float'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 16): NAME(NAME) 'input'
[00](01, 16)-(01, 17): LPAR(OP) '('
[00](01, 17)-(01, 47): STRING(STRING) '"Hoeveel 1 eurocenten heb je:"'
[00](01, 47)-(01, 48): RPAR(OP) ')'
[00](01, 48)-(01, 49): RPAR(OP) ')'
[00](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 02): NAME(NAME) 'c2'
[01](01, 03)-(01, 04): EQUAL(OP) '='
[01](01, 05)-(01, 10): NAME(NAME) 'float'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 16): NAME(NAME) 'input'
[01](01, 16)-(01, 17): LPAR(OP) '('
[01](01, 17)-(01, 47): STRING(STRING) '"Hoeveel 2 eurocenten heb je:"'
[01](01, 47)-(01, 48): RPAR(OP) ')'
[01](01, 48)-(01, 49): RPAR(OP) ')'
[01](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 02): NAME(NAME) 'c5'
[02](01, 03)-(01, 04): EQUAL(OP) '='
[02](01, 05)-(01, 10): NAME(NAME) 'float'
[02](01, 10)-(01, 11): LPAR(OP) '('
[02](01, 11)-(01, 16): NAME(NAME) 'input'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 47): STRING(STRING) '"Hoeveel 5 eurocenten heb je:"'
[02](01, 47)-(01, 48): RPAR(OP) ')'
[02](01, 48)-(01, 49): RPAR(OP) ')'
[02](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'c10'
[03](01, 04)-(01, 05): EQUAL(OP) '='
[03](01, 06)-(01, 11): NAME(NAME) 'float'
[03](01, 11)-(01, 12): LPAR(OP) '('
[03](01, 12)-(01, 17): NAME(NAME) 'input'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 49): STRING(STRING) '"Hoeveel 10 eurocenten heb je:"'
[03](01, 49)-(01, 50): RPAR(OP) ')'
[03](01, 50)-(01, 51): RPAR(OP) ')'
[03](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'c20'
[04](01, 04)-(01, 05): EQUAL(OP) '='
[04](01, 06)-(01, 11): NAME(NAME) 'float'
[04](01, 11)-(01, 12): LPAR(OP) '('
[04](01, 12)-(01, 17): NAME(NAME) 'input'
[04](01, 17)-(01, 18): LPAR(OP) '('
[04](01, 18)-(01, 49): STRING(STRING) '"Hoeveel 20 eurocenten heb je:"'
[04](01, 49)-(01, 50): RPAR(OP) ')'
[04](01, 50)-(01, 51): RPAR(OP) ')'
[04](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 05): NAME(NAME) 'total'
[06](01, 06)-(01, 07): EQUAL(OP) '='
[06](01, 08)-(01, 10): NAME(NAME) 'c1'
[06](01, 11)-(01, 12): STAR(OP) '*'
[06](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[06](01, 15)-(01, 16): PLUS(OP) '+'
[06](01, 17)-(01, 19): NAME(NAME) 'c2'
[06](01, 20)-(01, 21): STAR(OP) '*'
[06](01, 22)-(01, 23): NUMBER(NUMBER) '2'
[06](01, 24)-(01, 25): PLUS(OP) '+'
[06](01, 26)-(01, 28): NAME(NAME) 'c5'
[06](01, 29)-(01, 30): STAR(OP) '*'
[06](01, 31)-(01, 32): NUMBER(NUMBER) '5'
[06](01, 33)-(01, 34): PLUS(OP) '+'
[06](01, 35)-(01, 38): NAME(NAME) 'c10'
[06](01, 39)-(01, 40): STAR(OP) '*'
[06](01, 41)-(01, 43): NUMBER(NUMBER) '10'
[06](01, 44)-(01, 45): PLUS(OP) '+'
[06](01, 46)-(01, 49): NAME(NAME) 'c20'
[06](01, 50)-(01, 51): STAR(OP) '*'
[06](01, 52)-(01, 54): NUMBER(NUMBER) '20'
[06](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NAME(NAME) 'x'
[08](01, 02)-(01, 03): EQUAL(OP) '='
[08](01, 04)-(01, 07): NAME(NAME) 'str'
[08](01, 07)-(01, 08): LPAR(OP) '('
[08](01, 08)-(01, 13): NAME(NAME) 'total'
[08](01, 13)-(01, 14): RPAR(OP) ')'
[08](01, 14)-(01, 15): LSQB(OP) '['
[08](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[08](01, 16)-(01, 17): RSQB(OP) ']'
[08](01, 18)-(01, 20): NAME(NAME) 'or'
[08](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[08](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NAME(NAME) 'y'
[09](01, 02)-(01, 03): EQUAL(OP) '='
[09](01, 04)-(01, 07): NAME(NAME) 'str'
[09](01, 07)-(01, 08): LPAR(OP) '('
[09](01, 08)-(01, 13): NAME(NAME) 'total'
[09](01, 13)-(01, 14): RPAR(OP) ')'
[09](01, 14)-(01, 15): LSQB(OP) '['
[09](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[09](01, 16)-(01, 17): RSQB(OP) ']'
[09](01, 18)-(01, 20): NAME(NAME) 'or'
[09](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[09](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NAME(NAME) 'z'
[10](01, 02)-(01, 03): EQUAL(OP) '='
[10](01, 04)-(01, 07): NAME(NAME) 'str'
[10](01, 07)-(01, 08): LPAR(OP) '('
[10](01, 08)-(01, 13): NAME(NAME) 'total'
[10](01, 13)-(01, 14): RPAR(OP) ')'
[10](01, 14)-(01, 15): LSQB(OP) '['
[10](01, 15)-(01, 16): NUMBER(NUMBER) '2'
[10](01, 16)-(01, 17): RSQB(OP) ']'
[10](01, 18)-(01, 20): NAME(NAME) 'or'
[10](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[10](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 05): NAME(NAME) 'print'
[12](01, 05)-(01, 06): LPAR(OP) '('
[12](01, 06)-(01, 17): STRING(STRING) '"You have "'
[12](01, 17)-(01, 18): COMMA(OP) ','
[12](01, 19)-(01, 20): NAME(NAME) 'x'
[12](01, 20)-(01, 21): COMMA(OP) ','
[12](01, 22)-(01, 25): STRING(STRING) '"."'
[12](01, 25)-(01, 26): COMMA(OP) ','
[12](01, 27)-(01, 28): NAME(NAME) 'y'
[12](01, 28)-(01, 29): COMMA(OP) ','
[12](01, 30)-(01, 31): NAME(NAME) 'z'
[12](01, 31)-(01, 32): COMMA(OP) ','
[12](01, 33)-(01, 41): STRING(STRING) '" euro!"'
[12](01, 41)-(01, 42): COMMA(OP) ','
[12](01, 43)-(01, 46): NAME(NAME) 'sep'
[12](01, 46)-(01, 47): EQUAL(OP) '='
[12](01, 47)-(01, 49): STRING(STRING) '""'
[12](01, 49)-(01, 50): RPAR(OP) ')'
[12](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

