[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 08): NAME(NAME) 'sentence'
[01](01, 08)-(01, 09): EQUAL(OP) '='
[01](01, 09)-(01, 14): NAME(NAME) 'input'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 32): STRING(STRING) '"give a sentence"'
[01](01, 32)-(01, 33): RPAR(OP) ')'
[01](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): NAME(NAME) 'alphabet'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 09)-(01, 37): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[02](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'total'
[03](01, 05)-(01, 06): EQUAL(OP) '='
[03](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[03](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'for'
[04](01, 04)-(01, 05): NAME(NAME) 'i'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 14): NAME(NAME) 'range'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 18): NAME(NAME) 'len'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 27): NAME(NAME) 'sentence'
[04](01, 27)-(01, 28): RPAR(OP) ')'
[04](01, 28)-(01, 29): RPAR(OP) ')'
[04](01, 29)-(01, 30): COLON(OP) ':'
[04](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 15): NAME(NAME) 'sentence'
[05](01, 15)-(01, 16): LSQB(OP) '['
[05](01, 16)-(01, 17): NAME(NAME) 'i'
[05](01, 17)-(01, 18): RSQB(OP) ']'
[05](01, 18)-(01, 20): EQEQUAL(OP) '=='
[05](01, 20)-(01, 23): STRING(STRING) '"a"'
[05](01, 23)-(01, 24): COLON(OP) ':'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 17): NAME(NAME) 'total'
[06](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[06](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 05): NAME(NAME) 'print'
[07](01, 05)-(01, 06): LPAR(OP) '('
[07](01, 06)-(01, 11): STRING(STRING) '"a: "'
[07](01, 12)-(01, 13): PLUS(OP) '+'
[07](01, 14)-(01, 17): NAME(NAME) 'str'
[07](01, 17)-(01, 18): LPAR(OP) '('
[07](01, 18)-(01, 23): NAME(NAME) 'total'
[07](01, 23)-(01, 24): RPAR(OP) ')'
[07](01, 24)-(01, 25): RPAR(OP) ')'
[07](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 05): NAME(NAME) 'total'
[08](01, 05)-(01, 06): EQUAL(OP) '='
[08](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[08](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'for'
[09](01, 04)-(01, 05): NAME(NAME) 'i'
[09](01, 06)-(01, 08): NAME(NAME) 'in'
[09](01, 09)-(01, 14): NAME(NAME) 'range'
[09](01, 14)-(01, 15): LPAR(OP) '('
[09](01, 15)-(01, 18): NAME(NAME) 'len'
[09](01, 18)-(01, 19): LPAR(OP) '('
[09](01, 19)-(01, 27): NAME(NAME) 'sentence'
[09](01, 27)-(01, 28): RPAR(OP) ')'
[09](01, 28)-(01, 29): RPAR(OP) ')'
[09](01, 29)-(01, 30): COLON(OP) ':'
[09](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 06): NAME(NAME) 'if'
[10](01, 07)-(01, 15): NAME(NAME) 'sentence'
[10](01, 15)-(01, 16): LSQB(OP) '['
[10](01, 16)-(01, 17): NAME(NAME) 'i'
[10](01, 17)-(01, 18): RSQB(OP) ']'
[10](01, 18)-(01, 20): EQEQUAL(OP) '=='
[10](01, 20)-(01, 23): STRING(STRING) '"b"'
[10](01, 23)-(01, 24): COLON(OP) ':'
[10](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 17): NAME(NAME) 'total'
[11](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[11](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[11](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 05): NAME(NAME) 'print'
[12](01, 05)-(01, 06): LPAR(OP) '('
[12](01, 06)-(01, 11): STRING(STRING) '"b: "'
[12](01, 12)-(01, 13): PLUS(OP) '+'
[12](01, 14)-(01, 17): NAME(NAME) 'str'
[12](01, 17)-(01, 18): LPAR(OP) '('
[12](01, 18)-(01, 23): NAME(NAME) 'total'
[12](01, 23)-(01, 24): RPAR(OP) ')'
[12](01, 24)-(01, 25): RPAR(OP) ')'
[12](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 05): NAME(NAME) 'total'
[13](01, 05)-(01, 06): EQUAL(OP) '='
[13](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[13](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 03): NAME(NAME) 'for'
[14](01, 04)-(01, 05): NAME(NAME) 'i'
[14](01, 06)-(01, 08): NAME(NAME) 'in'
[14](01, 09)-(01, 14): NAME(NAME) 'range'
[14](01, 14)-(01, 15): LPAR(OP) '('
[14](01, 15)-(01, 18): NAME(NAME) 'len'
[14](01, 18)-(01, 19): LPAR(OP) '('
[14](01, 19)-(01, 27): NAME(NAME) 'sentence'
[14](01, 27)-(01, 28): RPAR(OP) ')'
[14](01, 28)-(01, 29): RPAR(OP) ')'
[14](01, 29)-(01, 30): COLON(OP) ':'
[14](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 06): NAME(NAME) 'if'
[15](01, 07)-(01, 15): NAME(NAME) 'sentence'
[15](01, 15)-(01, 16): LSQB(OP) '['
[15](01, 16)-(01, 17): NAME(NAME) 'i'
[15](01, 17)-(01, 18): RSQB(OP) ']'
[15](01, 18)-(01, 20): EQEQUAL(OP) '=='
[15](01, 20)-(01, 23): STRING(STRING) '"c"'
[15](01, 23)-(01, 24): COLON(OP) ':'
[15](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 17): NAME(NAME) 'total'
[16](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[16](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[16](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 05): NAME(NAME) 'print'
[17](01, 05)-(01, 06): LPAR(OP) '('
[17](01, 06)-(01, 11): STRING(STRING) '"c: "'
[17](01, 12)-(01, 13): PLUS(OP) '+'
[17](01, 14)-(01, 17): NAME(NAME) 'str'
[17](01, 17)-(01, 18): LPAR(OP) '('
[17](01, 18)-(01, 23): NAME(NAME) 'total'
[17](01, 23)-(01, 24): RPAR(OP) ')'
[17](01, 24)-(01, 25): RPAR(OP) ')'
[17](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 05): NAME(NAME) 'total'
[18](01, 05)-(01, 06): EQUAL(OP) '='
[18](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[18](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 03): NAME(NAME) 'for'
[19](01, 04)-(01, 05): NAME(NAME) 'i'
[19](01, 06)-(01, 08): NAME(NAME) 'in'
[19](01, 09)-(01, 14): NAME(NAME) 'range'
[19](01, 14)-(01, 15): LPAR(OP) '('
[19](01, 15)-(01, 18): NAME(NAME) 'len'
[19](01, 18)-(01, 19): LPAR(OP) '('
[19](01, 19)-(01, 27): NAME(NAME) 'sentence'
[19](01, 27)-(01, 28): RPAR(OP) ')'
[19](01, 28)-(01, 29): RPAR(OP) ')'
[19](01, 29)-(01, 30): COLON(OP) ':'
[19](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 06): NAME(NAME) 'if'
[20](01, 07)-(01, 15): NAME(NAME) 'sentence'
[20](01, 15)-(01, 16): LSQB(OP) '['
[20](01, 16)-(01, 17): NAME(NAME) 'i'
[20](01, 17)-(01, 18): RSQB(OP) ']'
[20](01, 18)-(01, 20): EQEQUAL(OP) '=='
[20](01, 20)-(01, 23): STRING(STRING) '"d"'
[20](01, 23)-(01, 24): COLON(OP) ':'
[20](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 17): NAME(NAME) 'total'
[21](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[21](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[21](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 05): NAME(NAME) 'print'
[22](01, 05)-(01, 06): LPAR(OP) '('
[22](01, 06)-(01, 11): STRING(STRING) '"d: "'
[22](01, 12)-(01, 13): PLUS(OP) '+'
[22](01, 14)-(01, 17): NAME(NAME) 'str'
[22](01, 17)-(01, 18): LPAR(OP) '('
[22](01, 18)-(01, 23): NAME(NAME) 'total'
[22](01, 23)-(01, 24): RPAR(OP) ')'
[22](01, 24)-(01, 25): RPAR(OP) ')'
[22](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 05): NAME(NAME) 'total'
[23](01, 05)-(01, 06): EQUAL(OP) '='
[23](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[23](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 03): NAME(NAME) 'for'
[24](01, 04)-(01, 05): NAME(NAME) 'i'
[24](01, 06)-(01, 08): NAME(NAME) 'in'
[24](01, 09)-(01, 14): NAME(NAME) 'range'
[24](01, 14)-(01, 15): LPAR(OP) '('
[24](01, 15)-(01, 18): NAME(NAME) 'len'
[24](01, 18)-(01, 19): LPAR(OP) '('
[24](01, 19)-(01, 27): NAME(NAME) 'sentence'
[24](01, 27)-(01, 28): RPAR(OP) ')'
[24](01, 28)-(01, 29): RPAR(OP) ')'
[24](01, 29)-(01, 30): COLON(OP) ':'
[24](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 06): NAME(NAME) 'if'
[25](01, 07)-(01, 15): NAME(NAME) 'sentence'
[25](01, 15)-(01, 16): LSQB(OP) '['
[25](01, 16)-(01, 17): NAME(NAME) 'i'
[25](01, 17)-(01, 18): RSQB(OP) ']'
[25](01, 18)-(01, 20): EQEQUAL(OP) '=='
[25](01, 20)-(01, 23): STRING(STRING) '"e"'
[25](01, 23)-(01, 24): COLON(OP) ':'
[25](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 12): INDENT(INDENT) '            '
[26](01, 12)-(01, 17): NAME(NAME) 'total'
[26](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[26](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[26](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 05): NAME(NAME) 'print'
[27](01, 05)-(01, 06): LPAR(OP) '('
[27](01, 06)-(01, 11): STRING(STRING) '"e: "'
[27](01, 12)-(01, 13): PLUS(OP) '+'
[27](01, 14)-(01, 17): NAME(NAME) 'str'
[27](01, 17)-(01, 18): LPAR(OP) '('
[27](01, 18)-(01, 23): NAME(NAME) 'total'
[27](01, 23)-(01, 24): RPAR(OP) ')'
[27](01, 24)-(01, 25): RPAR(OP) ')'
[27](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 05): NAME(NAME) 'total'
[28](01, 05)-(01, 06): EQUAL(OP) '='
[28](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[28](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 03): NAME(NAME) 'for'
[29](01, 04)-(01, 05): NAME(NAME) 'i'
[29](01, 06)-(01, 08): NAME(NAME) 'in'
[29](01, 09)-(01, 14): NAME(NAME) 'range'
[29](01, 14)-(01, 15): LPAR(OP) '('
[29](01, 15)-(01, 18): NAME(NAME) 'len'
[29](01, 18)-(01, 19): LPAR(OP) '('
[29](01, 19)-(01, 27): NAME(NAME) 'sentence'
[29](01, 27)-(01, 28): RPAR(OP) ')'
[29](01, 28)-(01, 29): RPAR(OP) ')'
[29](01, 29)-(01, 30): COLON(OP) ':'
[29](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 06): NAME(NAME) 'if'
[30](01, 07)-(01, 15): NAME(NAME) 'sentence'
[30](01, 15)-(01, 16): LSQB(OP) '['
[30](01, 16)-(01, 17): NAME(NAME) 'i'
[30](01, 17)-(01, 18): RSQB(OP) ']'
[30](01, 18)-(01, 20): EQEQUAL(OP) '=='
[30](01, 20)-(01, 23): STRING(STRING) '"f"'
[30](01, 23)-(01, 24): COLON(OP) ':'
[30](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 17): NAME(NAME) 'total'
[31](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[31](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[31](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 05): NAME(NAME) 'print'
[32](01, 05)-(01, 06): LPAR(OP) '('
[32](01, 06)-(01, 11): STRING(STRING) '"f: "'
[32](01, 12)-(01, 13): PLUS(OP) '+'
[32](01, 14)-(01, 17): NAME(NAME) 'str'
[32](01, 17)-(01, 18): LPAR(OP) '('
[32](01, 18)-(01, 23): NAME(NAME) 'total'
[32](01, 23)-(01, 24): RPAR(OP) ')'
[32](01, 24)-(01, 25): RPAR(OP) ')'
[32](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 05): NAME(NAME) 'total'
[33](01, 05)-(01, 06): EQUAL(OP) '='
[33](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[33](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 03): NAME(NAME) 'for'
[34](01, 04)-(01, 05): NAME(NAME) 'i'
[34](01, 06)-(01, 08): NAME(NAME) 'in'
[34](01, 09)-(01, 14): NAME(NAME) 'range'
[34](01, 14)-(01, 15): LPAR(OP) '('
[34](01, 15)-(01, 18): NAME(NAME) 'len'
[34](01, 18)-(01, 19): LPAR(OP) '('
[34](01, 19)-(01, 27): NAME(NAME) 'sentence'
[34](01, 27)-(01, 28): RPAR(OP) ')'
[34](01, 28)-(01, 29): RPAR(OP) ')'
[34](01, 29)-(01, 30): COLON(OP) ':'
[34](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 04): INDENT(INDENT) '    '
[35](01, 04)-(01, 06): NAME(NAME) 'if'
[35](01, 07)-(01, 15): NAME(NAME) 'sentence'
[35](01, 15)-(01, 16): LSQB(OP) '['
[35](01, 16)-(01, 17): NAME(NAME) 'i'
[35](01, 17)-(01, 18): RSQB(OP) ']'
[35](01, 18)-(01, 20): EQEQUAL(OP) '=='
[35](01, 20)-(01, 23): STRING(STRING) '"g"'
[35](01, 23)-(01, 24): COLON(OP) ':'
[35](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 12): INDENT(INDENT) '            '
[36](01, 12)-(01, 17): NAME(NAME) 'total'
[36](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[36](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[36](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 05): NAME(NAME) 'print'
[37](01, 05)-(01, 06): LPAR(OP) '('
[37](01, 06)-(01, 11): STRING(STRING) '"g: "'
[37](01, 12)-(01, 13): PLUS(OP) '+'
[37](01, 14)-(01, 17): NAME(NAME) 'str'
[37](01, 17)-(01, 18): LPAR(OP) '('
[37](01, 18)-(01, 23): NAME(NAME) 'total'
[37](01, 23)-(01, 24): RPAR(OP) ')'
[37](01, 24)-(01, 25): RPAR(OP) ')'
[37](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 05): NAME(NAME) 'total'
[38](01, 05)-(01, 06): EQUAL(OP) '='
[38](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[38](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 03): NAME(NAME) 'for'
[39](01, 04)-(01, 05): NAME(NAME) 'i'
[39](01, 06)-(01, 08): NAME(NAME) 'in'
[39](01, 09)-(01, 14): NAME(NAME) 'range'
[39](01, 14)-(01, 15): LPAR(OP) '('
[39](01, 15)-(01, 18): NAME(NAME) 'len'
[39](01, 18)-(01, 19): LPAR(OP) '('
[39](01, 19)-(01, 27): NAME(NAME) 'sentence'
[39](01, 27)-(01, 28): RPAR(OP) ')'
[39](01, 28)-(01, 29): RPAR(OP) ')'
[39](01, 29)-(01, 30): COLON(OP) ':'
[39](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 04): INDENT(INDENT) '    '
[40](01, 04)-(01, 06): NAME(NAME) 'if'
[40](01, 07)-(01, 15): NAME(NAME) 'sentence'
[40](01, 15)-(01, 16): LSQB(OP) '['
[40](01, 16)-(01, 17): NAME(NAME) 'i'
[40](01, 17)-(01, 18): RSQB(OP) ']'
[40](01, 18)-(01, 20): EQEQUAL(OP) '=='
[40](01, 20)-(01, 23): STRING(STRING) '"h"'
[40](01, 23)-(01, 24): COLON(OP) ':'
[40](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 12): INDENT(INDENT) '            '
[41](01, 12)-(01, 17): NAME(NAME) 'total'
[41](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[41](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[41](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 05): NAME(NAME) 'print'
[42](01, 05)-(01, 06): LPAR(OP) '('
[42](01, 06)-(01, 11): STRING(STRING) '"h: "'
[42](01, 12)-(01, 13): PLUS(OP) '+'
[42](01, 14)-(01, 17): NAME(NAME) 'str'
[42](01, 17)-(01, 18): LPAR(OP) '('
[42](01, 18)-(01, 23): NAME(NAME) 'total'
[42](01, 23)-(01, 24): RPAR(OP) ')'
[42](01, 24)-(01, 25): RPAR(OP) ')'
[42](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 05): NAME(NAME) 'total'
[43](01, 05)-(01, 06): EQUAL(OP) '='
[43](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[43](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 03): NAME(NAME) 'for'
[44](01, 04)-(01, 05): NAME(NAME) 'i'
[44](01, 06)-(01, 08): NAME(NAME) 'in'
[44](01, 09)-(01, 14): NAME(NAME) 'range'
[44](01, 14)-(01, 15): LPAR(OP) '('
[44](01, 15)-(01, 18): NAME(NAME) 'len'
[44](01, 18)-(01, 19): LPAR(OP) '('
[44](01, 19)-(01, 27): NAME(NAME) 'sentence'
[44](01, 27)-(01, 28): RPAR(OP) ')'
[44](01, 28)-(01, 29): RPAR(OP) ')'
[44](01, 29)-(01, 30): COLON(OP) ':'
[44](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 04): INDENT(INDENT) '    '
[45](01, 04)-(01, 06): NAME(NAME) 'if'
[45](01, 07)-(01, 15): NAME(NAME) 'sentence'
[45](01, 15)-(01, 16): LSQB(OP) '['
[45](01, 16)-(01, 17): NAME(NAME) 'i'
[45](01, 17)-(01, 18): RSQB(OP) ']'
[45](01, 18)-(01, 20): EQEQUAL(OP) '=='
[45](01, 20)-(01, 23): STRING(STRING) '"i"'
[45](01, 23)-(01, 24): COLON(OP) ':'
[45](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 12): INDENT(INDENT) '            '
[46](01, 12)-(01, 17): NAME(NAME) 'total'
[46](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[46](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[46](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 05): NAME(NAME) 'print'
[47](01, 05)-(01, 06): LPAR(OP) '('
[47](01, 06)-(01, 11): STRING(STRING) '"i: "'
[47](01, 12)-(01, 13): PLUS(OP) '+'
[47](01, 14)-(01, 17): NAME(NAME) 'str'
[47](01, 17)-(01, 18): LPAR(OP) '('
[47](01, 18)-(01, 23): NAME(NAME) 'total'
[47](01, 23)-(01, 24): RPAR(OP) ')'
[47](01, 24)-(01, 25): RPAR(OP) ')'
[47](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 05): NAME(NAME) 'total'
[48](01, 05)-(01, 06): EQUAL(OP) '='
[48](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[48](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 03): NAME(NAME) 'for'
[49](01, 04)-(01, 05): NAME(NAME) 'i'
[49](01, 06)-(01, 08): NAME(NAME) 'in'
[49](01, 09)-(01, 14): NAME(NAME) 'range'
[49](01, 14)-(01, 15): LPAR(OP) '('
[49](01, 15)-(01, 18): NAME(NAME) 'len'
[49](01, 18)-(01, 19): LPAR(OP) '('
[49](01, 19)-(01, 27): NAME(NAME) 'sentence'
[49](01, 27)-(01, 28): RPAR(OP) ')'
[49](01, 28)-(01, 29): RPAR(OP) ')'
[49](01, 29)-(01, 30): COLON(OP) ':'
[49](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 04): INDENT(INDENT) '    '
[50](01, 04)-(01, 06): NAME(NAME) 'if'
[50](01, 07)-(01, 15): NAME(NAME) 'sentence'
[50](01, 15)-(01, 16): LSQB(OP) '['
[50](01, 16)-(01, 17): NAME(NAME) 'i'
[50](01, 17)-(01, 18): RSQB(OP) ']'
[50](01, 18)-(01, 20): EQEQUAL(OP) '=='
[50](01, 20)-(01, 23): STRING(STRING) '"j"'
[50](01, 23)-(01, 24): COLON(OP) ':'
[50](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 12): INDENT(INDENT) '            '
[51](01, 12)-(01, 17): NAME(NAME) 'total'
[51](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[51](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[51](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[51](02, 00)-(02, 00): DEDENT(DEDENT)
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 05): NAME(NAME) 'print'
[52](01, 05)-(01, 06): LPAR(OP) '('
[52](01, 06)-(01, 11): STRING(STRING) '"j: "'
[52](01, 12)-(01, 13): PLUS(OP) '+'
[52](01, 14)-(01, 17): NAME(NAME) 'str'
[52](01, 17)-(01, 18): LPAR(OP) '('
[52](01, 18)-(01, 23): NAME(NAME) 'total'
[52](01, 23)-(01, 24): RPAR(OP) ')'
[52](01, 24)-(01, 25): RPAR(OP) ')'
[52](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 05): NAME(NAME) 'total'
[53](01, 05)-(01, 06): EQUAL(OP) '='
[53](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[53](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 03): NAME(NAME) 'for'
[54](01, 04)-(01, 05): NAME(NAME) 'i'
[54](01, 06)-(01, 08): NAME(NAME) 'in'
[54](01, 09)-(01, 14): NAME(NAME) 'range'
[54](01, 14)-(01, 15): LPAR(OP) '('
[54](01, 15)-(01, 18): NAME(NAME) 'len'
[54](01, 18)-(01, 19): LPAR(OP) '('
[54](01, 19)-(01, 27): NAME(NAME) 'sentence'
[54](01, 27)-(01, 28): RPAR(OP) ')'
[54](01, 28)-(01, 29): RPAR(OP) ')'
[54](01, 29)-(01, 30): COLON(OP) ':'
[54](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 04): INDENT(INDENT) '    '
[55](01, 04)-(01, 06): NAME(NAME) 'if'
[55](01, 07)-(01, 15): NAME(NAME) 'sentence'
[55](01, 15)-(01, 16): LSQB(OP) '['
[55](01, 16)-(01, 17): NAME(NAME) 'i'
[55](01, 17)-(01, 18): RSQB(OP) ']'
[55](01, 18)-(01, 20): EQEQUAL(OP) '=='
[55](01, 20)-(01, 23): STRING(STRING) '"k"'
[55](01, 23)-(01, 24): COLON(OP) ':'
[55](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[55](02, 00)-(02, 00): DEDENT(DEDENT)
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[56](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[56](01, 00)-(01, 12): INDENT(INDENT) '            '
[56](01, 12)-(01, 17): NAME(NAME) 'total'
[56](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[56](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[56](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[56](02, 00)-(02, 00): DEDENT(DEDENT)
[56](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[57](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[57](01, 00)-(01, 05): NAME(NAME) 'print'
[57](01, 05)-(01, 06): LPAR(OP) '('
[57](01, 06)-(01, 11): STRING(STRING) '"k: "'
[57](01, 12)-(01, 13): PLUS(OP) '+'
[57](01, 14)-(01, 17): NAME(NAME) 'str'
[57](01, 17)-(01, 18): LPAR(OP) '('
[57](01, 18)-(01, 23): NAME(NAME) 'total'
[57](01, 23)-(01, 24): RPAR(OP) ')'
[57](01, 24)-(01, 25): RPAR(OP) ')'
[57](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[57](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[58](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[58](01, 00)-(01, 05): NAME(NAME) 'total'
[58](01, 05)-(01, 06): EQUAL(OP) '='
[58](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[58](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[58](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[59](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[59](01, 00)-(01, 03): NAME(NAME) 'for'
[59](01, 04)-(01, 05): NAME(NAME) 'i'
[59](01, 06)-(01, 08): NAME(NAME) 'in'
[59](01, 09)-(01, 14): NAME(NAME) 'range'
[59](01, 14)-(01, 15): LPAR(OP) '('
[59](01, 15)-(01, 18): NAME(NAME) 'len'
[59](01, 18)-(01, 19): LPAR(OP) '('
[59](01, 19)-(01, 27): NAME(NAME) 'sentence'
[59](01, 27)-(01, 28): RPAR(OP) ')'
[59](01, 28)-(01, 29): RPAR(OP) ')'
[59](01, 29)-(01, 30): COLON(OP) ':'
[59](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[59](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[60](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[60](01, 00)-(01, 04): INDENT(INDENT) '    '
[60](01, 04)-(01, 06): NAME(NAME) 'if'
[60](01, 07)-(01, 15): NAME(NAME) 'sentence'
[60](01, 15)-(01, 16): LSQB(OP) '['
[60](01, 16)-(01, 17): NAME(NAME) 'i'
[60](01, 17)-(01, 18): RSQB(OP) ']'
[60](01, 18)-(01, 20): EQEQUAL(OP) '=='
[60](01, 20)-(01, 23): STRING(STRING) '"l"'
[60](01, 23)-(01, 24): COLON(OP) ':'
[60](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[60](02, 00)-(02, 00): DEDENT(DEDENT)
[60](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[61](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[61](01, 00)-(01, 12): INDENT(INDENT) '            '
[61](01, 12)-(01, 17): NAME(NAME) 'total'
[61](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[61](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[61](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[61](02, 00)-(02, 00): DEDENT(DEDENT)
[61](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[62](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[62](01, 00)-(01, 05): NAME(NAME) 'print'
[62](01, 05)-(01, 06): LPAR(OP) '('
[62](01, 06)-(01, 11): STRING(STRING) '"l: "'
[62](01, 12)-(01, 13): PLUS(OP) '+'
[62](01, 14)-(01, 17): NAME(NAME) 'str'
[62](01, 17)-(01, 18): LPAR(OP) '('
[62](01, 18)-(01, 23): NAME(NAME) 'total'
[62](01, 23)-(01, 24): RPAR(OP) ')'
[62](01, 24)-(01, 25): RPAR(OP) ')'
[62](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[62](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[63](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[63](01, 00)-(01, 05): NAME(NAME) 'total'
[63](01, 05)-(01, 06): EQUAL(OP) '='
[63](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[63](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[63](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[64](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[64](01, 00)-(01, 03): NAME(NAME) 'for'
[64](01, 04)-(01, 05): NAME(NAME) 'i'
[64](01, 06)-(01, 08): NAME(NAME) 'in'
[64](01, 09)-(01, 14): NAME(NAME) 'range'
[64](01, 14)-(01, 15): LPAR(OP) '('
[64](01, 15)-(01, 18): NAME(NAME) 'len'
[64](01, 18)-(01, 19): LPAR(OP) '('
[64](01, 19)-(01, 27): NAME(NAME) 'sentence'
[64](01, 27)-(01, 28): RPAR(OP) ')'
[64](01, 28)-(01, 29): RPAR(OP) ')'
[64](01, 29)-(01, 30): COLON(OP) ':'
[64](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[64](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[65](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[65](01, 00)-(01, 04): INDENT(INDENT) '    '
[65](01, 04)-(01, 06): NAME(NAME) 'if'
[65](01, 07)-(01, 15): NAME(NAME) 'sentence'
[65](01, 15)-(01, 16): LSQB(OP) '['
[65](01, 16)-(01, 17): NAME(NAME) 'i'
[65](01, 17)-(01, 18): RSQB(OP) ']'
[65](01, 18)-(01, 20): EQEQUAL(OP) '=='
[65](01, 20)-(01, 23): STRING(STRING) '"m"'
[65](01, 23)-(01, 24): COLON(OP) ':'
[65](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[65](02, 00)-(02, 00): DEDENT(DEDENT)
[65](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[66](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[66](01, 00)-(01, 12): INDENT(INDENT) '            '
[66](01, 12)-(01, 17): NAME(NAME) 'total'
[66](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[66](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[66](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[66](02, 00)-(02, 00): DEDENT(DEDENT)
[66](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[67](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[67](01, 00)-(01, 05): NAME(NAME) 'print'
[67](01, 05)-(01, 06): LPAR(OP) '('
[67](01, 06)-(01, 11): STRING(STRING) '"m: "'
[67](01, 12)-(01, 13): PLUS(OP) '+'
[67](01, 14)-(01, 17): NAME(NAME) 'str'
[67](01, 17)-(01, 18): LPAR(OP) '('
[67](01, 18)-(01, 23): NAME(NAME) 'total'
[67](01, 23)-(01, 24): RPAR(OP) ')'
[67](01, 24)-(01, 25): RPAR(OP) ')'
[67](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[67](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[68](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[68](01, 00)-(01, 05): NAME(NAME) 'total'
[68](01, 05)-(01, 06): EQUAL(OP) '='
[68](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[68](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[68](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[69](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[69](01, 00)-(01, 03): NAME(NAME) 'for'
[69](01, 04)-(01, 05): NAME(NAME) 'i'
[69](01, 06)-(01, 08): NAME(NAME) 'in'
[69](01, 09)-(01, 14): NAME(NAME) 'range'
[69](01, 14)-(01, 15): LPAR(OP) '('
[69](01, 15)-(01, 18): NAME(NAME) 'len'
[69](01, 18)-(01, 19): LPAR(OP) '('
[69](01, 19)-(01, 27): NAME(NAME) 'sentence'
[69](01, 27)-(01, 28): RPAR(OP) ')'
[69](01, 28)-(01, 29): RPAR(OP) ')'
[69](01, 29)-(01, 30): COLON(OP) ':'
[69](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[69](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[70](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[70](01, 00)-(01, 04): INDENT(INDENT) '    '
[70](01, 04)-(01, 06): NAME(NAME) 'if'
[70](01, 07)-(01, 15): NAME(NAME) 'sentence'
[70](01, 15)-(01, 16): LSQB(OP) '['
[70](01, 16)-(01, 17): NAME(NAME) 'i'
[70](01, 17)-(01, 18): RSQB(OP) ']'
[70](01, 18)-(01, 20): EQEQUAL(OP) '=='
[70](01, 20)-(01, 23): STRING(STRING) '"n"'
[70](01, 23)-(01, 24): COLON(OP) ':'
[70](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[70](02, 00)-(02, 00): DEDENT(DEDENT)
[70](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[71](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[71](01, 00)-(01, 12): INDENT(INDENT) '            '
[71](01, 12)-(01, 17): NAME(NAME) 'total'
[71](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[71](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[71](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[71](02, 00)-(02, 00): DEDENT(DEDENT)
[71](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[72](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[72](01, 00)-(01, 05): NAME(NAME) 'print'
[72](01, 05)-(01, 06): LPAR(OP) '('
[72](01, 06)-(01, 11): STRING(STRING) '"n: "'
[72](01, 12)-(01, 13): PLUS(OP) '+'
[72](01, 14)-(01, 17): NAME(NAME) 'str'
[72](01, 17)-(01, 18): LPAR(OP) '('
[72](01, 18)-(01, 23): NAME(NAME) 'total'
[72](01, 23)-(01, 24): RPAR(OP) ')'
[72](01, 24)-(01, 25): RPAR(OP) ')'
[72](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[72](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[73](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[73](01, 00)-(01, 05): NAME(NAME) 'total'
[73](01, 05)-(01, 06): EQUAL(OP) '='
[73](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[73](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[73](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[74](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[74](01, 00)-(01, 03): NAME(NAME) 'for'
[74](01, 04)-(01, 05): NAME(NAME) 'i'
[74](01, 06)-(01, 08): NAME(NAME) 'in'
[74](01, 09)-(01, 14): NAME(NAME) 'range'
[74](01, 14)-(01, 15): LPAR(OP) '('
[74](01, 15)-(01, 18): NAME(NAME) 'len'
[74](01, 18)-(01, 19): LPAR(OP) '('
[74](01, 19)-(01, 27): NAME(NAME) 'sentence'
[74](01, 27)-(01, 28): RPAR(OP) ')'
[74](01, 28)-(01, 29): RPAR(OP) ')'
[74](01, 29)-(01, 30): COLON(OP) ':'
[74](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[74](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[75](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[75](01, 00)-(01, 04): INDENT(INDENT) '    '
[75](01, 04)-(01, 06): NAME(NAME) 'if'
[75](01, 07)-(01, 15): NAME(NAME) 'sentence'
[75](01, 15)-(01, 16): LSQB(OP) '['
[75](01, 16)-(01, 17): NAME(NAME) 'i'
[75](01, 17)-(01, 18): RSQB(OP) ']'
[75](01, 18)-(01, 20): EQEQUAL(OP) '=='
[75](01, 20)-(01, 23): STRING(STRING) '"o"'
[75](01, 23)-(01, 24): COLON(OP) ':'
[75](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[75](02, 00)-(02, 00): DEDENT(DEDENT)
[75](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[76](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[76](01, 00)-(01, 12): INDENT(INDENT) '            '
[76](01, 12)-(01, 17): NAME(NAME) 'total'
[76](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[76](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[76](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[76](02, 00)-(02, 00): DEDENT(DEDENT)
[76](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[77](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[77](01, 00)-(01, 05): NAME(NAME) 'print'
[77](01, 05)-(01, 06): LPAR(OP) '('
[77](01, 06)-(01, 11): STRING(STRING) '"o: "'
[77](01, 12)-(01, 13): PLUS(OP) '+'
[77](01, 14)-(01, 17): NAME(NAME) 'str'
[77](01, 17)-(01, 18): LPAR(OP) '('
[77](01, 18)-(01, 23): NAME(NAME) 'total'
[77](01, 23)-(01, 24): RPAR(OP) ')'
[77](01, 24)-(01, 25): RPAR(OP) ')'
[77](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[77](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[78](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[78](01, 00)-(01, 05): NAME(NAME) 'total'
[78](01, 05)-(01, 06): EQUAL(OP) '='
[78](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[78](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[78](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[79](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[79](01, 00)-(01, 03): NAME(NAME) 'for'
[79](01, 04)-(01, 05): NAME(NAME) 'i'
[79](01, 06)-(01, 08): NAME(NAME) 'in'
[79](01, 09)-(01, 14): NAME(NAME) 'range'
[79](01, 14)-(01, 15): LPAR(OP) '('
[79](01, 15)-(01, 18): NAME(NAME) 'len'
[79](01, 18)-(01, 19): LPAR(OP) '('
[79](01, 19)-(01, 27): NAME(NAME) 'sentence'
[79](01, 27)-(01, 28): RPAR(OP) ')'
[79](01, 28)-(01, 29): RPAR(OP) ')'
[79](01, 29)-(01, 30): COLON(OP) ':'
[79](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[79](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[80](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[80](01, 00)-(01, 04): INDENT(INDENT) '    '
[80](01, 04)-(01, 06): NAME(NAME) 'if'
[80](01, 07)-(01, 15): NAME(NAME) 'sentence'
[80](01, 15)-(01, 16): LSQB(OP) '['
[80](01, 16)-(01, 17): NAME(NAME) 'i'
[80](01, 17)-(01, 18): RSQB(OP) ']'
[80](01, 18)-(01, 20): EQEQUAL(OP) '=='
[80](01, 20)-(01, 23): STRING(STRING) '"p"'
[80](01, 23)-(01, 24): COLON(OP) ':'
[80](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[80](02, 00)-(02, 00): DEDENT(DEDENT)
[80](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[81](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[81](01, 00)-(01, 12): INDENT(INDENT) '            '
[81](01, 12)-(01, 17): NAME(NAME) 'total'
[81](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[81](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[81](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[81](02, 00)-(02, 00): DEDENT(DEDENT)
[81](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[82](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[82](01, 00)-(01, 05): NAME(NAME) 'print'
[82](01, 05)-(01, 06): LPAR(OP) '('
[82](01, 06)-(01, 11): STRING(STRING) '"p: "'
[82](01, 12)-(01, 13): PLUS(OP) '+'
[82](01, 14)-(01, 17): NAME(NAME) 'str'
[82](01, 17)-(01, 18): LPAR(OP) '('
[82](01, 18)-(01, 23): NAME(NAME) 'total'
[82](01, 23)-(01, 24): RPAR(OP) ')'
[82](01, 24)-(01, 25): RPAR(OP) ')'
[82](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[82](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[83](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[83](01, 00)-(01, 05): NAME(NAME) 'total'
[83](01, 05)-(01, 06): EQUAL(OP) '='
[83](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[83](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[83](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[84](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[84](01, 00)-(01, 03): NAME(NAME) 'for'
[84](01, 04)-(01, 05): NAME(NAME) 'i'
[84](01, 06)-(01, 08): NAME(NAME) 'in'
[84](01, 09)-(01, 14): NAME(NAME) 'range'
[84](01, 14)-(01, 15): LPAR(OP) '('
[84](01, 15)-(01, 18): NAME(NAME) 'len'
[84](01, 18)-(01, 19): LPAR(OP) '('
[84](01, 19)-(01, 27): NAME(NAME) 'sentence'
[84](01, 27)-(01, 28): RPAR(OP) ')'
[84](01, 28)-(01, 29): RPAR(OP) ')'
[84](01, 29)-(01, 30): COLON(OP) ':'
[84](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[84](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[85](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[85](01, 00)-(01, 04): INDENT(INDENT) '    '
[85](01, 04)-(01, 06): NAME(NAME) 'if'
[85](01, 07)-(01, 15): NAME(NAME) 'sentence'
[85](01, 15)-(01, 16): LSQB(OP) '['
[85](01, 16)-(01, 17): NAME(NAME) 'i'
[85](01, 17)-(01, 18): RSQB(OP) ']'
[85](01, 18)-(01, 20): EQEQUAL(OP) '=='
[85](01, 20)-(01, 23): STRING(STRING) '"q"'
[85](01, 23)-(01, 24): COLON(OP) ':'
[85](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[85](02, 00)-(02, 00): DEDENT(DEDENT)
[85](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[86](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[86](01, 00)-(01, 12): INDENT(INDENT) '            '
[86](01, 12)-(01, 17): NAME(NAME) 'total'
[86](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[86](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[86](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[86](02, 00)-(02, 00): DEDENT(DEDENT)
[86](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[87](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[87](01, 00)-(01, 05): NAME(NAME) 'print'
[87](01, 05)-(01, 06): LPAR(OP) '('
[87](01, 06)-(01, 11): STRING(STRING) '"q: "'
[87](01, 12)-(01, 13): PLUS(OP) '+'
[87](01, 14)-(01, 17): NAME(NAME) 'str'
[87](01, 17)-(01, 18): LPAR(OP) '('
[87](01, 18)-(01, 23): NAME(NAME) 'total'
[87](01, 23)-(01, 24): RPAR(OP) ')'
[87](01, 24)-(01, 25): RPAR(OP) ')'
[87](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[87](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[88](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[88](01, 00)-(01, 05): NAME(NAME) 'total'
[88](01, 05)-(01, 06): EQUAL(OP) '='
[88](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[88](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[88](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[89](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[89](01, 00)-(01, 03): NAME(NAME) 'for'
[89](01, 04)-(01, 05): NAME(NAME) 'i'
[89](01, 06)-(01, 08): NAME(NAME) 'in'
[89](01, 09)-(01, 14): NAME(NAME) 'range'
[89](01, 14)-(01, 15): LPAR(OP) '('
[89](01, 15)-(01, 18): NAME(NAME) 'len'
[89](01, 18)-(01, 19): LPAR(OP) '('
[89](01, 19)-(01, 27): NAME(NAME) 'sentence'
[89](01, 27)-(01, 28): RPAR(OP) ')'
[89](01, 28)-(01, 29): RPAR(OP) ')'
[89](01, 29)-(01, 30): COLON(OP) ':'
[89](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[89](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[90](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[90](01, 00)-(01, 04): INDENT(INDENT) '    '
[90](01, 04)-(01, 06): NAME(NAME) 'if'
[90](01, 07)-(01, 15): NAME(NAME) 'sentence'
[90](01, 15)-(01, 16): LSQB(OP) '['
[90](01, 16)-(01, 17): NAME(NAME) 'i'
[90](01, 17)-(01, 18): RSQB(OP) ']'
[90](01, 18)-(01, 20): EQEQUAL(OP) '=='
[90](01, 20)-(01, 23): STRING(STRING) '"r"'
[90](01, 23)-(01, 24): COLON(OP) ':'
[90](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[90](02, 00)-(02, 00): DEDENT(DEDENT)
[90](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[91](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[91](01, 00)-(01, 12): INDENT(INDENT) '            '
[91](01, 12)-(01, 17): NAME(NAME) 'total'
[91](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[91](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[91](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[91](02, 00)-(02, 00): DEDENT(DEDENT)
[91](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[92](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[92](01, 00)-(01, 05): NAME(NAME) 'print'
[92](01, 05)-(01, 06): LPAR(OP) '('
[92](01, 06)-(01, 11): STRING(STRING) '"r: "'
[92](01, 12)-(01, 13): PLUS(OP) '+'
[92](01, 14)-(01, 17): NAME(NAME) 'str'
[92](01, 17)-(01, 18): LPAR(OP) '('
[92](01, 18)-(01, 23): NAME(NAME) 'total'
[92](01, 23)-(01, 24): RPAR(OP) ')'
[92](01, 24)-(01, 25): RPAR(OP) ')'
[92](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[92](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[93](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[93](01, 00)-(01, 05): NAME(NAME) 'total'
[93](01, 05)-(01, 06): EQUAL(OP) '='
[93](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[93](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[93](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[94](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[94](01, 00)-(01, 03): NAME(NAME) 'for'
[94](01, 04)-(01, 05): NAME(NAME) 'i'
[94](01, 06)-(01, 08): NAME(NAME) 'in'
[94](01, 09)-(01, 14): NAME(NAME) 'range'
[94](01, 14)-(01, 15): LPAR(OP) '('
[94](01, 15)-(01, 18): NAME(NAME) 'len'
[94](01, 18)-(01, 19): LPAR(OP) '('
[94](01, 19)-(01, 27): NAME(NAME) 'sentence'
[94](01, 27)-(01, 28): RPAR(OP) ')'
[94](01, 28)-(01, 29): RPAR(OP) ')'
[94](01, 29)-(01, 30): COLON(OP) ':'
[94](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[94](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[95](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[95](01, 00)-(01, 04): INDENT(INDENT) '    '
[95](01, 04)-(01, 06): NAME(NAME) 'if'
[95](01, 07)-(01, 15): NAME(NAME) 'sentence'
[95](01, 15)-(01, 16): LSQB(OP) '['
[95](01, 16)-(01, 17): NAME(NAME) 'i'
[95](01, 17)-(01, 18): RSQB(OP) ']'
[95](01, 18)-(01, 20): EQEQUAL(OP) '=='
[95](01, 20)-(01, 23): STRING(STRING) '"s"'
[95](01, 23)-(01, 24): COLON(OP) ':'
[95](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[95](02, 00)-(02, 00): DEDENT(DEDENT)
[95](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[96](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[96](01, 00)-(01, 12): INDENT(INDENT) '            '
[96](01, 12)-(01, 17): NAME(NAME) 'total'
[96](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[96](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[96](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[96](02, 00)-(02, 00): DEDENT(DEDENT)
[96](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[97](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[97](01, 00)-(01, 05): NAME(NAME) 'print'
[97](01, 05)-(01, 06): LPAR(OP) '('
[97](01, 06)-(01, 11): STRING(STRING) '"s: "'
[97](01, 12)-(01, 13): PLUS(OP) '+'
[97](01, 14)-(01, 17): NAME(NAME) 'str'
[97](01, 17)-(01, 18): LPAR(OP) '('
[97](01, 18)-(01, 23): NAME(NAME) 'total'
[97](01, 23)-(01, 24): RPAR(OP) ')'
[97](01, 24)-(01, 25): RPAR(OP) ')'
[97](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[97](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[98](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[98](01, 00)-(01, 05): NAME(NAME) 'total'
[98](01, 05)-(01, 06): EQUAL(OP) '='
[98](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[98](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[98](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[99](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[99](01, 00)-(01, 03): NAME(NAME) 'for'
[99](01, 04)-(01, 05): NAME(NAME) 'i'
[99](01, 06)-(01, 08): NAME(NAME) 'in'
[99](01, 09)-(01, 14): NAME(NAME) 'range'
[99](01, 14)-(01, 15): LPAR(OP) '('
[99](01, 15)-(01, 18): NAME(NAME) 'len'
[99](01, 18)-(01, 19): LPAR(OP) '('
[99](01, 19)-(01, 27): NAME(NAME) 'sentence'
[99](01, 27)-(01, 28): RPAR(OP) ')'
[99](01, 28)-(01, 29): RPAR(OP) ')'
[99](01, 29)-(01, 30): COLON(OP) ':'
[99](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[99](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[100](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[100](01, 00)-(01, 04): INDENT(INDENT) '    '
[100](01, 04)-(01, 06): NAME(NAME) 'if'
[100](01, 07)-(01, 15): NAME(NAME) 'sentence'
[100](01, 15)-(01, 16): LSQB(OP) '['
[100](01, 16)-(01, 17): NAME(NAME) 'i'
[100](01, 17)-(01, 18): RSQB(OP) ']'
[100](01, 18)-(01, 20): EQEQUAL(OP) '=='
[100](01, 20)-(01, 23): STRING(STRING) '"t"'
[100](01, 23)-(01, 24): COLON(OP) ':'
[100](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[100](02, 00)-(02, 00): DEDENT(DEDENT)
[100](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[101](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[101](01, 00)-(01, 12): INDENT(INDENT) '            '
[101](01, 12)-(01, 17): NAME(NAME) 'total'
[101](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[101](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[101](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[101](02, 00)-(02, 00): DEDENT(DEDENT)
[101](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[102](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[102](01, 00)-(01, 05): NAME(NAME) 'print'
[102](01, 05)-(01, 06): LPAR(OP) '('
[102](01, 06)-(01, 11): STRING(STRING) '"t: "'
[102](01, 12)-(01, 13): PLUS(OP) '+'
[102](01, 14)-(01, 17): NAME(NAME) 'str'
[102](01, 17)-(01, 18): LPAR(OP) '('
[102](01, 18)-(01, 23): NAME(NAME) 'total'
[102](01, 23)-(01, 24): RPAR(OP) ')'
[102](01, 24)-(01, 25): RPAR(OP) ')'
[102](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[102](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[103](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[103](01, 00)-(01, 05): NAME(NAME) 'total'
[103](01, 05)-(01, 06): EQUAL(OP) '='
[103](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[103](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[103](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[104](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[104](01, 00)-(01, 03): NAME(NAME) 'for'
[104](01, 04)-(01, 05): NAME(NAME) 'i'
[104](01, 06)-(01, 08): NAME(NAME) 'in'
[104](01, 09)-(01, 14): NAME(NAME) 'range'
[104](01, 14)-(01, 15): LPAR(OP) '('
[104](01, 15)-(01, 18): NAME(NAME) 'len'
[104](01, 18)-(01, 19): LPAR(OP) '('
[104](01, 19)-(01, 27): NAME(NAME) 'sentence'
[104](01, 27)-(01, 28): RPAR(OP) ')'
[104](01, 28)-(01, 29): RPAR(OP) ')'
[104](01, 29)-(01, 30): COLON(OP) ':'
[104](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[104](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[105](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[105](01, 00)-(01, 04): INDENT(INDENT) '    '
[105](01, 04)-(01, 06): NAME(NAME) 'if'
[105](01, 07)-(01, 15): NAME(NAME) 'sentence'
[105](01, 15)-(01, 16): LSQB(OP) '['
[105](01, 16)-(01, 17): NAME(NAME) 'i'
[105](01, 17)-(01, 18): RSQB(OP) ']'
[105](01, 18)-(01, 20): EQEQUAL(OP) '=='
[105](01, 20)-(01, 23): STRING(STRING) '"u"'
[105](01, 23)-(01, 24): COLON(OP) ':'
[105](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[105](02, 00)-(02, 00): DEDENT(DEDENT)
[105](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[106](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[106](01, 00)-(01, 12): INDENT(INDENT) '            '
[106](01, 12)-(01, 17): NAME(NAME) 'total'
[106](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[106](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[106](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[106](02, 00)-(02, 00): DEDENT(DEDENT)
[106](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[107](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[107](01, 00)-(01, 05): NAME(NAME) 'print'
[107](01, 05)-(01, 06): LPAR(OP) '('
[107](01, 06)-(01, 11): STRING(STRING) '"u: "'
[107](01, 12)-(01, 13): PLUS(OP) '+'
[107](01, 14)-(01, 17): NAME(NAME) 'str'
[107](01, 17)-(01, 18): LPAR(OP) '('
[107](01, 18)-(01, 23): NAME(NAME) 'total'
[107](01, 23)-(01, 24): RPAR(OP) ')'
[107](01, 24)-(01, 25): RPAR(OP) ')'
[107](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[107](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[108](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[108](01, 00)-(01, 05): NAME(NAME) 'total'
[108](01, 05)-(01, 06): EQUAL(OP) '='
[108](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[108](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[108](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[109](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[109](01, 00)-(01, 03): NAME(NAME) 'for'
[109](01, 04)-(01, 05): NAME(NAME) 'i'
[109](01, 06)-(01, 08): NAME(NAME) 'in'
[109](01, 09)-(01, 14): NAME(NAME) 'range'
[109](01, 14)-(01, 15): LPAR(OP) '('
[109](01, 15)-(01, 18): NAME(NAME) 'len'
[109](01, 18)-(01, 19): LPAR(OP) '('
[109](01, 19)-(01, 27): NAME(NAME) 'sentence'
[109](01, 27)-(01, 28): RPAR(OP) ')'
[109](01, 28)-(01, 29): RPAR(OP) ')'
[109](01, 29)-(01, 30): COLON(OP) ':'
[109](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[109](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[110](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[110](01, 00)-(01, 04): INDENT(INDENT) '    '
[110](01, 04)-(01, 06): NAME(NAME) 'if'
[110](01, 07)-(01, 15): NAME(NAME) 'sentence'
[110](01, 15)-(01, 16): LSQB(OP) '['
[110](01, 16)-(01, 17): NAME(NAME) 'i'
[110](01, 17)-(01, 18): RSQB(OP) ']'
[110](01, 18)-(01, 20): EQEQUAL(OP) '=='
[110](01, 20)-(01, 23): STRING(STRING) '"v"'
[110](01, 23)-(01, 24): COLON(OP) ':'
[110](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[110](02, 00)-(02, 00): DEDENT(DEDENT)
[110](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[111](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[111](01, 00)-(01, 12): INDENT(INDENT) '            '
[111](01, 12)-(01, 17): NAME(NAME) 'total'
[111](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[111](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[111](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[111](02, 00)-(02, 00): DEDENT(DEDENT)
[111](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[112](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[112](01, 00)-(01, 05): NAME(NAME) 'print'
[112](01, 05)-(01, 06): LPAR(OP) '('
[112](01, 06)-(01, 11): STRING(STRING) '"v: "'
[112](01, 12)-(01, 13): PLUS(OP) '+'
[112](01, 14)-(01, 17): NAME(NAME) 'str'
[112](01, 17)-(01, 18): LPAR(OP) '('
[112](01, 18)-(01, 23): NAME(NAME) 'total'
[112](01, 23)-(01, 24): RPAR(OP) ')'
[112](01, 24)-(01, 25): RPAR(OP) ')'
[112](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[112](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[113](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[113](01, 00)-(01, 05): NAME(NAME) 'total'
[113](01, 05)-(01, 06): EQUAL(OP) '='
[113](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[113](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[113](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[114](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[114](01, 00)-(01, 03): NAME(NAME) 'for'
[114](01, 04)-(01, 05): NAME(NAME) 'i'
[114](01, 06)-(01, 08): NAME(NAME) 'in'
[114](01, 09)-(01, 14): NAME(NAME) 'range'
[114](01, 14)-(01, 15): LPAR(OP) '('
[114](01, 15)-(01, 18): NAME(NAME) 'len'
[114](01, 18)-(01, 19): LPAR(OP) '('
[114](01, 19)-(01, 27): NAME(NAME) 'sentence'
[114](01, 27)-(01, 28): RPAR(OP) ')'
[114](01, 28)-(01, 29): RPAR(OP) ')'
[114](01, 29)-(01, 30): COLON(OP) ':'
[114](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[114](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[115](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[115](01, 00)-(01, 04): INDENT(INDENT) '    '
[115](01, 04)-(01, 06): NAME(NAME) 'if'
[115](01, 07)-(01, 15): NAME(NAME) 'sentence'
[115](01, 15)-(01, 16): LSQB(OP) '['
[115](01, 16)-(01, 17): NAME(NAME) 'i'
[115](01, 17)-(01, 18): RSQB(OP) ']'
[115](01, 18)-(01, 20): EQEQUAL(OP) '=='
[115](01, 20)-(01, 23): STRING(STRING) '"w"'
[115](01, 23)-(01, 24): COLON(OP) ':'
[115](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[115](02, 00)-(02, 00): DEDENT(DEDENT)
[115](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[116](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[116](01, 00)-(01, 12): INDENT(INDENT) '            '
[116](01, 12)-(01, 17): NAME(NAME) 'total'
[116](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[116](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[116](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[116](02, 00)-(02, 00): DEDENT(DEDENT)
[116](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[117](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[117](01, 00)-(01, 05): NAME(NAME) 'print'
[117](01, 05)-(01, 06): LPAR(OP) '('
[117](01, 06)-(01, 11): STRING(STRING) '"w: "'
[117](01, 12)-(01, 13): PLUS(OP) '+'
[117](01, 14)-(01, 17): NAME(NAME) 'str'
[117](01, 17)-(01, 18): LPAR(OP) '('
[117](01, 18)-(01, 23): NAME(NAME) 'total'
[117](01, 23)-(01, 24): RPAR(OP) ')'
[117](01, 24)-(01, 25): RPAR(OP) ')'
[117](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[117](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[118](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[118](01, 00)-(01, 05): NAME(NAME) 'total'
[118](01, 05)-(01, 06): EQUAL(OP) '='
[118](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[118](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[118](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[119](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[119](01, 00)-(01, 03): NAME(NAME) 'for'
[119](01, 04)-(01, 05): NAME(NAME) 'i'
[119](01, 06)-(01, 08): NAME(NAME) 'in'
[119](01, 09)-(01, 14): NAME(NAME) 'range'
[119](01, 14)-(01, 15): LPAR(OP) '('
[119](01, 15)-(01, 18): NAME(NAME) 'len'
[119](01, 18)-(01, 19): LPAR(OP) '('
[119](01, 19)-(01, 27): NAME(NAME) 'sentence'
[119](01, 27)-(01, 28): RPAR(OP) ')'
[119](01, 28)-(01, 29): RPAR(OP) ')'
[119](01, 29)-(01, 30): COLON(OP) ':'
[119](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[119](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[120](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[120](01, 00)-(01, 04): INDENT(INDENT) '    '
[120](01, 04)-(01, 06): NAME(NAME) 'if'
[120](01, 07)-(01, 15): NAME(NAME) 'sentence'
[120](01, 15)-(01, 16): LSQB(OP) '['
[120](01, 16)-(01, 17): NAME(NAME) 'i'
[120](01, 17)-(01, 18): RSQB(OP) ']'
[120](01, 18)-(01, 20): EQEQUAL(OP) '=='
[120](01, 20)-(01, 23): STRING(STRING) '"x"'
[120](01, 23)-(01, 24): COLON(OP) ':'
[120](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[120](02, 00)-(02, 00): DEDENT(DEDENT)
[120](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[121](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[121](01, 00)-(01, 12): INDENT(INDENT) '            '
[121](01, 12)-(01, 17): NAME(NAME) 'total'
[121](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[121](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[121](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[121](02, 00)-(02, 00): DEDENT(DEDENT)
[121](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[122](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[122](01, 00)-(01, 05): NAME(NAME) 'print'
[122](01, 05)-(01, 06): LPAR(OP) '('
[122](01, 06)-(01, 11): STRING(STRING) '"x: "'
[122](01, 12)-(01, 13): PLUS(OP) '+'
[122](01, 14)-(01, 17): NAME(NAME) 'str'
[122](01, 17)-(01, 18): LPAR(OP) '('
[122](01, 18)-(01, 23): NAME(NAME) 'total'
[122](01, 23)-(01, 24): RPAR(OP) ')'
[122](01, 24)-(01, 25): RPAR(OP) ')'
[122](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[122](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[123](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[123](01, 00)-(01, 05): NAME(NAME) 'total'
[123](01, 05)-(01, 06): EQUAL(OP) '='
[123](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[123](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[123](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[124](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[124](01, 00)-(01, 03): NAME(NAME) 'for'
[124](01, 04)-(01, 05): NAME(NAME) 'i'
[124](01, 06)-(01, 08): NAME(NAME) 'in'
[124](01, 09)-(01, 14): NAME(NAME) 'range'
[124](01, 14)-(01, 15): LPAR(OP) '('
[124](01, 15)-(01, 18): NAME(NAME) 'len'
[124](01, 18)-(01, 19): LPAR(OP) '('
[124](01, 19)-(01, 27): NAME(NAME) 'sentence'
[124](01, 27)-(01, 28): RPAR(OP) ')'
[124](01, 28)-(01, 29): RPAR(OP) ')'
[124](01, 29)-(01, 30): COLON(OP) ':'
[124](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[124](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[125](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[125](01, 00)-(01, 04): INDENT(INDENT) '    '
[125](01, 04)-(01, 06): NAME(NAME) 'if'
[125](01, 07)-(01, 15): NAME(NAME) 'sentence'
[125](01, 15)-(01, 16): LSQB(OP) '['
[125](01, 16)-(01, 17): NAME(NAME) 'i'
[125](01, 17)-(01, 18): RSQB(OP) ']'
[125](01, 18)-(01, 20): EQEQUAL(OP) '=='
[125](01, 20)-(01, 23): STRING(STRING) '"y"'
[125](01, 23)-(01, 24): COLON(OP) ':'
[125](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[125](02, 00)-(02, 00): DEDENT(DEDENT)
[125](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[126](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[126](01, 00)-(01, 12): INDENT(INDENT) '            '
[126](01, 12)-(01, 17): NAME(NAME) 'total'
[126](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[126](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[126](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[126](02, 00)-(02, 00): DEDENT(DEDENT)
[126](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[127](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[127](01, 00)-(01, 05): NAME(NAME) 'print'
[127](01, 05)-(01, 06): LPAR(OP) '('
[127](01, 06)-(01, 11): STRING(STRING) '"y: "'
[127](01, 12)-(01, 13): PLUS(OP) '+'
[127](01, 14)-(01, 17): NAME(NAME) 'str'
[127](01, 17)-(01, 18): LPAR(OP) '('
[127](01, 18)-(01, 23): NAME(NAME) 'total'
[127](01, 23)-(01, 24): RPAR(OP) ')'
[127](01, 24)-(01, 25): RPAR(OP) ')'
[127](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[127](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[128](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[128](01, 00)-(01, 05): NAME(NAME) 'total'
[128](01, 05)-(01, 06): EQUAL(OP) '='
[128](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[128](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[128](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[129](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[129](01, 00)-(01, 03): NAME(NAME) 'for'
[129](01, 04)-(01, 05): NAME(NAME) 'i'
[129](01, 06)-(01, 08): NAME(NAME) 'in'
[129](01, 09)-(01, 14): NAME(NAME) 'range'
[129](01, 14)-(01, 15): LPAR(OP) '('
[129](01, 15)-(01, 18): NAME(NAME) 'len'
[129](01, 18)-(01, 19): LPAR(OP) '('
[129](01, 19)-(01, 27): NAME(NAME) 'sentence'
[129](01, 27)-(01, 28): RPAR(OP) ')'
[129](01, 28)-(01, 29): RPAR(OP) ')'
[129](01, 29)-(01, 30): COLON(OP) ':'
[129](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[129](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[130](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[130](01, 00)-(01, 04): INDENT(INDENT) '    '
[130](01, 04)-(01, 06): NAME(NAME) 'if'
[130](01, 07)-(01, 15): NAME(NAME) 'sentence'
[130](01, 15)-(01, 16): LSQB(OP) '['
[130](01, 16)-(01, 17): NAME(NAME) 'i'
[130](01, 17)-(01, 18): RSQB(OP) ']'
[130](01, 18)-(01, 20): EQEQUAL(OP) '=='
[130](01, 20)-(01, 23): STRING(STRING) '"z"'
[130](01, 23)-(01, 24): COLON(OP) ':'
[130](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[130](02, 00)-(02, 00): DEDENT(DEDENT)
[130](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[131](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[131](01, 00)-(01, 12): INDENT(INDENT) '            '
[131](01, 12)-(01, 17): NAME(NAME) 'total'
[131](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[131](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[131](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[131](02, 00)-(02, 00): DEDENT(DEDENT)
[131](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[132](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[132](01, 00)-(01, 05): NAME(NAME) 'print'
[132](01, 05)-(01, 06): LPAR(OP) '('
[132](01, 06)-(01, 11): STRING(STRING) '"z: "'
[132](01, 12)-(01, 13): PLUS(OP) '+'
[132](01, 14)-(01, 17): NAME(NAME) 'str'
[132](01, 17)-(01, 18): LPAR(OP) '('
[132](01, 18)-(01, 23): NAME(NAME) 'total'
[132](01, 23)-(01, 24): RPAR(OP) ')'
[132](01, 24)-(01, 25): RPAR(OP) ')'
[132](01, 25)-(01, 26): NEWLINE(NEWLINE)
[132](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

