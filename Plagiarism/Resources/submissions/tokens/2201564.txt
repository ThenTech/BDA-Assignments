[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'lengtec'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 17): NAME(NAME) 'len'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 24): NAME(NAME) 'corpus'
[01](01, 24)-(01, 25): RPAR(OP) ')'
[01](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 11): NAME(NAME) 'lengtep'
[02](01, 12)-(01, 13): EQUAL(OP) '='
[02](01, 14)-(01, 17): NAME(NAME) 'len'
[02](01, 17)-(01, 18): LPAR(OP) '('
[02](01, 18)-(01, 25): NAME(NAME) 'pattern'
[02](01, 25)-(01, 26): RPAR(OP) ')'
[02](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 04)-(01, 05): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 18): NAME(NAME) 'range'
[04](01, 19)-(01, 20): LPAR(OP) '('
[04](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[04](01, 21)-(01, 22): COMMA(OP) ','
[04](01, 23)-(01, 30): NAME(NAME) 'lengtec'
[04](01, 30)-(01, 31): MINUS(OP) '-'
[04](01, 31)-(01, 38): NAME(NAME) 'lengtep'
[04](01, 38)-(01, 39): RPAR(OP) ')'
[04](01, 39)-(01, 40): COLON(OP) ':'
[04](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 11): NAME(NAME) 'for'
[05](01, 12)-(01, 13): NAME(NAME) 'j'
[05](01, 14)-(01, 16): NAME(NAME) 'in'
[05](01, 17)-(01, 22): NAME(NAME) 'range'
[05](01, 23)-(01, 24): LPAR(OP) '('
[05](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[05](01, 25)-(01, 26): COMMA(OP) ','
[05](01, 27)-(01, 34): NAME(NAME) 'lengtep'
[05](01, 34)-(01, 35): RPAR(OP) ')'
[05](01, 35)-(01, 36): COLON(OP) ':'
[05](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 14): NAME(NAME) 'if'
[06](01, 15)-(01, 21): NAME(NAME) 'corpus'
[06](01, 21)-(01, 22): LSQB(OP) '['
[06](01, 22)-(01, 23): NAME(NAME) 'i'
[06](01, 23)-(01, 24): PLUS(OP) '+'
[06](01, 24)-(01, 25): NAME(NAME) 'j'
[06](01, 25)-(01, 26): MINUS(OP) '-'
[06](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[06](01, 27)-(01, 28): RSQB(OP) ']'
[06](01, 29)-(01, 31): NOTEQUAL(OP) '!='
[06](01, 32)-(01, 39): NAME(NAME) 'pattern'
[06](01, 39)-(01, 40): LSQB(OP) '['
[06](01, 40)-(01, 41): NAME(NAME) 'j'
[06](01, 41)-(01, 42): RSQB(OP) ']'
[06](01, 42)-(01, 43): COLON(OP) ':'
[06](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 16): INDENT(INDENT) '                '
[07](01, 16)-(01, 21): NAME(NAME) 'break'
[07](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 14): NAME(NAME) 'if'
[08](01, 15)-(01, 16): NAME(NAME) 'j'
[08](01, 17)-(01, 19): EQEQUAL(OP) '=='
[08](01, 20)-(01, 27): NAME(NAME) 'lengtep'
[08](01, 27)-(01, 28): MINUS(OP) '-'
[08](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[08](01, 29)-(01, 30): COLON(OP) ':'
[08](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 22): NAME(NAME) 'corpus'
[09](01, 23)-(01, 24): EQUAL(OP) '='
[09](01, 25)-(01, 31): NAME(NAME) 'corpus'
[09](01, 31)-(01, 32): LSQB(OP) '['
[09](01, 32)-(01, 33): NUMBER(NUMBER) '0'
[09](01, 33)-(01, 34): COLON(OP) ':'
[09](01, 34)-(01, 35): NAME(NAME) 'i'
[09](01, 35)-(01, 36): MINUS(OP) '-'
[09](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[09](01, 37)-(01, 38): RSQB(OP) ']'
[09](01, 39)-(01, 40): PLUS(OP) '+'
[09](01, 41)-(01, 52): NAME(NAME) 'replacement'
[09](01, 53)-(01, 54): PLUS(OP) '+'
[09](01, 55)-(01, 61): NAME(NAME) 'corpus'
[09](01, 61)-(01, 62): LSQB(OP) '['
[09](01, 62)-(01, 63): NAME(NAME) 'i'
[09](01, 63)-(01, 64): PLUS(OP) '+'
[09](01, 64)-(01, 65): NAME(NAME) 'j'
[09](01, 65)-(01, 66): COLON(OP) ':'
[09](01, 66)-(01, 73): NAME(NAME) 'lengtec'
[09](01, 73)-(01, 74): PLUS(OP) '+'
[09](01, 74)-(01, 75): NUMBER(NUMBER) '1'
[09](01, 75)-(01, 76): RSQB(OP) ']'
[09](01, 76)-(01, 77): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'return'
[10](01, 11)-(01, 17): NAME(NAME) 'corpus'
[10](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

