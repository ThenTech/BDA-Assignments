[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): COMMA(OP) ','
[00](01, 14)-(01, 15): NAME(NAME) 'n'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'encoded'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 12)-(01, 14): STRING(STRING) '""'
[01](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 12): NAME(NAME) 'alphabet'
[02](01, 12)-(01, 13): EQUAL(OP) '='
[02](01, 13)-(01, 41): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[02](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'i'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 18): NAME(NAME) 'range'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 22): NAME(NAME) 'len'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 24): NAME(NAME) 's'
[03](01, 24)-(01, 25): RPAR(OP) ')'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 26)-(01, 27): COLON(OP) ':'
[03](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): NAME(NAME) 's'
[04](01, 12)-(01, 13): LSQB(OP) '['
[04](01, 13)-(01, 14): NAME(NAME) 'i'
[04](01, 14)-(01, 15): RSQB(OP) ']'
[04](01, 16)-(01, 18): NAME(NAME) 'in'
[04](01, 19)-(01, 27): NAME(NAME) 'alphabet'
[04](01, 27)-(01, 28): COLON(OP) ':'
[04](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 15): NAME(NAME) 'for'
[05](01, 16)-(01, 17): NAME(NAME) 'j'
[05](01, 18)-(01, 20): NAME(NAME) 'in'
[05](01, 21)-(01, 26): NAME(NAME) 'range'
[05](01, 26)-(01, 27): LPAR(OP) '('
[05](01, 27)-(01, 30): NAME(NAME) 'len'
[05](01, 30)-(01, 31): LPAR(OP) '('
[05](01, 31)-(01, 39): NAME(NAME) 'alphabet'
[05](01, 39)-(01, 40): RPAR(OP) ')'
[05](01, 40)-(01, 41): RPAR(OP) ')'
[05](01, 41)-(01, 42): COLON(OP) ':'
[05](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 18): NAME(NAME) 'if'
[06](01, 19)-(01, 20): NAME(NAME) 's'
[06](01, 20)-(01, 21): LSQB(OP) '['
[06](01, 21)-(01, 22): NAME(NAME) 'i'
[06](01, 22)-(01, 23): RSQB(OP) ']'
[06](01, 23)-(01, 25): EQEQUAL(OP) '=='
[06](01, 25)-(01, 33): NAME(NAME) 'alphabet'
[06](01, 33)-(01, 34): LSQB(OP) '['
[06](01, 34)-(01, 35): NAME(NAME) 'j'
[06](01, 35)-(01, 36): RSQB(OP) ']'
[06](01, 36)-(01, 37): COLON(OP) ':'
[06](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 20): INDENT(INDENT) '                    '
[07](01, 20)-(01, 22): NAME(NAME) 'if'
[07](01, 23)-(01, 24): NAME(NAME) 'j'
[07](01, 24)-(01, 25): PLUS(OP) '+'
[07](01, 25)-(01, 26): NAME(NAME) 'n'
[07](01, 26)-(01, 27): LESS(OP) '<'
[07](01, 27)-(01, 29): NUMBER(NUMBER) '26'
[07](01, 29)-(01, 30): COLON(OP) ':'
[07](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 24): INDENT(INDENT) '                        '
[08](01, 24)-(01, 31): NAME(NAME) 'encoded'
[08](01, 31)-(01, 33): PLUSEQUAL(OP) '+='
[08](01, 33)-(01, 41): NAME(NAME) 'alphabet'
[08](01, 41)-(01, 42): LSQB(OP) '['
[08](01, 42)-(01, 43): NAME(NAME) 'j'
[08](01, 43)-(01, 44): PLUS(OP) '+'
[08](01, 44)-(01, 45): NAME(NAME) 'n'
[08](01, 45)-(01, 46): RSQB(OP) ']'
[08](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 20): INDENT(INDENT) '                    '
[09](01, 20)-(01, 24): NAME(NAME) 'elif'
[09](01, 25)-(01, 26): NAME(NAME) 'n'
[09](01, 26)-(01, 28): EQEQUAL(OP) '=='
[09](01, 28)-(01, 30): NUMBER(NUMBER) '26'
[09](01, 30)-(01, 31): COLON(OP) ':'
[09](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 28): INDENT(INDENT) '                            '
[10](01, 28)-(01, 35): NAME(NAME) 'encoded'
[10](01, 36)-(01, 38): PLUSEQUAL(OP) '+='
[10](01, 39)-(01, 47): NAME(NAME) 'alphabet'
[10](01, 47)-(01, 48): LSQB(OP) '['
[10](01, 48)-(01, 49): NAME(NAME) 'j'
[10](01, 50)-(01, 51): PLUS(OP) '+'
[10](01, 52)-(01, 53): LPAR(OP) '('
[10](01, 53)-(01, 54): NAME(NAME) 'n'
[10](01, 54)-(01, 55): MINUS(OP) '-'
[10](01, 55)-(01, 57): NUMBER(NUMBER) '26'
[10](01, 57)-(01, 58): RPAR(OP) ')'
[10](01, 58)-(01, 59): RSQB(OP) ']'
[10](01, 59)-(01, 60): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 20): INDENT(INDENT) '                    '
[11](01, 20)-(01, 24): NAME(NAME) 'elif'
[11](01, 25)-(01, 26): NAME(NAME) 'n'
[11](01, 26)-(01, 27): GREATER(OP) '>'
[11](01, 27)-(01, 29): NUMBER(NUMBER) '26'
[11](01, 29)-(01, 30): COLON(OP) ':'
[11](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 24): INDENT(INDENT) '                        '
[12](01, 24)-(01, 26): NAME(NAME) 'if'
[12](01, 27)-(01, 28): NAME(NAME) 'j'
[12](01, 28)-(01, 29): PLUS(OP) '+'
[12](01, 29)-(01, 30): LPAR(OP) '('
[12](01, 30)-(01, 31): NAME(NAME) 'n'
[12](01, 31)-(01, 32): MINUS(OP) '-'
[12](01, 32)-(01, 34): NUMBER(NUMBER) '26'
[12](01, 34)-(01, 35): RPAR(OP) ')'
[12](01, 35)-(01, 36): LESS(OP) '<'
[12](01, 36)-(01, 38): NUMBER(NUMBER) '26'
[12](01, 38)-(01, 39): COLON(OP) ':'
[12](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 28): INDENT(INDENT) '                            '
[13](01, 28)-(01, 35): NAME(NAME) 'encoded'
[13](01, 35)-(01, 37): PLUSEQUAL(OP) '+='
[13](01, 38)-(01, 46): NAME(NAME) 'alphabet'
[13](01, 46)-(01, 47): LSQB(OP) '['
[13](01, 47)-(01, 48): NAME(NAME) 'j'
[13](01, 49)-(01, 50): PLUS(OP) '+'
[13](01, 51)-(01, 52): LPAR(OP) '('
[13](01, 52)-(01, 53): NAME(NAME) 'n'
[13](01, 53)-(01, 54): MINUS(OP) '-'
[13](01, 54)-(01, 56): NUMBER(NUMBER) '26'
[13](01, 56)-(01, 57): RPAR(OP) ')'
[13](01, 57)-(01, 58): RSQB(OP) ']'
[13](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 24): INDENT(INDENT) '                        '
[14](01, 24)-(01, 28): NAME(NAME) 'elif'
[14](01, 29)-(01, 30): NAME(NAME) 'j'
[14](01, 30)-(01, 31): PLUS(OP) '+'
[14](01, 31)-(01, 32): LPAR(OP) '('
[14](01, 32)-(01, 33): NAME(NAME) 'n'
[14](01, 33)-(01, 34): MINUS(OP) '-'
[14](01, 34)-(01, 36): NUMBER(NUMBER) '26'
[14](01, 36)-(01, 37): RPAR(OP) ')'
[14](01, 37)-(01, 39): EQEQUAL(OP) '=='
[14](01, 39)-(01, 41): NUMBER(NUMBER) '26'
[14](01, 41)-(01, 42): COLON(OP) ':'
[14](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 28): INDENT(INDENT) '                            '
[15](01, 28)-(01, 35): NAME(NAME) 'encoded'
[15](01, 35)-(01, 37): PLUSEQUAL(OP) '+='
[15](01, 37)-(01, 45): NAME(NAME) 'alphabet'
[15](01, 45)-(01, 46): LSQB(OP) '['
[15](01, 46)-(01, 47): NUMBER(NUMBER) '0'
[15](01, 47)-(01, 48): RSQB(OP) ']'
[15](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 24): INDENT(INDENT) '                        '
[16](01, 24)-(01, 28): NAME(NAME) 'elif'
[16](01, 29)-(01, 30): NAME(NAME) 'j'
[16](01, 30)-(01, 31): PLUS(OP) '+'
[16](01, 31)-(01, 32): LPAR(OP) '('
[16](01, 32)-(01, 33): NAME(NAME) 'n'
[16](01, 33)-(01, 34): MINUS(OP) '-'
[16](01, 34)-(01, 36): NUMBER(NUMBER) '26'
[16](01, 36)-(01, 37): RPAR(OP) ')'
[16](01, 37)-(01, 39): GREATEREQUAL(OP) '>='
[16](01, 39)-(01, 41): NUMBER(NUMBER) '26'
[16](01, 41)-(01, 42): COLON(OP) ':'
[16](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 28): INDENT(INDENT) '                            '
[17](01, 28)-(01, 35): NAME(NAME) 'encoded'
[17](01, 35)-(01, 37): PLUSEQUAL(OP) '+='
[17](01, 38)-(01, 46): NAME(NAME) 'alphabet'
[17](01, 46)-(01, 47): LSQB(OP) '['
[17](01, 47)-(01, 48): NAME(NAME) 'j'
[17](01, 48)-(01, 49): PLUS(OP) '+'
[17](01, 49)-(01, 50): LPAR(OP) '('
[17](01, 50)-(01, 52): NUMBER(NUMBER) '26'
[17](01, 52)-(01, 53): MINUS(OP) '-'
[17](01, 53)-(01, 54): NAME(NAME) 'n'
[17](01, 54)-(01, 55): RPAR(OP) ')'
[17](01, 55)-(01, 56): RSQB(OP) ']'
[17](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 01): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 12): NAME(NAME) 'else'
[22](01, 12)-(01, 13): COLON(OP) ':'
[22](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 19): NAME(NAME) 'encoded'
[23](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[23](01, 21)-(01, 22): NAME(NAME) 's'
[23](01, 22)-(01, 23): LSQB(OP) '['
[23](01, 23)-(01, 24): NAME(NAME) 'i'
[23](01, 24)-(01, 25): RSQB(OP) ']'
[23](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 01): NL(NL) '\n'
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 10): NAME(NAME) 'return'
[25](01, 11)-(01, 18): NAME(NAME) 'encoded'
[25](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 03): NAME(NAME) 'def'
[27](01, 04)-(01, 10): NAME(NAME) 'decode'
[27](01, 10)-(01, 11): LPAR(OP) '('
[27](01, 11)-(01, 12): NAME(NAME) 's'
[27](01, 12)-(01, 13): COMMA(OP) ','
[27](01, 14)-(01, 15): NAME(NAME) 'n'
[27](01, 15)-(01, 16): RPAR(OP) ')'
[27](01, 16)-(01, 17): COLON(OP) ':'
[27](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 11): NAME(NAME) 'decoded'
[28](01, 11)-(01, 12): EQUAL(OP) '='
[28](01, 12)-(01, 14): STRING(STRING) '""'
[28](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 12): NAME(NAME) 'alphabet'
[29](01, 12)-(01, 13): EQUAL(OP) '='
[29](01, 13)-(01, 41): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[29](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 07): NAME(NAME) 'for'
[30](01, 08)-(01, 09): NAME(NAME) 'i'
[30](01, 10)-(01, 12): NAME(NAME) 'in'
[30](01, 13)-(01, 18): NAME(NAME) 'range'
[30](01, 18)-(01, 19): LPAR(OP) '('
[30](01, 19)-(01, 22): NAME(NAME) 'len'
[30](01, 22)-(01, 23): LPAR(OP) '('
[30](01, 23)-(01, 24): NAME(NAME) 's'
[30](01, 24)-(01, 25): RPAR(OP) ')'
[30](01, 25)-(01, 26): RPAR(OP) ')'
[30](01, 26)-(01, 27): COLON(OP) ':'
[30](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 10): NAME(NAME) 'if'
[31](01, 11)-(01, 12): NAME(NAME) 's'
[31](01, 12)-(01, 13): LSQB(OP) '['
[31](01, 13)-(01, 14): NAME(NAME) 'i'
[31](01, 14)-(01, 15): RSQB(OP) ']'
[31](01, 16)-(01, 18): NAME(NAME) 'in'
[31](01, 19)-(01, 27): NAME(NAME) 'alphabet'
[31](01, 27)-(01, 28): COLON(OP) ':'
[31](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 15): NAME(NAME) 'for'
[32](01, 16)-(01, 17): NAME(NAME) 'j'
[32](01, 18)-(01, 20): NAME(NAME) 'in'
[32](01, 21)-(01, 26): NAME(NAME) 'range'
[32](01, 26)-(01, 27): LPAR(OP) '('
[32](01, 27)-(01, 30): NAME(NAME) 'len'
[32](01, 30)-(01, 31): LPAR(OP) '('
[32](01, 31)-(01, 39): NAME(NAME) 'alphabet'
[32](01, 39)-(01, 40): RPAR(OP) ')'
[32](01, 40)-(01, 41): RPAR(OP) ')'
[32](01, 41)-(01, 42): COLON(OP) ':'
[32](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 16): INDENT(INDENT) '                '
[33](01, 16)-(01, 18): NAME(NAME) 'if'
[33](01, 19)-(01, 20): NAME(NAME) 's'
[33](01, 20)-(01, 21): LSQB(OP) '['
[33](01, 21)-(01, 22): NAME(NAME) 'i'
[33](01, 22)-(01, 23): RSQB(OP) ']'
[33](01, 23)-(01, 25): EQEQUAL(OP) '=='
[33](01, 25)-(01, 33): NAME(NAME) 'alphabet'
[33](01, 33)-(01, 34): LSQB(OP) '['
[33](01, 34)-(01, 35): NAME(NAME) 'j'
[33](01, 35)-(01, 36): RSQB(OP) ']'
[33](01, 36)-(01, 37): COLON(OP) ':'
[33](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 20): INDENT(INDENT) '                    '
[34](01, 20)-(01, 22): NAME(NAME) 'if'
[34](01, 23)-(01, 24): NAME(NAME) 'n'
[34](01, 24)-(01, 25): GREATER(OP) '>'
[34](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[34](01, 27)-(01, 30): NAME(NAME) 'and'
[34](01, 31)-(01, 32): NAME(NAME) 'n'
[34](01, 32)-(01, 33): LESS(OP) '<'
[34](01, 33)-(01, 35): NUMBER(NUMBER) '26'
[34](01, 35)-(01, 36): COLON(OP) ':'
[34](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 24): INDENT(INDENT) '                        '
[35](01, 24)-(01, 31): NAME(NAME) 'decoded'
[35](01, 31)-(01, 33): PLUSEQUAL(OP) '+='
[35](01, 33)-(01, 41): NAME(NAME) 'alphabet'
[35](01, 41)-(01, 42): LSQB(OP) '['
[35](01, 42)-(01, 43): NAME(NAME) 'j'
[35](01, 43)-(01, 44): MINUS(OP) '-'
[35](01, 44)-(01, 45): NAME(NAME) 'n'
[35](01, 45)-(01, 46): RSQB(OP) ']'
[35](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 20): INDENT(INDENT) '                    '
[36](01, 20)-(01, 24): NAME(NAME) 'elif'
[36](01, 25)-(01, 26): NAME(NAME) 'n'
[36](01, 26)-(01, 27): GREATER(OP) '>'
[36](01, 27)-(01, 29): NUMBER(NUMBER) '26'
[36](01, 29)-(01, 30): COLON(OP) ':'
[36](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 24): INDENT(INDENT) '                        '
[37](01, 24)-(01, 31): NAME(NAME) 'decoded'
[37](01, 32)-(01, 34): PLUSEQUAL(OP) '+='
[37](01, 35)-(01, 43): NAME(NAME) 'alphabet'
[37](01, 43)-(01, 44): LSQB(OP) '['
[37](01, 44)-(01, 45): NAME(NAME) 'j'
[37](01, 45)-(01, 46): MINUS(OP) '-'
[37](01, 46)-(01, 47): NAME(NAME) 'n'
[37](01, 47)-(01, 48): PLUS(OP) '+'
[37](01, 48)-(01, 50): NUMBER(NUMBER) '26'
[37](01, 50)-(01, 51): RSQB(OP) ']'
[37](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 20): INDENT(INDENT) '                    '
[38](01, 20)-(01, 24): NAME(NAME) 'elif'
[38](01, 25)-(01, 26): NAME(NAME) 'n'
[38](01, 26)-(01, 27): LESS(OP) '<'
[38](01, 27)-(01, 28): NUMBER(NUMBER) '0'
[38](01, 28)-(01, 29): COLON(OP) ':'
[38](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 24): INDENT(INDENT) '                        '
[39](01, 24)-(01, 31): NAME(NAME) 'decoded'
[39](01, 32)-(01, 34): PLUSEQUAL(OP) '+='
[39](01, 35)-(01, 43): NAME(NAME) 'alphabet'
[39](01, 43)-(01, 44): LSQB(OP) '['
[39](01, 44)-(01, 45): NAME(NAME) 'j'
[39](01, 45)-(01, 46): MINUS(OP) '-'
[39](01, 46)-(01, 47): NAME(NAME) 'n'
[39](01, 48)-(01, 49): MINUS(OP) '-'
[39](01, 50)-(01, 52): NUMBER(NUMBER) '26'
[39](01, 52)-(01, 53): RSQB(OP) ']'
[39](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 08): INDENT(INDENT) '        '
[40](01, 08)-(01, 12): NAME(NAME) 'else'
[40](01, 12)-(01, 13): COLON(OP) ':'
[40](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 12): INDENT(INDENT) '            '
[41](01, 12)-(01, 19): NAME(NAME) 'decoded'
[41](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[41](01, 21)-(01, 22): NAME(NAME) 's'
[41](01, 22)-(01, 23): LSQB(OP) '['
[41](01, 23)-(01, 24): NAME(NAME) 'i'
[41](01, 24)-(01, 25): RSQB(OP) ']'
[41](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 01): NL(NL) '\n'
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 04): INDENT(INDENT) '    '
[43](01, 04)-(01, 10): NAME(NAME) 'return'
[43](01, 11)-(01, 18): NAME(NAME) 'decoded'
[43](01, 18)-(01, 19): NEWLINE(NEWLINE)
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

