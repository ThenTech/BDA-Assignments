[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'count_words'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'string'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 23): NAME(NAME) 'non_initeresting_ch'
[01](01, 24)-(01, 25): EQUAL(OP) '='
[01](01, 26)-(01, 51): STRING(STRING) '" !,:;?.=+()@/0123456789"'
[01](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 10): NAME(NAME) 'len'
[02](01, 10)-(01, 11): LPAR(OP) '('
[02](01, 11)-(01, 17): NAME(NAME) 'string'
[02](01, 17)-(01, 18): RPAR(OP) ')'
[02](01, 19)-(01, 21): EQEQUAL(OP) '=='
[02](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[02](01, 23)-(01, 24): COLON(OP) ':'
[02](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 14): NAME(NAME) 'return'
[03](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[03](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 04)-(01, 05): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 13): NAME(NAME) 'string'
[05](01, 13)-(01, 14): LSQB(OP) '['
[05](01, 14)-(01, 17): NAME(NAME) 'len'
[05](01, 17)-(01, 18): LPAR(OP) '('
[05](01, 18)-(01, 24): NAME(NAME) 'string'
[05](01, 24)-(01, 25): RPAR(OP) ')'
[05](01, 26)-(01, 27): MINUS(OP) '-'
[05](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[05](01, 29)-(01, 30): RSQB(OP) ']'
[05](01, 31)-(01, 34): NAME(NAME) 'not'
[05](01, 35)-(01, 37): NAME(NAME) 'in'
[05](01, 38)-(01, 57): NAME(NAME) 'non_initeresting_ch'
[05](01, 57)-(01, 58): COLON(OP) ':'
[05](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 14): NAME(NAME) 'string'
[06](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[06](01, 18)-(01, 21): STRING(STRING) '" "'
[06](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 09): NAME(NAME) 'count'
[07](01, 10)-(01, 11): EQUAL(OP) '='
[07](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[07](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 07): NAME(NAME) 'for'
[09](01, 08)-(01, 09): NAME(NAME) 'i'
[09](01, 10)-(01, 12): NAME(NAME) 'in'
[09](01, 13)-(01, 18): NAME(NAME) 'range'
[09](01, 18)-(01, 19): LPAR(OP) '('
[09](01, 19)-(01, 22): NAME(NAME) 'len'
[09](01, 22)-(01, 23): LPAR(OP) '('
[09](01, 23)-(01, 29): NAME(NAME) 'string'
[09](01, 29)-(01, 30): RPAR(OP) ')'
[09](01, 30)-(01, 31): MINUS(OP) '-'
[09](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[09](01, 32)-(01, 33): RPAR(OP) ')'
[09](01, 33)-(01, 34): COLON(OP) ':'
[09](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 10): NAME(NAME) 'if'
[10](01, 11)-(01, 17): NAME(NAME) 'string'
[10](01, 17)-(01, 18): LSQB(OP) '['
[10](01, 18)-(01, 19): NAME(NAME) 'i'
[10](01, 19)-(01, 20): RSQB(OP) ']'
[10](01, 21)-(01, 23): NAME(NAME) 'in'
[10](01, 24)-(01, 43): NAME(NAME) 'non_initeresting_ch'
[10](01, 44)-(01, 47): NAME(NAME) 'and'
[10](01, 48)-(01, 54): NAME(NAME) 'string'
[10](01, 54)-(01, 55): LSQB(OP) '['
[10](01, 55)-(01, 56): NAME(NAME) 'i'
[10](01, 56)-(01, 57): PLUS(OP) '+'
[10](01, 57)-(01, 58): NUMBER(NUMBER) '1'
[10](01, 58)-(01, 59): RSQB(OP) ']'
[10](01, 60)-(01, 63): NAME(NAME) 'not'
[10](01, 64)-(01, 66): NAME(NAME) 'in'
[10](01, 67)-(01, 86): NAME(NAME) 'non_initeresting_ch'
[10](01, 86)-(01, 87): COLON(OP) ':'
[10](01, 87)-(01, 88): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 17): NAME(NAME) 'count'
[11](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[11](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[11](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 06): NAME(NAME) 'if'
[12](01, 07)-(01, 13): NAME(NAME) 'string'
[12](01, 13)-(01, 14): LSQB(OP) '['
[12](01, 14)-(01, 17): NAME(NAME) 'len'
[12](01, 17)-(01, 18): LPAR(OP) '('
[12](01, 18)-(01, 24): NAME(NAME) 'string'
[12](01, 24)-(01, 25): RPAR(OP) ')'
[12](01, 26)-(01, 27): MINUS(OP) '-'
[12](01, 28)-(01, 29): NUMBER(NUMBER) '2'
[12](01, 29)-(01, 30): RSQB(OP) ']'
[12](01, 31)-(01, 34): NAME(NAME) 'not'
[12](01, 35)-(01, 37): NAME(NAME) 'in'
[12](01, 38)-(01, 57): NAME(NAME) 'non_initeresting_ch'
[12](01, 57)-(01, 58): COLON(OP) ':'
[12](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 13): NAME(NAME) 'count'
[13](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[13](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[13](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 10): NAME(NAME) 'return'
[14](01, 11)-(01, 16): NAME(NAME) 'count'
[14](01, 16)-(01, 17): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

