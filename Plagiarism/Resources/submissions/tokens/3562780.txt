[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 08): NAME(NAME) 'een_cent'
[00](01, 09)-(01, 10): EQUAL(OP) '='
[00](01, 11)-(01, 14): NAME(NAME) 'int'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 20): NAME(NAME) 'input'
[00](01, 20)-(01, 21): LPAR(OP) '('
[00](01, 21)-(01, 42): STRING(STRING) '"munten van 1 cent: "'
[00](01, 42)-(01, 43): RPAR(OP) ')'
[00](01, 43)-(01, 44): RPAR(OP) ')'
[00](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 09): NAME(NAME) 'twee_cent'
[01](01, 10)-(01, 11): EQUAL(OP) '='
[01](01, 12)-(01, 15): NAME(NAME) 'int'
[01](01, 15)-(01, 16): LPAR(OP) '('
[01](01, 16)-(01, 21): NAME(NAME) 'input'
[01](01, 21)-(01, 22): LPAR(OP) '('
[01](01, 22)-(01, 43): STRING(STRING) '"munten van 2 cent: "'
[01](01, 43)-(01, 44): RPAR(OP) ')'
[01](01, 44)-(01, 45): RPAR(OP) ')'
[01](01, 45)-(01, 46): STAR(OP) '*'
[01](01, 46)-(01, 47): NUMBER(NUMBER) '2'
[01](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 09): NAME(NAME) 'vijf_cent'
[02](01, 10)-(01, 11): EQUAL(OP) '='
[02](01, 12)-(01, 15): NAME(NAME) 'int'
[02](01, 15)-(01, 16): LPAR(OP) '('
[02](01, 16)-(01, 21): NAME(NAME) 'input'
[02](01, 21)-(01, 22): LPAR(OP) '('
[02](01, 22)-(01, 43): STRING(STRING) '"munten van 5 cent: "'
[02](01, 43)-(01, 44): RPAR(OP) ')'
[02](01, 44)-(01, 45): RPAR(OP) ')'
[02](01, 45)-(01, 46): STAR(OP) '*'
[02](01, 46)-(01, 47): NUMBER(NUMBER) '5'
[02](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 09): NAME(NAME) 'tien_cent'
[03](01, 10)-(01, 11): EQUAL(OP) '='
[03](01, 12)-(01, 15): NAME(NAME) 'int'
[03](01, 15)-(01, 16): LPAR(OP) '('
[03](01, 16)-(01, 21): NAME(NAME) 'input'
[03](01, 21)-(01, 22): LPAR(OP) '('
[03](01, 22)-(01, 44): STRING(STRING) '"munten van 10 cent: "'
[03](01, 44)-(01, 45): RPAR(OP) ')'
[03](01, 45)-(01, 46): RPAR(OP) ')'
[03](01, 46)-(01, 47): STAR(OP) '*'
[03](01, 47)-(01, 49): NUMBER(NUMBER) '10'
[03](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): NAME(NAME) 'twintig_cent'
[04](01, 13)-(01, 14): EQUAL(OP) '='
[04](01, 15)-(01, 18): NAME(NAME) 'int'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 24): NAME(NAME) 'input'
[04](01, 24)-(01, 25): LPAR(OP) '('
[04](01, 25)-(01, 47): STRING(STRING) '"munten van 20 cent: "'
[04](01, 47)-(01, 48): RPAR(OP) ')'
[04](01, 48)-(01, 49): RPAR(OP) ')'
[04](01, 49)-(01, 50): STAR(OP) '*'
[04](01, 50)-(01, 52): NUMBER(NUMBER) '20'
[04](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 06): NAME(NAME) 'totaal'
[06](01, 07)-(01, 08): EQUAL(OP) '='
[06](01, 09)-(01, 17): NAME(NAME) 'een_cent'
[06](01, 18)-(01, 19): PLUS(OP) '+'
[06](01, 20)-(01, 29): NAME(NAME) 'twee_cent'
[06](01, 30)-(01, 31): PLUS(OP) '+'
[06](01, 32)-(01, 41): NAME(NAME) 'vijf_cent'
[06](01, 42)-(01, 43): PLUS(OP) '+'
[06](01, 44)-(01, 53): NAME(NAME) 'tien_cent'
[06](01, 54)-(01, 55): PLUS(OP) '+'
[06](01, 56)-(01, 68): NAME(NAME) 'twintig_cent'
[06](01, 68)-(01, 69): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 13): NAME(NAME) 'honderdtallen'
[09](01, 14)-(01, 15): EQUAL(OP) '='
[09](01, 16)-(01, 22): NAME(NAME) 'totaal'
[09](01, 23)-(01, 24): PERCENT(OP) '%'
[09](01, 25)-(01, 27): NUMBER(NUMBER) '10'
[09](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 10): NAME(NAME) 'tientallen'
[10](01, 11)-(01, 12): EQUAL(OP) '='
[10](01, 13)-(01, 14): LPAR(OP) '('
[10](01, 14)-(01, 20): NAME(NAME) 'totaal'
[10](01, 20)-(01, 22): DOUBLESLASH(OP) '//'
[10](01, 22)-(01, 24): NUMBER(NUMBER) '10'
[10](01, 24)-(01, 25): RPAR(OP) ')'
[10](01, 25)-(01, 26): PERCENT(OP) '%'
[10](01, 26)-(01, 28): NUMBER(NUMBER) '10'
[10](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): NAME(NAME) 'eenheden'
[11](01, 09)-(01, 10): EQUAL(OP) '='
[11](01, 11)-(01, 12): LPAR(OP) '('
[11](01, 12)-(01, 18): NAME(NAME) 'totaal'
[11](01, 18)-(01, 20): DOUBLESLASH(OP) '//'
[11](01, 20)-(01, 23): NUMBER(NUMBER) '100'
[11](01, 23)-(01, 24): RPAR(OP) ')'
[11](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 05): NAME(NAME) 'print'
[13](01, 05)-(01, 06): LPAR(OP) '('
[13](01, 06)-(01, 17): STRING(STRING) '"You have "'
[13](01, 17)-(01, 18): COMMA(OP) ','
[13](01, 19)-(01, 27): NAME(NAME) 'eenheden'
[13](01, 27)-(01, 28): COMMA(OP) ','
[13](01, 29)-(01, 32): STRING(STRING) '"."'
[13](01, 32)-(01, 33): COMMA(OP) ','
[13](01, 34)-(01, 44): NAME(NAME) 'tientallen'
[13](01, 44)-(01, 45): COMMA(OP) ','
[13](01, 46)-(01, 59): NAME(NAME) 'honderdtallen'
[13](01, 59)-(01, 60): COMMA(OP) ','
[13](01, 61)-(01, 69): STRING(STRING) '" euro!"'
[13](01, 69)-(01, 70): COMMA(OP) ','
[13](01, 71)-(01, 74): NAME(NAME) 'sep'
[13](01, 74)-(01, 75): EQUAL(OP) '='
[13](01, 75)-(01, 77): STRING(STRING) '""'
[13](01, 77)-(01, 78): RPAR(OP) ')'
[13](01, 78)-(01, 79): NEWLINE(NEWLINE)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

