[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 13): NAME(NAME) 'substring'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 15): NAME(NAME) 's'
[00](01, 15)-(01, 16): COMMA(OP) ','
[00](01, 17)-(01, 20): NAME(NAME) 'frm'
[00](01, 20)-(01, 21): COMMA(OP) ','
[00](01, 22)-(01, 24): NAME(NAME) 'ln'
[00](01, 24)-(01, 25): RPAR(OP) ')'
[00](01, 25)-(01, 26): COLON(OP) ':'
[00](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'leeg'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 13): STRING(STRING) "''"
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 11): NAME(NAME) 'positie'
[02](01, 12)-(01, 13): EQUAL(OP) '='
[02](01, 14)-(01, 17): NAME(NAME) 'frm'
[02](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'i'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 18): NAME(NAME) 'range'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 21): NAME(NAME) 'ln'
[03](01, 21)-(01, 22): RPAR(OP) ')'
[03](01, 22)-(01, 23): COLON(OP) ':'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 12): NAME(NAME) 'leeg'
[04](01, 13)-(01, 15): PLUSEQUAL(OP) '+='
[04](01, 16)-(01, 17): NAME(NAME) 's'
[04](01, 17)-(01, 18): LSQB(OP) '['
[04](01, 18)-(01, 25): NAME(NAME) 'positie'
[04](01, 25)-(01, 26): RSQB(OP) ']'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 15): NAME(NAME) 'positie'
[05](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[05](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[05](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'return'
[07](01, 11)-(01, 15): NAME(NAME) 'leeg'
[07](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 08): NAME(NAME) 'pass'
[08](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 03): NAME(NAME) 'def'
[11](01, 04)-(01, 12): NAME(NAME) 'find_pos'
[11](01, 12)-(01, 13): LPAR(OP) '('
[11](01, 13)-(01, 17): NAME(NAME) 'term'
[11](01, 17)-(01, 18): COMMA(OP) ','
[11](01, 19)-(01, 25): NAME(NAME) 'corpus'
[11](01, 25)-(01, 26): RPAR(OP) ')'
[11](01, 26)-(01, 27): COLON(OP) ':'
[11](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 05): NAME(NAME) 'i'
[12](01, 06)-(01, 07): EQUAL(OP) '='
[12](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[12](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 05): NAME(NAME) 'j'
[13](01, 06)-(01, 07): EQUAL(OP) '='
[13](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[13](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 09): NAME(NAME) 'while'
[14](01, 10)-(01, 14): NAME(NAME) 'term'
[14](01, 14)-(01, 15): LSQB(OP) '['
[14](01, 15)-(01, 16): NAME(NAME) 'i'
[14](01, 16)-(01, 17): RSQB(OP) ']'
[14](01, 18)-(01, 20): NOTEQUAL(OP) '!='
[14](01, 21)-(01, 27): NAME(NAME) 'corpus'
[14](01, 27)-(01, 28): LSQB(OP) '['
[14](01, 28)-(01, 29): NAME(NAME) 'j'
[14](01, 29)-(01, 30): RSQB(OP) ']'
[14](01, 30)-(01, 31): COLON(OP) ':'
[14](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 09): NAME(NAME) 'j'
[15](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[15](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[15](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 05): NAME(NAME) 'x'
[16](01, 06)-(01, 07): EQUAL(OP) '='
[16](01, 08)-(01, 09): NAME(NAME) 'j'
[16](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 09): NAME(NAME) 'while'
[17](01, 10)-(01, 11): NAME(NAME) 'i'
[17](01, 12)-(01, 13): LESS(OP) '<'
[17](01, 14)-(01, 17): NAME(NAME) 'len'
[17](01, 17)-(01, 18): LPAR(OP) '('
[17](01, 18)-(01, 22): NAME(NAME) 'term'
[17](01, 22)-(01, 23): RPAR(OP) ')'
[17](01, 24)-(01, 27): NAME(NAME) 'and'
[17](01, 28)-(01, 32): NAME(NAME) 'term'
[17](01, 32)-(01, 33): LSQB(OP) '['
[17](01, 33)-(01, 34): NAME(NAME) 'i'
[17](01, 34)-(01, 35): RSQB(OP) ']'
[17](01, 36)-(01, 38): EQEQUAL(OP) '=='
[17](01, 39)-(01, 45): NAME(NAME) 'corpus'
[17](01, 45)-(01, 46): LSQB(OP) '['
[17](01, 46)-(01, 47): NAME(NAME) 'x'
[17](01, 47)-(01, 48): RSQB(OP) ']'
[17](01, 48)-(01, 49): COLON(OP) ':'
[17](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 09): NAME(NAME) 'x'
[18](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[18](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[18](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 09): NAME(NAME) 'i'
[19](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[19](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[19](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 06): NAME(NAME) 'if'
[20](01, 07)-(01, 10): NAME(NAME) 'len'
[20](01, 10)-(01, 11): LPAR(OP) '('
[20](01, 11)-(01, 15): NAME(NAME) 'term'
[20](01, 15)-(01, 16): RPAR(OP) ')'
[20](01, 17)-(01, 19): EQEQUAL(OP) '=='
[20](01, 20)-(01, 21): NAME(NAME) 'x'
[20](01, 22)-(01, 23): MINUS(OP) '-'
[20](01, 24)-(01, 25): NAME(NAME) 'j'
[20](01, 25)-(01, 26): COLON(OP) ':'
[20](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 14): NAME(NAME) 'return'
[21](01, 15)-(01, 16): NAME(NAME) 'j'
[21](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 08): NAME(NAME) 'else'
[22](01, 08)-(01, 09): COLON(OP) ':'
[22](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 13): NAME(NAME) 'print'
[23](01, 13)-(01, 14): LPAR(OP) '('
[23](01, 14)-(01, 64): STRING(STRING) '"Error: expected return type NoneType but got int"'
[23](01, 64)-(01, 65): RPAR(OP) ')'
[23](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 08): NAME(NAME) 'pass'
[24](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 03): NAME(NAME) 'def'
[27](01, 04)-(01, 13): NAME(NAME) 'in_string'
[27](01, 13)-(01, 14): LPAR(OP) '('
[27](01, 14)-(01, 18): NAME(NAME) 'term'
[27](01, 18)-(01, 19): COMMA(OP) ','
[27](01, 20)-(01, 26): NAME(NAME) 'corpus'
[27](01, 26)-(01, 27): RPAR(OP) ')'
[27](01, 27)-(01, 28): COLON(OP) ':'
[27](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 05): NAME(NAME) 'i'
[28](01, 06)-(01, 07): EQUAL(OP) '='
[28](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[28](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 05): NAME(NAME) 'j'
[29](01, 06)-(01, 07): EQUAL(OP) '='
[29](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[29](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 09): NAME(NAME) 'while'
[30](01, 10)-(01, 14): NAME(NAME) 'term'
[30](01, 14)-(01, 15): LSQB(OP) '['
[30](01, 15)-(01, 16): NAME(NAME) 'i'
[30](01, 16)-(01, 17): RSQB(OP) ']'
[30](01, 18)-(01, 20): NOTEQUAL(OP) '!='
[30](01, 21)-(01, 27): NAME(NAME) 'corpus'
[30](01, 27)-(01, 28): LSQB(OP) '['
[30](01, 28)-(01, 29): NAME(NAME) 'j'
[30](01, 29)-(01, 30): RSQB(OP) ']'
[30](01, 30)-(01, 31): COLON(OP) ':'
[30](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 09): NAME(NAME) 'j'
[31](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[31](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[31](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 05): NAME(NAME) 'x'
[32](01, 06)-(01, 07): EQUAL(OP) '='
[32](01, 08)-(01, 09): NAME(NAME) 'j'
[32](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 09): NAME(NAME) 'while'
[33](01, 10)-(01, 11): NAME(NAME) 'i'
[33](01, 12)-(01, 13): LESS(OP) '<'
[33](01, 14)-(01, 17): NAME(NAME) 'len'
[33](01, 17)-(01, 18): LPAR(OP) '('
[33](01, 18)-(01, 22): NAME(NAME) 'term'
[33](01, 22)-(01, 23): RPAR(OP) ')'
[33](01, 24)-(01, 27): NAME(NAME) 'and'
[33](01, 28)-(01, 32): NAME(NAME) 'term'
[33](01, 32)-(01, 33): LSQB(OP) '['
[33](01, 33)-(01, 34): NAME(NAME) 'i'
[33](01, 34)-(01, 35): RSQB(OP) ']'
[33](01, 36)-(01, 38): EQEQUAL(OP) '=='
[33](01, 39)-(01, 45): NAME(NAME) 'corpus'
[33](01, 45)-(01, 46): LSQB(OP) '['
[33](01, 46)-(01, 47): NAME(NAME) 'x'
[33](01, 47)-(01, 48): RSQB(OP) ']'
[33](01, 48)-(01, 49): COLON(OP) ':'
[33](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 08): INDENT(INDENT) '        '
[34](01, 08)-(01, 09): NAME(NAME) 'x'
[34](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[34](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[34](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 09): NAME(NAME) 'i'
[35](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[35](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[35](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 04): INDENT(INDENT) '    '
[36](01, 04)-(01, 10): NAME(NAME) 'return'
[36](01, 11)-(01, 14): NAME(NAME) 'len'
[36](01, 14)-(01, 15): LPAR(OP) '('
[36](01, 15)-(01, 19): NAME(NAME) 'term'
[36](01, 19)-(01, 20): RPAR(OP) ')'
[36](01, 21)-(01, 23): EQEQUAL(OP) '=='
[36](01, 24)-(01, 25): NAME(NAME) 'x'
[36](01, 26)-(01, 27): MINUS(OP) '-'
[36](01, 28)-(01, 29): NAME(NAME) 'j'
[36](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 04): INDENT(INDENT) '    '
[37](01, 04)-(01, 08): NAME(NAME) 'pass'
[37](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

