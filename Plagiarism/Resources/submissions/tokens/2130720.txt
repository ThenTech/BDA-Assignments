[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'getal1'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 12): NAME(NAME) 'int'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 18): NAME(NAME) 'input'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 37): STRING(STRING) '"Geef een getal: "'
[00](01, 37)-(01, 38): RPAR(OP) ')'
[00](01, 38)-(01, 39): RPAR(OP) ')'
[00](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'getal2'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 12): NAME(NAME) 'int'
[01](01, 12)-(01, 13): LPAR(OP) '('
[01](01, 13)-(01, 18): NAME(NAME) 'input'
[01](01, 18)-(01, 19): LPAR(OP) '('
[01](01, 19)-(01, 41): STRING(STRING) '"Geef nog een getal: "'
[01](01, 41)-(01, 42): RPAR(OP) ')'
[01](01, 42)-(01, 43): RPAR(OP) ')'
[01](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 05): NAME(NAME) 'lijst'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 12): NAME(NAME) 'list'
[02](01, 12)-(01, 13): LPAR(OP) '('
[02](01, 13)-(01, 14): RPAR(OP) ')'
[02](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 07): NAME(NAME) 'product'
[03](01, 08)-(01, 09): EQUAL(OP) '='
[03](01, 10)-(01, 11): NUMBER(NUMBER) '1'
[03](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'for'
[04](01, 04)-(01, 05): NAME(NAME) 'i'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 14): NAME(NAME) 'range'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 21): NAME(NAME) 'getal2'
[04](01, 21)-(01, 22): RPAR(OP) ')'
[04](01, 22)-(01, 23): COLON(OP) ':'
[04](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'lijst'
[05](01, 09)-(01, 10): DOT(OP) '.'
[05](01, 10)-(01, 16): NAME(NAME) 'append'
[05](01, 16)-(01, 17): LPAR(OP) '('
[05](01, 17)-(01, 18): LPAR(OP) '('
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 25): NAME(NAME) 'getal1'
[05](01, 25)-(01, 26): MINUS(OP) '-'
[05](01, 26)-(01, 27): NAME(NAME) 'i'
[05](01, 27)-(01, 28): RPAR(OP) ')'
[05](01, 28)-(01, 29): SLASH(OP) '/'
[05](01, 29)-(01, 30): LPAR(OP) '('
[05](01, 30)-(01, 36): NAME(NAME) 'getal2'
[05](01, 36)-(01, 37): MINUS(OP) '-'
[05](01, 37)-(01, 38): NAME(NAME) 'i'
[05](01, 38)-(01, 39): RPAR(OP) ')'
[05](01, 39)-(01, 40): RPAR(OP) ')'
[05](01, 40)-(01, 41): RPAR(OP) ')'
[05](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 03): NAME(NAME) 'for'
[06](01, 04)-(01, 05): NAME(NAME) 'x'
[06](01, 06)-(01, 08): NAME(NAME) 'in'
[06](01, 09)-(01, 14): NAME(NAME) 'lijst'
[06](01, 14)-(01, 15): COLON(OP) ':'
[06](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 11): NAME(NAME) 'product'
[07](01, 12)-(01, 13): EQUAL(OP) '='
[07](01, 14)-(01, 15): NAME(NAME) 'x'
[07](01, 15)-(01, 16): STAR(OP) '*'
[07](01, 16)-(01, 23): NAME(NAME) 'product'
[07](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 05): NAME(NAME) 'print'
[08](01, 05)-(01, 06): LPAR(OP) '('
[08](01, 06)-(01, 13): NAME(NAME) 'product'
[08](01, 13)-(01, 14): RPAR(OP) ')'
[08](01, 14)-(01, 15): NEWLINE(NEWLINE)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

