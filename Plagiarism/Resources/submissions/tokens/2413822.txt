[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 08): NAME(NAME) 'injfdkls'
[00](01, 09)-(01, 10): EQUAL(OP) '='
[00](01, 11)-(01, 16): NAME(NAME) 'input'
[00](01, 16)-(01, 17): LPAR(OP) '('
[00](01, 17)-(01, 22): STRING(STRING) '"oke"'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'def'
[02](01, 04)-(01, 12): NAME(NAME) 'probleem'
[02](01, 12)-(01, 13): LPAR(OP) '('
[02](01, 13)-(01, 14): NAME(NAME) 'i'
[02](01, 14)-(01, 15): COMMA(OP) ','
[02](01, 15)-(01, 16): NAME(NAME) 'j'
[02](01, 16)-(01, 17): COMMA(OP) ','
[02](01, 17)-(01, 20): NAME(NAME) 'oke'
[02](01, 20)-(01, 21): RPAR(OP) ')'
[02](01, 21)-(01, 22): COLON(OP) ':'
[02](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 08): NAME(NAME) 'i'
[03](01, 08)-(01, 09): STAR(OP) '*'
[03](01, 09)-(01, 10): NUMBER(NUMBER) '2'
[03](01, 10)-(01, 12): GREATEREQUAL(OP) '>='
[03](01, 12)-(01, 15): NAME(NAME) 'len'
[03](01, 15)-(01, 16): LPAR(OP) '('
[03](01, 16)-(01, 19): NAME(NAME) 'oke'
[03](01, 19)-(01, 20): RPAR(OP) ')'
[03](01, 21)-(01, 23): NAME(NAME) 'or'
[03](01, 24)-(01, 25): NAME(NAME) 'j'
[03](01, 25)-(01, 26): STAR(OP) '*'
[03](01, 26)-(01, 27): NUMBER(NUMBER) '2'
[03](01, 27)-(01, 29): LESSEQUAL(OP) '<='
[03](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[03](01, 30)-(01, 31): COLON(OP) ':'
[03](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'print'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 17): STRING(STRING) '""'
[04](01, 17)-(01, 18): RPAR(OP) ')'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 14): NAME(NAME) 'return'
[05](01, 15)-(01, 17): STRING(STRING) '""'
[05](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'print'
[06](01, 09)-(01, 10): LPAR(OP) '('
[06](01, 10)-(01, 13): NAME(NAME) 'oke'
[06](01, 13)-(01, 14): LSQB(OP) '['
[06](01, 14)-(01, 15): NAME(NAME) 'i'
[06](01, 15)-(01, 16): STAR(OP) '*'
[06](01, 16)-(01, 17): NUMBER(NUMBER) '2'
[06](01, 17)-(01, 18): COLON(OP) ':'
[06](01, 18)-(01, 19): NAME(NAME) 'j'
[06](01, 19)-(01, 20): STAR(OP) '*'
[06](01, 20)-(01, 21): NUMBER(NUMBER) '2'
[06](01, 21)-(01, 22): RSQB(OP) ']'
[06](01, 22)-(01, 23): RPAR(OP) ')'
[06](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 05): NAME(NAME) 'i'
[07](01, 05)-(01, 07): PLUSEQUAL(OP) '+='
[07](01, 07)-(01, 08): NUMBER(NUMBER) '1'
[07](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 12): NAME(NAME) 'probleem'
[08](01, 12)-(01, 13): LPAR(OP) '('
[08](01, 13)-(01, 14): NAME(NAME) 'i'
[08](01, 14)-(01, 15): COMMA(OP) ','
[08](01, 15)-(01, 16): NAME(NAME) 'j'
[08](01, 16)-(01, 17): COMMA(OP) ','
[08](01, 17)-(01, 20): NAME(NAME) 'oke'
[08](01, 20)-(01, 21): RPAR(OP) ')'
[08](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 05): NAME(NAME) 'j'
[09](01, 05)-(01, 07): MINEQUAL(OP) '-='
[09](01, 07)-(01, 08): NUMBER(NUMBER) '1'
[09](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 12): NAME(NAME) 'probleem'
[10](01, 12)-(01, 13): LPAR(OP) '('
[10](01, 13)-(01, 14): NAME(NAME) 'i'
[10](01, 14)-(01, 15): COMMA(OP) ','
[10](01, 15)-(01, 16): NAME(NAME) 'j'
[10](01, 16)-(01, 17): COMMA(OP) ','
[10](01, 17)-(01, 20): NAME(NAME) 'oke'
[10](01, 20)-(01, 21): RPAR(OP) ')'
[10](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 04)-(01, 05): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): NAME(NAME) 'probleem'
[12](01, 08)-(01, 09): LPAR(OP) '('
[12](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[12](01, 10)-(01, 11): COMMA(OP) ','
[12](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[12](01, 12)-(01, 13): COMMA(OP) ','
[12](01, 14)-(01, 22): NAME(NAME) 'injfdkls'
[12](01, 22)-(01, 23): RPAR(OP) ')'
[12](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

