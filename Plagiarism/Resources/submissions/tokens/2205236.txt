[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): COMMA(OP) ','
[00](01, 14)-(01, 15): NAME(NAME) 'n'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): NAME(NAME) 'n'
[01](01, 09)-(01, 10): GREATER(OP) '>'
[01](01, 11)-(01, 13): NUMBER(NUMBER) '26'
[01](01, 13)-(01, 14): COLON(OP) ':'
[01](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 09): NAME(NAME) 'n'
[02](01, 10)-(01, 12): MINEQUAL(OP) '-='
[02](01, 13)-(01, 15): NUMBER(NUMBER) '26'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'word'
[03](01, 09)-(01, 10): EQUAL(OP) '='
[03](01, 11)-(01, 13): STRING(STRING) '""'
[03](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 14): NAME(NAME) 's'
[04](01, 14)-(01, 15): COLON(OP) ':'
[04](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 12): NAME(NAME) 'i'
[05](01, 13)-(01, 15): NAME(NAME) 'in'
[05](01, 16)-(01, 41): STRING(STRING) '",.123456789!;:?[]{})(^ "'
[05](01, 41)-(01, 42): COLON(OP) ':'
[05](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 16): NAME(NAME) 'word'
[06](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[06](01, 20)-(01, 21): NAME(NAME) 'i'
[06](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'elif'
[08](01, 13)-(01, 16): NAME(NAME) 'ord'
[08](01, 16)-(01, 17): LPAR(OP) '('
[08](01, 17)-(01, 18): NAME(NAME) 'i'
[08](01, 18)-(01, 19): RPAR(OP) ')'
[08](01, 20)-(01, 21): LESS(OP) '<'
[08](01, 22)-(01, 25): NUMBER(NUMBER) '122'
[08](01, 26)-(01, 27): MINUS(OP) '-'
[08](01, 28)-(01, 29): NAME(NAME) 'n'
[08](01, 29)-(01, 30): COLON(OP) ':'
[08](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 16): NAME(NAME) 'word'
[09](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[09](01, 20)-(01, 23): NAME(NAME) 'chr'
[09](01, 23)-(01, 24): LPAR(OP) '('
[09](01, 24)-(01, 27): NAME(NAME) 'ord'
[09](01, 27)-(01, 28): LPAR(OP) '('
[09](01, 28)-(01, 29): NAME(NAME) 'i'
[09](01, 29)-(01, 30): RPAR(OP) ')'
[09](01, 30)-(01, 31): PLUS(OP) '+'
[09](01, 31)-(01, 32): NAME(NAME) 'n'
[09](01, 32)-(01, 33): RPAR(OP) ')'
[09](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 12): NAME(NAME) 'else'
[10](01, 12)-(01, 13): COLON(OP) ':'
[10](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 13): NAME(NAME) 'k'
[11](01, 14)-(01, 15): EQUAL(OP) '='
[11](01, 16)-(01, 19): NAME(NAME) 'ord'
[11](01, 19)-(01, 20): LPAR(OP) '('
[11](01, 20)-(01, 21): NAME(NAME) 'i'
[11](01, 21)-(01, 22): RPAR(OP) ')'
[11](01, 23)-(01, 24): MINUS(OP) '-'
[11](01, 25)-(01, 26): LPAR(OP) '('
[11](01, 26)-(01, 28): NUMBER(NUMBER) '26'
[11](01, 29)-(01, 30): MINUS(OP) '-'
[11](01, 31)-(01, 32): NAME(NAME) 'n'
[11](01, 32)-(01, 33): RPAR(OP) ')'
[11](01, 34)-(01, 58): COMMENT(COMMENT) '#122 --> 100, 121 --> 99'
[11](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 16): NAME(NAME) 'word'
[12](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[12](01, 20)-(01, 23): NAME(NAME) 'chr'
[12](01, 23)-(01, 24): LPAR(OP) '('
[12](01, 24)-(01, 25): NAME(NAME) 'k'
[12](01, 25)-(01, 26): RPAR(OP) ')'
[12](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 10): NAME(NAME) 'return'
[13](01, 11)-(01, 15): NAME(NAME) 'word'
[13](01, 15)-(01, 16): NEWLINE(NEWLINE)
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

