[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'newword'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 16): STRING(STRING) '""'
[01](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 11): NAME(NAME) 'counter'
[02](01, 12)-(01, 13): EQUAL(OP) '='
[02](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'while'
[03](01, 10)-(01, 17): NAME(NAME) 'counter'
[03](01, 18)-(01, 19): LESS(OP) '<'
[03](01, 20)-(01, 23): NAME(NAME) 'len'
[03](01, 23)-(01, 24): LPAR(OP) '('
[03](01, 24)-(01, 30): NAME(NAME) 'corpus'
[03](01, 30)-(01, 31): RPAR(OP) ')'
[03](01, 31)-(01, 32): COLON(OP) ':'
[03](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 17): NAME(NAME) 'corpus'
[05](01, 17)-(01, 18): LSQB(OP) '['
[05](01, 18)-(01, 25): NAME(NAME) 'counter'
[05](01, 25)-(01, 26): COLON(OP) ':'
[05](01, 26)-(01, 29): NAME(NAME) 'len'
[05](01, 29)-(01, 30): LPAR(OP) '('
[05](01, 30)-(01, 37): NAME(NAME) 'pattern'
[05](01, 37)-(01, 38): RPAR(OP) ')'
[05](01, 39)-(01, 40): PLUS(OP) '+'
[05](01, 41)-(01, 48): NAME(NAME) 'counter'
[05](01, 48)-(01, 49): RSQB(OP) ']'
[05](01, 50)-(01, 52): EQEQUAL(OP) '=='
[05](01, 53)-(01, 60): NAME(NAME) 'pattern'
[05](01, 60)-(01, 61): COLON(OP) ':'
[05](01, 61)-(01, 62): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 19): NAME(NAME) 'newword'
[06](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[06](01, 23)-(01, 34): NAME(NAME) 'replacement'
[06](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 19): NAME(NAME) 'counter'
[07](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[07](01, 23)-(01, 26): NAME(NAME) 'len'
[07](01, 26)-(01, 27): LPAR(OP) '('
[07](01, 27)-(01, 34): NAME(NAME) 'pattern'
[07](01, 34)-(01, 35): RPAR(OP) ')'
[07](01, 36)-(01, 37): MINUS(OP) '-'
[07](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[07](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'else'
[08](01, 12)-(01, 13): COLON(OP) ':'
[08](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 19): NAME(NAME) 'newword'
[09](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[09](01, 23)-(01, 29): NAME(NAME) 'corpus'
[09](01, 29)-(01, 30): LSQB(OP) '['
[09](01, 30)-(01, 37): NAME(NAME) 'counter'
[09](01, 37)-(01, 38): RSQB(OP) ']'
[09](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 15): NAME(NAME) 'counter'
[10](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[10](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[10](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'return'
[11](01, 11)-(01, 18): NAME(NAME) 'newword'
[11](01, 18)-(01, 19): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

