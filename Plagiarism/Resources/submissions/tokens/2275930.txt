[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'decode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): COLON(OP) ':'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'a1'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 12): STRING(STRING) '"X"'
[01](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'a2'
[02](01, 07)-(01, 08): EQUAL(OP) '='
[02](01, 09)-(01, 12): STRING(STRING) '" "'
[02](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 04)-(01, 11): COMMENT(COMMENT) '#stap 1'
[03](01, 11)-(01, 12): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 08): NAME(NAME) 's'
[04](01, 08)-(01, 09): LSQB(OP) '['
[04](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[04](01, 10)-(01, 11): RSQB(OP) ']'
[04](01, 12)-(01, 14): EQEQUAL(OP) '=='
[04](01, 15)-(01, 18): STRING(STRING) '"1"'
[04](01, 18)-(01, 19): COLON(OP) ':'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'a1'
[05](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[05](01, 14)-(01, 17): STRING(STRING) '"X"'
[05](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 08): NAME(NAME) 'elif'
[06](01, 09)-(01, 10): NAME(NAME) 's'
[06](01, 10)-(01, 11): LSQB(OP) '['
[06](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[06](01, 12)-(01, 13): RSQB(OP) ']'
[06](01, 14)-(01, 16): EQEQUAL(OP) '=='
[06](01, 17)-(01, 20): STRING(STRING) '"0"'
[06](01, 20)-(01, 21): COLON(OP) ':'
[06](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'a1'
[07](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[07](01, 14)-(01, 17): STRING(STRING) '" "'
[07](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 04)-(01, 11): COMMENT(COMMENT) '#stap 2'
[08](01, 11)-(01, 12): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 05): NAME(NAME) 'i'
[09](01, 06)-(01, 07): EQUAL(OP) '='
[09](01, 08)-(01, 09): NUMBER(NUMBER) '2'
[09](01, 10)-(01, 13): COMMENT(COMMENT) '#a1'
[09](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 09): NAME(NAME) 'while'
[10](01, 10)-(01, 11): NAME(NAME) 'i'
[10](01, 12)-(01, 13): LESS(OP) '<'
[10](01, 14)-(01, 17): NAME(NAME) 'len'
[10](01, 17)-(01, 18): LPAR(OP) '('
[10](01, 18)-(01, 19): NAME(NAME) 's'
[10](01, 19)-(01, 20): RPAR(OP) ')'
[10](01, 20)-(01, 21): COLON(OP) ':'
[10](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 12): NAME(NAME) 's'
[11](01, 12)-(01, 13): LSQB(OP) '['
[11](01, 13)-(01, 14): NAME(NAME) 'i'
[11](01, 15)-(01, 16): MINUS(OP) '-'
[11](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[11](01, 18)-(01, 19): RSQB(OP) ']'
[11](01, 20)-(01, 22): EQEQUAL(OP) '=='
[11](01, 23)-(01, 26): STRING(STRING) '"1"'
[11](01, 27)-(01, 30): NAME(NAME) 'and'
[11](01, 31)-(01, 33): NAME(NAME) 'a1'
[11](01, 33)-(01, 34): LSQB(OP) '['
[11](01, 34)-(01, 37): NAME(NAME) 'len'
[11](01, 37)-(01, 38): LPAR(OP) '('
[11](01, 38)-(01, 40): NAME(NAME) 'a1'
[11](01, 40)-(01, 41): RPAR(OP) ')'
[11](01, 41)-(01, 42): MINUS(OP) '-'
[11](01, 42)-(01, 43): NUMBER(NUMBER) '2'
[11](01, 43)-(01, 44): RSQB(OP) ']'
[11](01, 44)-(01, 46): EQEQUAL(OP) '=='
[11](01, 47)-(01, 50): STRING(STRING) '" "'
[11](01, 50)-(01, 51): COLON(OP) ':'
[11](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 14): NAME(NAME) 'a1'
[12](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[12](01, 18)-(01, 21): STRING(STRING) '"X"'
[12](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 13): NAME(NAME) 'i'
[13](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[13](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[13](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 12): NAME(NAME) 'elif'
[14](01, 13)-(01, 14): NAME(NAME) 's'
[14](01, 14)-(01, 15): LSQB(OP) '['
[14](01, 15)-(01, 16): NAME(NAME) 'i'
[14](01, 17)-(01, 18): MINUS(OP) '-'
[14](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[14](01, 20)-(01, 21): RSQB(OP) ']'
[14](01, 22)-(01, 24): EQEQUAL(OP) '=='
[14](01, 25)-(01, 28): STRING(STRING) '"1"'
[14](01, 29)-(01, 32): NAME(NAME) 'and'
[14](01, 33)-(01, 35): NAME(NAME) 'a1'
[14](01, 35)-(01, 36): LSQB(OP) '['
[14](01, 36)-(01, 39): NAME(NAME) 'len'
[14](01, 39)-(01, 40): LPAR(OP) '('
[14](01, 40)-(01, 42): NAME(NAME) 'a1'
[14](01, 42)-(01, 43): RPAR(OP) ')'
[14](01, 44)-(01, 45): MINUS(OP) '-'
[14](01, 46)-(01, 47): NUMBER(NUMBER) '2'
[14](01, 47)-(01, 48): RSQB(OP) ']'
[14](01, 49)-(01, 51): EQEQUAL(OP) '=='
[14](01, 52)-(01, 55): STRING(STRING) '"X"'
[14](01, 55)-(01, 56): COLON(OP) ':'
[14](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 14): NAME(NAME) 'a1'
[15](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[15](01, 18)-(01, 21): STRING(STRING) '" "'
[15](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 13): NAME(NAME) 'i'
[16](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[16](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[16](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 12): NAME(NAME) 'elif'
[17](01, 13)-(01, 14): NAME(NAME) 's'
[17](01, 14)-(01, 15): LSQB(OP) '['
[17](01, 15)-(01, 16): NAME(NAME) 'i'
[17](01, 16)-(01, 17): MINUS(OP) '-'
[17](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[17](01, 18)-(01, 19): RSQB(OP) ']'
[17](01, 20)-(01, 22): EQEQUAL(OP) '=='
[17](01, 23)-(01, 26): STRING(STRING) '"2"'
[17](01, 26)-(01, 27): COLON(OP) ':'
[17](01, 28)-(01, 35): COMMENT(COMMENT) '#bij 2x'
[17](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 14): NAME(NAME) 'a1'
[18](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[18](01, 18)-(01, 21): STRING(STRING) '"X"'
[18](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 13): NAME(NAME) 'i'
[19](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[19](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[19](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 12): NAME(NAME) 'elif'
[20](01, 13)-(01, 14): NAME(NAME) 's'
[20](01, 14)-(01, 15): LSQB(OP) '['
[20](01, 15)-(01, 16): NAME(NAME) 'i'
[20](01, 16)-(01, 17): MINUS(OP) '-'
[20](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[20](01, 18)-(01, 19): RSQB(OP) ']'
[20](01, 20)-(01, 22): EQEQUAL(OP) '=='
[20](01, 23)-(01, 26): STRING(STRING) '"0"'
[20](01, 26)-(01, 27): COLON(OP) ':'
[20](01, 28)-(01, 35): COMMENT(COMMENT) '#bij 0x'
[20](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 14): NAME(NAME) 'a1'
[21](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[21](01, 18)-(01, 21): STRING(STRING) '" "'
[21](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 13): NAME(NAME) 'i'
[22](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[22](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[22](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 05): NAME(NAME) 'i'
[23](01, 06)-(01, 07): EQUAL(OP) '='
[23](01, 08)-(01, 09): NUMBER(NUMBER) '2'
[23](01, 10)-(01, 13): COMMENT(COMMENT) '#a2'
[23](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 09): NAME(NAME) 'while'
[24](01, 10)-(01, 11): NAME(NAME) 'i'
[24](01, 12)-(01, 13): LESS(OP) '<'
[24](01, 14)-(01, 17): NAME(NAME) 'len'
[24](01, 17)-(01, 18): LPAR(OP) '('
[24](01, 18)-(01, 19): NAME(NAME) 's'
[24](01, 19)-(01, 20): RPAR(OP) ')'
[24](01, 20)-(01, 21): COLON(OP) ':'
[24](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 08): INDENT(INDENT) '        '
[25](01, 08)-(01, 10): NAME(NAME) 'if'
[25](01, 11)-(01, 12): NAME(NAME) 's'
[25](01, 12)-(01, 13): LSQB(OP) '['
[25](01, 13)-(01, 14): NAME(NAME) 'i'
[25](01, 15)-(01, 16): MINUS(OP) '-'
[25](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[25](01, 18)-(01, 19): RSQB(OP) ']'
[25](01, 20)-(01, 22): EQEQUAL(OP) '=='
[25](01, 23)-(01, 26): STRING(STRING) '"1"'
[25](01, 27)-(01, 30): NAME(NAME) 'and'
[25](01, 31)-(01, 33): NAME(NAME) 'a2'
[25](01, 33)-(01, 34): LSQB(OP) '['
[25](01, 34)-(01, 37): NAME(NAME) 'len'
[25](01, 37)-(01, 38): LPAR(OP) '('
[25](01, 38)-(01, 40): NAME(NAME) 'a2'
[25](01, 40)-(01, 41): RPAR(OP) ')'
[25](01, 42)-(01, 43): MINUS(OP) '-'
[25](01, 44)-(01, 45): NUMBER(NUMBER) '2'
[25](01, 45)-(01, 46): RSQB(OP) ']'
[25](01, 47)-(01, 49): EQEQUAL(OP) '=='
[25](01, 50)-(01, 53): STRING(STRING) '" "'
[25](01, 53)-(01, 54): COLON(OP) ':'
[25](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 12): INDENT(INDENT) '            '
[26](01, 12)-(01, 14): NAME(NAME) 'a1'
[26](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[26](01, 18)-(01, 21): STRING(STRING) '"X"'
[26](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 12): INDENT(INDENT) '            '
[27](01, 12)-(01, 13): NAME(NAME) 'i'
[27](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[27](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[27](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 08): INDENT(INDENT) '        '
[28](01, 08)-(01, 12): NAME(NAME) 'elif'
[28](01, 13)-(01, 14): NAME(NAME) 's'
[28](01, 14)-(01, 15): LSQB(OP) '['
[28](01, 15)-(01, 16): NAME(NAME) 'i'
[28](01, 17)-(01, 18): MINUS(OP) '-'
[28](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[28](01, 20)-(01, 21): RSQB(OP) ']'
[28](01, 22)-(01, 24): EQEQUAL(OP) '=='
[28](01, 25)-(01, 28): STRING(STRING) '"1"'
[28](01, 29)-(01, 32): NAME(NAME) 'and'
[28](01, 33)-(01, 35): NAME(NAME) 'a2'
[28](01, 35)-(01, 36): LSQB(OP) '['
[28](01, 36)-(01, 39): NAME(NAME) 'len'
[28](01, 39)-(01, 40): LPAR(OP) '('
[28](01, 40)-(01, 42): NAME(NAME) 'a2'
[28](01, 42)-(01, 43): RPAR(OP) ')'
[28](01, 44)-(01, 45): MINUS(OP) '-'
[28](01, 46)-(01, 47): NUMBER(NUMBER) '2'
[28](01, 47)-(01, 48): RSQB(OP) ']'
[28](01, 49)-(01, 51): EQEQUAL(OP) '=='
[28](01, 52)-(01, 55): STRING(STRING) '"X"'
[28](01, 55)-(01, 56): COLON(OP) ':'
[28](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 12): INDENT(INDENT) '            '
[29](01, 12)-(01, 14): NAME(NAME) 'a2'
[29](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[29](01, 18)-(01, 21): STRING(STRING) '" "'
[29](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 13): NAME(NAME) 'i'
[30](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[30](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[30](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 12): NAME(NAME) 'elif'
[31](01, 13)-(01, 14): NAME(NAME) 's'
[31](01, 14)-(01, 15): LSQB(OP) '['
[31](01, 15)-(01, 16): NAME(NAME) 'i'
[31](01, 17)-(01, 18): MINUS(OP) '-'
[31](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[31](01, 20)-(01, 21): RSQB(OP) ']'
[31](01, 22)-(01, 24): EQEQUAL(OP) '=='
[31](01, 25)-(01, 28): STRING(STRING) '"2"'
[31](01, 28)-(01, 29): COLON(OP) ':'
[31](01, 31)-(01, 39): COMMENT(COMMENT) '# bij 2x'
[31](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 14): NAME(NAME) 'a2'
[32](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[32](01, 18)-(01, 21): STRING(STRING) '"X"'
[32](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 12): INDENT(INDENT) '            '
[33](01, 12)-(01, 13): NAME(NAME) 'i'
[33](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[33](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[33](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 08): INDENT(INDENT) '        '
[34](01, 08)-(01, 12): NAME(NAME) 'elif'
[34](01, 13)-(01, 14): NAME(NAME) 's'
[34](01, 14)-(01, 15): LSQB(OP) '['
[34](01, 15)-(01, 16): NAME(NAME) 'i'
[34](01, 17)-(01, 18): MINUS(OP) '-'
[34](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[34](01, 20)-(01, 21): RSQB(OP) ']'
[34](01, 22)-(01, 24): EQEQUAL(OP) '=='
[34](01, 25)-(01, 28): STRING(STRING) '"0"'
[34](01, 28)-(01, 29): COLON(OP) ':'
[34](01, 31)-(01, 39): COMMENT(COMMENT) '# bij 0x'
[34](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 12): INDENT(INDENT) '            '
[35](01, 12)-(01, 14): NAME(NAME) 'a2'
[35](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[35](01, 18)-(01, 21): STRING(STRING) '" "'
[35](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 12): INDENT(INDENT) '            '
[36](01, 12)-(01, 13): NAME(NAME) 'i'
[36](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[36](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[36](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 01): NL(NL) '\n'
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 04): INDENT(INDENT) '    '
[38](01, 04)-(01, 10): NAME(NAME) 'return'
[38](01, 11)-(01, 13): NAME(NAME) 'a1'
[38](01, 13)-(01, 14): COMMA(OP) ','
[38](01, 15)-(01, 17): NAME(NAME) 'a2'
[38](01, 17)-(01, 18): NEWLINE(NEWLINE)
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

