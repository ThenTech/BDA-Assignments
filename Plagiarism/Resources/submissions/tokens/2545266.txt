[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'x'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 18): STRING(STRING) '"word: "'
[00](01, 18)-(01, 19): RPAR(OP) ')'
[00](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 03): NAME(NAME) 'for'
[01](01, 04)-(01, 05): NAME(NAME) 'i'
[01](01, 06)-(01, 08): NAME(NAME) 'in'
[01](01, 09)-(01, 14): NAME(NAME) 'range'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 16): LPAR(OP) '('
[01](01, 16)-(01, 19): NAME(NAME) 'len'
[01](01, 19)-(01, 20): LPAR(OP) '('
[01](01, 20)-(01, 21): NAME(NAME) 'x'
[01](01, 21)-(01, 22): RPAR(OP) ')'
[01](01, 23)-(01, 25): DOUBLESLASH(OP) '//'
[01](01, 26)-(01, 27): NUMBER(NUMBER) '2'
[01](01, 27)-(01, 28): RPAR(OP) ')'
[01](01, 29)-(01, 30): PLUS(OP) '+'
[01](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[01](01, 32)-(01, 33): RPAR(OP) ')'
[01](01, 33)-(01, 34): COLON(OP) ':'
[01](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 08): NAME(NAME) 'x'
[02](01, 08)-(01, 09): LSQB(OP) '['
[02](01, 09)-(01, 10): NAME(NAME) 'i'
[02](01, 10)-(01, 11): RSQB(OP) ']'
[02](01, 12)-(01, 14): NOTEQUAL(OP) '!='
[02](01, 15)-(01, 16): NAME(NAME) 'x'
[02](01, 16)-(01, 17): LSQB(OP) '['
[02](01, 17)-(01, 20): NAME(NAME) 'len'
[02](01, 20)-(01, 21): LPAR(OP) '('
[02](01, 21)-(01, 22): NAME(NAME) 'x'
[02](01, 22)-(01, 23): RPAR(OP) ')'
[02](01, 24)-(01, 25): MINUS(OP) '-'
[02](01, 26)-(01, 27): NAME(NAME) 'i'
[02](01, 28)-(01, 29): MINUS(OP) '-'
[02](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[02](01, 31)-(01, 32): RSQB(OP) ']'
[02](01, 32)-(01, 33): COLON(OP) ':'
[02](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 13): NAME(NAME) 'print'
[03](01, 13)-(01, 14): LPAR(OP) '('
[03](01, 14)-(01, 15): NAME(NAME) 'x'
[03](01, 15)-(01, 16): COMMA(OP) ','
[03](01, 17)-(01, 38): STRING(STRING) '"is not a palindrome"'
[03](01, 38)-(01, 39): RPAR(OP) ')'
[03](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'break'
[04](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'elif'
[05](01, 09)-(01, 10): NAME(NAME) 'i'
[05](01, 11)-(01, 13): EQEQUAL(OP) '=='
[05](01, 14)-(01, 17): NAME(NAME) 'len'
[05](01, 17)-(01, 18): LPAR(OP) '('
[05](01, 18)-(01, 19): NAME(NAME) 'x'
[05](01, 19)-(01, 20): RPAR(OP) ')'
[05](01, 21)-(01, 23): DOUBLESLASH(OP) '//'
[05](01, 24)-(01, 25): NUMBER(NUMBER) '2'
[05](01, 26)-(01, 29): NAME(NAME) 'and'
[05](01, 30)-(01, 31): NAME(NAME) 'x'
[05](01, 31)-(01, 32): LSQB(OP) '['
[05](01, 32)-(01, 33): NAME(NAME) 'i'
[05](01, 33)-(01, 34): RSQB(OP) ']'
[05](01, 35)-(01, 37): EQEQUAL(OP) '=='
[05](01, 38)-(01, 39): NAME(NAME) 'x'
[05](01, 39)-(01, 40): LSQB(OP) '['
[05](01, 40)-(01, 43): NAME(NAME) 'len'
[05](01, 43)-(01, 44): LPAR(OP) '('
[05](01, 44)-(01, 45): NAME(NAME) 'x'
[05](01, 45)-(01, 46): RPAR(OP) ')'
[05](01, 47)-(01, 48): MINUS(OP) '-'
[05](01, 49)-(01, 50): NAME(NAME) 'i'
[05](01, 51)-(01, 52): MINUS(OP) '-'
[05](01, 53)-(01, 54): NUMBER(NUMBER) '1'
[05](01, 54)-(01, 55): RSQB(OP) ']'
[05](01, 55)-(01, 56): COLON(OP) ':'
[05](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'print'
[06](01, 13)-(01, 14): LPAR(OP) '('
[06](01, 14)-(01, 15): NAME(NAME) 'x'
[06](01, 15)-(01, 16): COMMA(OP) ','
[06](01, 17)-(01, 34): STRING(STRING) '"is a palindrome"'
[06](01, 34)-(01, 35): RPAR(OP) ')'
[06](01, 35)-(01, 36): NEWLINE(NEWLINE)
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

