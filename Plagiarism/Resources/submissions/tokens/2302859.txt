[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'matrix'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 04)-(01, 08): COMMENT(COMMENT) '#SOM'
[01](01, 08)-(01, 09): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'som'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[02](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 13): NAME(NAME) 'getal'
[03](01, 14)-(01, 16): NAME(NAME) 'in'
[03](01, 17)-(01, 23): NAME(NAME) 'matrix'
[03](01, 23)-(01, 24): LSQB(OP) '['
[03](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[03](01, 25)-(01, 26): RSQB(OP) ']'
[03](01, 26)-(01, 27): COLON(OP) ':'
[03](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 11): NAME(NAME) 'som'
[04](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[04](01, 15)-(01, 20): NAME(NAME) 'getal'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 04)-(01, 22): COMMENT(COMMENT) '#UNIEKHEIDGETALLEN'
[06](01, 22)-(01, 23): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 13): NAME(NAME) 'legelijst'
[07](01, 14)-(01, 15): EQUAL(OP) '='
[07](01, 16)-(01, 17): LSQB(OP) '['
[07](01, 17)-(01, 18): RSQB(OP) ']'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 07): NAME(NAME) 'for'
[08](01, 08)-(01, 13): NAME(NAME) 'lijst'
[08](01, 14)-(01, 16): NAME(NAME) 'in'
[08](01, 17)-(01, 23): NAME(NAME) 'matrix'
[08](01, 23)-(01, 24): COLON(OP) ':'
[08](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 11): NAME(NAME) 'for'
[09](01, 12)-(01, 17): NAME(NAME) 'getal'
[09](01, 18)-(01, 20): NAME(NAME) 'in'
[09](01, 21)-(01, 26): NAME(NAME) 'lijst'
[09](01, 26)-(01, 27): COLON(OP) ':'
[09](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 14): NAME(NAME) 'if'
[10](01, 15)-(01, 20): NAME(NAME) 'getal'
[10](01, 21)-(01, 23): NAME(NAME) 'in'
[10](01, 24)-(01, 33): NAME(NAME) 'legelijst'
[10](01, 33)-(01, 34): COLON(OP) ':'
[10](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 22): NAME(NAME) 'return'
[11](01, 23)-(01, 28): NAME(NAME) 'False'
[11](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 16): NAME(NAME) 'else'
[12](01, 16)-(01, 17): COLON(OP) ':'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 25): NAME(NAME) 'legelijst'
[13](01, 25)-(01, 26): DOT(OP) '.'
[13](01, 26)-(01, 32): NAME(NAME) 'append'
[13](01, 32)-(01, 33): LPAR(OP) '('
[13](01, 33)-(01, 38): NAME(NAME) 'getal'
[13](01, 38)-(01, 39): RPAR(OP) ')'
[13](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 04)-(01, 32): COMMENT(COMMENT) '#AANTALRIJENENKOLOMMENGELIJK'
[16](01, 32)-(01, 33): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 09): NAME(NAME) 'rijen'
[17](01, 10)-(01, 11): EQUAL(OP) '='
[17](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[17](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 12): NAME(NAME) 'kolommen'
[18](01, 13)-(01, 14): EQUAL(OP) '='
[18](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[18](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 07): NAME(NAME) 'for'
[19](01, 08)-(01, 13): NAME(NAME) 'lijst'
[19](01, 14)-(01, 16): NAME(NAME) 'in'
[19](01, 17)-(01, 23): NAME(NAME) 'matrix'
[19](01, 23)-(01, 24): COLON(OP) ':'
[19](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 13): NAME(NAME) 'rijen'
[20](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[20](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[20](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 11): NAME(NAME) 'for'
[21](01, 12)-(01, 17): NAME(NAME) 'getal'
[21](01, 18)-(01, 20): NAME(NAME) 'in'
[21](01, 21)-(01, 26): NAME(NAME) 'lijst'
[21](01, 26)-(01, 27): COLON(OP) ':'
[21](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 20): NAME(NAME) 'kolommen'
[22](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[22](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[22](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 06): NAME(NAME) 'if'
[23](01, 07)-(01, 12): NAME(NAME) 'rijen'
[23](01, 13)-(01, 15): NOTEQUAL(OP) '!='
[23](01, 16)-(01, 24): NAME(NAME) 'kolommen'
[23](01, 24)-(01, 25): SLASH(OP) '/'
[23](01, 25)-(01, 30): NAME(NAME) 'rijen'
[23](01, 30)-(01, 31): COLON(OP) ':'
[23](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 14): NAME(NAME) 'return'
[24](01, 15)-(01, 20): NAME(NAME) 'False'
[24](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 01): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 04)-(01, 16): COMMENT(COMMENT) '#HORIZONTAAL'
[27](01, 16)-(01, 17): NL(NL) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 07): NAME(NAME) 'for'
[28](01, 08)-(01, 13): NAME(NAME) 'lijst'
[28](01, 14)-(01, 16): NAME(NAME) 'in'
[28](01, 17)-(01, 23): NAME(NAME) 'matrix'
[28](01, 23)-(01, 24): COLON(OP) ':'
[28](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 15): NAME(NAME) 'testsom'
[29](01, 16)-(01, 17): EQUAL(OP) '='
[29](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[29](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 11): NAME(NAME) 'for'
[30](01, 12)-(01, 17): NAME(NAME) 'getal'
[30](01, 18)-(01, 20): NAME(NAME) 'in'
[30](01, 21)-(01, 26): NAME(NAME) 'lijst'
[30](01, 26)-(01, 27): COLON(OP) ':'
[30](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 12): INDENT(INDENT) '            '
[31](01, 12)-(01, 19): NAME(NAME) 'testsom'
[31](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[31](01, 23)-(01, 28): NAME(NAME) 'getal'
[31](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 10): NAME(NAME) 'if'
[32](01, 11)-(01, 14): NAME(NAME) 'som'
[32](01, 15)-(01, 17): NOTEQUAL(OP) '!='
[32](01, 18)-(01, 25): NAME(NAME) 'testsom'
[32](01, 25)-(01, 26): COLON(OP) ':'
[32](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 12): INDENT(INDENT) '            '
[33](01, 12)-(01, 18): NAME(NAME) 'return'
[33](01, 19)-(01, 24): NAME(NAME) 'False'
[33](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 01): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 04)-(01, 14): COMMENT(COMMENT) '#VERTICAAL'
[35](01, 14)-(01, 15): NL(NL) '\n'
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 04): INDENT(INDENT) '    '
[36](01, 04)-(01, 10): NAME(NAME) 'teller'
[36](01, 11)-(01, 12): EQUAL(OP) '='
[36](01, 13)-(01, 14): MINUS(OP) '-'
[36](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[36](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 04): INDENT(INDENT) '    '
[37](01, 04)-(01, 07): NAME(NAME) 'for'
[37](01, 08)-(01, 09): NAME(NAME) 'x'
[37](01, 10)-(01, 12): NAME(NAME) 'in'
[37](01, 13)-(01, 19): NAME(NAME) 'matrix'
[37](01, 19)-(01, 20): LSQB(OP) '['
[37](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[37](01, 21)-(01, 22): RSQB(OP) ']'
[37](01, 22)-(01, 23): COLON(OP) ':'
[37](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 00)-(01, 08): INDENT(INDENT) '        '
[38](01, 08)-(01, 15): NAME(NAME) 'testsom'
[38](01, 16)-(01, 17): EQUAL(OP) '='
[38](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[38](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[38](02, 00)-(02, 00): DEDENT(DEDENT)
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 08): INDENT(INDENT) '        '
[39](01, 08)-(01, 14): NAME(NAME) 'teller'
[39](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[39](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[39](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 08): INDENT(INDENT) '        '
[40](01, 08)-(01, 11): NAME(NAME) 'for'
[40](01, 12)-(01, 17): NAME(NAME) 'lijst'
[40](01, 18)-(01, 20): NAME(NAME) 'in'
[40](01, 21)-(01, 27): NAME(NAME) 'matrix'
[40](01, 27)-(01, 28): COLON(OP) ':'
[40](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 12): INDENT(INDENT) '            '
[41](01, 12)-(01, 19): NAME(NAME) 'testsom'
[41](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[41](01, 23)-(01, 28): NAME(NAME) 'lijst'
[41](01, 28)-(01, 29): LSQB(OP) '['
[41](01, 29)-(01, 35): NAME(NAME) 'teller'
[41](01, 35)-(01, 36): RSQB(OP) ']'
[41](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 08): INDENT(INDENT) '        '
[42](01, 08)-(01, 10): NAME(NAME) 'if'
[42](01, 11)-(01, 14): NAME(NAME) 'som'
[42](01, 15)-(01, 17): NOTEQUAL(OP) '!='
[42](01, 18)-(01, 25): NAME(NAME) 'testsom'
[42](01, 25)-(01, 26): COLON(OP) ':'
[42](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 00)-(01, 12): INDENT(INDENT) '            '
[43](01, 12)-(01, 18): NAME(NAME) 'return'
[43](01, 19)-(01, 24): NAME(NAME) 'False'
[43](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[43](02, 00)-(02, 00): DEDENT(DEDENT)
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 01): NL(NL) '\n'
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 04)-(01, 18): COMMENT(COMMENT) '#DIAGONAALLBRO'
[45](01, 18)-(01, 19): NL(NL) '\n'
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 04): INDENT(INDENT) '    '
[46](01, 04)-(01, 11): NAME(NAME) 'testsom'
[46](01, 12)-(01, 13): EQUAL(OP) '='
[46](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[46](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 04): INDENT(INDENT) '    '
[47](01, 04)-(01, 14): NAME(NAME) 'welkelijst'
[47](01, 15)-(01, 16): EQUAL(OP) '='
[47](01, 17)-(01, 18): MINUS(OP) '-'
[47](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[47](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 00)-(01, 04): INDENT(INDENT) '    '
[48](01, 04)-(01, 07): NAME(NAME) 'for'
[48](01, 08)-(01, 13): NAME(NAME) 'lijst'
[48](01, 14)-(01, 16): NAME(NAME) 'in'
[48](01, 17)-(01, 23): NAME(NAME) 'matrix'
[48](01, 23)-(01, 24): COLON(OP) ':'
[48](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[48](02, 00)-(02, 00): DEDENT(DEDENT)
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 00)-(01, 08): INDENT(INDENT) '        '
[49](01, 08)-(01, 18): NAME(NAME) 'welkelijst'
[49](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[49](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[49](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[49](02, 00)-(02, 00): DEDENT(DEDENT)
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 08): INDENT(INDENT) '        '
[50](01, 08)-(01, 11): NAME(NAME) 'for'
[50](01, 12)-(01, 18): NAME(NAME) 'plaats'
[50](01, 19)-(01, 21): NAME(NAME) 'in'
[50](01, 22)-(01, 27): NAME(NAME) 'lijst'
[50](01, 27)-(01, 28): LSQB(OP) '['
[50](01, 28)-(01, 38): NAME(NAME) 'welkelijst'
[50](01, 38)-(01, 39): COLON(OP) ':'
[50](01, 39)-(01, 49): NAME(NAME) 'welkelijst'
[50](01, 49)-(01, 50): PLUS(OP) '+'
[50](01, 50)-(01, 51): NUMBER(NUMBER) '1'
[50](01, 51)-(01, 52): RSQB(OP) ']'
[50](01, 52)-(01, 53): COLON(OP) ':'
[50](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[51](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[51](01, 00)-(01, 12): INDENT(INDENT) '            '
[51](01, 12)-(01, 19): NAME(NAME) 'testsom'
[51](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[51](01, 23)-(01, 29): NAME(NAME) 'plaats'
[51](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[51](02, 00)-(02, 00): DEDENT(DEDENT)
[51](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[52](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[52](01, 00)-(01, 04): INDENT(INDENT) '    '
[52](01, 04)-(01, 06): NAME(NAME) 'if'
[52](01, 07)-(01, 14): NAME(NAME) 'testsom'
[52](01, 15)-(01, 17): NOTEQUAL(OP) '!='
[52](01, 18)-(01, 21): NAME(NAME) 'som'
[52](01, 21)-(01, 22): COLON(OP) ':'
[52](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[52](02, 00)-(02, 00): DEDENT(DEDENT)
[52](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[53](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[53](01, 00)-(01, 08): INDENT(INDENT) '        '
[53](01, 08)-(01, 14): NAME(NAME) 'return'
[53](01, 15)-(01, 20): NAME(NAME) 'False'
[53](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[53](02, 00)-(02, 00): DEDENT(DEDENT)
[53](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[54](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[54](01, 00)-(01, 04): INDENT(INDENT) '    '
[54](01, 04)-(01, 10): NAME(NAME) 'return'
[54](01, 11)-(01, 15): NAME(NAME) 'True'
[54](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[54](02, 00)-(02, 00): DEDENT(DEDENT)
[54](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[55](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[55](01, 00)-(01, 01): NL(NL) '\n'
[55](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[56](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[56](01, 00)-(01, 05): NAME(NAME) 'print'
[56](01, 05)-(01, 06): LPAR(OP) '('
[56](01, 06)-(01, 21): NAME(NAME) 'is_magic_square'
[56](01, 21)-(01, 22): LPAR(OP) '('
[56](01, 22)-(01, 23): LSQB(OP) '['
[56](01, 23)-(01, 24): LSQB(OP) '['
[56](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[56](01, 25)-(01, 26): COMMA(OP) ','
[56](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[56](01, 28)-(01, 29): COMMA(OP) ','
[56](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[56](01, 31)-(01, 32): RSQB(OP) ']'
[56](01, 32)-(01, 33): COMMA(OP) ','
[56](01, 34)-(01, 35): LSQB(OP) '['
[56](01, 35)-(01, 36): NUMBER(NUMBER) '1'
[56](01, 36)-(01, 37): COMMA(OP) ','
[56](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[56](01, 39)-(01, 40): COMMA(OP) ','
[56](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[56](01, 42)-(01, 43): RSQB(OP) ']'
[56](01, 43)-(01, 44): COMMA(OP) ','
[56](01, 45)-(01, 46): LSQB(OP) '['
[56](01, 46)-(01, 47): NUMBER(NUMBER) '1'
[56](01, 47)-(01, 48): COMMA(OP) ','
[56](01, 49)-(01, 50): NUMBER(NUMBER) '1'
[56](01, 50)-(01, 51): COMMA(OP) ','
[56](01, 52)-(01, 53): NUMBER(NUMBER) '1'
[56](01, 53)-(01, 54): RSQB(OP) ']'
[56](01, 54)-(01, 55): RSQB(OP) ']'
[56](01, 55)-(01, 56): RPAR(OP) ')'
[56](01, 56)-(01, 57): RPAR(OP) ')'
[56](01, 57)-(01, 58): NEWLINE(NEWLINE)
[56](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

