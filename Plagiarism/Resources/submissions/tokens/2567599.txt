[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 12): NAME(NAME) 'is_prime'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 14): NAME(NAME) 'x'
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): COLON(OP) ':'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): NAME(NAME) 'x'
[01](01, 09)-(01, 10): LESS(OP) '<'
[01](01, 11)-(01, 12): NUMBER(NUMBER) '2'
[01](01, 12)-(01, 13): COLON(OP) ':'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 20): NAME(NAME) 'False'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 08): NAME(NAME) 'x'
[03](01, 09)-(01, 11): EQEQUAL(OP) '=='
[03](01, 12)-(01, 13): NUMBER(NUMBER) '2'
[03](01, 13)-(01, 14): COLON(OP) ':'
[03](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 19): NAME(NAME) 'True'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 05): NAME(NAME) 'i'
[06](01, 06)-(01, 07): EQUAL(OP) '='
[06](01, 08)-(01, 09): NUMBER(NUMBER) '2'
[06](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 09): NAME(NAME) 'while'
[07](01, 10)-(01, 11): NAME(NAME) 'i'
[07](01, 12)-(01, 13): LESS(OP) '<'
[07](01, 14)-(01, 15): NAME(NAME) 'x'
[07](01, 15)-(01, 16): COLON(OP) ':'
[07](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 12): NAME(NAME) 'x'
[08](01, 13)-(01, 14): PERCENT(OP) '%'
[08](01, 15)-(01, 16): NAME(NAME) 'i'
[08](01, 17)-(01, 19): EQEQUAL(OP) '=='
[08](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[08](01, 21)-(01, 22): COLON(OP) ':'
[08](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 18): NAME(NAME) 'return'
[09](01, 19)-(01, 24): NAME(NAME) 'False'
[09](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 09): NAME(NAME) 'i'
[10](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[10](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[10](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'return'
[11](01, 11)-(01, 15): NAME(NAME) 'True'
[11](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 03): NAME(NAME) 'def'
[14](01, 04)-(01, 19): NAME(NAME) 'all_primes_upto'
[14](01, 19)-(01, 20): LPAR(OP) '('
[14](01, 20)-(01, 21): NAME(NAME) 'x'
[14](01, 21)-(01, 22): RPAR(OP) ')'
[14](01, 22)-(01, 23): COLON(OP) ':'
[14](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'for'
[15](01, 08)-(01, 09): NAME(NAME) 'k'
[15](01, 10)-(01, 12): NAME(NAME) 'in'
[15](01, 13)-(01, 18): NAME(NAME) 'range'
[15](01, 18)-(01, 19): LPAR(OP) '('
[15](01, 19)-(01, 20): NUMBER(NUMBER) '2'
[15](01, 20)-(01, 21): COMMA(OP) ','
[15](01, 22)-(01, 23): NAME(NAME) 'x'
[15](01, 24)-(01, 25): PLUS(OP) '+'
[15](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[15](01, 27)-(01, 28): RPAR(OP) ')'
[15](01, 28)-(01, 29): COLON(OP) ':'
[15](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 10): NAME(NAME) 'if'
[16](01, 11)-(01, 19): NAME(NAME) 'is_prime'
[16](01, 19)-(01, 20): LPAR(OP) '('
[16](01, 20)-(01, 21): NAME(NAME) 'k'
[16](01, 21)-(01, 22): RPAR(OP) ')'
[16](01, 22)-(01, 23): COLON(OP) ':'
[16](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 17): NAME(NAME) 'print'
[17](01, 17)-(01, 18): LPAR(OP) '('
[17](01, 18)-(01, 19): NAME(NAME) 'k'
[17](01, 19)-(01, 20): RPAR(OP) ')'
[17](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 03): NAME(NAME) 'def'
[20](01, 04)-(01, 13): NAME(NAME) 'factorize'
[20](01, 13)-(01, 14): LPAR(OP) '('
[20](01, 14)-(01, 15): NAME(NAME) 'x'
[20](01, 15)-(01, 16): RPAR(OP) ')'
[20](01, 16)-(01, 17): COLON(OP) ':'
[20](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 10): NAME(NAME) 'primes'
[21](01, 11)-(01, 12): EQUAL(OP) '='
[21](01, 13)-(01, 14): LSQB(OP) '['
[21](01, 14)-(01, 15): NAME(NAME) 'k'
[21](01, 16)-(01, 19): NAME(NAME) 'for'
[21](01, 20)-(01, 21): NAME(NAME) 'k'
[21](01, 22)-(01, 24): NAME(NAME) 'in'
[21](01, 25)-(01, 30): NAME(NAME) 'range'
[21](01, 30)-(01, 31): LPAR(OP) '('
[21](01, 31)-(01, 32): NUMBER(NUMBER) '2'
[21](01, 32)-(01, 33): COMMA(OP) ','
[21](01, 34)-(01, 35): NAME(NAME) 'x'
[21](01, 36)-(01, 37): PLUS(OP) '+'
[21](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[21](01, 39)-(01, 40): RPAR(OP) ')'
[21](01, 41)-(01, 43): NAME(NAME) 'if'
[21](01, 44)-(01, 52): NAME(NAME) 'is_prime'
[21](01, 52)-(01, 53): LPAR(OP) '('
[21](01, 53)-(01, 54): NAME(NAME) 'k'
[21](01, 54)-(01, 55): RPAR(OP) ')'
[21](01, 55)-(01, 56): RSQB(OP) ']'
[21](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 09): NAME(NAME) 'while'
[22](01, 10)-(01, 11): NAME(NAME) 'x'
[22](01, 12)-(01, 13): GREATER(OP) '>'
[22](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[22](01, 15)-(01, 16): COLON(OP) ':'
[22](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 11): NAME(NAME) 'for'
[23](01, 12)-(01, 13): NAME(NAME) 'p'
[23](01, 14)-(01, 16): NAME(NAME) 'in'
[23](01, 17)-(01, 23): NAME(NAME) 'primes'
[23](01, 23)-(01, 24): COLON(OP) ':'
[23](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): INDENT(INDENT) '            '
[24](01, 12)-(01, 14): NAME(NAME) 'if'
[24](01, 15)-(01, 16): NAME(NAME) 'x'
[24](01, 17)-(01, 18): PERCENT(OP) '%'
[24](01, 19)-(01, 22): NAME(NAME) 'int'
[24](01, 22)-(01, 23): LPAR(OP) '('
[24](01, 23)-(01, 24): NAME(NAME) 'p'
[24](01, 24)-(01, 25): RPAR(OP) ')'
[24](01, 26)-(01, 28): EQEQUAL(OP) '=='
[24](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[24](01, 30)-(01, 31): COLON(OP) ':'
[24](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 16): INDENT(INDENT) '                '
[25](01, 16)-(01, 21): NAME(NAME) 'print'
[25](01, 21)-(01, 22): LPAR(OP) '('
[25](01, 22)-(01, 23): NAME(NAME) 'p'
[25](01, 23)-(01, 24): RPAR(OP) ')'
[25](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 16): INDENT(INDENT) '                '
[26](01, 16)-(01, 17): NAME(NAME) 'x'
[26](01, 18)-(01, 19): EQUAL(OP) '='
[26](01, 20)-(01, 21): NAME(NAME) 'x'
[26](01, 22)-(01, 23): SLASH(OP) '/'
[26](01, 24)-(01, 27): NAME(NAME) 'int'
[26](01, 27)-(01, 28): LPAR(OP) '('
[26](01, 28)-(01, 29): NAME(NAME) 'p'
[26](01, 29)-(01, 30): RPAR(OP) ')'
[26](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 16): INDENT(INDENT) '                '
[27](01, 16)-(01, 21): NAME(NAME) 'break'
[27](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 08)-(01, 09): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

