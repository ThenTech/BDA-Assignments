[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'matrix'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'n'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 11): NAME(NAME) 'sum'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 18): NAME(NAME) 'matrix'
[01](01, 18)-(01, 19): LSQB(OP) '['
[01](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[01](01, 20)-(01, 21): RSQB(OP) ']'
[01](01, 21)-(01, 22): RPAR(OP) ')'
[01](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 05): NAME(NAME) 'l'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 11): NAME(NAME) 'len'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 18): NAME(NAME) 'matrix'
[02](01, 18)-(01, 19): RPAR(OP) ')'
[02](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 18): NAME(NAME) 'horizontaal'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 25): NAME(NAME) 'matrix'
[03](01, 26)-(01, 27): COMMA(OP) ','
[03](01, 27)-(01, 28): NAME(NAME) 'n'
[03](01, 29)-(01, 30): RPAR(OP) ')'
[03](01, 30)-(01, 32): EQEQUAL(OP) '=='
[03](01, 33)-(01, 38): NAME(NAME) 'False'
[03](01, 39)-(01, 41): NAME(NAME) 'or'
[03](01, 42)-(01, 51): NAME(NAME) 'verticaal'
[03](01, 51)-(01, 52): LPAR(OP) '('
[03](01, 52)-(01, 58): NAME(NAME) 'matrix'
[03](01, 58)-(01, 59): COMMA(OP) ','
[03](01, 59)-(01, 60): NAME(NAME) 'n'
[03](01, 60)-(01, 61): RPAR(OP) ')'
[03](01, 61)-(01, 63): EQEQUAL(OP) '=='
[03](01, 63)-(01, 68): NAME(NAME) 'False'
[03](01, 69)-(01, 71): NAME(NAME) 'or'
[03](01, 72)-(01, 78): NAME(NAME) 'schuin'
[03](01, 78)-(01, 79): LPAR(OP) '('
[03](01, 79)-(01, 85): NAME(NAME) 'matrix'
[03](01, 85)-(01, 86): COMMA(OP) ','
[03](01, 86)-(01, 87): NAME(NAME) 'n'
[03](01, 87)-(01, 88): RPAR(OP) ')'
[03](01, 88)-(01, 90): EQEQUAL(OP) '=='
[03](01, 90)-(01, 95): NAME(NAME) 'False'
[03](01, 96)-(01, 98): NAME(NAME) 'or'
[03](01, 99)-(01, 104): NAME(NAME) 'rijen'
[03](01, 104)-(01, 105): LPAR(OP) '('
[03](01, 105)-(01, 111): NAME(NAME) 'matrix'
[03](01, 111)-(01, 112): COMMA(OP) ','
[03](01, 112)-(01, 113): NAME(NAME) 'l'
[03](01, 113)-(01, 114): RPAR(OP) ')'
[03](01, 115)-(01, 117): EQEQUAL(OP) '=='
[03](01, 118)-(01, 123): NAME(NAME) 'False'
[03](01, 123)-(01, 124): COLON(OP) ':'
[03](01, 124)-(01, 125): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 20): NAME(NAME) 'False'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'return'
[05](01, 11)-(01, 15): NAME(NAME) 'True'
[05](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): NAME(NAME) 'def'
[07](01, 04)-(01, 09): NAME(NAME) 'rijen'
[07](01, 09)-(01, 10): LPAR(OP) '('
[07](01, 10)-(01, 16): NAME(NAME) 'matrix'
[07](01, 16)-(01, 17): COMMA(OP) ','
[07](01, 18)-(01, 19): NAME(NAME) 'l'
[07](01, 19)-(01, 20): RPAR(OP) ')'
[07](01, 20)-(01, 21): COLON(OP) ':'
[07](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 06): NAME(NAME) 'if'
[08](01, 07)-(01, 10): NAME(NAME) 'len'
[08](01, 10)-(01, 11): LPAR(OP) '('
[08](01, 11)-(01, 17): NAME(NAME) 'matrix'
[08](01, 17)-(01, 18): RPAR(OP) ')'
[08](01, 18)-(01, 19): PERCENT(OP) '%'
[08](01, 19)-(01, 20): NUMBER(NUMBER) '2'
[08](01, 21)-(01, 23): EQEQUAL(OP) '=='
[08](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[08](01, 25)-(01, 26): COLON(OP) ':'
[08](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 14): NAME(NAME) 'return'
[09](01, 15)-(01, 20): NAME(NAME) 'False'
[09](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 07): NAME(NAME) 'for'
[10](01, 08)-(01, 09): NAME(NAME) 'i'
[10](01, 10)-(01, 12): NAME(NAME) 'in'
[10](01, 13)-(01, 18): NAME(NAME) 'range'
[10](01, 18)-(01, 19): LPAR(OP) '('
[10](01, 19)-(01, 22): NAME(NAME) 'len'
[10](01, 22)-(01, 23): LPAR(OP) '('
[10](01, 23)-(01, 29): NAME(NAME) 'matrix'
[10](01, 29)-(01, 30): RPAR(OP) ')'
[10](01, 30)-(01, 31): RPAR(OP) ')'
[10](01, 31)-(01, 32): COLON(OP) ':'
[10](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 14): NAME(NAME) 'len'
[11](01, 14)-(01, 15): LPAR(OP) '('
[11](01, 15)-(01, 16): NAME(NAME) 'i'
[11](01, 16)-(01, 17): RPAR(OP) ')'
[11](01, 17)-(01, 19): NOTEQUAL(OP) '!='
[11](01, 20)-(01, 21): NAME(NAME) 'l'
[11](01, 21)-(01, 22): COLON(OP) ':'
[11](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 18): NAME(NAME) 'return'
[12](01, 19)-(01, 24): NAME(NAME) 'False'
[12](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 04)-(01, 05): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 03): NAME(NAME) 'def'
[14](01, 04)-(01, 15): NAME(NAME) 'horizontaal'
[14](01, 15)-(01, 16): LPAR(OP) '('
[14](01, 16)-(01, 22): NAME(NAME) 'matrix'
[14](01, 22)-(01, 23): COMMA(OP) ','
[14](01, 23)-(01, 24): NAME(NAME) 'n'
[14](01, 24)-(01, 25): RPAR(OP) ')'
[14](01, 25)-(01, 26): COLON(OP) ':'
[14](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'for'
[15](01, 08)-(01, 09): NAME(NAME) 'i'
[15](01, 10)-(01, 12): NAME(NAME) 'in'
[15](01, 13)-(01, 19): NAME(NAME) 'matrix'
[15](01, 19)-(01, 20): COLON(OP) ':'
[15](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 09): NAME(NAME) 'p'
[16](01, 10)-(01, 11): EQUAL(OP) '='
[16](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[16](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 11): NAME(NAME) 'for'
[17](01, 12)-(01, 13): NAME(NAME) 'j'
[17](01, 14)-(01, 16): NAME(NAME) 'in'
[17](01, 17)-(01, 18): NAME(NAME) 'i'
[17](01, 18)-(01, 19): COLON(OP) ':'
[17](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 13): NAME(NAME) 'p'
[18](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[18](01, 17)-(01, 18): NAME(NAME) 'j'
[18](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 10): NAME(NAME) 'if'
[19](01, 11)-(01, 12): NAME(NAME) 'p'
[19](01, 13)-(01, 15): NOTEQUAL(OP) '!='
[19](01, 16)-(01, 17): NAME(NAME) 'n'
[19](01, 17)-(01, 18): COLON(OP) ':'
[19](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 18): NAME(NAME) 'return'
[20](01, 19)-(01, 24): NAME(NAME) 'False'
[20](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 03): NAME(NAME) 'def'
[21](01, 04)-(01, 13): NAME(NAME) 'verticaal'
[21](01, 13)-(01, 14): LPAR(OP) '('
[21](01, 14)-(01, 20): NAME(NAME) 'matrix'
[21](01, 20)-(01, 21): COMMA(OP) ','
[21](01, 21)-(01, 22): NAME(NAME) 'n'
[21](01, 22)-(01, 23): RPAR(OP) ')'
[21](01, 23)-(01, 24): COLON(OP) ':'
[21](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 07): NAME(NAME) 'for'
[22](01, 08)-(01, 09): NAME(NAME) 'i'
[22](01, 10)-(01, 12): NAME(NAME) 'in'
[22](01, 13)-(01, 18): NAME(NAME) 'range'
[22](01, 18)-(01, 19): LPAR(OP) '('
[22](01, 19)-(01, 22): NAME(NAME) 'len'
[22](01, 22)-(01, 23): LPAR(OP) '('
[22](01, 23)-(01, 29): NAME(NAME) 'matrix'
[22](01, 29)-(01, 30): RPAR(OP) ')'
[22](01, 30)-(01, 31): RPAR(OP) ')'
[22](01, 31)-(01, 32): COLON(OP) ':'
[22](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 09): NAME(NAME) 'p'
[23](01, 09)-(01, 10): EQUAL(OP) '='
[23](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[23](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 11): NAME(NAME) 'for'
[24](01, 12)-(01, 13): NAME(NAME) 'j'
[24](01, 14)-(01, 16): NAME(NAME) 'in'
[24](01, 17)-(01, 22): NAME(NAME) 'range'
[24](01, 22)-(01, 23): LPAR(OP) '('
[24](01, 23)-(01, 26): NAME(NAME) 'len'
[24](01, 26)-(01, 27): LPAR(OP) '('
[24](01, 27)-(01, 33): NAME(NAME) 'matrix'
[24](01, 33)-(01, 34): RPAR(OP) ')'
[24](01, 34)-(01, 35): RPAR(OP) ')'
[24](01, 35)-(01, 36): COLON(OP) ':'
[24](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 13): NAME(NAME) 'p'
[25](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[25](01, 17)-(01, 23): NAME(NAME) 'matrix'
[25](01, 23)-(01, 24): LSQB(OP) '['
[25](01, 24)-(01, 25): NAME(NAME) 'i'
[25](01, 25)-(01, 26): RSQB(OP) ']'
[25](01, 26)-(01, 27): LSQB(OP) '['
[25](01, 27)-(01, 28): NAME(NAME) 'j'
[25](01, 28)-(01, 29): RSQB(OP) ']'
[25](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 08): INDENT(INDENT) '        '
[26](01, 08)-(01, 10): NAME(NAME) 'if'
[26](01, 11)-(01, 12): NAME(NAME) 'p'
[26](01, 13)-(01, 15): NOTEQUAL(OP) '!='
[26](01, 16)-(01, 17): NAME(NAME) 'n'
[26](01, 17)-(01, 18): COLON(OP) ':'
[26](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 12): INDENT(INDENT) '            '
[27](01, 12)-(01, 18): NAME(NAME) 'return'
[27](01, 19)-(01, 24): NAME(NAME) 'False'
[27](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 03): NAME(NAME) 'def'
[28](01, 04)-(01, 10): NAME(NAME) 'schuin'
[28](01, 10)-(01, 11): LPAR(OP) '('
[28](01, 11)-(01, 17): NAME(NAME) 'matrix'
[28](01, 17)-(01, 18): COMMA(OP) ','
[28](01, 18)-(01, 19): NAME(NAME) 'n'
[28](01, 19)-(01, 20): RPAR(OP) ')'
[28](01, 20)-(01, 21): COLON(OP) ':'
[28](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 05): NAME(NAME) 'p'
[29](01, 05)-(01, 06): EQUAL(OP) '='
[29](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[29](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 05): NAME(NAME) 's'
[30](01, 05)-(01, 06): EQUAL(OP) '='
[30](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[30](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 07): NAME(NAME) 'for'
[31](01, 08)-(01, 09): NAME(NAME) 'i'
[31](01, 10)-(01, 12): NAME(NAME) 'in'
[31](01, 13)-(01, 18): NAME(NAME) 'range'
[31](01, 18)-(01, 19): LPAR(OP) '('
[31](01, 19)-(01, 22): NAME(NAME) 'len'
[31](01, 22)-(01, 23): LPAR(OP) '('
[31](01, 23)-(01, 29): NAME(NAME) 'matrix'
[31](01, 29)-(01, 30): RPAR(OP) ')'
[31](01, 30)-(01, 31): RPAR(OP) ')'
[31](01, 31)-(01, 32): COLON(OP) ':'
[31](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 09): NAME(NAME) 'p'
[32](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[32](01, 13)-(01, 19): NAME(NAME) 'matrix'
[32](01, 19)-(01, 20): LSQB(OP) '['
[32](01, 20)-(01, 21): NAME(NAME) 'i'
[32](01, 21)-(01, 22): RSQB(OP) ']'
[32](01, 22)-(01, 23): LSQB(OP) '['
[32](01, 23)-(01, 24): NAME(NAME) 'i'
[32](01, 24)-(01, 25): RSQB(OP) ']'
[32](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 09): NAME(NAME) 's'
[33](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[33](01, 13)-(01, 19): NAME(NAME) 'matrix'
[33](01, 19)-(01, 20): LSQB(OP) '['
[33](01, 20)-(01, 23): NAME(NAME) 'len'
[33](01, 23)-(01, 24): LPAR(OP) '('
[33](01, 24)-(01, 30): NAME(NAME) 'matrix'
[33](01, 30)-(01, 31): RPAR(OP) ')'
[33](01, 31)-(01, 32): MINUS(OP) '-'
[33](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[33](01, 33)-(01, 34): MINUS(OP) '-'
[33](01, 34)-(01, 35): NAME(NAME) 'i'
[33](01, 35)-(01, 36): RSQB(OP) ']'
[33](01, 36)-(01, 37): LSQB(OP) '['
[33](01, 37)-(01, 40): NAME(NAME) 'len'
[33](01, 40)-(01, 41): LPAR(OP) '('
[33](01, 41)-(01, 47): NAME(NAME) 'matrix'
[33](01, 47)-(01, 48): RPAR(OP) ')'
[33](01, 48)-(01, 49): MINUS(OP) '-'
[33](01, 49)-(01, 50): NAME(NAME) 'i'
[33](01, 50)-(01, 51): MINUS(OP) '-'
[33](01, 51)-(01, 52): NUMBER(NUMBER) '1'
[33](01, 52)-(01, 53): RSQB(OP) ']'
[33](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 06): NAME(NAME) 'if'
[34](01, 07)-(01, 08): NAME(NAME) 'p'
[34](01, 08)-(01, 10): NOTEQUAL(OP) '!='
[34](01, 10)-(01, 11): NAME(NAME) 'n'
[34](01, 12)-(01, 14): NAME(NAME) 'or'
[34](01, 15)-(01, 16): NAME(NAME) 's'
[34](01, 16)-(01, 18): NOTEQUAL(OP) '!='
[34](01, 19)-(01, 20): NAME(NAME) 'n'
[34](01, 20)-(01, 21): COLON(OP) ':'
[34](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 08): INDENT(INDENT) '        '
[35](01, 08)-(01, 14): NAME(NAME) 'return'
[35](01, 15)-(01, 20): NAME(NAME) 'False'
[35](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

