[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'woord1'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 33): STRING(STRING) '"Geef een woord: "'
[00](01, 33)-(01, 34): RPAR(OP) ')'
[00](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'woord2'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 14): NAME(NAME) 'input'
[01](01, 14)-(01, 15): LPAR(OP) '('
[01](01, 15)-(01, 33): STRING(STRING) '"Geef een woord: "'
[01](01, 33)-(01, 34): RPAR(OP) ')'
[01](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'for'
[03](01, 04)-(01, 05): NAME(NAME) 'i'
[03](01, 06)-(01, 08): NAME(NAME) 'in'
[03](01, 09)-(01, 10): LSQB(OP) '['
[03](01, 10)-(01, 13): STRING(STRING) '"a"'
[03](01, 13)-(01, 14): COMMA(OP) ','
[03](01, 14)-(01, 17): STRING(STRING) '"b"'
[03](01, 17)-(01, 18): COMMA(OP) ','
[03](01, 18)-(01, 21): STRING(STRING) '"c"'
[03](01, 21)-(01, 22): COMMA(OP) ','
[03](01, 22)-(01, 25): STRING(STRING) '"d"'
[03](01, 25)-(01, 26): COMMA(OP) ','
[03](01, 26)-(01, 29): STRING(STRING) '"e"'
[03](01, 29)-(01, 30): COMMA(OP) ','
[03](01, 30)-(01, 33): STRING(STRING) '"f"'
[03](01, 33)-(01, 34): COMMA(OP) ','
[03](01, 34)-(01, 37): STRING(STRING) '"g"'
[03](01, 37)-(01, 38): COMMA(OP) ','
[03](01, 38)-(01, 41): STRING(STRING) '"h"'
[03](01, 41)-(01, 42): COMMA(OP) ','
[03](01, 42)-(01, 45): STRING(STRING) '"i"'
[03](01, 45)-(01, 46): COMMA(OP) ','
[03](01, 46)-(01, 49): STRING(STRING) '"j"'
[03](01, 49)-(01, 50): COMMA(OP) ','
[03](01, 50)-(01, 53): STRING(STRING) '"k"'
[03](01, 53)-(01, 54): COMMA(OP) ','
[03](01, 54)-(01, 57): STRING(STRING) '"l"'
[03](01, 57)-(01, 58): COMMA(OP) ','
[03](01, 58)-(01, 61): STRING(STRING) '"m"'
[03](01, 61)-(01, 62): COMMA(OP) ','
[03](01, 62)-(01, 65): STRING(STRING) '"n"'
[03](01, 65)-(01, 66): COMMA(OP) ','
[03](01, 66)-(01, 69): STRING(STRING) '"o"'
[03](01, 69)-(01, 70): COMMA(OP) ','
[03](01, 70)-(01, 73): STRING(STRING) '"p"'
[03](01, 73)-(01, 74): COMMA(OP) ','
[03](01, 74)-(01, 77): STRING(STRING) '"q"'
[03](01, 77)-(01, 78): COMMA(OP) ','
[03](01, 78)-(01, 81): STRING(STRING) '"r"'
[03](01, 81)-(01, 82): COMMA(OP) ','
[03](01, 82)-(01, 85): STRING(STRING) '"s"'
[03](01, 85)-(01, 86): COMMA(OP) ','
[03](01, 86)-(01, 89): STRING(STRING) '"t"'
[03](01, 89)-(01, 90): COMMA(OP) ','
[03](01, 90)-(01, 93): STRING(STRING) '"u"'
[03](01, 93)-(01, 94): COMMA(OP) ','
[03](01, 94)-(01, 97): STRING(STRING) '"v"'
[03](01, 97)-(01, 98): COMMA(OP) ','
[03](01, 98)-(01, 101): STRING(STRING) '"w"'
[03](01, 101)-(01, 102): COMMA(OP) ','
[03](01, 102)-(01, 105): STRING(STRING) '"x"'
[03](01, 105)-(01, 106): COMMA(OP) ','
[03](01, 106)-(01, 109): STRING(STRING) '"y"'
[03](01, 109)-(01, 110): COMMA(OP) ','
[03](01, 110)-(01, 113): STRING(STRING) '"z"'
[03](01, 113)-(01, 114): RSQB(OP) ']'
[03](01, 114)-(01, 115): COLON(OP) ':'
[03](01, 115)-(01, 116): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 05): NAME(NAME) 'x'
[04](01, 06)-(01, 07): EQUAL(OP) '='
[04](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[04](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 05): NAME(NAME) 'y'
[05](01, 05)-(01, 06): EQUAL(OP) '='
[05](01, 06)-(01, 07): NUMBER(NUMBER) '0'
[05](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 08): NAME(NAME) 'sum1'
[06](01, 09)-(01, 10): EQUAL(OP) '='
[06](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[06](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 08): NAME(NAME) 'sum2'
[07](01, 09)-(01, 10): EQUAL(OP) '='
[07](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[07](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'while'
[08](01, 10)-(01, 11): NAME(NAME) 'x'
[08](01, 12)-(01, 13): LESS(OP) '<'
[08](01, 14)-(01, 17): NAME(NAME) 'len'
[08](01, 17)-(01, 18): LPAR(OP) '('
[08](01, 18)-(01, 24): NAME(NAME) 'woord1'
[08](01, 24)-(01, 25): RPAR(OP) ')'
[08](01, 25)-(01, 26): COLON(OP) ':'
[08](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 17): NAME(NAME) 'woord1'
[09](01, 17)-(01, 18): LSQB(OP) '['
[09](01, 18)-(01, 19): NAME(NAME) 'x'
[09](01, 19)-(01, 20): RSQB(OP) ']'
[09](01, 21)-(01, 23): EQEQUAL(OP) '=='
[09](01, 24)-(01, 25): NAME(NAME) 'i'
[09](01, 25)-(01, 26): COLON(OP) ':'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 16): NAME(NAME) 'sum1'
[10](01, 17)-(01, 18): EQUAL(OP) '='
[10](01, 19)-(01, 23): NAME(NAME) 'sum1'
[10](01, 23)-(01, 24): PLUS(OP) '+'
[10](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[10](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 09): NAME(NAME) 'x'
[11](01, 10)-(01, 11): EQUAL(OP) '='
[11](01, 12)-(01, 13): NAME(NAME) 'x'
[11](01, 13)-(01, 14): PLUS(OP) '+'
[11](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[11](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 09): NAME(NAME) 'while'
[12](01, 10)-(01, 11): NAME(NAME) 'y'
[12](01, 12)-(01, 13): LESS(OP) '<'
[12](01, 14)-(01, 17): NAME(NAME) 'len'
[12](01, 17)-(01, 18): LPAR(OP) '('
[12](01, 18)-(01, 24): NAME(NAME) 'woord2'
[12](01, 24)-(01, 25): RPAR(OP) ')'
[12](01, 25)-(01, 26): COLON(OP) ':'
[12](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 17): NAME(NAME) 'woord2'
[13](01, 17)-(01, 18): LSQB(OP) '['
[13](01, 18)-(01, 19): NAME(NAME) 'y'
[13](01, 19)-(01, 20): RSQB(OP) ']'
[13](01, 21)-(01, 23): EQEQUAL(OP) '=='
[13](01, 24)-(01, 25): NAME(NAME) 'i'
[13](01, 25)-(01, 26): COLON(OP) ':'
[13](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 16): NAME(NAME) 'sum2'
[14](01, 17)-(01, 18): EQUAL(OP) '='
[14](01, 19)-(01, 23): NAME(NAME) 'sum2'
[14](01, 23)-(01, 24): PLUS(OP) '+'
[14](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[14](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 09): NAME(NAME) 'y'
[15](01, 10)-(01, 11): EQUAL(OP) '='
[15](01, 12)-(01, 13): NAME(NAME) 'y'
[15](01, 13)-(01, 14): PLUS(OP) '+'
[15](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[15](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 06): NAME(NAME) 'if'
[16](01, 07)-(01, 11): NAME(NAME) 'sum1'
[16](01, 12)-(01, 14): NOTEQUAL(OP) '!='
[16](01, 15)-(01, 19): NAME(NAME) 'sum2'
[16](01, 19)-(01, 20): COLON(OP) ':'
[16](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 13): NAME(NAME) 'break'
[17](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 02): NAME(NAME) 'if'
[18](01, 03)-(01, 04): NAME(NAME) 'i'
[18](01, 05)-(01, 07): EQEQUAL(OP) '=='
[18](01, 08)-(01, 11): STRING(STRING) '"z"'
[18](01, 11)-(01, 12): COLON(OP) ':'
[18](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 09): NAME(NAME) 'print'
[19](01, 09)-(01, 10): LPAR(OP) '('
[19](01, 10)-(01, 16): NAME(NAME) 'woord1'
[19](01, 17)-(01, 18): PLUS(OP) '+'
[19](01, 19)-(01, 26): STRING(STRING) '" and "'
[19](01, 27)-(01, 28): PLUS(OP) '+'
[19](01, 29)-(01, 35): NAME(NAME) 'woord2'
[19](01, 36)-(01, 37): PLUS(OP) '+'
[19](01, 38)-(01, 53): STRING(STRING) '" are anagrams"'
[19](01, 53)-(01, 54): RPAR(OP) ')'
[19](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): NAME(NAME) 'else'
[20](01, 04)-(01, 05): COLON(OP) ':'
[20](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 09): NAME(NAME) 'print'
[21](01, 09)-(01, 10): LPAR(OP) '('
[21](01, 10)-(01, 16): NAME(NAME) 'woord1'
[21](01, 17)-(01, 18): PLUS(OP) '+'
[21](01, 19)-(01, 26): STRING(STRING) '" and "'
[21](01, 27)-(01, 28): PLUS(OP) '+'
[21](01, 29)-(01, 35): NAME(NAME) 'woord2'
[21](01, 36)-(01, 37): PLUS(OP) '+'
[21](01, 38)-(01, 57): STRING(STRING) '" are not anagrams"'
[21](01, 57)-(01, 58): RPAR(OP) ')'
[21](01, 58)-(01, 59): NEWLINE(NEWLINE)
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

