[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 10): NAME(NAME) 'response_x'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 18): NAME(NAME) 'input'
[01](01, 18)-(01, 19): LPAR(OP) '('
[01](01, 19)-(01, 30): STRING(STRING) '"What is x"'
[01](01, 30)-(01, 31): RPAR(OP) ')'
[01](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 10): NAME(NAME) 'response_y'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 13)-(01, 18): NAME(NAME) 'input'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 30): STRING(STRING) '"What is y"'
[02](01, 30)-(01, 31): RPAR(OP) ')'
[02](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'x'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 04)-(01, 07): NAME(NAME) 'int'
[03](01, 07)-(01, 08): LPAR(OP) '('
[03](01, 08)-(01, 18): NAME(NAME) 'response_x'
[03](01, 18)-(01, 19): RPAR(OP) ')'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NAME(NAME) 'y'
[04](01, 02)-(01, 03): EQUAL(OP) '='
[04](01, 04)-(01, 07): NAME(NAME) 'int'
[04](01, 07)-(01, 08): LPAR(OP) '('
[04](01, 08)-(01, 18): NAME(NAME) 'response_y'
[04](01, 18)-(01, 19): RPAR(OP) ')'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 09): NAME(NAME) 'product_x'
[05](01, 09)-(01, 10): EQUAL(OP) '='
[05](01, 10)-(01, 11): NAME(NAME) 'x'
[05](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 09): NAME(NAME) 'product_y'
[06](01, 09)-(01, 10): EQUAL(OP) '='
[06](01, 10)-(01, 11): NAME(NAME) 'y'
[06](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 14): NAME(NAME) 'product_result'
[07](01, 14)-(01, 15): EQUAL(OP) '='
[07](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[07](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 03): NAME(NAME) 'for'
[10](01, 04)-(01, 05): NAME(NAME) 'i'
[10](01, 06)-(01, 08): NAME(NAME) 'in'
[10](01, 09)-(01, 14): NAME(NAME) 'range'
[10](01, 14)-(01, 15): LPAR(OP) '('
[10](01, 15)-(01, 16): NAME(NAME) 'y'
[10](01, 16)-(01, 17): RPAR(OP) ')'
[10](01, 17)-(01, 18): COLON(OP) ':'
[10](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 13): NAME(NAME) 'product_x'
[11](01, 14)-(01, 15): EQUAL(OP) '='
[11](01, 16)-(01, 17): NAME(NAME) 'x'
[11](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 13): NAME(NAME) 'product_y'
[12](01, 14)-(01, 15): EQUAL(OP) '='
[12](01, 16)-(01, 17): NAME(NAME) 'y'
[12](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 18): NAME(NAME) 'product_result'
[13](01, 19)-(01, 20): EQUAL(OP) '='
[13](01, 21)-(01, 22): LPAR(OP) '('
[13](01, 22)-(01, 23): LPAR(OP) '('
[13](01, 23)-(01, 24): NAME(NAME) 'x'
[13](01, 24)-(01, 25): MINUS(OP) '-'
[13](01, 25)-(01, 26): NAME(NAME) 'i'
[13](01, 26)-(01, 27): RPAR(OP) ')'
[13](01, 27)-(01, 28): SLASH(OP) '/'
[13](01, 28)-(01, 29): LPAR(OP) '('
[13](01, 29)-(01, 30): NAME(NAME) 'y'
[13](01, 30)-(01, 31): MINUS(OP) '-'
[13](01, 31)-(01, 32): NAME(NAME) 'i'
[13](01, 32)-(01, 33): RPAR(OP) ')'
[13](01, 33)-(01, 34): RPAR(OP) ')'
[13](01, 34)-(01, 35): STAR(OP) '*'
[13](01, 35)-(01, 49): NAME(NAME) 'product_result'
[13](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 05): NAME(NAME) 'print'
[14](01, 06)-(01, 07): LPAR(OP) '('
[14](01, 07)-(01, 10): NAME(NAME) 'int'
[14](01, 10)-(01, 11): LPAR(OP) '('
[14](01, 11)-(01, 25): NAME(NAME) 'product_result'
[14](01, 25)-(01, 26): RPAR(OP) ')'
[14](01, 26)-(01, 27): RPAR(OP) ')'
[14](01, 27)-(01, 28): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

