[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'matrix'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'counter'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 14): NAME(NAME) 'counterrow'
[02](01, 15)-(01, 16): EQUAL(OP) '='
[02](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[02](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 05): NAME(NAME) 'l'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 11): NAME(NAME) 'sum'
[03](01, 11)-(01, 12): LPAR(OP) '('
[03](01, 12)-(01, 18): NAME(NAME) 'matrix'
[03](01, 18)-(01, 19): COMMA(OP) ','
[03](01, 20)-(01, 21): LSQB(OP) '['
[03](01, 21)-(01, 22): RSQB(OP) ']'
[03](01, 22)-(01, 23): RPAR(OP) ')'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 05): NAME(NAME) 'A'
[04](01, 06)-(01, 07): EQUAL(OP) '='
[04](01, 08)-(01, 09): NAME(NAME) 'l'
[04](01, 09)-(01, 10): LSQB(OP) '['
[04](01, 10)-(01, 11): COLON(OP) ':'
[04](01, 11)-(01, 12): RSQB(OP) ']'
[04](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 08): NUMBER(NUMBER) '1'
[05](01, 09)-(01, 10): LESS(OP) '<'
[05](01, 11)-(01, 14): NAME(NAME) 'len'
[05](01, 14)-(01, 15): LPAR(OP) '('
[05](01, 15)-(01, 16): NAME(NAME) 'A'
[05](01, 16)-(01, 17): RPAR(OP) ')'
[05](01, 18)-(01, 19): LESS(OP) '<'
[05](01, 20)-(01, 21): NUMBER(NUMBER) '9'
[05](01, 21)-(01, 22): COLON(OP) ':'
[05](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 14): NAME(NAME) 'return'
[06](01, 15)-(01, 20): NAME(NAME) 'False'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 08): NAME(NAME) 'elif'
[07](01, 09)-(01, 12): NAME(NAME) 'len'
[07](01, 12)-(01, 13): LPAR(OP) '('
[07](01, 13)-(01, 14): NAME(NAME) 'A'
[07](01, 14)-(01, 15): RPAR(OP) ')'
[07](01, 16)-(01, 18): EQEQUAL(OP) '=='
[07](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[07](01, 20)-(01, 21): COLON(OP) ':'
[07](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 14): NAME(NAME) 'return'
[08](01, 15)-(01, 19): NAME(NAME) 'True'
[08](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 07): NAME(NAME) 'for'
[09](01, 08)-(01, 09): NAME(NAME) 'i'
[09](01, 10)-(01, 12): NAME(NAME) 'in'
[09](01, 13)-(01, 14): NAME(NAME) 'A'
[09](01, 14)-(01, 15): COLON(OP) ':'
[09](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 09): NAME(NAME) 'l'
[10](01, 09)-(01, 10): DOT(OP) '.'
[10](01, 10)-(01, 16): NAME(NAME) 'remove'
[10](01, 16)-(01, 17): LPAR(OP) '('
[10](01, 17)-(01, 18): NAME(NAME) 'i'
[10](01, 18)-(01, 19): RPAR(OP) ')'
[10](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 12): NAME(NAME) 'i'
[11](01, 13)-(01, 16): NAME(NAME) 'not'
[11](01, 17)-(01, 19): NAME(NAME) 'in'
[11](01, 20)-(01, 21): NAME(NAME) 'l'
[11](01, 21)-(01, 22): COLON(OP) ':'
[11](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 19): NAME(NAME) 'counter'
[12](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[12](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[12](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 06): NAME(NAME) 'if'
[13](01, 07)-(01, 08): NAME(NAME) 'A'
[13](01, 08)-(01, 09): LSQB(OP) '['
[13](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[13](01, 10)-(01, 11): RSQB(OP) ']'
[13](01, 12)-(01, 13): PLUS(OP) '+'
[13](01, 14)-(01, 15): NAME(NAME) 'A'
[13](01, 15)-(01, 16): LSQB(OP) '['
[13](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[13](01, 17)-(01, 18): RSQB(OP) ']'
[13](01, 19)-(01, 20): PLUS(OP) '+'
[13](01, 21)-(01, 22): NAME(NAME) 'A'
[13](01, 22)-(01, 23): LSQB(OP) '['
[13](01, 23)-(01, 24): NUMBER(NUMBER) '2'
[13](01, 24)-(01, 25): RSQB(OP) ']'
[13](01, 26)-(01, 28): EQEQUAL(OP) '=='
[13](01, 29)-(01, 30): NAME(NAME) 'A'
[13](01, 30)-(01, 31): LSQB(OP) '['
[13](01, 31)-(01, 32): NUMBER(NUMBER) '3'
[13](01, 32)-(01, 33): RSQB(OP) ']'
[13](01, 34)-(01, 35): PLUS(OP) '+'
[13](01, 36)-(01, 37): NAME(NAME) 'A'
[13](01, 37)-(01, 38): LSQB(OP) '['
[13](01, 38)-(01, 39): NUMBER(NUMBER) '4'
[13](01, 39)-(01, 40): RSQB(OP) ']'
[13](01, 41)-(01, 42): PLUS(OP) '+'
[13](01, 43)-(01, 44): NAME(NAME) 'A'
[13](01, 44)-(01, 45): LSQB(OP) '['
[13](01, 45)-(01, 46): NUMBER(NUMBER) '5'
[13](01, 46)-(01, 47): RSQB(OP) ']'
[13](01, 48)-(01, 51): NAME(NAME) 'and'
[13](01, 52)-(01, 53): NAME(NAME) 'A'
[13](01, 53)-(01, 54): LSQB(OP) '['
[13](01, 54)-(01, 55): NUMBER(NUMBER) '3'
[13](01, 55)-(01, 56): RSQB(OP) ']'
[13](01, 57)-(01, 58): PLUS(OP) '+'
[13](01, 59)-(01, 60): NAME(NAME) 'A'
[13](01, 60)-(01, 61): LSQB(OP) '['
[13](01, 61)-(01, 62): NUMBER(NUMBER) '4'
[13](01, 62)-(01, 63): RSQB(OP) ']'
[13](01, 64)-(01, 65): PLUS(OP) '+'
[13](01, 66)-(01, 67): NAME(NAME) 'A'
[13](01, 67)-(01, 68): LSQB(OP) '['
[13](01, 68)-(01, 69): NUMBER(NUMBER) '5'
[13](01, 69)-(01, 70): RSQB(OP) ']'
[13](01, 71)-(01, 73): EQEQUAL(OP) '=='
[13](01, 74)-(01, 75): NAME(NAME) 'A'
[13](01, 75)-(01, 76): LSQB(OP) '['
[13](01, 76)-(01, 77): NUMBER(NUMBER) '6'
[13](01, 77)-(01, 78): RSQB(OP) ']'
[13](01, 79)-(01, 80): PLUS(OP) '+'
[13](01, 81)-(01, 82): NAME(NAME) 'A'
[13](01, 82)-(01, 83): LSQB(OP) '['
[13](01, 83)-(01, 84): NUMBER(NUMBER) '7'
[13](01, 84)-(01, 85): RSQB(OP) ']'
[13](01, 86)-(01, 87): PLUS(OP) '+'
[13](01, 88)-(01, 89): NAME(NAME) 'A'
[13](01, 89)-(01, 90): LSQB(OP) '['
[13](01, 90)-(01, 91): NUMBER(NUMBER) '8'
[13](01, 91)-(01, 92): RSQB(OP) ']'
[13](01, 92)-(01, 93): COLON(OP) ':'
[13](01, 93)-(01, 94): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 18): NAME(NAME) 'counterrow'
[14](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[14](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[14](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 08): NAME(NAME) 'else'
[15](01, 08)-(01, 09): COLON(OP) ':'
[15](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 14): NAME(NAME) 'return'
[16](01, 15)-(01, 20): NAME(NAME) 'False'
[16](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 10): NAME(NAME) 'return'
[17](01, 11)-(01, 15): NAME(NAME) 'bool'
[17](01, 15)-(01, 16): LPAR(OP) '('
[17](01, 16)-(01, 23): NAME(NAME) 'counter'
[17](01, 24)-(01, 26): EQEQUAL(OP) '=='
[17](01, 27)-(01, 30): NAME(NAME) 'len'
[17](01, 30)-(01, 31): LPAR(OP) '('
[17](01, 31)-(01, 32): NAME(NAME) 'A'
[17](01, 32)-(01, 33): RPAR(OP) ')'
[17](01, 34)-(01, 37): NAME(NAME) 'and'
[17](01, 38)-(01, 48): NAME(NAME) 'counterrow'
[17](01, 49)-(01, 51): EQEQUAL(OP) '=='
[17](01, 52)-(01, 53): NUMBER(NUMBER) '1'
[17](01, 53)-(01, 54): RPAR(OP) ')'
[17](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

