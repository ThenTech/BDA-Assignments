[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'n'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 11): RPAR(OP) ')'
[00](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'def'
[02](01, 04)-(01, 18): NAME(NAME) 'cleanup_spaces'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 20): NAME(NAME) 's'
[02](01, 20)-(01, 21): RPAR(OP) ')'
[02](01, 21)-(01, 22): COLON(OP) ':'
[02](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 10): NAME(NAME) 'lenght'
[03](01, 11)-(01, 12): EQUAL(OP) '='
[03](01, 13)-(01, 16): NAME(NAME) 'len'
[03](01, 16)-(01, 17): LPAR(OP) '('
[03](01, 17)-(01, 18): NAME(NAME) 's'
[03](01, 18)-(01, 19): RPAR(OP) ')'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 14): NAME(NAME) 'lastletter'
[04](01, 15)-(01, 16): EQUAL(OP) '='
[04](01, 17)-(01, 19): STRING(STRING) '""'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'output'
[05](01, 11)-(01, 12): EQUAL(OP) '='
[05](01, 13)-(01, 15): STRING(STRING) '""'
[05](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 04)-(01, 57): COMMENT(COMMENT) '#print("len: ", lenght)          #impovised debug-log'
[06](01, 57)-(01, 58): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 07): NAME(NAME) 'for'
[08](01, 08)-(01, 09): NAME(NAME) 'i'
[08](01, 10)-(01, 12): NAME(NAME) 'in'
[08](01, 13)-(01, 18): NAME(NAME) 'range'
[08](01, 18)-(01, 19): LPAR(OP) '('
[08](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[08](01, 20)-(01, 21): COMMA(OP) ','
[08](01, 21)-(01, 27): NAME(NAME) 'lenght'
[08](01, 27)-(01, 28): RPAR(OP) ')'
[08](01, 28)-(01, 29): COLON(OP) ':'
[08](01, 36)-(01, 68): COMMENT(COMMENT) '#elke plaats in de string afgaan'
[08](01, 68)-(01, 69): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 08)-(01, 58): COMMENT(COMMENT) '#print("teller(i): ", i)     #improvised debug-log'
[09](01, 58)-(01, 59): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 17): NAME(NAME) 'newletter'
[10](01, 18)-(01, 19): EQUAL(OP) '='
[10](01, 20)-(01, 21): NAME(NAME) 's'
[10](01, 21)-(01, 22): LSQB(OP) '['
[10](01, 22)-(01, 23): NAME(NAME) 'i'
[10](01, 23)-(01, 24): RSQB(OP) ']'
[10](01, 36)-(01, 78): COMMENT(COMMENT) '#newletter krijgt value van huidige plaats'
[10](01, 78)-(01, 79): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 08)-(01, 58): COMMENT(COMMENT) '#print(newletter)            #improvised debug-log'
[11](01, 58)-(01, 59): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 20): NAME(NAME) 'newletter'
[13](01, 21)-(01, 23): EQEQUAL(OP) '=='
[13](01, 24)-(01, 27): STRING(STRING) '" "'
[13](01, 27)-(01, 28): COLON(OP) ':'
[13](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 14): NAME(NAME) 'if'
[14](01, 15)-(01, 25): NAME(NAME) 'lastletter'
[14](01, 26)-(01, 28): NOTEQUAL(OP) '!='
[14](01, 29)-(01, 32): STRING(STRING) '" "'
[14](01, 33)-(01, 36): NAME(NAME) 'and'
[14](01, 37)-(01, 47): NAME(NAME) 'lastletter'
[14](01, 48)-(01, 50): NOTEQUAL(OP) '!='
[14](01, 51)-(01, 53): STRING(STRING) '""'
[14](01, 53)-(01, 54): COLON(OP) ':'
[14](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 22): NAME(NAME) 'output'
[15](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[15](01, 26)-(01, 27): NAME(NAME) 's'
[15](01, 27)-(01, 28): LSQB(OP) '['
[15](01, 28)-(01, 29): NAME(NAME) 'i'
[15](01, 29)-(01, 30): RSQB(OP) ']'
[15](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 16)-(01, 62): COMMENT(COMMENT) '#print("LL != space")    #improvised debug-log'
[16](01, 62)-(01, 63): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 16): NAME(NAME) 'else'
[17](01, 16)-(01, 17): COLON(OP) ':'
[17](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 16)-(01, 62): COMMENT(COMMENT) '#print("continue")       #improvised debug-log'
[18](01, 62)-(01, 63): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 16): INDENT(INDENT) '                '
[19](01, 16)-(01, 24): NAME(NAME) 'continue'
[19](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 12): NAME(NAME) 'else'
[20](01, 12)-(01, 13): COLON(OP) ':'
[20](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 18): NAME(NAME) 'output'
[21](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[21](01, 22)-(01, 23): NAME(NAME) 's'
[21](01, 23)-(01, 24): LSQB(OP) '['
[21](01, 24)-(01, 25): NAME(NAME) 'i'
[21](01, 25)-(01, 26): RSQB(OP) ']'
[21](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 12)-(01, 56): COMMENT(COMMENT) '#print("NL != space")    #impovide debug-log'
[22](01, 56)-(01, 57): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 18): NAME(NAME) 'lastletter'
[24](01, 19)-(01, 20): EQUAL(OP) '='
[24](01, 21)-(01, 30): NAME(NAME) 'newletter'
[24](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 06): NAME(NAME) 'if'
[26](01, 07)-(01, 08): NAME(NAME) 's'
[26](01, 08)-(01, 09): LSQB(OP) '['
[26](01, 09)-(01, 15): NAME(NAME) 'lenght'
[26](01, 16)-(01, 17): MINUS(OP) '-'
[26](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[26](01, 19)-(01, 20): RSQB(OP) ']'
[26](01, 21)-(01, 23): EQEQUAL(OP) '=='
[26](01, 24)-(01, 27): STRING(STRING) '" "'
[26](01, 27)-(01, 28): COLON(OP) ':'
[26](01, 40)-(01, 63): COMMENT(COMMENT) '#removed laatste spatie'
[26](01, 63)-(01, 64): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 09): NAME(NAME) 'l'
[27](01, 10)-(01, 11): EQUAL(OP) '='
[27](01, 12)-(01, 15): NAME(NAME) 'len'
[27](01, 15)-(01, 16): LPAR(OP) '('
[27](01, 16)-(01, 22): NAME(NAME) 'output'
[27](01, 22)-(01, 23): RPAR(OP) ')'
[27](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 08)-(01, 56): COMMENT(COMMENT) '#print(l - 1)                #impovide debug-log'
[28](01, 56)-(01, 57): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 08)-(01, 56): COMMENT(COMMENT) '#print(output[l])            #impovide debug-log'
[29](01, 56)-(01, 57): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 08): INDENT(INDENT) '        '
[30](01, 08)-(01, 14): NAME(NAME) 'output'
[30](01, 15)-(01, 16): EQUAL(OP) '='
[30](01, 17)-(01, 23): NAME(NAME) 'output'
[30](01, 23)-(01, 24): LSQB(OP) '['
[30](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[30](01, 25)-(01, 26): COLON(OP) ':'
[30](01, 26)-(01, 27): NAME(NAME) 'l'
[30](01, 27)-(01, 28): MINUS(OP) '-'
[30](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[30](01, 29)-(01, 30): RSQB(OP) ']'
[30](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 01): NL(NL) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 10): NAME(NAME) 'return'
[32](01, 11)-(01, 17): NAME(NAME) 'output'
[32](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 01): NL(NL) '\n'
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 24): COMMENT(COMMENT) '#print("given input:",n)'
[34](01, 24)-(01, 25): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 05): NAME(NAME) 'print'
[35](01, 05)-(01, 06): LPAR(OP) '('
[35](01, 06)-(01, 20): NAME(NAME) 'cleanup_spaces'
[35](01, 20)-(01, 21): LPAR(OP) '('
[35](01, 21)-(01, 22): NAME(NAME) 'n'
[35](01, 22)-(01, 23): RPAR(OP) ')'
[35](01, 23)-(01, 24): RPAR(OP) ')'
[35](01, 24)-(01, 25): NEWLINE(NEWLINE)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

