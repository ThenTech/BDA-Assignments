[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): COLON(OP) ':'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'answer'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 15): STRING(STRING) '""'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 04)-(01, 11): COMMENT(COMMENT) '#deel 1'
[02](01, 11)-(01, 12): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 10): NAME(NAME) 'len'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 12): NAME(NAME) 's'
[03](01, 12)-(01, 13): RPAR(OP) ')'
[03](01, 14)-(01, 16): EQEQUAL(OP) '=='
[03](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[03](01, 18)-(01, 19): COLON(OP) ':'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): NAME(NAME) 's'
[04](01, 13)-(01, 15): EQEQUAL(OP) '=='
[04](01, 16)-(01, 19): STRING(STRING) '"X"'
[04](01, 19)-(01, 20): COLON(OP) ':'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 18): NAME(NAME) 'answer'
[05](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[05](01, 22)-(01, 25): STRING(STRING) '"0"'
[05](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 12): NAME(NAME) 'else'
[06](01, 12)-(01, 13): COLON(OP) ':'
[06](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'answer'
[07](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[07](01, 22)-(01, 25): STRING(STRING) '"0"'
[07](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 06): NAME(NAME) 'if'
[08](01, 07)-(01, 10): NAME(NAME) 'len'
[08](01, 10)-(01, 11): LPAR(OP) '('
[08](01, 11)-(01, 12): NAME(NAME) 's'
[08](01, 12)-(01, 13): RPAR(OP) ')'
[08](01, 14)-(01, 15): GREATER(OP) '>'
[08](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[08](01, 17)-(01, 18): COLON(OP) ':'
[08](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 12): NAME(NAME) 's'
[09](01, 12)-(01, 13): LSQB(OP) '['
[09](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[09](01, 14)-(01, 15): RSQB(OP) ']'
[09](01, 16)-(01, 18): EQEQUAL(OP) '=='
[09](01, 19)-(01, 22): STRING(STRING) '"X"'
[09](01, 22)-(01, 23): COLON(OP) ':'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 18): NAME(NAME) 'answer'
[10](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[10](01, 22)-(01, 25): STRING(STRING) '"1"'
[10](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 12): NAME(NAME) 'else'
[11](01, 12)-(01, 13): COLON(OP) ':'
[11](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 18): NAME(NAME) 'answer'
[12](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[12](01, 22)-(01, 25): STRING(STRING) '"0"'
[12](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 08)-(01, 15): COMMENT(COMMENT) '#deel 2'
[13](01, 15)-(01, 16): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 09): NAME(NAME) 'i'
[14](01, 09)-(01, 10): EQUAL(OP) '='
[14](01, 10)-(01, 11): NUMBER(NUMBER) '1'
[14](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 13): NAME(NAME) 'while'
[15](01, 14)-(01, 15): NAME(NAME) 'i'
[15](01, 16)-(01, 17): LESS(OP) '<'
[15](01, 18)-(01, 21): NAME(NAME) 'len'
[15](01, 21)-(01, 22): LPAR(OP) '('
[15](01, 22)-(01, 23): NAME(NAME) 's'
[15](01, 23)-(01, 24): RPAR(OP) ')'
[15](01, 24)-(01, 25): MINUS(OP) '-'
[15](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[15](01, 26)-(01, 27): COLON(OP) ':'
[15](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 14): NAME(NAME) 'if'
[16](01, 15)-(01, 16): NAME(NAME) 's'
[16](01, 16)-(01, 17): LSQB(OP) '['
[16](01, 17)-(01, 18): NAME(NAME) 'i'
[16](01, 18)-(01, 19): MINUS(OP) '-'
[16](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[16](01, 20)-(01, 21): RSQB(OP) ']'
[16](01, 22)-(01, 24): EQEQUAL(OP) '=='
[16](01, 25)-(01, 28): STRING(STRING) '" "'
[16](01, 29)-(01, 32): NAME(NAME) 'and'
[16](01, 33)-(01, 34): NAME(NAME) 's'
[16](01, 34)-(01, 35): LSQB(OP) '['
[16](01, 35)-(01, 36): NAME(NAME) 'i'
[16](01, 36)-(01, 37): PLUS(OP) '+'
[16](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[16](01, 38)-(01, 39): RSQB(OP) ']'
[16](01, 40)-(01, 42): EQEQUAL(OP) '=='
[16](01, 43)-(01, 46): STRING(STRING) '"X"'
[16](01, 46)-(01, 47): COLON(OP) ':'
[16](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 22): NAME(NAME) 'answer'
[17](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[17](01, 26)-(01, 29): STRING(STRING) '"1"'
[17](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 17): NAME(NAME) 'i'
[18](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[18](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[18](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 12): INDENT(INDENT) '            '
[19](01, 12)-(01, 16): NAME(NAME) 'elif'
[19](01, 17)-(01, 18): NAME(NAME) 's'
[19](01, 18)-(01, 19): LSQB(OP) '['
[19](01, 19)-(01, 20): NAME(NAME) 'i'
[19](01, 20)-(01, 21): MINUS(OP) '-'
[19](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[19](01, 22)-(01, 23): RSQB(OP) ']'
[19](01, 24)-(01, 26): EQEQUAL(OP) '=='
[19](01, 27)-(01, 30): STRING(STRING) '"X"'
[19](01, 31)-(01, 34): NAME(NAME) 'and'
[19](01, 35)-(01, 36): NAME(NAME) 's'
[19](01, 36)-(01, 37): LSQB(OP) '['
[19](01, 37)-(01, 38): NAME(NAME) 'i'
[19](01, 38)-(01, 39): PLUS(OP) '+'
[19](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[19](01, 40)-(01, 41): RSQB(OP) ']'
[19](01, 42)-(01, 44): EQEQUAL(OP) '=='
[19](01, 45)-(01, 48): STRING(STRING) '" "'
[19](01, 48)-(01, 49): COLON(OP) ':'
[19](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 16): INDENT(INDENT) '                '
[20](01, 16)-(01, 22): NAME(NAME) 'answer'
[20](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[20](01, 26)-(01, 29): STRING(STRING) '"1"'
[20](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 17): NAME(NAME) 'i'
[21](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[21](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[21](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 16): NAME(NAME) 'elif'
[22](01, 17)-(01, 18): NAME(NAME) 's'
[22](01, 18)-(01, 19): LSQB(OP) '['
[22](01, 19)-(01, 20): NAME(NAME) 'i'
[22](01, 20)-(01, 21): MINUS(OP) '-'
[22](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[22](01, 22)-(01, 23): RSQB(OP) ']'
[22](01, 24)-(01, 26): EQEQUAL(OP) '=='
[22](01, 27)-(01, 30): STRING(STRING) '"X"'
[22](01, 31)-(01, 34): NAME(NAME) 'and'
[22](01, 35)-(01, 36): NAME(NAME) 's'
[22](01, 36)-(01, 37): LSQB(OP) '['
[22](01, 37)-(01, 38): NAME(NAME) 'i'
[22](01, 38)-(01, 39): PLUS(OP) '+'
[22](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[22](01, 40)-(01, 41): RSQB(OP) ']'
[22](01, 42)-(01, 44): EQEQUAL(OP) '=='
[22](01, 45)-(01, 48): STRING(STRING) '"X"'
[22](01, 48)-(01, 49): COLON(OP) ':'
[22](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 16): INDENT(INDENT) '                '
[23](01, 16)-(01, 22): NAME(NAME) 'answer'
[23](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[23](01, 26)-(01, 29): STRING(STRING) '"2"'
[23](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 16): INDENT(INDENT) '                '
[24](01, 16)-(01, 17): NAME(NAME) 'i'
[24](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[24](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[24](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 16): NAME(NAME) 'elif'
[25](01, 17)-(01, 18): NAME(NAME) 's'
[25](01, 18)-(01, 19): LSQB(OP) '['
[25](01, 19)-(01, 20): NAME(NAME) 'i'
[25](01, 21)-(01, 22): MINUS(OP) '-'
[25](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[25](01, 24)-(01, 25): RSQB(OP) ']'
[25](01, 26)-(01, 28): EQEQUAL(OP) '=='
[25](01, 29)-(01, 32): STRING(STRING) '" "'
[25](01, 33)-(01, 36): NAME(NAME) 'and'
[25](01, 37)-(01, 38): NAME(NAME) 's'
[25](01, 38)-(01, 39): LSQB(OP) '['
[25](01, 39)-(01, 40): NAME(NAME) 'i'
[25](01, 41)-(01, 42): PLUS(OP) '+'
[25](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[25](01, 44)-(01, 45): RSQB(OP) ']'
[25](01, 46)-(01, 48): EQEQUAL(OP) '=='
[25](01, 49)-(01, 52): STRING(STRING) '" "'
[25](01, 52)-(01, 53): COLON(OP) ':'
[25](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 16): INDENT(INDENT) '                '
[26](01, 16)-(01, 22): NAME(NAME) 'answer'
[26](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[26](01, 26)-(01, 29): STRING(STRING) '"0"'
[26](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 16): INDENT(INDENT) '                '
[27](01, 16)-(01, 17): NAME(NAME) 'i'
[27](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[27](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[27](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 08)-(01, 15): COMMENT(COMMENT) '#deel 3'
[28](01, 15)-(01, 16): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 10): NAME(NAME) 'if'
[29](01, 11)-(01, 12): NAME(NAME) 's'
[29](01, 12)-(01, 13): LSQB(OP) '['
[29](01, 13)-(01, 16): NAME(NAME) 'len'
[29](01, 16)-(01, 17): LPAR(OP) '('
[29](01, 17)-(01, 18): NAME(NAME) 's'
[29](01, 18)-(01, 19): RPAR(OP) ')'
[29](01, 19)-(01, 20): MINUS(OP) '-'
[29](01, 20)-(01, 21): NUMBER(NUMBER) '2'
[29](01, 21)-(01, 22): RSQB(OP) ']'
[29](01, 23)-(01, 25): EQEQUAL(OP) '=='
[29](01, 26)-(01, 29): STRING(STRING) '"X"'
[29](01, 29)-(01, 30): COLON(OP) ':'
[29](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 18): NAME(NAME) 'answer'
[30](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[30](01, 22)-(01, 25): STRING(STRING) '"1"'
[30](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 08): INDENT(INDENT) '        '
[31](01, 08)-(01, 12): NAME(NAME) 'else'
[31](01, 12)-(01, 13): COLON(OP) ':'
[31](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 12): INDENT(INDENT) '            '
[32](01, 12)-(01, 18): NAME(NAME) 'answer'
[32](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[32](01, 22)-(01, 25): STRING(STRING) '"0"'
[32](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 04): INDENT(INDENT) '    '
[33](01, 04)-(01, 10): NAME(NAME) 'return'
[33](01, 11)-(01, 17): NAME(NAME) 'answer'
[33](01, 17)-(01, 18): NEWLINE(NEWLINE)
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

