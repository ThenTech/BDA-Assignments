[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 12): NAME(NAME) 'caracter'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 19): NAME(NAME) 'string'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 26): NAME(NAME) 'index'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'i'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 13): NAME(NAME) 'index'
[01](01, 14)-(01, 15): PERCENT(OP) '%'
[01](01, 16)-(01, 19): NAME(NAME) 'len'
[01](01, 19)-(01, 20): LPAR(OP) '('
[01](01, 20)-(01, 26): NAME(NAME) 'string'
[01](01, 26)-(01, 27): RPAR(OP) ')'
[01](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 10): NAME(NAME) 'return'
[02](01, 11)-(01, 17): NAME(NAME) 'string'
[02](01, 17)-(01, 18): LSQB(OP) '['
[02](01, 18)-(01, 19): NAME(NAME) 'i'
[02](01, 19)-(01, 20): RSQB(OP) ']'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'def'
[05](01, 04)-(01, 19): NAME(NAME) 'create_sequence'
[05](01, 19)-(01, 20): LPAR(OP) '('
[05](01, 20)-(01, 26): NAME(NAME) 'string'
[05](01, 26)-(01, 27): COMMA(OP) ','
[05](01, 28)-(01, 33): NAME(NAME) 'index'
[05](01, 33)-(01, 34): COMMA(OP) ','
[05](01, 35)-(01, 41): NAME(NAME) 'length'
[05](01, 41)-(01, 42): RPAR(OP) ')'
[05](01, 42)-(01, 43): COLON(OP) ':'
[05](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'i'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 24): NAME(NAME) 'index'
[06](01, 24)-(01, 25): COMMA(OP) ','
[06](01, 26)-(01, 31): NAME(NAME) 'index'
[06](01, 32)-(01, 33): PLUS(OP) '+'
[06](01, 34)-(01, 40): NAME(NAME) 'length'
[06](01, 40)-(01, 41): RPAR(OP) ')'
[06](01, 41)-(01, 42): COLON(OP) ':'
[06](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 13): NAME(NAME) 'print'
[07](01, 13)-(01, 14): LPAR(OP) '('
[07](01, 14)-(01, 22): NAME(NAME) 'caracter'
[07](01, 22)-(01, 23): LPAR(OP) '('
[07](01, 23)-(01, 29): NAME(NAME) 'string'
[07](01, 29)-(01, 30): COMMA(OP) ','
[07](01, 31)-(01, 32): NAME(NAME) 'i'
[07](01, 32)-(01, 33): RPAR(OP) ')'
[07](01, 33)-(01, 34): COMMA(OP) ','
[07](01, 35)-(01, 38): NAME(NAME) 'end'
[07](01, 38)-(01, 39): EQUAL(OP) '='
[07](01, 39)-(01, 41): STRING(STRING) '""'
[07](01, 41)-(01, 42): RPAR(OP) ')'
[07](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'print'
[08](01, 09)-(01, 10): LPAR(OP) '('
[08](01, 10)-(01, 11): RPAR(OP) ')'
[08](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 04)-(01, 05): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 15): NAME(NAME) 'create_sequence'
[11](01, 15)-(01, 16): LPAR(OP) '('
[11](01, 16)-(01, 22): STRING(STRING) '"word"'
[11](01, 22)-(01, 23): COMMA(OP) ','
[11](01, 24)-(01, 25): MINUS(OP) '-'
[11](01, 25)-(01, 26): NUMBER(NUMBER) '3'
[11](01, 26)-(01, 27): COMMA(OP) ','
[11](01, 28)-(01, 29): NUMBER(NUMBER) '9'
[11](01, 29)-(01, 30): RPAR(OP) ')'
[11](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 15): NAME(NAME) 'create_sequence'
[12](01, 15)-(01, 16): LPAR(OP) '('
[12](01, 16)-(01, 22): STRING(STRING) '"word"'
[12](01, 22)-(01, 23): COMMA(OP) ','
[12](01, 24)-(01, 25): MINUS(OP) '-'
[12](01, 25)-(01, 26): NUMBER(NUMBER) '5'
[12](01, 26)-(01, 27): COMMA(OP) ','
[12](01, 28)-(01, 30): NUMBER(NUMBER) '15'
[12](01, 30)-(01, 31): RPAR(OP) ')'
[12](01, 31)-(01, 32): NEWLINE(NEWLINE)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

