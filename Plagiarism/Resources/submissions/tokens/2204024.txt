[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): RPAR(OP) ')'
[00](01, 13)-(01, 14): COLON(OP) ':'
[00](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'lengte'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 16): NAME(NAME) 'len'
[01](01, 16)-(01, 17): LPAR(OP) '('
[01](01, 17)-(01, 18): NAME(NAME) 's'
[01](01, 18)-(01, 19): RPAR(OP) ')'
[01](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'new'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 12): STRING(STRING) '""'
[02](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 05): NAME(NAME) 'i'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 09): NUMBER(NUMBER) '1'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 10): NAME(NAME) 'teller'
[04](01, 11)-(01, 12): EQUAL(OP) '='
[04](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[04](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 08): NAME(NAME) 's'
[05](01, 08)-(01, 09): LSQB(OP) '['
[05](01, 09)-(01, 10): NUMBER(NUMBER) '1'
[05](01, 10)-(01, 11): RSQB(OP) ']'
[05](01, 12)-(01, 14): EQEQUAL(OP) '=='
[05](01, 15)-(01, 18): STRING(STRING) '"X"'
[05](01, 18)-(01, 19): COLON(OP) ':'
[05](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 11): NAME(NAME) 'new'
[06](01, 12)-(01, 13): EQUAL(OP) '='
[06](01, 14)-(01, 17): NAME(NAME) 'str'
[06](01, 17)-(01, 18): LPAR(OP) '('
[06](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[06](01, 19)-(01, 20): RPAR(OP) ')'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 08): NAME(NAME) 'else'
[07](01, 08)-(01, 09): COLON(OP) ':'
[07](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 11): NAME(NAME) 'new'
[08](01, 12)-(01, 13): EQUAL(OP) '='
[08](01, 14)-(01, 17): NAME(NAME) 'str'
[08](01, 17)-(01, 18): LPAR(OP) '('
[08](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[08](01, 19)-(01, 20): RPAR(OP) ')'
[08](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 09): NAME(NAME) 'while'
[09](01, 10)-(01, 11): NAME(NAME) 'i'
[09](01, 12)-(01, 13): LESS(OP) '<'
[09](01, 14)-(01, 20): NAME(NAME) 'lengte'
[09](01, 20)-(01, 21): COLON(OP) ':'
[09](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'teller'
[10](01, 15)-(01, 16): EQUAL(OP) '='
[10](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[10](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 12): LPAR(OP) '('
[11](01, 12)-(01, 13): NAME(NAME) 'i'
[11](01, 14)-(01, 15): LESS(OP) '<'
[11](01, 16)-(01, 22): NAME(NAME) 'lengte'
[11](01, 22)-(01, 23): MINUS(OP) '-'
[11](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[11](01, 24)-(01, 25): RPAR(OP) ')'
[11](01, 26)-(01, 29): NAME(NAME) 'and'
[11](01, 30)-(01, 31): NAME(NAME) 's'
[11](01, 31)-(01, 32): LSQB(OP) '['
[11](01, 32)-(01, 33): NAME(NAME) 'i'
[11](01, 33)-(01, 34): PLUS(OP) '+'
[11](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[11](01, 35)-(01, 36): RSQB(OP) ']'
[11](01, 37)-(01, 39): EQEQUAL(OP) '=='
[11](01, 40)-(01, 43): STRING(STRING) '"X"'
[11](01, 43)-(01, 44): COLON(OP) ':'
[11](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 18): NAME(NAME) 'teller'
[12](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[12](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[12](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 12): NAME(NAME) 's'
[13](01, 12)-(01, 13): LSQB(OP) '['
[13](01, 13)-(01, 14): NAME(NAME) 'i'
[13](01, 14)-(01, 15): MINUS(OP) '-'
[13](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[13](01, 16)-(01, 17): RSQB(OP) ']'
[13](01, 18)-(01, 20): EQEQUAL(OP) '=='
[13](01, 21)-(01, 24): STRING(STRING) '"X"'
[13](01, 24)-(01, 25): COLON(OP) ':'
[13](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 18): NAME(NAME) 'teller'
[14](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[14](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[14](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 11): NAME(NAME) 'new'
[15](01, 12)-(01, 14): PLUSEQUAL(OP) '+='
[15](01, 15)-(01, 18): NAME(NAME) 'str'
[15](01, 18)-(01, 19): LPAR(OP) '('
[15](01, 19)-(01, 25): NAME(NAME) 'teller'
[15](01, 25)-(01, 26): RPAR(OP) ')'
[15](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 09): NAME(NAME) 'i'
[16](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[16](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[16](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 10): NAME(NAME) 'return'
[17](01, 11)-(01, 14): NAME(NAME) 'new'
[17](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 03): NAME(NAME) 'def'
[18](01, 04)-(01, 10): NAME(NAME) 'decode'
[18](01, 10)-(01, 11): LPAR(OP) '('
[18](01, 11)-(01, 12): NAME(NAME) 's'
[18](01, 12)-(01, 13): RPAR(OP) ')'
[18](01, 13)-(01, 14): COLON(OP) ':'
[18](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 10): NAME(NAME) 'lengte'
[19](01, 11)-(01, 12): EQUAL(OP) '='
[19](01, 13)-(01, 16): NAME(NAME) 'len'
[19](01, 16)-(01, 17): LPAR(OP) '('
[19](01, 17)-(01, 18): NAME(NAME) 's'
[19](01, 18)-(01, 19): RPAR(OP) ')'
[19](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 05): NAME(NAME) 'i'
[20](01, 06)-(01, 07): EQUAL(OP) '='
[20](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[20](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 12): NAME(NAME) 'uitkomst'
[21](01, 13)-(01, 14): EQUAL(OP) '='
[21](01, 15)-(01, 18): STRING(STRING) '" "'
[21](01, 19)-(01, 20): STAR(OP) '*'
[21](01, 21)-(01, 27): NAME(NAME) 'lengte'
[21](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 09): NAME(NAME) 'while'
[22](01, 10)-(01, 11): NAME(NAME) 'i'
[22](01, 12)-(01, 13): LESS(OP) '<'
[22](01, 14)-(01, 20): NAME(NAME) 'lengte'
[22](01, 20)-(01, 21): COLON(OP) ':'
[22](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 11): NAME(NAME) 'new'
[23](01, 12)-(01, 13): EQUAL(OP) '='
[23](01, 13)-(01, 19): NAME(NAME) 'encode'
[23](01, 19)-(01, 20): LPAR(OP) '('
[23](01, 20)-(01, 28): NAME(NAME) 'uitkomst'
[23](01, 28)-(01, 29): RPAR(OP) ')'
[23](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 10): NAME(NAME) 'if'
[24](01, 11)-(01, 14): NAME(NAME) 'new'
[24](01, 15)-(01, 17): EQEQUAL(OP) '=='
[24](01, 18)-(01, 19): NAME(NAME) 's'
[24](01, 19)-(01, 20): COLON(OP) ':'
[24](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 18): NAME(NAME) 'return'
[25](01, 19)-(01, 22): NAME(NAME) 'new'
[25](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 08): INDENT(INDENT) '        '
[26](01, 08)-(01, 12): NAME(NAME) 'else'
[26](01, 12)-(01, 13): COLON(OP) ':'
[26](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 12): INDENT(INDENT) '            '
[27](01, 12)-(01, 13): NAME(NAME) 'j'
[27](01, 13)-(01, 14): EQUAL(OP) '='
[27](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[27](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 12): INDENT(INDENT) '            '
[28](01, 12)-(01, 17): NAME(NAME) 'while'
[28](01, 18)-(01, 19): NAME(NAME) 'j'
[28](01, 20)-(01, 21): LESS(OP) '<'
[28](01, 22)-(01, 28): NAME(NAME) 'lengte'
[28](01, 28)-(01, 29): COLON(OP) ':'
[28](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 16): INDENT(INDENT) '                '
[29](01, 16)-(01, 21): NAME(NAME) 'while'
[29](01, 22)-(01, 23): NAME(NAME) 's'
[29](01, 23)-(01, 24): LSQB(OP) '['
[29](01, 24)-(01, 25): NAME(NAME) 'j'
[29](01, 25)-(01, 26): RSQB(OP) ']'
[29](01, 27)-(01, 29): EQEQUAL(OP) '=='
[29](01, 30)-(01, 33): NAME(NAME) 'new'
[29](01, 33)-(01, 34): LSQB(OP) '['
[29](01, 34)-(01, 35): NAME(NAME) 'j'
[29](01, 35)-(01, 36): RSQB(OP) ']'
[29](01, 36)-(01, 37): COLON(OP) ':'
[29](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 20): INDENT(INDENT) '                    '
[30](01, 20)-(01, 21): NAME(NAME) 'j'
[30](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[30](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[30](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 16): INDENT(INDENT) '                '
[31](01, 16)-(01, 18): NAME(NAME) 'if'
[31](01, 19)-(01, 20): NAME(NAME) 's'
[31](01, 20)-(01, 21): LSQB(OP) '['
[31](01, 21)-(01, 22): NAME(NAME) 'j'
[31](01, 22)-(01, 23): RSQB(OP) ']'
[31](01, 24)-(01, 26): NOTEQUAL(OP) '!='
[31](01, 27)-(01, 30): NAME(NAME) 'new'
[31](01, 30)-(01, 31): LSQB(OP) '['
[31](01, 31)-(01, 32): NAME(NAME) 'j'
[31](01, 32)-(01, 33): RSQB(OP) ']'
[31](01, 33)-(01, 34): COLON(OP) ':'
[31](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 20): INDENT(INDENT) '                    '
[32](01, 20)-(01, 28): NAME(NAME) 'uitkomst'
[32](01, 29)-(01, 30): EQUAL(OP) '='
[32](01, 31)-(01, 39): NAME(NAME) 'uitkomst'
[32](01, 39)-(01, 40): LSQB(OP) '['
[32](01, 40)-(01, 41): COLON(OP) ':'
[32](01, 41)-(01, 42): NAME(NAME) 'j'
[32](01, 42)-(01, 43): RSQB(OP) ']'
[32](01, 44)-(01, 45): PLUS(OP) '+'
[32](01, 46)-(01, 49): STRING(STRING) '"X"'
[32](01, 50)-(01, 51): PLUS(OP) '+'
[32](01, 52)-(01, 60): NAME(NAME) 'uitkomst'
[32](01, 60)-(01, 61): LSQB(OP) '['
[32](01, 61)-(01, 62): NAME(NAME) 'j'
[32](01, 62)-(01, 63): PLUS(OP) '+'
[32](01, 63)-(01, 64): NUMBER(NUMBER) '1'
[32](01, 64)-(01, 65): COLON(OP) ':'
[32](01, 65)-(01, 66): RSQB(OP) ']'
[32](01, 66)-(01, 67): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 20): INDENT(INDENT) '                    '
[33](01, 20)-(01, 25): NAME(NAME) 'break'
[33](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 08): INDENT(INDENT) '        '
[34](01, 08)-(01, 09): NAME(NAME) 'i'
[34](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[34](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[34](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 04): INDENT(INDENT) '    '
[35](01, 04)-(01, 10): NAME(NAME) 'return'
[35](01, 11)-(01, 19): NAME(NAME) 'uitkomst'
[35](01, 19)-(01, 20): NEWLINE(NEWLINE)
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

