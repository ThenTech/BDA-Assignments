[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 18): NAME(NAME) 'cleanup_spaces'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 27): NAME(NAME) 'sentence'
[00](01, 27)-(01, 28): RPAR(OP) ')'
[00](01, 28)-(01, 29): COLON(OP) ':'
[00](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 15): NAME(NAME) 'newSentence'
[01](01, 16)-(01, 17): EQUAL(OP) '='
[01](01, 18)-(01, 20): STRING(STRING) '""'
[01](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[02](01, 20)-(01, 21): COMMA(OP) ','
[02](01, 22)-(01, 25): NAME(NAME) 'len'
[02](01, 25)-(01, 26): LPAR(OP) '('
[02](01, 26)-(01, 34): NAME(NAME) 'sentence'
[02](01, 34)-(01, 35): RPAR(OP) ')'
[02](01, 36)-(01, 37): PLUS(OP) '+'
[02](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[02](01, 39)-(01, 40): RPAR(OP) ')'
[02](01, 40)-(01, 41): COLON(OP) ':'
[02](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 19): NAME(NAME) 'sentence'
[03](01, 19)-(01, 20): LSQB(OP) '['
[03](01, 20)-(01, 21): NAME(NAME) 'i'
[03](01, 21)-(01, 22): MINUS(OP) '-'
[03](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[03](01, 23)-(01, 24): RSQB(OP) ']'
[03](01, 25)-(01, 27): EQEQUAL(OP) '=='
[03](01, 28)-(01, 31): STRING(STRING) '" "'
[03](01, 32)-(01, 35): NAME(NAME) 'and'
[03](01, 36)-(01, 44): NAME(NAME) 'sentence'
[03](01, 44)-(01, 45): LSQB(OP) '['
[03](01, 45)-(01, 46): NAME(NAME) 'i'
[03](01, 46)-(01, 47): RSQB(OP) ']'
[03](01, 48)-(01, 50): EQEQUAL(OP) '=='
[03](01, 51)-(01, 54): STRING(STRING) '" "'
[03](01, 54)-(01, 55): COLON(OP) ':'
[03](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 23): NAME(NAME) 'newSentence'
[04](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[04](01, 27)-(01, 29): STRING(STRING) '""'
[04](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 12): NAME(NAME) 'else'
[05](01, 12)-(01, 13): COLON(OP) ':'
[05](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 23): NAME(NAME) 'newSentence'
[06](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[06](01, 27)-(01, 35): NAME(NAME) 'sentence'
[06](01, 35)-(01, 36): LSQB(OP) '['
[06](01, 36)-(01, 37): NAME(NAME) 'i'
[06](01, 37)-(01, 38): MINUS(OP) '-'
[06](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[06](01, 39)-(01, 40): RSQB(OP) ']'
[06](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'while'
[08](01, 10)-(01, 21): NAME(NAME) 'newSentence'
[08](01, 21)-(01, 22): LSQB(OP) '['
[08](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[08](01, 23)-(01, 24): RSQB(OP) ']'
[08](01, 25)-(01, 27): EQEQUAL(OP) '=='
[08](01, 28)-(01, 31): STRING(STRING) '" "'
[08](01, 31)-(01, 32): COLON(OP) ':'
[08](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 19): NAME(NAME) 'newSentence'
[09](01, 20)-(01, 21): EQUAL(OP) '='
[09](01, 22)-(01, 33): NAME(NAME) 'newSentence'
[09](01, 33)-(01, 34): LSQB(OP) '['
[09](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[09](01, 35)-(01, 36): COLON(OP) ':'
[09](01, 36)-(01, 37): RSQB(OP) ']'
[09](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 10): NAME(NAME) 'return'
[10](01, 11)-(01, 22): NAME(NAME) 'newSentence'
[10](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

