[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 07): NAME(NAME) 'symbols'
[00](01, 08)-(01, 09): EQUAL(OP) '='
[00](01, 10)-(01, 11): LSQB(OP) '['
[00](01, 11)-(01, 14): STRING(STRING) "'A'"
[00](01, 14)-(01, 15): COMMA(OP) ','
[00](01, 16)-(01, 19): STRING(STRING) "'C'"
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 24): STRING(STRING) "'G'"
[00](01, 24)-(01, 25): COMMA(OP) ','
[00](01, 26)-(01, 29): STRING(STRING) "'T'"
[00](01, 29)-(01, 30): RSQB(OP) ']'
[00](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 16): NAME(NAME) 'place_symbol'
[03](01, 16)-(01, 17): LPAR(OP) '('
[03](01, 17)-(01, 18): NAME(NAME) 'n'
[03](01, 18)-(01, 19): COMMA(OP) ','
[03](01, 20)-(01, 26): NAME(NAME) 'string'
[03](01, 26)-(01, 27): RPAR(OP) ')'
[03](01, 27)-(01, 28): COLON(OP) ':'
[03](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 08): NAME(NAME) 'n'
[04](01, 09)-(01, 10): GREATER(OP) '>'
[04](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[04](01, 12)-(01, 13): COLON(OP) ':'
[04](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 11): NAME(NAME) 'for'
[05](01, 12)-(01, 13): NAME(NAME) 'i'
[05](01, 14)-(01, 16): NAME(NAME) 'in'
[05](01, 17)-(01, 22): NAME(NAME) 'range'
[05](01, 22)-(01, 23): LPAR(OP) '('
[05](01, 23)-(01, 24): NUMBER(NUMBER) '4'
[05](01, 24)-(01, 25): RPAR(OP) ')'
[05](01, 25)-(01, 26): COLON(OP) ':'
[05](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 18): NAME(NAME) 'result'
[06](01, 19)-(01, 20): EQUAL(OP) '='
[06](01, 21)-(01, 27): NAME(NAME) 'string'
[06](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'result'
[07](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[07](01, 22)-(01, 29): NAME(NAME) 'symbols'
[07](01, 29)-(01, 30): LSQB(OP) '['
[07](01, 30)-(01, 31): NAME(NAME) 'i'
[07](01, 31)-(01, 32): RSQB(OP) ']'
[07](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 24): NAME(NAME) 'place_symbol'
[08](01, 24)-(01, 25): LPAR(OP) '('
[08](01, 25)-(01, 26): NAME(NAME) 'n'
[08](01, 26)-(01, 27): MINUS(OP) '-'
[08](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[08](01, 28)-(01, 29): COMMA(OP) ','
[08](01, 30)-(01, 36): NAME(NAME) 'result'
[08](01, 36)-(01, 37): RPAR(OP) ')'
[08](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 14): NAME(NAME) 'if'
[09](01, 15)-(01, 16): NAME(NAME) 'n'
[09](01, 17)-(01, 19): EQEQUAL(OP) '=='
[09](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[09](01, 21)-(01, 22): COLON(OP) ':'
[09](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 21): NAME(NAME) 'print'
[10](01, 21)-(01, 22): LPAR(OP) '('
[10](01, 22)-(01, 28): NAME(NAME) 'result'
[10](01, 28)-(01, 29): RPAR(OP) ')'
[10](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): NAME(NAME) 'place_symbol'
[13](01, 12)-(01, 13): LPAR(OP) '('
[13](01, 13)-(01, 16): NAME(NAME) 'int'
[13](01, 16)-(01, 17): LPAR(OP) '('
[13](01, 17)-(01, 22): NAME(NAME) 'input'
[13](01, 22)-(01, 23): LPAR(OP) '('
[13](01, 23)-(01, 24): RPAR(OP) ')'
[13](01, 24)-(01, 25): RPAR(OP) ')'
[13](01, 25)-(01, 26): COMMA(OP) ','
[13](01, 27)-(01, 29): STRING(STRING) '""'
[13](01, 29)-(01, 30): RPAR(OP) ')'
[13](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

