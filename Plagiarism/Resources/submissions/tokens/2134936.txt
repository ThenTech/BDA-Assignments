[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): NAME(NAME) 'year'
[02](01, 05)-(01, 06): EQUAL(OP) '='
[02](01, 07)-(01, 10): NAME(NAME) 'int'
[02](01, 10)-(01, 11): LPAR(OP) '('
[02](01, 11)-(01, 16): NAME(NAME) 'input'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 31): STRING(STRING) '"input year: "'
[02](01, 31)-(01, 32): RPAR(OP) ')'
[02](01, 32)-(01, 33): RPAR(OP) ')'
[02](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 02): NAME(NAME) 'if'
[04](01, 03)-(01, 04): LPAR(OP) '('
[04](01, 04)-(01, 08): NAME(NAME) 'year'
[04](01, 09)-(01, 10): PERCENT(OP) '%'
[04](01, 11)-(01, 12): NUMBER(NUMBER) '4'
[04](01, 13)-(01, 15): NOTEQUAL(OP) '!='
[04](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[04](01, 17)-(01, 18): RPAR(OP) ')'
[04](01, 19)-(01, 21): NAME(NAME) 'or'
[04](01, 22)-(01, 23): LPAR(OP) '('
[04](01, 23)-(01, 27): NAME(NAME) 'year'
[04](01, 28)-(01, 29): PERCENT(OP) '%'
[04](01, 30)-(01, 33): NUMBER(NUMBER) '100'
[04](01, 34)-(01, 36): EQEQUAL(OP) '=='
[04](01, 37)-(01, 38): NUMBER(NUMBER) '0'
[04](01, 39)-(01, 42): NAME(NAME) 'and'
[04](01, 43)-(01, 47): NAME(NAME) 'year'
[04](01, 48)-(01, 49): PERCENT(OP) '%'
[04](01, 50)-(01, 53): NUMBER(NUMBER) '400'
[04](01, 54)-(01, 56): NOTEQUAL(OP) '!='
[04](01, 57)-(01, 58): NUMBER(NUMBER) '0'
[04](01, 58)-(01, 59): RPAR(OP) ')'
[04](01, 59)-(01, 60): COLON(OP) ':'
[04](01, 60)-(01, 61): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 09): NAME(NAME) 'print'
[05](01, 09)-(01, 10): LPAR(OP) '('
[05](01, 10)-(01, 14): NAME(NAME) 'year'
[05](01, 14)-(01, 15): COMMA(OP) ','
[05](01, 16)-(01, 32): STRING(STRING) '"is a leap year"'
[05](01, 32)-(01, 33): RPAR(OP) ')'
[05](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): NAME(NAME) 'else'
[06](01, 04)-(01, 05): COLON(OP) ':'
[06](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 09): NAME(NAME) 'print'
[07](01, 09)-(01, 10): LPAR(OP) '('
[07](01, 10)-(01, 14): NAME(NAME) 'year'
[07](01, 14)-(01, 15): COMMA(OP) ','
[07](01, 16)-(01, 37): STRING(STRING) '"is not at leap year"'
[07](01, 37)-(01, 38): RPAR(OP) ')'
[07](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

