[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'x'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 07): NAME(NAME) 'int'
[00](01, 07)-(01, 08): LPAR(OP) '('
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 20): STRING(STRING) '"x = "'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): RPAR(OP) ')'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'y'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 07): NAME(NAME) 'int'
[01](01, 07)-(01, 08): LPAR(OP) '('
[01](01, 08)-(01, 13): NAME(NAME) 'input'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 20): STRING(STRING) '"y = "'
[01](01, 20)-(01, 21): RPAR(OP) ')'
[01](01, 21)-(01, 22): RPAR(OP) ')'
[01](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 02): NAME(NAME) 'if'
[03](01, 03)-(01, 04): NAME(NAME) 'x'
[03](01, 05)-(01, 06): LESS(OP) '<'
[03](01, 07)-(01, 08): NUMBER(NUMBER) '1'
[03](01, 09)-(01, 11): NAME(NAME) 'or'
[03](01, 12)-(01, 13): NAME(NAME) 'y'
[03](01, 14)-(01, 15): LESS(OP) '<'
[03](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[03](01, 17)-(01, 18): COLON(OP) ':'
[03](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 09): NAME(NAME) 'print'
[04](01, 09)-(01, 10): LPAR(OP) '('
[04](01, 10)-(01, 42): STRING(STRING) '"x and y have to be more than 0"'
[04](01, 42)-(01, 43): RPAR(OP) ')'
[04](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): NAME(NAME) 'else'
[05](01, 04)-(01, 05): COLON(OP) ':'
[05](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 15): NAME(NAME) 'coefficient'
[06](01, 16)-(01, 17): EQUAL(OP) '='
[06](01, 18)-(01, 21): NAME(NAME) 'int'
[06](01, 21)-(01, 22): LPAR(OP) '('
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 24): NAME(NAME) 'x'
[06](01, 24)-(01, 25): SLASH(OP) '/'
[06](01, 25)-(01, 26): NAME(NAME) 'y'
[06](01, 26)-(01, 27): RPAR(OP) ')'
[06](01, 28)-(01, 29): STAR(OP) '*'
[06](01, 30)-(01, 31): LPAR(OP) '('
[06](01, 31)-(01, 32): LPAR(OP) '('
[06](01, 32)-(01, 33): NAME(NAME) 'x'
[06](01, 33)-(01, 34): MINUS(OP) '-'
[06](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[06](01, 35)-(01, 36): RPAR(OP) ')'
[06](01, 36)-(01, 37): SLASH(OP) '/'
[06](01, 37)-(01, 38): LPAR(OP) '('
[06](01, 38)-(01, 39): NAME(NAME) 'y'
[06](01, 39)-(01, 40): MINUS(OP) '-'
[06](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[06](01, 41)-(01, 42): RPAR(OP) ')'
[06](01, 42)-(01, 43): RPAR(OP) ')'
[06](01, 44)-(01, 45): STAR(OP) '*'
[06](01, 46)-(01, 47): LPAR(OP) '('
[06](01, 47)-(01, 48): LPAR(OP) '('
[06](01, 48)-(01, 49): NAME(NAME) 'x'
[06](01, 49)-(01, 50): MINUS(OP) '-'
[06](01, 50)-(01, 51): NAME(NAME) 'y'
[06](01, 51)-(01, 52): PLUS(OP) '+'
[06](01, 52)-(01, 53): NUMBER(NUMBER) '1'
[06](01, 53)-(01, 54): RPAR(OP) ')'
[06](01, 54)-(01, 55): SLASH(OP) '/'
[06](01, 55)-(01, 56): NUMBER(NUMBER) '1'
[06](01, 56)-(01, 57): RPAR(OP) ')'
[06](01, 57)-(01, 58): RPAR(OP) ')'
[06](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 09): NAME(NAME) 'print'
[08](01, 09)-(01, 10): LPAR(OP) '('
[08](01, 10)-(01, 21): NAME(NAME) 'coefficient'
[08](01, 21)-(01, 22): RPAR(OP) ')'
[08](01, 22)-(01, 23): NEWLINE(NEWLINE)
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

