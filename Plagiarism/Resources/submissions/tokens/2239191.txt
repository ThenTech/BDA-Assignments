[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'count'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[00](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 06): NAME(NAME) 'teller'
[01](01, 07)-(01, 08): EQUAL(OP) '='
[01](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[01](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): NAME(NAME) 'inwoord'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 15): NAME(NAME) 'False'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'for'
[03](01, 04)-(01, 05): NAME(NAME) 'i'
[03](01, 06)-(01, 08): NAME(NAME) 'in'
[03](01, 09)-(01, 15): NAME(NAME) 'string'
[03](01, 15)-(01, 16): COLON(OP) ':'
[03](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 08): NAME(NAME) 'i'
[04](01, 09)-(01, 11): EQEQUAL(OP) '=='
[04](01, 12)-(01, 18): NAME(NAME) 'string'
[04](01, 18)-(01, 19): LSQB(OP) '['
[04](01, 19)-(01, 20): MINUS(OP) '-'
[04](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[04](01, 21)-(01, 22): RSQB(OP) ']'
[04](01, 22)-(01, 23): COLON(OP) ':'
[04](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 13): NAME(NAME) 'slice'
[05](01, 14)-(01, 15): EQUAL(OP) '='
[05](01, 16)-(01, 22): NAME(NAME) 'string'
[05](01, 22)-(01, 23): LSQB(OP) '['
[05](01, 23)-(01, 29): NAME(NAME) 'teller'
[05](01, 30)-(01, 31): MINUS(OP) '-'
[05](01, 32)-(01, 33): LPAR(OP) '('
[05](01, 33)-(01, 38): NAME(NAME) 'count'
[05](01, 38)-(01, 39): RPAR(OP) ')'
[05](01, 39)-(01, 40): COLON(OP) ':'
[05](01, 40)-(01, 46): NAME(NAME) 'teller'
[05](01, 46)-(01, 47): PLUS(OP) '+'
[05](01, 47)-(01, 48): NUMBER(NUMBER) '1'
[05](01, 48)-(01, 49): RSQB(OP) ']'
[05](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'print'
[06](01, 13)-(01, 14): LPAR(OP) '('
[06](01, 14)-(01, 19): NAME(NAME) 'slice'
[06](01, 19)-(01, 20): COMMA(OP) ','
[06](01, 21)-(01, 26): NAME(NAME) 'count'
[06](01, 26)-(01, 27): RPAR(OP) ')'
[06](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 06): NAME(NAME) 'if'
[07](01, 07)-(01, 10): STRING(STRING) '"a"'
[07](01, 11)-(01, 13): LESSEQUAL(OP) '<='
[07](01, 14)-(01, 15): NAME(NAME) 'i'
[07](01, 16)-(01, 18): LESSEQUAL(OP) '<='
[07](01, 19)-(01, 22): STRING(STRING) '"z"'
[07](01, 23)-(01, 25): NAME(NAME) 'or'
[07](01, 26)-(01, 29): STRING(STRING) '"A"'
[07](01, 30)-(01, 32): LESSEQUAL(OP) '<='
[07](01, 33)-(01, 34): NAME(NAME) 'i'
[07](01, 35)-(01, 37): LESSEQUAL(OP) '<='
[07](01, 38)-(01, 41): STRING(STRING) '"Z"'
[07](01, 41)-(01, 42): COLON(OP) ':'
[07](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 15): NAME(NAME) 'inwoord'
[08](01, 16)-(01, 17): EQUAL(OP) '='
[08](01, 18)-(01, 22): NAME(NAME) 'True'
[08](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 13): NAME(NAME) 'count'
[09](01, 14)-(01, 15): EQUAL(OP) '='
[09](01, 16)-(01, 21): NAME(NAME) 'count'
[09](01, 21)-(01, 22): PLUS(OP) '+'
[09](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'teller'
[10](01, 15)-(01, 16): EQUAL(OP) '='
[10](01, 17)-(01, 23): NAME(NAME) 'teller'
[10](01, 23)-(01, 24): PLUS(OP) '+'
[10](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[10](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 08): NAME(NAME) 'else'
[11](01, 08)-(01, 09): COLON(OP) ':'
[11](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 10): NAME(NAME) 'if'
[12](01, 11)-(01, 18): NAME(NAME) 'inwoord'
[12](01, 18)-(01, 19): COLON(OP) ':'
[12](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 17): NAME(NAME) 'slice'
[13](01, 18)-(01, 19): EQUAL(OP) '='
[13](01, 20)-(01, 26): NAME(NAME) 'string'
[13](01, 26)-(01, 27): LSQB(OP) '['
[13](01, 27)-(01, 33): NAME(NAME) 'teller'
[13](01, 33)-(01, 34): MINUS(OP) '-'
[13](01, 34)-(01, 35): LPAR(OP) '('
[13](01, 35)-(01, 40): NAME(NAME) 'count'
[13](01, 40)-(01, 41): RPAR(OP) ')'
[13](01, 41)-(01, 42): COLON(OP) ':'
[13](01, 42)-(01, 48): NAME(NAME) 'teller'
[13](01, 48)-(01, 49): RSQB(OP) ']'
[13](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 17): NAME(NAME) 'print'
[14](01, 17)-(01, 18): LPAR(OP) '('
[14](01, 18)-(01, 23): NAME(NAME) 'slice'
[14](01, 23)-(01, 24): COMMA(OP) ','
[14](01, 25)-(01, 30): NAME(NAME) 'count'
[14](01, 30)-(01, 31): RPAR(OP) ')'
[14](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 18): NAME(NAME) 'teller'
[15](01, 19)-(01, 20): EQUAL(OP) '='
[15](01, 21)-(01, 27): NAME(NAME) 'teller'
[15](01, 28)-(01, 29): PLUS(OP) '+'
[15](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[15](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 17): NAME(NAME) 'count'
[16](01, 18)-(01, 19): EQUAL(OP) '='
[16](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[16](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 19): NAME(NAME) 'inwoord'
[17](01, 20)-(01, 21): EQUAL(OP) '='
[17](01, 22)-(01, 27): NAME(NAME) 'False'
[17](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 12)-(01, 13): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 16)-(01, 17): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 08)-(01, 09): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

