[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 55): COMMENT(COMMENT) '# write your code here int(input("stukken van 1 cent"))'
[00](01, 55)-(01, 56): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'a'
[01](01, 01)-(01, 02): EQUAL(OP) '='
[01](01, 02)-(01, 05): NAME(NAME) 'int'
[01](01, 05)-(01, 06): LPAR(OP) '('
[01](01, 06)-(01, 11): NAME(NAME) 'input'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 32): STRING(STRING) '"stukken van 1 cent"'
[01](01, 32)-(01, 33): RPAR(OP) ')'
[01](01, 33)-(01, 34): RPAR(OP) ')'
[01](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'b'
[02](01, 01)-(01, 02): EQUAL(OP) '='
[02](01, 02)-(01, 05): NAME(NAME) 'int'
[02](01, 05)-(01, 06): LPAR(OP) '('
[02](01, 06)-(01, 11): NAME(NAME) 'input'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 32): STRING(STRING) '"stukken van 2 cent"'
[02](01, 32)-(01, 33): RPAR(OP) ')'
[02](01, 33)-(01, 34): RPAR(OP) ')'
[02](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'c'
[03](01, 01)-(01, 02): EQUAL(OP) '='
[03](01, 02)-(01, 05): NAME(NAME) 'int'
[03](01, 05)-(01, 06): LPAR(OP) '('
[03](01, 06)-(01, 11): NAME(NAME) 'input'
[03](01, 11)-(01, 12): LPAR(OP) '('
[03](01, 12)-(01, 32): STRING(STRING) '"stukken van 5 cent"'
[03](01, 32)-(01, 33): RPAR(OP) ')'
[03](01, 33)-(01, 34): RPAR(OP) ')'
[03](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NAME(NAME) 'd'
[04](01, 01)-(01, 02): EQUAL(OP) '='
[04](01, 02)-(01, 05): NAME(NAME) 'int'
[04](01, 05)-(01, 06): LPAR(OP) '('
[04](01, 06)-(01, 11): NAME(NAME) 'input'
[04](01, 11)-(01, 12): LPAR(OP) '('
[04](01, 12)-(01, 33): STRING(STRING) '"stukken van 10 cent"'
[04](01, 33)-(01, 34): RPAR(OP) ')'
[04](01, 34)-(01, 35): RPAR(OP) ')'
[04](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NAME(NAME) 'e'
[05](01, 01)-(01, 02): EQUAL(OP) '='
[05](01, 02)-(01, 05): NAME(NAME) 'int'
[05](01, 05)-(01, 06): LPAR(OP) '('
[05](01, 06)-(01, 11): NAME(NAME) 'input'
[05](01, 11)-(01, 12): LPAR(OP) '('
[05](01, 12)-(01, 33): STRING(STRING) '"stukken van 20 cent"'
[05](01, 33)-(01, 34): RPAR(OP) ')'
[05](01, 34)-(01, 35): RPAR(OP) ')'
[05](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NAME(NAME) 'a'
[06](01, 01)-(01, 02): EQUAL(OP) '='
[06](01, 02)-(01, 07): NAME(NAME) 'float'
[06](01, 07)-(01, 08): LPAR(OP) '('
[06](01, 08)-(01, 09): NAME(NAME) 'a'
[06](01, 09)-(01, 10): STAR(OP) '*'
[06](01, 10)-(01, 14): NUMBER(NUMBER) '0.01'
[06](01, 14)-(01, 15): RPAR(OP) ')'
[06](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NAME(NAME) 'b'
[07](01, 01)-(01, 02): EQUAL(OP) '='
[07](01, 02)-(01, 07): NAME(NAME) 'float'
[07](01, 07)-(01, 08): LPAR(OP) '('
[07](01, 08)-(01, 09): NAME(NAME) 'b'
[07](01, 09)-(01, 10): STAR(OP) '*'
[07](01, 10)-(01, 14): NUMBER(NUMBER) '0.02'
[07](01, 14)-(01, 15): RPAR(OP) ')'
[07](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NAME(NAME) 'c'
[08](01, 01)-(01, 02): EQUAL(OP) '='
[08](01, 02)-(01, 07): NAME(NAME) 'float'
[08](01, 07)-(01, 08): LPAR(OP) '('
[08](01, 08)-(01, 09): NAME(NAME) 'c'
[08](01, 09)-(01, 10): STAR(OP) '*'
[08](01, 10)-(01, 14): NUMBER(NUMBER) '0.05'
[08](01, 14)-(01, 15): RPAR(OP) ')'
[08](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NAME(NAME) 'd'
[09](01, 01)-(01, 02): EQUAL(OP) '='
[09](01, 02)-(01, 07): NAME(NAME) 'float'
[09](01, 07)-(01, 08): LPAR(OP) '('
[09](01, 08)-(01, 09): NAME(NAME) 'd'
[09](01, 09)-(01, 10): STAR(OP) '*'
[09](01, 10)-(01, 13): NUMBER(NUMBER) '0.1'
[09](01, 13)-(01, 14): RPAR(OP) ')'
[09](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NAME(NAME) 'e'
[10](01, 01)-(01, 02): EQUAL(OP) '='
[10](01, 02)-(01, 07): NAME(NAME) 'float'
[10](01, 07)-(01, 08): LPAR(OP) '('
[10](01, 08)-(01, 09): NAME(NAME) 'e'
[10](01, 09)-(01, 10): STAR(OP) '*'
[10](01, 10)-(01, 13): NUMBER(NUMBER) '0.2'
[10](01, 13)-(01, 14): RPAR(OP) ')'
[10](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 05): NAME(NAME) 'print'
[11](01, 05)-(01, 06): LPAR(OP) '('
[11](01, 06)-(01, 17): STRING(STRING) '"you have "'
[11](01, 17)-(01, 18): PLUS(OP) '+'
[11](01, 19)-(01, 22): NAME(NAME) 'str'
[11](01, 22)-(01, 23): LPAR(OP) '('
[11](01, 23)-(01, 24): NAME(NAME) 'a'
[11](01, 24)-(01, 25): PLUS(OP) '+'
[11](01, 25)-(01, 26): NAME(NAME) 'b'
[11](01, 26)-(01, 27): PLUS(OP) '+'
[11](01, 27)-(01, 28): NAME(NAME) 'c'
[11](01, 28)-(01, 29): PLUS(OP) '+'
[11](01, 29)-(01, 30): NAME(NAME) 'd'
[11](01, 30)-(01, 31): PLUS(OP) '+'
[11](01, 31)-(01, 32): NAME(NAME) 'e'
[11](01, 32)-(01, 33): RPAR(OP) ')'
[11](01, 34)-(01, 35): PLUS(OP) '+'
[11](01, 36)-(01, 44): STRING(STRING) '" euro!"'
[11](01, 44)-(01, 45): COMMA(OP) ','
[11](01, 46)-(01, 49): NAME(NAME) 'sep'
[11](01, 49)-(01, 50): EQUAL(OP) '='
[11](01, 50)-(01, 52): STRING(STRING) '""'
[11](01, 52)-(01, 53): RPAR(OP) ')'
[11](01, 53)-(01, 54): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

