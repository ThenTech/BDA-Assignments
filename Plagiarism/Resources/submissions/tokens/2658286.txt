[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 20): NAME(NAME) 'fibonacci_values'
[00](01, 20)-(01, 21): LPAR(OP) '('
[00](01, 21)-(01, 22): NAME(NAME) 'i'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'list'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 12): LSQB(OP) '['
[01](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[01](01, 13)-(01, 14): COMMA(OP) ','
[01](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[01](01, 16)-(01, 17): COMMA(OP) ','
[01](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[01](01, 20)-(01, 21): RSQB(OP) ']'
[01](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 08): NAME(NAME) 'i'
[02](01, 09)-(01, 11): EQEQUAL(OP) '=='
[02](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[02](01, 13)-(01, 14): COLON(OP) ':'
[02](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 12): NAME(NAME) 'list'
[03](01, 13)-(01, 14): EQUAL(OP) '='
[03](01, 15)-(01, 16): LSQB(OP) '['
[03](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[03](01, 17)-(01, 18): RSQB(OP) ']'
[03](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 06): NAME(NAME) 'if'
[04](01, 07)-(01, 08): NAME(NAME) 'i'
[04](01, 09)-(01, 11): EQEQUAL(OP) '=='
[04](01, 12)-(01, 13): NUMBER(NUMBER) '2'
[04](01, 13)-(01, 14): COLON(OP) ':'
[04](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 12): NAME(NAME) 'list'
[05](01, 13)-(01, 14): EQUAL(OP) '='
[05](01, 14)-(01, 15): LSQB(OP) '['
[05](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[05](01, 16)-(01, 17): COMMA(OP) ','
[05](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[05](01, 19)-(01, 20): RSQB(OP) ']'
[05](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 06): NAME(NAME) 'if'
[06](01, 07)-(01, 08): NAME(NAME) 'i'
[06](01, 09)-(01, 11): EQEQUAL(OP) '=='
[06](01, 12)-(01, 13): NUMBER(NUMBER) '3'
[06](01, 13)-(01, 14): COLON(OP) ':'
[06](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 12): NAME(NAME) 'list'
[07](01, 13)-(01, 14): EQUAL(OP) '='
[07](01, 15)-(01, 16): LSQB(OP) '['
[07](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[07](01, 17)-(01, 18): COMMA(OP) ','
[07](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[07](01, 20)-(01, 21): COMMA(OP) ','
[07](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[07](01, 23)-(01, 24): RSQB(OP) ']'
[07](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 08): NAME(NAME) 'else'
[08](01, 08)-(01, 09): COLON(OP) ':'
[08](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 11): NAME(NAME) 'for'
[09](01, 12)-(01, 13): NAME(NAME) 'i'
[09](01, 14)-(01, 16): NAME(NAME) 'in'
[09](01, 17)-(01, 22): NAME(NAME) 'range'
[09](01, 22)-(01, 23): LPAR(OP) '('
[09](01, 23)-(01, 24): NAME(NAME) 'i'
[09](01, 25)-(01, 26): MINUS(OP) '-'
[09](01, 27)-(01, 28): NUMBER(NUMBER) '3'
[09](01, 28)-(01, 29): RPAR(OP) ')'
[09](01, 29)-(01, 30): COLON(OP) ':'
[09](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 16): NAME(NAME) 'list'
[10](01, 16)-(01, 17): DOT(OP) '.'
[10](01, 17)-(01, 23): NAME(NAME) 'append'
[10](01, 23)-(01, 24): LPAR(OP) '('
[10](01, 24)-(01, 28): NAME(NAME) 'list'
[10](01, 28)-(01, 29): LSQB(OP) '['
[10](01, 29)-(01, 30): NAME(NAME) 'i'
[10](01, 31)-(01, 32): PLUS(OP) '+'
[10](01, 33)-(01, 34): NUMBER(NUMBER) '2'
[10](01, 34)-(01, 35): RSQB(OP) ']'
[10](01, 36)-(01, 37): PLUS(OP) '+'
[10](01, 38)-(01, 42): NAME(NAME) 'list'
[10](01, 42)-(01, 43): LSQB(OP) '['
[10](01, 43)-(01, 44): NAME(NAME) 'i'
[10](01, 45)-(01, 46): PLUS(OP) '+'
[10](01, 47)-(01, 48): NUMBER(NUMBER) '1'
[10](01, 48)-(01, 49): RSQB(OP) ']'
[10](01, 49)-(01, 50): RPAR(OP) ')'
[10](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 10): NAME(NAME) 'return'
[11](01, 11)-(01, 15): NAME(NAME) 'list'
[11](01, 19)-(01, 20): NEWLINE(NEWLINE)
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

