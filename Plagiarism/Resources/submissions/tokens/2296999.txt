[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 13): NAME(NAME) 'is_unique'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 18): NAME(NAME) 'list'
[00](01, 18)-(01, 19): RPAR(OP) ')'
[00](01, 19)-(01, 20): COLON(OP) ':'
[00](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 07): NAME(NAME) 'for'
[01](01, 08)-(01, 09): NAME(NAME) 'i'
[01](01, 10)-(01, 12): NAME(NAME) 'in'
[01](01, 13)-(01, 18): NAME(NAME) 'range'
[01](01, 18)-(01, 19): LPAR(OP) '('
[01](01, 19)-(01, 22): NAME(NAME) 'len'
[01](01, 22)-(01, 23): LPAR(OP) '('
[01](01, 23)-(01, 27): NAME(NAME) 'list'
[01](01, 27)-(01, 28): RPAR(OP) ')'
[01](01, 28)-(01, 29): RPAR(OP) ')'
[01](01, 29)-(01, 30): COLON(OP) ':'
[01](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 11): NAME(NAME) 'for'
[02](01, 12)-(01, 13): NAME(NAME) 'y'
[02](01, 14)-(01, 16): NAME(NAME) 'in'
[02](01, 17)-(01, 22): NAME(NAME) 'range'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 26): NAME(NAME) 'len'
[02](01, 26)-(01, 27): LPAR(OP) '('
[02](01, 27)-(01, 31): NAME(NAME) 'list'
[02](01, 31)-(01, 32): LSQB(OP) '['
[02](01, 32)-(01, 33): NAME(NAME) 'i'
[02](01, 33)-(01, 34): RSQB(OP) ']'
[02](01, 34)-(01, 35): RPAR(OP) ')'
[02](01, 35)-(01, 36): RPAR(OP) ')'
[02](01, 36)-(01, 37): COLON(OP) ':'
[02](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 12): INDENT(INDENT) '            '
[03](01, 12)-(01, 22): NAME(NAME) 'occurences'
[03](01, 23)-(01, 24): EQUAL(OP) '='
[03](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 16): NAME(NAME) 'item'
[04](01, 17)-(01, 18): EQUAL(OP) '='
[04](01, 19)-(01, 23): NAME(NAME) 'list'
[04](01, 23)-(01, 24): LSQB(OP) '['
[04](01, 24)-(01, 25): NAME(NAME) 'i'
[04](01, 25)-(01, 26): RSQB(OP) ']'
[04](01, 26)-(01, 27): LSQB(OP) '['
[04](01, 27)-(01, 28): NAME(NAME) 'y'
[04](01, 28)-(01, 29): RSQB(OP) ']'
[04](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 15): NAME(NAME) 'for'
[05](01, 16)-(01, 18): NAME(NAME) 'i1'
[05](01, 19)-(01, 21): NAME(NAME) 'in'
[05](01, 22)-(01, 27): NAME(NAME) 'range'
[05](01, 27)-(01, 28): LPAR(OP) '('
[05](01, 28)-(01, 31): NAME(NAME) 'len'
[05](01, 31)-(01, 32): LPAR(OP) '('
[05](01, 32)-(01, 36): NAME(NAME) 'list'
[05](01, 36)-(01, 37): RPAR(OP) ')'
[05](01, 37)-(01, 38): RPAR(OP) ')'
[05](01, 38)-(01, 39): COLON(OP) ':'
[05](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 19): NAME(NAME) 'for'
[06](01, 20)-(01, 22): NAME(NAME) 'y1'
[06](01, 23)-(01, 25): NAME(NAME) 'in'
[06](01, 26)-(01, 31): NAME(NAME) 'range'
[06](01, 31)-(01, 32): LPAR(OP) '('
[06](01, 32)-(01, 35): NAME(NAME) 'len'
[06](01, 35)-(01, 36): LPAR(OP) '('
[06](01, 36)-(01, 40): NAME(NAME) 'list'
[06](01, 40)-(01, 41): LSQB(OP) '['
[06](01, 41)-(01, 43): NAME(NAME) 'i1'
[06](01, 43)-(01, 44): RSQB(OP) ']'
[06](01, 44)-(01, 45): RPAR(OP) ')'
[06](01, 45)-(01, 46): RPAR(OP) ')'
[06](01, 46)-(01, 47): COLON(OP) ':'
[06](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 20): INDENT(INDENT) '                    '
[07](01, 20)-(01, 22): NAME(NAME) 'if'
[07](01, 23)-(01, 27): NAME(NAME) 'item'
[07](01, 28)-(01, 30): EQEQUAL(OP) '=='
[07](01, 31)-(01, 35): NAME(NAME) 'list'
[07](01, 35)-(01, 36): LSQB(OP) '['
[07](01, 36)-(01, 38): NAME(NAME) 'i1'
[07](01, 38)-(01, 39): RSQB(OP) ']'
[07](01, 39)-(01, 40): LSQB(OP) '['
[07](01, 40)-(01, 42): NAME(NAME) 'y1'
[07](01, 42)-(01, 43): RSQB(OP) ']'
[07](01, 43)-(01, 44): COLON(OP) ':'
[07](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 24): INDENT(INDENT) '                        '
[08](01, 24)-(01, 34): NAME(NAME) 'occurences'
[08](01, 35)-(01, 37): PLUSEQUAL(OP) '+='
[08](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[08](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 24): INDENT(INDENT) '                        '
[09](01, 24)-(01, 26): NAME(NAME) 'if'
[09](01, 27)-(01, 37): NAME(NAME) 'occurences'
[09](01, 38)-(01, 39): GREATER(OP) '>'
[09](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[09](01, 41)-(01, 42): COLON(OP) ':'
[09](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 28): INDENT(INDENT) '                            '
[10](01, 28)-(01, 34): NAME(NAME) 'return'
[10](01, 35)-(01, 40): NAME(NAME) 'False'
[10](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 10): NAME(NAME) 'return'
[12](01, 11)-(01, 15): NAME(NAME) 'True'
[12](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 03): NAME(NAME) 'def'
[14](01, 04)-(01, 07): NAME(NAME) 'sum'
[14](01, 07)-(01, 08): LPAR(OP) '('
[14](01, 08)-(01, 12): NAME(NAME) 'type'
[14](01, 12)-(01, 13): COMMA(OP) ','
[14](01, 14)-(01, 20): NAME(NAME) 'number'
[14](01, 20)-(01, 21): COMMA(OP) ','
[14](01, 22)-(01, 26): NAME(NAME) 'list'
[14](01, 26)-(01, 27): RPAR(OP) ')'
[14](01, 27)-(01, 28): COLON(OP) ':'
[14](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'sum'
[15](01, 08)-(01, 09): EQUAL(OP) '='
[15](01, 10)-(01, 11): NUMBER(NUMBER) '0'
[15](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 06): NAME(NAME) 'if'
[16](01, 07)-(01, 11): NAME(NAME) 'type'
[16](01, 12)-(01, 14): EQEQUAL(OP) '=='
[16](01, 15)-(01, 20): STRING(STRING) '"row"'
[16](01, 20)-(01, 21): COLON(OP) ':'
[16](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 11): NAME(NAME) 'for'
[17](01, 12)-(01, 17): NAME(NAME) 'value'
[17](01, 18)-(01, 20): NAME(NAME) 'in'
[17](01, 21)-(01, 26): NAME(NAME) 'range'
[17](01, 26)-(01, 27): LPAR(OP) '('
[17](01, 27)-(01, 31): NAME(NAME) 'list'
[17](01, 31)-(01, 32): LSQB(OP) '['
[17](01, 32)-(01, 38): NAME(NAME) 'number'
[17](01, 38)-(01, 39): RSQB(OP) ']'
[17](01, 39)-(01, 40): RPAR(OP) ')'
[17](01, 40)-(01, 41): COLON(OP) ':'
[17](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 15): NAME(NAME) 'sum'
[18](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[18](01, 19)-(01, 24): NAME(NAME) 'value'
[18](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 06): NAME(NAME) 'if'
[19](01, 07)-(01, 11): NAME(NAME) 'type'
[19](01, 12)-(01, 14): EQEQUAL(OP) '=='
[19](01, 15)-(01, 24): STRING(STRING) '"collumn"'
[19](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 11): NAME(NAME) 'for'
[20](01, 12)-(01, 16): NAME(NAME) 'rows'
[20](01, 17)-(01, 19): NAME(NAME) 'in'
[20](01, 20)-(01, 25): NAME(NAME) 'range'
[20](01, 25)-(01, 26): LPAR(OP) '('
[20](01, 26)-(01, 29): NAME(NAME) 'len'
[20](01, 29)-(01, 30): LPAR(OP) '('
[20](01, 30)-(01, 34): NAME(NAME) 'list'
[20](01, 34)-(01, 35): RPAR(OP) ')'
[20](01, 35)-(01, 36): RPAR(OP) ')'
[20](01, 36)-(01, 37): COLON(OP) ':'
[20](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 16): NAME(NAME) 'list'
[21](01, 16)-(01, 17): LSQB(OP) '['
[21](01, 17)-(01, 21): NAME(NAME) 'rows'
[21](01, 21)-(01, 22): RSQB(OP) ']'
[21](01, 22)-(01, 23): LSQB(OP) '['
[21](01, 23)-(01, 29): NAME(NAME) 'number'
[21](01, 29)-(01, 30): RSQB(OP) ']'
[21](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 06): NAME(NAME) 'if'
[22](01, 07)-(01, 11): NAME(NAME) 'type'
[22](01, 12)-(01, 14): EQEQUAL(OP) '=='
[22](01, 15)-(01, 25): STRING(STRING) '"diagonal"'
[22](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 11): NAME(NAME) 'for'
[23](01, 12)-(01, 13): NAME(NAME) 'i'
[23](01, 14)-(01, 16): NAME(NAME) 'in'
[23](01, 17)-(01, 22): NAME(NAME) 'range'
[23](01, 22)-(01, 23): LPAR(OP) '('
[23](01, 23)-(01, 26): NAME(NAME) 'len'
[23](01, 26)-(01, 27): LPAR(OP) '('
[23](01, 27)-(01, 31): NAME(NAME) 'list'
[23](01, 31)-(01, 32): RPAR(OP) ')'
[23](01, 32)-(01, 33): RPAR(OP) ')'
[23](01, 33)-(01, 34): COLON(OP) ':'
[23](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): INDENT(INDENT) '            '
[24](01, 12)-(01, 15): NAME(NAME) 'sum'
[24](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[24](01, 19)-(01, 23): NAME(NAME) 'list'
[24](01, 23)-(01, 24): LSQB(OP) '['
[24](01, 24)-(01, 25): NAME(NAME) 'i'
[24](01, 25)-(01, 26): RSQB(OP) ']'
[24](01, 26)-(01, 27): LSQB(OP) '['
[24](01, 27)-(01, 28): NAME(NAME) 'i'
[24](01, 28)-(01, 29): RSQB(OP) ']'
[24](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 04)-(01, 05): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 10): NAME(NAME) 'return'
[26](01, 11)-(01, 14): NAME(NAME) 'sum'
[26](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 01): NL(NL) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 01): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 03): NAME(NAME) 'def'
[30](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[30](01, 19)-(01, 20): LPAR(OP) '('
[30](01, 20)-(01, 26): NAME(NAME) 'matrix'
[30](01, 26)-(01, 27): RPAR(OP) ')'
[30](01, 27)-(01, 28): COLON(OP) ':'
[30](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 05): NAME(NAME) 'n'
[31](01, 06)-(01, 07): EQUAL(OP) '='
[31](01, 08)-(01, 11): NAME(NAME) 'len'
[31](01, 11)-(01, 12): LPAR(OP) '('
[31](01, 12)-(01, 18): NAME(NAME) 'matrix'
[31](01, 18)-(01, 19): RPAR(OP) ')'
[31](01, 20)-(01, 21): MINUS(OP) '-'
[31](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[31](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 06): NAME(NAME) 'if'
[32](01, 07)-(01, 10): NAME(NAME) 'not'
[32](01, 11)-(01, 20): NAME(NAME) 'is_unique'
[32](01, 20)-(01, 21): LPAR(OP) '('
[32](01, 21)-(01, 27): NAME(NAME) 'matrix'
[32](01, 27)-(01, 28): RPAR(OP) ')'
[32](01, 28)-(01, 29): COLON(OP) ':'
[32](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 14): NAME(NAME) 'return'
[33](01, 15)-(01, 20): NAME(NAME) 'False'
[33](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 04)-(01, 05): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 04): INDENT(INDENT) '    '
[35](01, 04)-(01, 07): NAME(NAME) 'for'
[35](01, 08)-(01, 09): NAME(NAME) 'i'
[35](01, 10)-(01, 12): NAME(NAME) 'in'
[35](01, 13)-(01, 18): NAME(NAME) 'range'
[35](01, 18)-(01, 19): LPAR(OP) '('
[35](01, 19)-(01, 20): NAME(NAME) 'n'
[35](01, 20)-(01, 21): RPAR(OP) ')'
[35](01, 21)-(01, 22): COLON(OP) ':'
[35](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 08): INDENT(INDENT) '        '
[36](01, 08)-(01, 10): NAME(NAME) 'if'
[36](01, 11)-(01, 14): NAME(NAME) 'not'
[36](01, 15)-(01, 16): LPAR(OP) '('
[36](01, 16)-(01, 19): NAME(NAME) 'sum'
[36](01, 19)-(01, 20): LPAR(OP) '('
[36](01, 20)-(01, 25): STRING(STRING) '"row"'
[36](01, 25)-(01, 26): COMMA(OP) ','
[36](01, 27)-(01, 28): NAME(NAME) 'n'
[36](01, 28)-(01, 29): COMMA(OP) ','
[36](01, 30)-(01, 36): NAME(NAME) 'matrix'
[36](01, 36)-(01, 37): RPAR(OP) ')'
[36](01, 38)-(01, 40): EQEQUAL(OP) '=='
[36](01, 41)-(01, 44): NAME(NAME) 'sum'
[36](01, 44)-(01, 45): LPAR(OP) '('
[36](01, 45)-(01, 54): STRING(STRING) '"collumn"'
[36](01, 54)-(01, 55): COMMA(OP) ','
[36](01, 56)-(01, 57): NAME(NAME) 'n'
[36](01, 57)-(01, 58): COMMA(OP) ','
[36](01, 59)-(01, 65): NAME(NAME) 'matrix'
[36](01, 65)-(01, 66): RPAR(OP) ')'
[36](01, 67)-(01, 70): NAME(NAME) 'and'
[36](01, 71)-(01, 74): NAME(NAME) 'sum'
[36](01, 74)-(01, 75): LPAR(OP) '('
[36](01, 75)-(01, 84): STRING(STRING) '"collumn"'
[36](01, 84)-(01, 85): COMMA(OP) ','
[36](01, 86)-(01, 87): NAME(NAME) 'n'
[36](01, 87)-(01, 88): COMMA(OP) ','
[36](01, 89)-(01, 95): NAME(NAME) 'matrix'
[36](01, 95)-(01, 96): RPAR(OP) ')'
[36](01, 97)-(01, 99): EQEQUAL(OP) '=='
[36](01, 100)-(01, 103): NAME(NAME) 'sum'
[36](01, 103)-(01, 104): LPAR(OP) '('
[36](01, 104)-(01, 114): STRING(STRING) '"diagonal"'
[36](01, 114)-(01, 115): COMMA(OP) ','
[36](01, 116)-(01, 117): NAME(NAME) 'n'
[36](01, 117)-(01, 118): COMMA(OP) ','
[36](01, 119)-(01, 125): NAME(NAME) 'matrix'
[36](01, 125)-(01, 126): RPAR(OP) ')'
[36](01, 126)-(01, 127): RPAR(OP) ')'
[36](01, 127)-(01, 128): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 12): INDENT(INDENT) '            '
[37](01, 12)-(01, 18): NAME(NAME) 'return'
[37](01, 19)-(01, 24): NAME(NAME) 'False'
[37](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 12)-(01, 13): NL(NL) '\n'
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 04): INDENT(INDENT) '    '
[39](01, 04)-(01, 10): NAME(NAME) 'return'
[39](01, 11)-(01, 15): NAME(NAME) 'True'
[39](01, 15)-(01, 16): NEWLINE(NEWLINE)
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

