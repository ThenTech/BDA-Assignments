[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 16): NAME(NAME) 'combinations'
[00](01, 16)-(01, 17): LPAR(OP) '('
[00](01, 17)-(01, 18): NAME(NAME) 'm'
[00](01, 18)-(01, 19): COMMA(OP) ','
[00](01, 20)-(01, 26): NAME(NAME) 'prefix'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'global'
[01](01, 11)-(01, 17): NAME(NAME) 'subset'
[01](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 10): NAME(NAME) 'len'
[02](01, 10)-(01, 11): LPAR(OP) '('
[02](01, 11)-(01, 17): NAME(NAME) 'prefix'
[02](01, 17)-(01, 18): RPAR(OP) ')'
[02](01, 19)-(01, 21): EQEQUAL(OP) '=='
[02](01, 22)-(01, 23): NAME(NAME) 'm'
[02](01, 23)-(01, 24): COLON(OP) ':'
[02](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 11): NAME(NAME) 'for'
[03](01, 12)-(01, 13): NAME(NAME) 'i'
[03](01, 14)-(01, 16): NAME(NAME) 'in'
[03](01, 17)-(01, 22): NAME(NAME) 'range'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 26): NAME(NAME) 'len'
[03](01, 26)-(01, 27): LPAR(OP) '('
[03](01, 27)-(01, 33): NAME(NAME) 'prefix'
[03](01, 33)-(01, 34): RPAR(OP) ')'
[03](01, 34)-(01, 35): RPAR(OP) ')'
[03](01, 35)-(01, 36): COLON(OP) ':'
[03](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 14): NAME(NAME) 'if'
[04](01, 15)-(01, 16): NAME(NAME) 'i'
[04](01, 17)-(01, 18): LESS(OP) '<'
[04](01, 19)-(01, 22): NAME(NAME) 'len'
[04](01, 22)-(01, 23): LPAR(OP) '('
[04](01, 23)-(01, 29): NAME(NAME) 'prefix'
[04](01, 29)-(01, 30): RPAR(OP) ')'
[04](01, 30)-(01, 31): MINUS(OP) '-'
[04](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[04](01, 32)-(01, 33): COLON(OP) ':'
[04](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 16): INDENT(INDENT) '                '
[05](01, 16)-(01, 21): NAME(NAME) 'print'
[05](01, 21)-(01, 22): LPAR(OP) '('
[05](01, 22)-(01, 28): NAME(NAME) 'prefix'
[05](01, 28)-(01, 29): LSQB(OP) '['
[05](01, 29)-(01, 30): NAME(NAME) 'i'
[05](01, 30)-(01, 31): RSQB(OP) ']'
[05](01, 32)-(01, 33): PLUS(OP) '+'
[05](01, 34)-(01, 37): STRING(STRING) "' '"
[05](01, 37)-(01, 38): COMMA(OP) ','
[05](01, 39)-(01, 42): NAME(NAME) 'end'
[05](01, 42)-(01, 43): EQUAL(OP) '='
[05](01, 43)-(01, 45): STRING(STRING) "''"
[05](01, 45)-(01, 46): RPAR(OP) ')'
[05](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 16): NAME(NAME) 'else'
[06](01, 16)-(01, 17): COLON(OP) ':'
[06](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 16): INDENT(INDENT) '                '
[07](01, 16)-(01, 21): NAME(NAME) 'print'
[07](01, 21)-(01, 22): LPAR(OP) '('
[07](01, 22)-(01, 28): NAME(NAME) 'prefix'
[07](01, 28)-(01, 29): LSQB(OP) '['
[07](01, 29)-(01, 30): NAME(NAME) 'i'
[07](01, 30)-(01, 31): RSQB(OP) ']'
[07](01, 31)-(01, 32): RPAR(OP) ')'
[07](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 08): NAME(NAME) 'else'
[09](01, 08)-(01, 09): COLON(OP) ':'
[09](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 11): NAME(NAME) 'for'
[10](01, 12)-(01, 16): NAME(NAME) 'base'
[10](01, 17)-(01, 19): NAME(NAME) 'in'
[10](01, 20)-(01, 26): NAME(NAME) 'subset'
[10](01, 26)-(01, 27): COLON(OP) ':'
[10](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 14): NAME(NAME) 'if'
[11](01, 15)-(01, 18): NAME(NAME) 'len'
[11](01, 18)-(01, 19): LPAR(OP) '('
[11](01, 19)-(01, 25): NAME(NAME) 'prefix'
[11](01, 25)-(01, 26): RPAR(OP) ')'
[11](01, 27)-(01, 28): GREATER(OP) '>'
[11](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[11](01, 30)-(01, 31): COLON(OP) ':'
[11](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 18): NAME(NAME) 'if'
[12](01, 19)-(01, 23): NAME(NAME) 'base'
[12](01, 24)-(01, 27): NAME(NAME) 'not'
[12](01, 28)-(01, 30): NAME(NAME) 'in'
[12](01, 31)-(01, 37): NAME(NAME) 'prefix'
[12](01, 38)-(01, 41): NAME(NAME) 'and'
[12](01, 42)-(01, 45): NAME(NAME) 'int'
[12](01, 45)-(01, 46): LPAR(OP) '('
[12](01, 46)-(01, 50): NAME(NAME) 'base'
[12](01, 50)-(01, 51): RPAR(OP) ')'
[12](01, 52)-(01, 53): LESS(OP) '<'
[12](01, 54)-(01, 57): NAME(NAME) 'int'
[12](01, 57)-(01, 58): LPAR(OP) '('
[12](01, 58)-(01, 64): NAME(NAME) 'prefix'
[12](01, 64)-(01, 65): LSQB(OP) '['
[12](01, 65)-(01, 66): MINUS(OP) '-'
[12](01, 66)-(01, 67): NUMBER(NUMBER) '1'
[12](01, 67)-(01, 68): RSQB(OP) ']'
[12](01, 68)-(01, 69): RPAR(OP) ')'
[12](01, 69)-(01, 70): COLON(OP) ':'
[12](01, 70)-(01, 71): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 20): INDENT(INDENT) '                    '
[13](01, 20)-(01, 32): NAME(NAME) 'combinations'
[13](01, 32)-(01, 33): LPAR(OP) '('
[13](01, 33)-(01, 34): NAME(NAME) 'm'
[13](01, 34)-(01, 35): COMMA(OP) ','
[13](01, 36)-(01, 42): NAME(NAME) 'prefix'
[13](01, 43)-(01, 44): PLUS(OP) '+'
[13](01, 45)-(01, 49): NAME(NAME) 'base'
[13](01, 49)-(01, 50): RPAR(OP) ')'
[13](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 16): NAME(NAME) 'else'
[14](01, 16)-(01, 17): COLON(OP) ':'
[14](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 28): NAME(NAME) 'combinations'
[15](01, 28)-(01, 29): LPAR(OP) '('
[15](01, 29)-(01, 30): NAME(NAME) 'm'
[15](01, 30)-(01, 31): COMMA(OP) ','
[15](01, 32)-(01, 38): NAME(NAME) 'prefix'
[15](01, 39)-(01, 40): PLUS(OP) '+'
[15](01, 41)-(01, 45): NAME(NAME) 'base'
[15](01, 45)-(01, 46): RPAR(OP) ')'
[15](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NAME(NAME) 'n'
[17](01, 02)-(01, 03): EQUAL(OP) '='
[17](01, 04)-(01, 07): NAME(NAME) 'int'
[17](01, 07)-(01, 08): LPAR(OP) '('
[17](01, 08)-(01, 13): NAME(NAME) 'input'
[17](01, 13)-(01, 14): LPAR(OP) '('
[17](01, 14)-(01, 30): STRING(STRING) "'Subset {1-n}: '"
[17](01, 30)-(01, 31): RPAR(OP) ')'
[17](01, 31)-(01, 32): RPAR(OP) ')'
[17](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NAME(NAME) 'm'
[18](01, 02)-(01, 03): EQUAL(OP) '='
[18](01, 04)-(01, 07): NAME(NAME) 'int'
[18](01, 07)-(01, 08): LPAR(OP) '('
[18](01, 08)-(01, 13): NAME(NAME) 'input'
[18](01, 13)-(01, 14): LPAR(OP) '('
[18](01, 14)-(01, 28): STRING(STRING) "'Max length: '"
[18](01, 28)-(01, 29): RPAR(OP) ')'
[18](01, 29)-(01, 30): RPAR(OP) ')'
[18](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 06): NAME(NAME) 'subset'
[19](01, 07)-(01, 08): EQUAL(OP) '='
[19](01, 09)-(01, 11): STRING(STRING) "''"
[19](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 03): NAME(NAME) 'for'
[21](01, 04)-(01, 10): NAME(NAME) 'number'
[21](01, 11)-(01, 13): NAME(NAME) 'in'
[21](01, 14)-(01, 19): NAME(NAME) 'range'
[21](01, 19)-(01, 20): LPAR(OP) '('
[21](01, 20)-(01, 21): NAME(NAME) 'n'
[21](01, 21)-(01, 22): COMMA(OP) ','
[21](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[21](01, 24)-(01, 25): COMMA(OP) ','
[21](01, 26)-(01, 27): MINUS(OP) '-'
[21](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[21](01, 28)-(01, 29): RPAR(OP) ')'
[21](01, 29)-(01, 30): COLON(OP) ':'
[21](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 10): NAME(NAME) 'subset'
[22](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[22](01, 14)-(01, 17): NAME(NAME) 'str'
[22](01, 17)-(01, 18): LPAR(OP) '('
[22](01, 18)-(01, 24): NAME(NAME) 'number'
[22](01, 24)-(01, 25): RPAR(OP) ')'
[22](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 01): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): NAME(NAME) 'combinations'
[24](01, 12)-(01, 13): LPAR(OP) '('
[24](01, 13)-(01, 14): NAME(NAME) 'm'
[24](01, 14)-(01, 15): COMMA(OP) ','
[24](01, 16)-(01, 18): STRING(STRING) "''"
[24](01, 18)-(01, 19): RPAR(OP) ')'
[24](01, 19)-(01, 20): NEWLINE(NEWLINE)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

