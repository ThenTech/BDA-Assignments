[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 09): NAME(NAME) 'shift'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 11): NAME(NAME) 'l'
[00](01, 11)-(01, 12): COMMA(OP) ','
[00](01, 13)-(01, 14): NAME(NAME) 'n'
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): COLON(OP) ':'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): NAME(NAME) 'l'
[01](01, 09)-(01, 11): EQEQUAL(OP) '=='
[01](01, 12)-(01, 13): LSQB(OP) '['
[01](01, 13)-(01, 14): RSQB(OP) ']'
[01](01, 14)-(01, 15): COLON(OP) ':'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 16): NAME(NAME) 'l'
[02](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'while'
[03](01, 10)-(01, 11): NAME(NAME) 'n'
[03](01, 12)-(01, 13): GREATER(OP) '>'
[03](01, 14)-(01, 17): NAME(NAME) 'len'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 19): NAME(NAME) 'l'
[03](01, 19)-(01, 20): RPAR(OP) ')'
[03](01, 20)-(01, 21): COLON(OP) ':'
[03](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 09): NAME(NAME) 'n'
[04](01, 10)-(01, 11): EQUAL(OP) '='
[04](01, 12)-(01, 13): NAME(NAME) 'n'
[04](01, 14)-(01, 15): MINUS(OP) '-'
[04](01, 16)-(01, 19): NAME(NAME) 'len'
[04](01, 19)-(01, 20): LPAR(OP) '('
[04](01, 20)-(01, 21): NAME(NAME) 'l'
[04](01, 21)-(01, 22): RPAR(OP) ')'
[04](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 06): NAME(NAME) 'if'
[05](01, 07)-(01, 08): NAME(NAME) 'n'
[05](01, 09)-(01, 10): GREATER(OP) '>'
[05](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[05](01, 13)-(01, 16): NAME(NAME) 'and'
[05](01, 17)-(01, 18): NAME(NAME) 'n'
[05](01, 19)-(01, 21): NOTEQUAL(OP) '!='
[05](01, 22)-(01, 23): NUMBER(NUMBER) '3'
[05](01, 23)-(01, 24): COLON(OP) ':'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 14): NAME(NAME) 'return'
[06](01, 15)-(01, 16): NAME(NAME) 'l'
[06](01, 16)-(01, 17): LSQB(OP) '['
[06](01, 17)-(01, 18): NAME(NAME) 'n'
[06](01, 18)-(01, 19): PLUS(OP) '+'
[06](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[06](01, 20)-(01, 21): COLON(OP) ':'
[06](01, 21)-(01, 22): RSQB(OP) ']'
[06](01, 23)-(01, 24): PLUS(OP) '+'
[06](01, 25)-(01, 26): NAME(NAME) 'l'
[06](01, 26)-(01, 27): LSQB(OP) '['
[06](01, 27)-(01, 28): COLON(OP) ':'
[06](01, 28)-(01, 29): NAME(NAME) 'n'
[06](01, 29)-(01, 30): PLUS(OP) '+'
[06](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[06](01, 31)-(01, 32): RSQB(OP) ']'
[06](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 08): NAME(NAME) 'elif'
[07](01, 09)-(01, 10): NAME(NAME) 'n'
[07](01, 11)-(01, 13): EQEQUAL(OP) '=='
[07](01, 14)-(01, 15): NUMBER(NUMBER) '3'
[07](01, 15)-(01, 16): COLON(OP) ':'
[07](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 14): NAME(NAME) 'return'
[08](01, 15)-(01, 16): NAME(NAME) 'l'
[08](01, 16)-(01, 17): LSQB(OP) '['
[08](01, 17)-(01, 18): NAME(NAME) 'n'
[08](01, 18)-(01, 19): MINUS(OP) '-'
[08](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[08](01, 20)-(01, 21): COLON(OP) ':'
[08](01, 21)-(01, 22): RSQB(OP) ']'
[08](01, 23)-(01, 24): PLUS(OP) '+'
[08](01, 25)-(01, 26): NAME(NAME) 'l'
[08](01, 26)-(01, 27): LSQB(OP) '['
[08](01, 27)-(01, 28): COLON(OP) ':'
[08](01, 28)-(01, 29): NAME(NAME) 'n'
[08](01, 29)-(01, 30): MINUS(OP) '-'
[08](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[08](01, 31)-(01, 32): RSQB(OP) ']'
[08](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 08): NAME(NAME) 'elif'
[09](01, 09)-(01, 10): NAME(NAME) 'n'
[09](01, 11)-(01, 12): LESS(OP) '<'
[09](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[09](01, 14)-(01, 15): COLON(OP) ':'
[09](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'return'
[10](01, 15)-(01, 16): NAME(NAME) 'l'
[10](01, 16)-(01, 17): LSQB(OP) '['
[10](01, 17)-(01, 18): NAME(NAME) 'n'
[10](01, 18)-(01, 19): MINUS(OP) '-'
[10](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[10](01, 20)-(01, 21): COLON(OP) ':'
[10](01, 21)-(01, 22): RSQB(OP) ']'
[10](01, 23)-(01, 24): PLUS(OP) '+'
[10](01, 25)-(01, 26): NAME(NAME) 'l'
[10](01, 26)-(01, 27): LSQB(OP) '['
[10](01, 27)-(01, 28): COLON(OP) ':'
[10](01, 28)-(01, 29): NAME(NAME) 'n'
[10](01, 29)-(01, 30): MINUS(OP) '-'
[10](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[10](01, 31)-(01, 32): RSQB(OP) ']'
[10](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 08): NAME(NAME) 'else'
[11](01, 08)-(01, 09): COLON(OP) ':'
[11](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 14): NAME(NAME) 'return'
[12](01, 15)-(01, 16): NAME(NAME) 'l'
[12](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 05): NAME(NAME) 'print'
[13](01, 05)-(01, 06): LPAR(OP) '('
[13](01, 06)-(01, 11): NAME(NAME) 'shift'
[13](01, 11)-(01, 12): LPAR(OP) '('
[13](01, 12)-(01, 13): LSQB(OP) '['
[13](01, 13)-(01, 14): RSQB(OP) ']'
[13](01, 14)-(01, 15): COMMA(OP) ','
[13](01, 16)-(01, 17): NUMBER(NUMBER) '9'
[13](01, 17)-(01, 18): RPAR(OP) ')'
[13](01, 18)-(01, 19): RPAR(OP) ')'
[13](01, 19)-(01, 20): NEWLINE(NEWLINE)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

