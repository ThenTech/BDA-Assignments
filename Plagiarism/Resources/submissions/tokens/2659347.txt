[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 14): NAME(NAME) 'collection'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 19): NAME(NAME) 'list'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 27): NAME(NAME) 'length'
[00](01, 27)-(01, 28): COMMA(OP) ','
[00](01, 29)-(01, 35): NAME(NAME) 'subset'
[00](01, 35)-(01, 36): RPAR(OP) ')'
[00](01, 36)-(01, 37): COLON(OP) ':'
[00](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 04)-(01, 24): COMMENT(COMMENT) '#print(list, subset)'
[01](01, 24)-(01, 25): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 10): NAME(NAME) 'len'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 17): NAME(NAME) 'subset'
[03](01, 17)-(01, 18): RPAR(OP) ')'
[03](01, 19)-(01, 21): EQEQUAL(OP) '=='
[03](01, 22)-(01, 28): NAME(NAME) 'length'
[03](01, 29)-(01, 30): PLUS(OP) '+'
[03](01, 31)-(01, 32): NUMBER(NUMBER) '3'
[03](01, 32)-(01, 33): COLON(OP) ':'
[03](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 13): NAME(NAME) 'print'
[04](01, 13)-(01, 14): LPAR(OP) '('
[04](01, 14)-(01, 20): NAME(NAME) 'subset'
[04](01, 20)-(01, 21): LSQB(OP) '['
[04](01, 21)-(01, 22): COLON(OP) ':'
[04](01, 22)-(01, 23): MINUS(OP) '-'
[04](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[04](01, 24)-(01, 25): RSQB(OP) ']'
[04](01, 25)-(01, 26): RPAR(OP) ')'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'else'
[05](01, 08)-(01, 09): COLON(OP) ':'
[05](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 10): NAME(NAME) 'if'
[06](01, 11)-(01, 14): NAME(NAME) 'len'
[06](01, 14)-(01, 15): LPAR(OP) '('
[06](01, 15)-(01, 19): NAME(NAME) 'list'
[06](01, 19)-(01, 20): RPAR(OP) ')'
[06](01, 21)-(01, 23): EQEQUAL(OP) '=='
[06](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[06](01, 25)-(01, 26): COLON(OP) ':'
[06](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 18): NAME(NAME) 'return'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 13): NAME(NAME) 'first'
[08](01, 14)-(01, 15): EQUAL(OP) '='
[08](01, 16)-(01, 20): NAME(NAME) 'list'
[08](01, 20)-(01, 21): LSQB(OP) '['
[08](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[08](01, 22)-(01, 23): RSQB(OP) ']'
[08](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 12): NAME(NAME) 'rest'
[09](01, 13)-(01, 14): EQUAL(OP) '='
[09](01, 15)-(01, 19): NAME(NAME) 'list'
[09](01, 19)-(01, 20): LSQB(OP) '['
[09](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[09](01, 21)-(01, 22): COLON(OP) ':'
[09](01, 22)-(01, 23): RSQB(OP) ']'
[09](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 08)-(01, 19): COMMENT(COMMENT) '# add first'
[10](01, 19)-(01, 20): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 18): NAME(NAME) 'collection'
[11](01, 18)-(01, 19): LPAR(OP) '('
[11](01, 19)-(01, 23): NAME(NAME) 'rest'
[11](01, 23)-(01, 24): COMMA(OP) ','
[11](01, 25)-(01, 31): NAME(NAME) 'length'
[11](01, 31)-(01, 32): COMMA(OP) ','
[11](01, 33)-(01, 39): NAME(NAME) 'subset'
[11](01, 40)-(01, 41): PLUS(OP) '+'
[11](01, 42)-(01, 47): NAME(NAME) 'first'
[11](01, 48)-(01, 49): PLUS(OP) '+'
[11](01, 50)-(01, 53): STRING(STRING) '" "'
[11](01, 53)-(01, 54): RPAR(OP) ')'
[11](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 08)-(01, 25): COMMENT(COMMENT) "# don't add first"
[12](01, 25)-(01, 26): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 18): NAME(NAME) 'collection'
[13](01, 18)-(01, 19): LPAR(OP) '('
[13](01, 19)-(01, 23): NAME(NAME) 'rest'
[13](01, 23)-(01, 24): COMMA(OP) ','
[13](01, 25)-(01, 31): NAME(NAME) 'length'
[13](01, 31)-(01, 32): COMMA(OP) ','
[13](01, 33)-(01, 39): NAME(NAME) 'subset'
[13](01, 39)-(01, 40): RPAR(OP) ')'
[13](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NAME(NAME) 'n'
[16](01, 02)-(01, 03): EQUAL(OP) '='
[16](01, 04)-(01, 07): NAME(NAME) 'int'
[16](01, 07)-(01, 08): LPAR(OP) '('
[16](01, 08)-(01, 13): NAME(NAME) 'input'
[16](01, 13)-(01, 14): LPAR(OP) '('
[16](01, 14)-(01, 34): STRING(STRING) '"{1, ... , n} | n: "'
[16](01, 34)-(01, 35): RPAR(OP) ')'
[16](01, 35)-(01, 36): RPAR(OP) ')'
[16](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NAME(NAME) 'm'
[17](01, 02)-(01, 03): EQUAL(OP) '='
[17](01, 04)-(01, 07): NAME(NAME) 'int'
[17](01, 07)-(01, 08): LPAR(OP) '('
[17](01, 08)-(01, 13): NAME(NAME) 'input'
[17](01, 13)-(01, 14): LPAR(OP) '('
[17](01, 14)-(01, 24): STRING(STRING) '"length: "'
[17](01, 24)-(01, 25): RPAR(OP) ')'
[17](01, 25)-(01, 26): RPAR(OP) ')'
[17](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): NAME(NAME) 'list'
[18](01, 05)-(01, 06): EQUAL(OP) '='
[18](01, 07)-(01, 08): LSQB(OP) '['
[18](01, 08)-(01, 09): RSQB(OP) ']'
[18](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 03): NAME(NAME) 'for'
[20](01, 04)-(01, 05): NAME(NAME) 'i'
[20](01, 06)-(01, 08): NAME(NAME) 'in'
[20](01, 09)-(01, 14): NAME(NAME) 'range'
[20](01, 14)-(01, 15): LPAR(OP) '('
[20](01, 15)-(01, 16): NAME(NAME) 'n'
[20](01, 16)-(01, 17): COMMA(OP) ','
[20](01, 18)-(01, 19): NUMBER(NUMBER) '0'
[20](01, 19)-(01, 20): COMMA(OP) ','
[20](01, 21)-(01, 22): MINUS(OP) '-'
[20](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[20](01, 23)-(01, 24): RPAR(OP) ')'
[20](01, 24)-(01, 25): COLON(OP) ':'
[20](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 08): NAME(NAME) 'list'
[21](01, 08)-(01, 09): DOT(OP) '.'
[21](01, 09)-(01, 15): NAME(NAME) 'append'
[21](01, 15)-(01, 16): LPAR(OP) '('
[21](01, 16)-(01, 19): NAME(NAME) 'str'
[21](01, 19)-(01, 20): LPAR(OP) '('
[21](01, 20)-(01, 21): NAME(NAME) 'i'
[21](01, 21)-(01, 22): RPAR(OP) ')'
[21](01, 22)-(01, 23): RPAR(OP) ')'
[21](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 10): NAME(NAME) 'collection'
[22](01, 10)-(01, 11): LPAR(OP) '('
[22](01, 11)-(01, 15): NAME(NAME) 'list'
[22](01, 15)-(01, 16): COMMA(OP) ','
[22](01, 17)-(01, 18): NAME(NAME) 'm'
[22](01, 18)-(01, 19): COMMA(OP) ','
[22](01, 20)-(01, 22): STRING(STRING) '""'
[22](01, 22)-(01, 23): RPAR(OP) ')'
[22](01, 23)-(01, 24): NEWLINE(NEWLINE)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

