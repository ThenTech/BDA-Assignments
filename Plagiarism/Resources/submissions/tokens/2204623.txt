[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'woorden'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 20): NAME(NAME) 'corpus'
[01](01, 20)-(01, 21): DOT(OP) '.'
[01](01, 21)-(01, 26): NAME(NAME) 'split'
[01](01, 26)-(01, 27): LPAR(OP) '('
[01](01, 27)-(01, 28): RPAR(OP) ')'
[01](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 10): NAME(NAME) 'teller'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 13)-(01, 14): MINUS(OP) '-'
[02](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[02](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 15): NAME(NAME) 'element'
[03](01, 16)-(01, 18): NAME(NAME) 'in'
[03](01, 19)-(01, 26): NAME(NAME) 'woorden'
[03](01, 26)-(01, 27): COLON(OP) ':'
[03](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'teller'
[04](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[04](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 18): NAME(NAME) 'pattern'
[05](01, 19)-(01, 21): NAME(NAME) 'in'
[05](01, 22)-(01, 29): NAME(NAME) 'element'
[05](01, 29)-(01, 30): COLON(OP) ':'
[05](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 14): NAME(NAME) 'if'
[06](01, 15)-(01, 22): NAME(NAME) 'pattern'
[06](01, 23)-(01, 25): EQEQUAL(OP) '=='
[06](01, 26)-(01, 33): NAME(NAME) 'element'
[06](01, 33)-(01, 34): COLON(OP) ':'
[06](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 16): INDENT(INDENT) '                '
[07](01, 16)-(01, 23): NAME(NAME) 'woorden'
[07](01, 23)-(01, 24): LSQB(OP) '['
[07](01, 24)-(01, 30): NAME(NAME) 'teller'
[07](01, 30)-(01, 31): RSQB(OP) ']'
[07](01, 32)-(01, 33): EQUAL(OP) '='
[07](01, 34)-(01, 45): NAME(NAME) 'replacement'
[07](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 16): NAME(NAME) 'else'
[08](01, 16)-(01, 17): COLON(OP) ':'
[08](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 21): NAME(NAME) 'begin'
[09](01, 22)-(01, 23): EQUAL(OP) '='
[09](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[09](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 19): NAME(NAME) 'for'
[10](01, 20)-(01, 21): NAME(NAME) 'i'
[10](01, 22)-(01, 24): NAME(NAME) 'in'
[10](01, 25)-(01, 32): NAME(NAME) 'element'
[10](01, 32)-(01, 33): COLON(OP) ':'
[10](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 20): INDENT(INDENT) '                    '
[11](01, 20)-(01, 22): NAME(NAME) 'if'
[11](01, 23)-(01, 24): NAME(NAME) 'i'
[11](01, 25)-(01, 27): EQEQUAL(OP) '=='
[11](01, 28)-(01, 35): NAME(NAME) 'pattern'
[11](01, 35)-(01, 36): LSQB(OP) '['
[11](01, 36)-(01, 37): NUMBER(NUMBER) '0'
[11](01, 37)-(01, 38): RSQB(OP) ']'
[11](01, 38)-(01, 39): COLON(OP) ':'
[11](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 24): INDENT(INDENT) '                        '
[12](01, 24)-(01, 29): NAME(NAME) 'break'
[12](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 20): INDENT(INDENT) '                    '
[13](01, 20)-(01, 24): NAME(NAME) 'else'
[13](01, 24)-(01, 25): COLON(OP) ':'
[13](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 24): INDENT(INDENT) '                        '
[14](01, 24)-(01, 29): NAME(NAME) 'begin'
[14](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[14](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[14](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 24): INDENT(INDENT) '                        '
[15](01, 24)-(01, 32): NAME(NAME) 'continue'
[15](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 21): NAME(NAME) 'einde'
[16](01, 22)-(01, 23): EQUAL(OP) '='
[16](01, 24)-(01, 29): NAME(NAME) 'begin'
[16](01, 30)-(01, 31): PLUS(OP) '+'
[16](01, 32)-(01, 35): NAME(NAME) 'len'
[16](01, 35)-(01, 36): LPAR(OP) '('
[16](01, 36)-(01, 43): NAME(NAME) 'pattern'
[16](01, 43)-(01, 44): RPAR(OP) ')'
[16](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 29): NAME(NAME) 'lengtepattern'
[17](01, 30)-(01, 31): EQUAL(OP) '='
[17](01, 32)-(01, 35): NAME(NAME) 'len'
[17](01, 35)-(01, 36): LPAR(OP) '('
[17](01, 36)-(01, 43): NAME(NAME) 'pattern'
[17](01, 43)-(01, 44): RPAR(OP) ')'
[17](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 33): NAME(NAME) 'lengtereplacement'
[18](01, 34)-(01, 35): EQUAL(OP) '='
[18](01, 36)-(01, 39): NAME(NAME) 'len'
[18](01, 39)-(01, 40): LPAR(OP) '('
[18](01, 40)-(01, 51): NAME(NAME) 'replacement'
[18](01, 51)-(01, 52): RPAR(OP) ')'
[18](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 16): INDENT(INDENT) '                '
[19](01, 16)-(01, 18): NAME(NAME) 'if'
[19](01, 19)-(01, 32): NAME(NAME) 'lengtepattern'
[19](01, 33)-(01, 35): GREATEREQUAL(OP) '>='
[19](01, 36)-(01, 53): NAME(NAME) 'lengtereplacement'
[19](01, 53)-(01, 54): COLON(OP) ':'
[19](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 20): INDENT(INDENT) '                    '
[20](01, 20)-(01, 27): NAME(NAME) 'woorden'
[20](01, 27)-(01, 28): LSQB(OP) '['
[20](01, 28)-(01, 34): NAME(NAME) 'teller'
[20](01, 34)-(01, 35): RSQB(OP) ']'
[20](01, 36)-(01, 37): EQUAL(OP) '='
[20](01, 38)-(01, 45): NAME(NAME) 'element'
[20](01, 45)-(01, 46): LSQB(OP) '['
[20](01, 46)-(01, 47): NUMBER(NUMBER) '0'
[20](01, 47)-(01, 48): COLON(OP) ':'
[20](01, 48)-(01, 53): NAME(NAME) 'begin'
[20](01, 53)-(01, 54): RSQB(OP) ']'
[20](01, 55)-(01, 56): PLUS(OP) '+'
[20](01, 57)-(01, 68): NAME(NAME) 'replacement'
[20](01, 69)-(01, 70): PLUS(OP) '+'
[20](01, 71)-(01, 78): NAME(NAME) 'element'
[20](01, 78)-(01, 79): LSQB(OP) '['
[20](01, 79)-(01, 84): NAME(NAME) 'einde'
[20](01, 84)-(01, 85): COLON(OP) ':'
[20](01, 85)-(01, 86): RSQB(OP) ']'
[20](01, 86)-(01, 87): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 16): INDENT(INDENT) '                '
[21](01, 16)-(01, 20): NAME(NAME) 'else'
[21](01, 20)-(01, 21): COLON(OP) ':'
[21](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 20): INDENT(INDENT) '                    '
[22](01, 20)-(01, 27): NAME(NAME) 'woorden'
[22](01, 27)-(01, 28): LSQB(OP) '['
[22](01, 28)-(01, 34): NAME(NAME) 'teller'
[22](01, 34)-(01, 35): RSQB(OP) ']'
[22](01, 36)-(01, 37): EQUAL(OP) '='
[22](01, 38)-(01, 45): NAME(NAME) 'element'
[22](01, 45)-(01, 46): LSQB(OP) '['
[22](01, 46)-(01, 47): COLON(OP) ':'
[22](01, 47)-(01, 52): NAME(NAME) 'begin'
[22](01, 52)-(01, 53): RSQB(OP) ']'
[22](01, 54)-(01, 55): PLUS(OP) '+'
[22](01, 56)-(01, 67): NAME(NAME) 'replacement'
[22](01, 68)-(01, 69): PLUS(OP) '+'
[22](01, 70)-(01, 77): NAME(NAME) 'element'
[22](01, 77)-(01, 78): LSQB(OP) '['
[22](01, 78)-(01, 83): NAME(NAME) 'einde'
[22](01, 83)-(01, 84): COLON(OP) ':'
[22](01, 84)-(01, 85): RSQB(OP) ']'
[22](01, 85)-(01, 86): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 12): NAME(NAME) 'else'
[23](01, 12)-(01, 13): COLON(OP) ':'
[23](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): INDENT(INDENT) '            '
[24](01, 12)-(01, 20): NAME(NAME) 'continue'
[24](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 12): NAME(NAME) 'uitkomst'
[25](01, 13)-(01, 14): EQUAL(OP) '='
[25](01, 15)-(01, 17): STRING(STRING) "''"
[25](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 07): NAME(NAME) 'for'
[26](01, 08)-(01, 09): NAME(NAME) 'x'
[26](01, 10)-(01, 12): NAME(NAME) 'in'
[26](01, 13)-(01, 20): NAME(NAME) 'woorden'
[26](01, 20)-(01, 21): COLON(OP) ':'
[26](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 08): INDENT(INDENT) '        '
[27](01, 08)-(01, 16): NAME(NAME) 'uitkomst'
[27](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[27](01, 20)-(01, 21): NAME(NAME) 'x'
[27](01, 22)-(01, 23): PLUS(OP) '+'
[27](01, 24)-(01, 27): STRING(STRING) "' '"
[27](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 12): NAME(NAME) 'uitkomst'
[28](01, 13)-(01, 14): EQUAL(OP) '='
[28](01, 15)-(01, 23): NAME(NAME) 'uitkomst'
[28](01, 23)-(01, 24): LSQB(OP) '['
[28](01, 24)-(01, 25): COLON(OP) ':'
[28](01, 25)-(01, 28): NAME(NAME) 'len'
[28](01, 28)-(01, 29): LPAR(OP) '('
[28](01, 29)-(01, 37): NAME(NAME) 'uitkomst'
[28](01, 37)-(01, 38): RPAR(OP) ')'
[28](01, 39)-(01, 40): MINUS(OP) '-'
[28](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[28](01, 42)-(01, 43): RSQB(OP) ']'
[28](01, 43)-(01, 44): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 10): NAME(NAME) 'return'
[30](01, 11)-(01, 19): NAME(NAME) 'uitkomst'
[30](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 01): NL(NL) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 05): NAME(NAME) 'print'
[32](01, 05)-(01, 06): LPAR(OP) '('
[32](01, 06)-(01, 13): NAME(NAME) 'replace'
[32](01, 13)-(01, 14): LPAR(OP) '('
[32](01, 14)-(01, 21): STRING(STRING) '"steve"'
[32](01, 21)-(01, 22): COMMA(OP) ','
[32](01, 23)-(01, 29): STRING(STRING) '"sean"'
[32](01, 29)-(01, 30): COMMA(OP) ','
[32](01, 31)-(01, 52): STRING(STRING) '"..steve... en steve"'
[32](01, 52)-(01, 53): RPAR(OP) ')'
[32](01, 53)-(01, 54): RPAR(OP) ')'
[32](01, 54)-(01, 55): NEWLINE(NEWLINE)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

