[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): NAME(NAME) 'a_string'
[02](01, 09)-(01, 10): EQUAL(OP) '='
[02](01, 11)-(01, 16): NAME(NAME) 'input'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 37): STRING(STRING) '"Give me a string: "'
[02](01, 37)-(01, 38): RPAR(OP) ')'
[02](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 10): NAME(NAME) 'string_len'
[03](01, 11)-(01, 12): EQUAL(OP) '='
[03](01, 13)-(01, 16): NAME(NAME) 'len'
[03](01, 16)-(01, 17): LPAR(OP) '('
[03](01, 17)-(01, 25): NAME(NAME) 'a_string'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'err'
[04](01, 04)-(01, 05): EQUAL(OP) '='
[04](01, 06)-(01, 11): NAME(NAME) 'False'
[04](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 03): NAME(NAME) 'for'
[06](01, 04)-(01, 09): NAME(NAME) 'index'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 20)-(01, 30): NAME(NAME) 'string_len'
[06](01, 31)-(01, 33): DOUBLESLASH(OP) '//'
[06](01, 34)-(01, 35): NUMBER(NUMBER) '2'
[06](01, 36)-(01, 37): RPAR(OP) ')'
[06](01, 37)-(01, 38): COLON(OP) ':'
[06](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 02): INDENT(INDENT) '  '
[07](01, 02)-(01, 04): NAME(NAME) 'if'
[07](01, 05)-(01, 08): NAME(NAME) 'not'
[07](01, 09)-(01, 10): LPAR(OP) '('
[07](01, 10)-(01, 18): NAME(NAME) 'a_string'
[07](01, 18)-(01, 19): LSQB(OP) '['
[07](01, 19)-(01, 24): NAME(NAME) 'index'
[07](01, 24)-(01, 25): RSQB(OP) ']'
[07](01, 26)-(01, 28): EQEQUAL(OP) '=='
[07](01, 29)-(01, 37): NAME(NAME) 'a_string'
[07](01, 37)-(01, 38): LSQB(OP) '['
[07](01, 38)-(01, 48): NAME(NAME) 'string_len'
[07](01, 49)-(01, 50): MINUS(OP) '-'
[07](01, 51)-(01, 52): NUMBER(NUMBER) '1'
[07](01, 53)-(01, 54): MINUS(OP) '-'
[07](01, 55)-(01, 60): NAME(NAME) 'index'
[07](01, 60)-(01, 61): RSQB(OP) ']'
[07](01, 61)-(01, 62): RPAR(OP) ')'
[07](01, 62)-(01, 63): COLON(OP) ':'
[07](01, 63)-(01, 64): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 07): NAME(NAME) 'err'
[08](01, 08)-(01, 09): EQUAL(OP) '='
[08](01, 10)-(01, 14): NAME(NAME) 'True'
[08](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 04)-(01, 05): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 02): NAME(NAME) 'if'
[10](01, 03)-(01, 06): NAME(NAME) 'err'
[10](01, 06)-(01, 07): COLON(OP) ':'
[10](01, 07)-(01, 08): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 02): INDENT(INDENT) '  '
[11](01, 02)-(01, 07): NAME(NAME) 'print'
[11](01, 07)-(01, 08): LPAR(OP) '('
[11](01, 08)-(01, 26): STRING(STRING) '"Not a palindrome"'
[11](01, 26)-(01, 27): RPAR(OP) ')'
[11](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): NAME(NAME) 'else'
[12](01, 04)-(01, 05): COLON(OP) ':'
[12](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 02): INDENT(INDENT) '  '
[13](01, 02)-(01, 07): NAME(NAME) 'print'
[13](01, 07)-(01, 08): LPAR(OP) '('
[13](01, 08)-(01, 22): STRING(STRING) '"A palindrome"'
[13](01, 22)-(01, 23): RPAR(OP) ')'
[13](01, 23)-(01, 24): NEWLINE(NEWLINE)
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

