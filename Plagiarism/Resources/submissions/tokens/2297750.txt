[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 19): NAME(NAME) 'is_magic_square'
[00](01, 19)-(01, 20): LPAR(OP) '('
[00](01, 20)-(01, 26): NAME(NAME) 'matrix'
[00](01, 26)-(01, 27): RPAR(OP) ')'
[00](01, 27)-(01, 28): COLON(OP) ':'
[00](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 11): NAME(NAME) 'counter'
[01](01, 12)-(01, 13): EQUAL(OP) '='
[01](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[01](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 14): NAME(NAME) 'counterrow'
[02](01, 15)-(01, 16): EQUAL(OP) '='
[02](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[02](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 17): NAME(NAME) 'countercolumn'
[03](01, 18)-(01, 19): EQUAL(OP) '='
[03](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[03](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 19): NAME(NAME) 'counterdiagonal'
[04](01, 20)-(01, 21): EQUAL(OP) '='
[04](01, 22)-(01, 23): NUMBER(NUMBER) '0'
[04](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 05): NAME(NAME) 'l'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 08)-(01, 11): NAME(NAME) 'sum'
[05](01, 11)-(01, 12): LPAR(OP) '('
[05](01, 12)-(01, 18): NAME(NAME) 'matrix'
[05](01, 18)-(01, 19): COMMA(OP) ','
[05](01, 20)-(01, 21): LSQB(OP) '['
[05](01, 21)-(01, 22): RSQB(OP) ']'
[05](01, 22)-(01, 23): RPAR(OP) ')'
[05](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 05): NAME(NAME) 'A'
[06](01, 06)-(01, 07): EQUAL(OP) '='
[06](01, 08)-(01, 09): NAME(NAME) 'l'
[06](01, 09)-(01, 10): LSQB(OP) '['
[06](01, 10)-(01, 11): COLON(OP) ':'
[06](01, 11)-(01, 12): RSQB(OP) ']'
[06](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 06): NAME(NAME) 'if'
[07](01, 07)-(01, 08): NUMBER(NUMBER) '1'
[07](01, 09)-(01, 10): GREATER(OP) '>'
[07](01, 11)-(01, 14): NAME(NAME) 'len'
[07](01, 14)-(01, 15): LPAR(OP) '('
[07](01, 15)-(01, 16): NAME(NAME) 'A'
[07](01, 16)-(01, 17): RPAR(OP) ')'
[07](01, 18)-(01, 19): LESS(OP) '<'
[07](01, 20)-(01, 21): NUMBER(NUMBER) '9'
[07](01, 21)-(01, 22): COLON(OP) ':'
[07](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 14): NAME(NAME) 'return'
[08](01, 15)-(01, 20): NAME(NAME) 'False'
[08](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 08): NAME(NAME) 'elif'
[09](01, 09)-(01, 12): NAME(NAME) 'len'
[09](01, 12)-(01, 13): LPAR(OP) '('
[09](01, 13)-(01, 14): NAME(NAME) 'A'
[09](01, 14)-(01, 15): RPAR(OP) ')'
[09](01, 16)-(01, 18): EQEQUAL(OP) '=='
[09](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[09](01, 20)-(01, 21): COLON(OP) ':'
[09](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'return'
[10](01, 15)-(01, 19): NAME(NAME) 'True'
[10](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 07): NAME(NAME) 'for'
[11](01, 08)-(01, 09): NAME(NAME) 'i'
[11](01, 10)-(01, 12): NAME(NAME) 'in'
[11](01, 13)-(01, 14): NAME(NAME) 'A'
[11](01, 14)-(01, 15): COLON(OP) ':'
[11](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 09): NAME(NAME) 'l'
[12](01, 09)-(01, 10): DOT(OP) '.'
[12](01, 10)-(01, 16): NAME(NAME) 'remove'
[12](01, 16)-(01, 17): LPAR(OP) '('
[12](01, 17)-(01, 18): NAME(NAME) 'i'
[12](01, 18)-(01, 19): RPAR(OP) ')'
[12](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 10): NAME(NAME) 'if'
[13](01, 11)-(01, 12): NAME(NAME) 'i'
[13](01, 13)-(01, 16): NAME(NAME) 'not'
[13](01, 17)-(01, 19): NAME(NAME) 'in'
[13](01, 20)-(01, 21): NAME(NAME) 'l'
[13](01, 21)-(01, 22): COLON(OP) ':'
[13](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 19): NAME(NAME) 'counter'
[14](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[14](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[14](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 06): NAME(NAME) 'if'
[15](01, 07)-(01, 10): NAME(NAME) 'sum'
[15](01, 10)-(01, 11): LPAR(OP) '('
[15](01, 11)-(01, 17): NAME(NAME) 'matrix'
[15](01, 17)-(01, 18): COMMA(OP) ','
[15](01, 19)-(01, 20): LSQB(OP) '['
[15](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[15](01, 21)-(01, 22): RSQB(OP) ']'
[15](01, 22)-(01, 23): RPAR(OP) ')'
[15](01, 24)-(01, 26): EQEQUAL(OP) '=='
[15](01, 27)-(01, 30): NAME(NAME) 'sum'
[15](01, 30)-(01, 31): LPAR(OP) '('
[15](01, 31)-(01, 37): NAME(NAME) 'matrix'
[15](01, 37)-(01, 38): COMMA(OP) ','
[15](01, 39)-(01, 40): LSQB(OP) '['
[15](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[15](01, 41)-(01, 42): RSQB(OP) ']'
[15](01, 42)-(01, 43): RPAR(OP) ')'
[15](01, 44)-(01, 47): NAME(NAME) 'and'
[15](01, 48)-(01, 51): NAME(NAME) 'sum'
[15](01, 51)-(01, 52): LPAR(OP) '('
[15](01, 52)-(01, 58): NAME(NAME) 'matrix'
[15](01, 58)-(01, 59): COMMA(OP) ','
[15](01, 60)-(01, 61): LSQB(OP) '['
[15](01, 61)-(01, 62): NUMBER(NUMBER) '1'
[15](01, 62)-(01, 63): RSQB(OP) ']'
[15](01, 63)-(01, 64): RPAR(OP) ')'
[15](01, 65)-(01, 67): EQEQUAL(OP) '=='
[15](01, 68)-(01, 71): NAME(NAME) 'sum'
[15](01, 71)-(01, 72): LPAR(OP) '('
[15](01, 72)-(01, 78): NAME(NAME) 'matrix'
[15](01, 78)-(01, 79): COMMA(OP) ','
[15](01, 80)-(01, 81): LSQB(OP) '['
[15](01, 81)-(01, 82): NUMBER(NUMBER) '2'
[15](01, 82)-(01, 83): RSQB(OP) ']'
[15](01, 83)-(01, 84): RPAR(OP) ')'
[15](01, 84)-(01, 85): COLON(OP) ':'
[15](01, 85)-(01, 86): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 18): NAME(NAME) 'counterrow'
[16](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[16](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[16](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 08): NAME(NAME) 'else'
[17](01, 08)-(01, 09): COLON(OP) ':'
[17](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 08): INDENT(INDENT) '        '
[18](01, 08)-(01, 14): NAME(NAME) 'return'
[18](01, 15)-(01, 20): NAME(NAME) 'False'
[18](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 06): NAME(NAME) 'if'
[19](01, 07)-(01, 10): NAME(NAME) 'sum'
[19](01, 10)-(01, 11): LPAR(OP) '('
[19](01, 11)-(01, 17): NAME(NAME) 'matrix'
[19](01, 17)-(01, 18): COMMA(OP) ','
[19](01, 19)-(01, 20): LSQB(OP) '['
[19](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[19](01, 21)-(01, 22): RSQB(OP) ']'
[19](01, 22)-(01, 23): RPAR(OP) ')'
[19](01, 24)-(01, 26): EQEQUAL(OP) '=='
[19](01, 27)-(01, 28): NAME(NAME) 'A'
[19](01, 28)-(01, 29): LSQB(OP) '['
[19](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[19](01, 30)-(01, 31): RSQB(OP) ']'
[19](01, 32)-(01, 33): PLUS(OP) '+'
[19](01, 34)-(01, 35): NAME(NAME) 'A'
[19](01, 35)-(01, 36): LSQB(OP) '['
[19](01, 36)-(01, 37): NUMBER(NUMBER) '4'
[19](01, 37)-(01, 38): RSQB(OP) ']'
[19](01, 39)-(01, 40): PLUS(OP) '+'
[19](01, 41)-(01, 42): NAME(NAME) 'A'
[19](01, 42)-(01, 43): LSQB(OP) '['
[19](01, 43)-(01, 44): NUMBER(NUMBER) '7'
[19](01, 44)-(01, 45): RSQB(OP) ']'
[19](01, 46)-(01, 49): NAME(NAME) 'and'
[19](01, 50)-(01, 53): NAME(NAME) 'sum'
[19](01, 53)-(01, 54): LPAR(OP) '('
[19](01, 54)-(01, 60): NAME(NAME) 'matrix'
[19](01, 60)-(01, 61): COMMA(OP) ','
[19](01, 62)-(01, 63): LSQB(OP) '['
[19](01, 63)-(01, 64): NUMBER(NUMBER) '0'
[19](01, 64)-(01, 65): RSQB(OP) ']'
[19](01, 65)-(01, 66): RPAR(OP) ')'
[19](01, 67)-(01, 69): EQEQUAL(OP) '=='
[19](01, 70)-(01, 71): NAME(NAME) 'A'
[19](01, 71)-(01, 72): LSQB(OP) '['
[19](01, 72)-(01, 73): NUMBER(NUMBER) '0'
[19](01, 73)-(01, 74): RSQB(OP) ']'
[19](01, 75)-(01, 76): PLUS(OP) '+'
[19](01, 77)-(01, 78): NAME(NAME) 'A'
[19](01, 78)-(01, 79): LSQB(OP) '['
[19](01, 79)-(01, 80): NUMBER(NUMBER) '3'
[19](01, 80)-(01, 81): RSQB(OP) ']'
[19](01, 82)-(01, 83): PLUS(OP) '+'
[19](01, 84)-(01, 85): NAME(NAME) 'A'
[19](01, 85)-(01, 86): LSQB(OP) '['
[19](01, 86)-(01, 87): NUMBER(NUMBER) '6'
[19](01, 87)-(01, 88): RSQB(OP) ']'
[19](01, 88)-(01, 89): COLON(OP) ':'
[19](01, 89)-(01, 90): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 21): NAME(NAME) 'countercolumn'
[20](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[20](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[20](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 08): NAME(NAME) 'else'
[21](01, 08)-(01, 09): COLON(OP) ':'
[21](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 14): NAME(NAME) 'return'
[22](01, 15)-(01, 20): NAME(NAME) 'False'
[22](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 06): NAME(NAME) 'if'
[23](01, 07)-(01, 10): NAME(NAME) 'sum'
[23](01, 10)-(01, 11): LPAR(OP) '('
[23](01, 11)-(01, 17): NAME(NAME) 'matrix'
[23](01, 17)-(01, 18): COMMA(OP) ','
[23](01, 19)-(01, 20): LSQB(OP) '['
[23](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[23](01, 21)-(01, 22): RSQB(OP) ']'
[23](01, 22)-(01, 23): RPAR(OP) ')'
[23](01, 24)-(01, 26): EQEQUAL(OP) '=='
[23](01, 27)-(01, 28): NAME(NAME) 'A'
[23](01, 28)-(01, 29): LSQB(OP) '['
[23](01, 29)-(01, 30): NUMBER(NUMBER) '0'
[23](01, 30)-(01, 31): RSQB(OP) ']'
[23](01, 32)-(01, 33): PLUS(OP) '+'
[23](01, 34)-(01, 35): NAME(NAME) 'A'
[23](01, 35)-(01, 36): LSQB(OP) '['
[23](01, 36)-(01, 37): NUMBER(NUMBER) '4'
[23](01, 37)-(01, 38): RSQB(OP) ']'
[23](01, 39)-(01, 40): PLUS(OP) '+'
[23](01, 41)-(01, 42): NAME(NAME) 'A'
[23](01, 42)-(01, 43): LSQB(OP) '['
[23](01, 43)-(01, 44): NUMBER(NUMBER) '8'
[23](01, 44)-(01, 45): RSQB(OP) ']'
[23](01, 45)-(01, 46): COLON(OP) ':'
[23](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 23): NAME(NAME) 'counterdiagonal'
[24](01, 24)-(01, 26): PLUSEQUAL(OP) '+='
[24](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[24](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 10): NAME(NAME) 'return'
[25](01, 11)-(01, 15): NAME(NAME) 'bool'
[25](01, 15)-(01, 16): LPAR(OP) '('
[25](01, 16)-(01, 23): NAME(NAME) 'counter'
[25](01, 24)-(01, 26): EQEQUAL(OP) '=='
[25](01, 27)-(01, 30): NAME(NAME) 'len'
[25](01, 30)-(01, 31): LPAR(OP) '('
[25](01, 31)-(01, 32): NAME(NAME) 'A'
[25](01, 32)-(01, 33): RPAR(OP) ')'
[25](01, 34)-(01, 37): NAME(NAME) 'and'
[25](01, 38)-(01, 48): NAME(NAME) 'counterrow'
[25](01, 49)-(01, 51): EQEQUAL(OP) '=='
[25](01, 52)-(01, 53): NUMBER(NUMBER) '1'
[25](01, 53)-(01, 54): RPAR(OP) ')'
[25](01, 54)-(01, 55): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

