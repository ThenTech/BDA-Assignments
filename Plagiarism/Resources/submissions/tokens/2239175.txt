[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'woordteller'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'string'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 09): NAME(NAME) 'count'
[01](01, 10)-(01, 11): EQUAL(OP) '='
[01](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 10): NAME(NAME) 'teller'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 13)-(01, 14): NUMBER(NUMBER) '0'
[02](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 11): NAME(NAME) 'inwoord'
[03](01, 12)-(01, 13): EQUAL(OP) '='
[03](01, 14)-(01, 19): NAME(NAME) 'False'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 19): NAME(NAME) 'string'
[04](01, 19)-(01, 20): COLON(OP) ':'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 12): NAME(NAME) 'i'
[05](01, 13)-(01, 15): EQEQUAL(OP) '=='
[05](01, 16)-(01, 22): NAME(NAME) 'string'
[05](01, 22)-(01, 23): LSQB(OP) '['
[05](01, 23)-(01, 24): MINUS(OP) '-'
[05](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[05](01, 25)-(01, 26): RSQB(OP) ']'
[05](01, 26)-(01, 27): COLON(OP) ':'
[05](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 17): NAME(NAME) 'slice'
[06](01, 18)-(01, 19): EQUAL(OP) '='
[06](01, 20)-(01, 26): NAME(NAME) 'string'
[06](01, 26)-(01, 27): LSQB(OP) '['
[06](01, 27)-(01, 33): NAME(NAME) 'teller'
[06](01, 34)-(01, 35): MINUS(OP) '-'
[06](01, 36)-(01, 37): LPAR(OP) '('
[06](01, 37)-(01, 42): NAME(NAME) 'count'
[06](01, 42)-(01, 43): RPAR(OP) ')'
[06](01, 43)-(01, 44): COLON(OP) ':'
[06](01, 44)-(01, 50): NAME(NAME) 'teller'
[06](01, 50)-(01, 51): PLUS(OP) '+'
[06](01, 51)-(01, 52): NUMBER(NUMBER) '1'
[06](01, 52)-(01, 53): RSQB(OP) ']'
[06](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 17): NAME(NAME) 'print'
[07](01, 17)-(01, 18): LPAR(OP) '('
[07](01, 18)-(01, 23): NAME(NAME) 'slice'
[07](01, 23)-(01, 24): COMMA(OP) ','
[07](01, 25)-(01, 30): NAME(NAME) 'count'
[07](01, 30)-(01, 31): RPAR(OP) ')'
[07](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 14): STRING(STRING) '"a"'
[08](01, 15)-(01, 17): LESSEQUAL(OP) '<='
[08](01, 18)-(01, 19): NAME(NAME) 'i'
[08](01, 20)-(01, 22): LESSEQUAL(OP) '<='
[08](01, 23)-(01, 26): STRING(STRING) '"z"'
[08](01, 27)-(01, 29): NAME(NAME) 'or'
[08](01, 30)-(01, 33): STRING(STRING) '"A"'
[08](01, 34)-(01, 36): LESSEQUAL(OP) '<='
[08](01, 37)-(01, 38): NAME(NAME) 'i'
[08](01, 39)-(01, 41): LESSEQUAL(OP) '<='
[08](01, 42)-(01, 45): STRING(STRING) '"Z"'
[08](01, 45)-(01, 46): COLON(OP) ':'
[08](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 19): NAME(NAME) 'inwoord'
[09](01, 20)-(01, 21): EQUAL(OP) '='
[09](01, 22)-(01, 26): NAME(NAME) 'True'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 17): NAME(NAME) 'count'
[10](01, 18)-(01, 19): EQUAL(OP) '='
[10](01, 20)-(01, 25): NAME(NAME) 'count'
[10](01, 25)-(01, 26): PLUS(OP) '+'
[10](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[10](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 18): NAME(NAME) 'teller'
[11](01, 19)-(01, 20): EQUAL(OP) '='
[11](01, 21)-(01, 27): NAME(NAME) 'teller'
[11](01, 27)-(01, 28): PLUS(OP) '+'
[11](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[11](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 12): NAME(NAME) 'else'
[12](01, 12)-(01, 13): COLON(OP) ':'
[12](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 14): NAME(NAME) 'if'
[13](01, 15)-(01, 22): NAME(NAME) 'inwoord'
[13](01, 22)-(01, 23): COLON(OP) ':'
[13](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 16): INDENT(INDENT) '                '
[14](01, 16)-(01, 21): NAME(NAME) 'slice'
[14](01, 22)-(01, 23): EQUAL(OP) '='
[14](01, 24)-(01, 30): NAME(NAME) 'string'
[14](01, 30)-(01, 31): LSQB(OP) '['
[14](01, 31)-(01, 37): NAME(NAME) 'teller'
[14](01, 37)-(01, 38): MINUS(OP) '-'
[14](01, 38)-(01, 39): LPAR(OP) '('
[14](01, 39)-(01, 44): NAME(NAME) 'count'
[14](01, 44)-(01, 45): RPAR(OP) ')'
[14](01, 45)-(01, 46): COLON(OP) ':'
[14](01, 46)-(01, 52): NAME(NAME) 'teller'
[14](01, 52)-(01, 53): RSQB(OP) ']'
[14](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 21): NAME(NAME) 'print'
[15](01, 21)-(01, 22): LPAR(OP) '('
[15](01, 22)-(01, 27): NAME(NAME) 'slice'
[15](01, 27)-(01, 28): COMMA(OP) ','
[15](01, 29)-(01, 34): NAME(NAME) 'count'
[15](01, 34)-(01, 35): RPAR(OP) ')'
[15](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 22): NAME(NAME) 'teller'
[16](01, 23)-(01, 24): EQUAL(OP) '='
[16](01, 25)-(01, 31): NAME(NAME) 'teller'
[16](01, 32)-(01, 33): PLUS(OP) '+'
[16](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[16](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 21): NAME(NAME) 'count'
[17](01, 22)-(01, 23): EQUAL(OP) '='
[17](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[17](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 23): NAME(NAME) 'inwoord'
[18](01, 24)-(01, 25): EQUAL(OP) '='
[18](01, 26)-(01, 31): NAME(NAME) 'False'
[18](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 12)-(01, 13): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 16)-(01, 17): NL(NL) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 08)-(01, 09): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

