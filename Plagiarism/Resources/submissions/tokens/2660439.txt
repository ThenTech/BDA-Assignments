[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'string'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 25): STRING(STRING) '"geef zin"'
[00](01, 25)-(01, 26): RPAR(OP) ')'
[00](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 07): NAME(NAME) 'alfabet'
[01](01, 08)-(01, 09): EQUAL(OP) '='
[01](01, 10)-(01, 64): STRING(STRING) '"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"'
[01](01, 64)-(01, 65): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 06): NAME(NAME) 'teller'
[02](01, 07)-(01, 08): EQUAL(OP) '='
[02](01, 09)-(01, 10): NUMBER(NUMBER) '0'
[02](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 05): NAME(NAME) 'woord'
[03](01, 06)-(01, 07): EQUAL(OP) '='
[03](01, 08)-(01, 10): STRING(STRING) '""'
[03](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'for'
[04](01, 04)-(01, 05): NAME(NAME) 'i'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 14): NAME(NAME) 'range'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 18): NAME(NAME) 'len'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 25): NAME(NAME) 'string'
[04](01, 25)-(01, 26): RPAR(OP) ')'
[04](01, 26)-(01, 27): RPAR(OP) ')'
[04](01, 27)-(01, 28): COLON(OP) ':'
[04](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'kar'
[05](01, 08)-(01, 09): EQUAL(OP) '='
[05](01, 10)-(01, 16): NAME(NAME) 'string'
[05](01, 16)-(01, 17): LSQB(OP) '['
[05](01, 17)-(01, 18): NAME(NAME) 'i'
[05](01, 18)-(01, 19): RSQB(OP) ']'
[05](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 06): NAME(NAME) 'if'
[06](01, 07)-(01, 10): NAME(NAME) 'kar'
[06](01, 11)-(01, 13): NAME(NAME) 'in'
[06](01, 14)-(01, 21): NAME(NAME) 'alfabet'
[06](01, 21)-(01, 22): COLON(OP) ':'
[06](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 14): NAME(NAME) 'teller'
[07](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[07](01, 18)-(01, 19): NUMBER(NUMBER) '1'
[07](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 13): NAME(NAME) 'woord'
[08](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[08](01, 17)-(01, 20): NAME(NAME) 'kar'
[08](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 08): NAME(NAME) 'elif'
[09](01, 09)-(01, 10): NAME(NAME) 'i'
[09](01, 11)-(01, 13): NOTEQUAL(OP) '!='
[09](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[09](01, 16)-(01, 19): NAME(NAME) 'and'
[09](01, 20)-(01, 21): LPAR(OP) '('
[09](01, 21)-(01, 27): NAME(NAME) 'string'
[09](01, 27)-(01, 28): LSQB(OP) '['
[09](01, 28)-(01, 29): NAME(NAME) 'i'
[09](01, 29)-(01, 30): MINUS(OP) '-'
[09](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[09](01, 31)-(01, 32): RSQB(OP) ']'
[09](01, 33)-(01, 35): NAME(NAME) 'in'
[09](01, 36)-(01, 43): NAME(NAME) 'alfabet'
[09](01, 44)-(01, 46): NAME(NAME) 'or'
[09](01, 47)-(01, 48): NAME(NAME) 'i'
[09](01, 49)-(01, 51): EQEQUAL(OP) '=='
[09](01, 52)-(01, 55): NAME(NAME) 'len'
[09](01, 55)-(01, 56): LPAR(OP) '('
[09](01, 56)-(01, 62): NAME(NAME) 'string'
[09](01, 62)-(01, 63): RPAR(OP) ')'
[09](01, 63)-(01, 64): MINUS(OP) '-'
[09](01, 64)-(01, 65): NUMBER(NUMBER) '1'
[09](01, 65)-(01, 66): RPAR(OP) ')'
[09](01, 66)-(01, 67): COLON(OP) ':'
[09](01, 67)-(01, 68): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 13): NAME(NAME) 'print'
[10](01, 13)-(01, 14): LPAR(OP) '('
[10](01, 14)-(01, 19): NAME(NAME) 'woord'
[10](01, 19)-(01, 20): COMMA(OP) ','
[10](01, 20)-(01, 26): NAME(NAME) 'teller'
[10](01, 26)-(01, 27): RPAR(OP) ')'
[10](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 13): NAME(NAME) 'woord'
[11](01, 14)-(01, 15): EQUAL(OP) '='
[11](01, 16)-(01, 18): STRING(STRING) '""'
[11](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 14): NAME(NAME) 'teller'
[12](01, 15)-(01, 16): EQUAL(OP) '='
[12](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[12](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 08): NAME(NAME) 'else'
[13](01, 08)-(01, 09): COLON(OP) ':'
[13](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 13): NAME(NAME) 'woord'
[14](01, 14)-(01, 15): EQUAL(OP) '='
[14](01, 16)-(01, 18): STRING(STRING) '""'
[14](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 14): NAME(NAME) 'teller'
[15](01, 15)-(01, 16): EQUAL(OP) '='
[15](01, 17)-(01, 18): NUMBER(NUMBER) '0'
[15](01, 18)-(01, 19): NEWLINE(NEWLINE)
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

