[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 07): NAME(NAME) 'alfabet'
[00](01, 08)-(01, 09): EQUAL(OP) '='
[00](01, 10)-(01, 38): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[00](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 05): NAME(NAME) 'woord'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 13): NAME(NAME) 'input'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 26): STRING(STRING) '"welk woord"'
[01](01, 26)-(01, 27): RPAR(OP) ')'
[01](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'i'
[02](01, 01)-(01, 02): EQUAL(OP) '='
[02](01, 02)-(01, 03): NUMBER(NUMBER) '0'
[02](01, 03)-(01, 04): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NAME(NAME) 'j'
[03](01, 01)-(01, 02): EQUAL(OP) '='
[03](01, 02)-(01, 03): MINUS(OP) '-'
[03](01, 03)-(01, 04): NUMBER(NUMBER) '1'
[03](01, 04)-(01, 05): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 11): NAME(NAME) 'aantletters'
[04](01, 12)-(01, 13): EQUAL(OP) '='
[04](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[04](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 06): NAME(NAME) 'letter'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 07)-(01, 10): STRING(STRING) '"a"'
[05](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 05): NAME(NAME) 'while'
[06](01, 06)-(01, 07): LPAR(OP) '('
[06](01, 07)-(01, 08): NAME(NAME) 'i'
[06](01, 08)-(01, 09): LESS(OP) '<'
[06](01, 09)-(01, 12): NAME(NAME) 'len'
[06](01, 12)-(01, 13): LPAR(OP) '('
[06](01, 13)-(01, 20): NAME(NAME) 'alfabet'
[06](01, 20)-(01, 21): RPAR(OP) ')'
[06](01, 21)-(01, 22): MINUS(OP) '-'
[06](01, 22)-(01, 23): NUMBER(NUMBER) '1'
[06](01, 23)-(01, 24): RPAR(OP) ')'
[06](01, 24)-(01, 25): COLON(OP) ':'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 09): NAME(NAME) 'while'
[07](01, 10)-(01, 11): LPAR(OP) '('
[07](01, 11)-(01, 12): NAME(NAME) 'j'
[07](01, 12)-(01, 13): LESS(OP) '<'
[07](01, 13)-(01, 16): NAME(NAME) 'len'
[07](01, 16)-(01, 17): LPAR(OP) '('
[07](01, 17)-(01, 22): NAME(NAME) 'woord'
[07](01, 22)-(01, 23): RPAR(OP) ')'
[07](01, 23)-(01, 24): MINUS(OP) '-'
[07](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[07](01, 25)-(01, 26): RPAR(OP) ')'
[07](01, 26)-(01, 27): COLON(OP) ':'
[07](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 09): NAME(NAME) 'j'
[08](01, 09)-(01, 11): PLUSEQUAL(OP) '+='
[08](01, 11)-(01, 12): NUMBER(NUMBER) '1'
[08](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 12): LPAR(OP) '('
[09](01, 12)-(01, 19): NAME(NAME) 'alfabet'
[09](01, 19)-(01, 20): LSQB(OP) '['
[09](01, 20)-(01, 21): NAME(NAME) 'i'
[09](01, 21)-(01, 22): RSQB(OP) ']'
[09](01, 22)-(01, 24): EQEQUAL(OP) '=='
[09](01, 24)-(01, 29): NAME(NAME) 'woord'
[09](01, 29)-(01, 30): LSQB(OP) '['
[09](01, 30)-(01, 31): NAME(NAME) 'j'
[09](01, 31)-(01, 32): RSQB(OP) ']'
[09](01, 32)-(01, 33): RPAR(OP) ')'
[09](01, 33)-(01, 34): COLON(OP) ':'
[09](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 23): NAME(NAME) 'aantletters'
[10](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[10](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[10](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 05): NAME(NAME) 'i'
[11](01, 05)-(01, 07): PLUSEQUAL(OP) '+='
[11](01, 07)-(01, 08): NUMBER(NUMBER) '1'
[11](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 10): NAME(NAME) 'letter'
[12](01, 10)-(01, 11): EQUAL(OP) '='
[12](01, 11)-(01, 18): NAME(NAME) 'alfabet'
[12](01, 18)-(01, 19): LSQB(OP) '['
[12](01, 19)-(01, 20): NAME(NAME) 'i'
[12](01, 20)-(01, 21): RSQB(OP) ']'
[12](01, 21)-(01, 22): PLUS(OP) '+'
[12](01, 22)-(01, 25): STRING(STRING) '":"'
[12](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 09): NAME(NAME) 'print'
[13](01, 10)-(01, 11): LPAR(OP) '('
[13](01, 11)-(01, 17): NAME(NAME) 'letter'
[13](01, 17)-(01, 18): COMMA(OP) ','
[13](01, 19)-(01, 30): NAME(NAME) 'aantletters'
[13](01, 31)-(01, 32): RPAR(OP) ')'
[13](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

