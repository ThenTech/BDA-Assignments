[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 08): NAME(NAME) 'alphabet'
[00](01, 09)-(01, 10): EQUAL(OP) '='
[00](01, 11)-(01, 39): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[00](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 09): NAME(NAME) 'alphabet1'
[01](01, 10)-(01, 11): EQUAL(OP) '='
[01](01, 12)-(01, 66): STRING(STRING) '"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"'
[01](01, 66)-(01, 67): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 10): NAME(NAME) 'mirror'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 12): NAME(NAME) 's'
[03](01, 12)-(01, 13): RPAR(OP) ')'
[03](01, 13)-(01, 14): COLON(OP) ':'
[03](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 13): NAME(NAME) 'reverse_s'
[04](01, 14)-(01, 15): EQUAL(OP) '='
[04](01, 16)-(01, 18): STRING(STRING) '""'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 07): NAME(NAME) 'for'
[05](01, 08)-(01, 09): NAME(NAME) 'i'
[05](01, 10)-(01, 12): NAME(NAME) 'in'
[05](01, 13)-(01, 18): NAME(NAME) 'range'
[05](01, 18)-(01, 19): LPAR(OP) '('
[05](01, 19)-(01, 22): NAME(NAME) 'len'
[05](01, 22)-(01, 23): LPAR(OP) '('
[05](01, 23)-(01, 24): NAME(NAME) 's'
[05](01, 24)-(01, 25): RPAR(OP) ')'
[05](01, 25)-(01, 26): RPAR(OP) ')'
[05](01, 26)-(01, 27): COLON(OP) ':'
[05](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 17): NAME(NAME) 'reverse_s'
[06](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[06](01, 21)-(01, 22): NAME(NAME) 's'
[06](01, 22)-(01, 23): LSQB(OP) '['
[06](01, 23)-(01, 26): NAME(NAME) 'len'
[06](01, 26)-(01, 27): LPAR(OP) '('
[06](01, 27)-(01, 28): NAME(NAME) 's'
[06](01, 28)-(01, 29): RPAR(OP) ')'
[06](01, 30)-(01, 31): MINUS(OP) '-'
[06](01, 32)-(01, 33): NUMBER(NUMBER) '1'
[06](01, 34)-(01, 35): MINUS(OP) '-'
[06](01, 36)-(01, 37): NAME(NAME) 'i'
[06](01, 37)-(01, 38): RSQB(OP) ']'
[06](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'return'
[07](01, 11)-(01, 20): NAME(NAME) 'reverse_s'
[07](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'def'
[09](01, 04)-(01, 15): NAME(NAME) 'punctuation'
[09](01, 15)-(01, 16): LPAR(OP) '('
[09](01, 16)-(01, 17): NAME(NAME) 's'
[09](01, 17)-(01, 18): RPAR(OP) ')'
[09](01, 18)-(01, 19): COLON(OP) ':'
[09](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 05): NAME(NAME) 'p'
[10](01, 06)-(01, 07): EQUAL(OP) '='
[10](01, 08)-(01, 10): STRING(STRING) '""'
[10](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 07): NAME(NAME) 'for'
[11](01, 08)-(01, 09): NAME(NAME) 'i'
[11](01, 10)-(01, 12): NAME(NAME) 'in'
[11](01, 13)-(01, 18): NAME(NAME) 'range'
[11](01, 18)-(01, 19): LPAR(OP) '('
[11](01, 19)-(01, 22): NAME(NAME) 'len'
[11](01, 22)-(01, 23): LPAR(OP) '('
[11](01, 23)-(01, 24): NAME(NAME) 's'
[11](01, 24)-(01, 25): RPAR(OP) ')'
[11](01, 25)-(01, 26): RPAR(OP) ')'
[11](01, 26)-(01, 27): COLON(OP) ':'
[11](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 10): NAME(NAME) 'if'
[12](01, 11)-(01, 12): NAME(NAME) 's'
[12](01, 12)-(01, 13): LSQB(OP) '['
[12](01, 13)-(01, 14): NAME(NAME) 'i'
[12](01, 14)-(01, 15): RSQB(OP) ']'
[12](01, 16)-(01, 18): NAME(NAME) 'in'
[12](01, 19)-(01, 28): NAME(NAME) 'alphabet1'
[12](01, 28)-(01, 29): COLON(OP) ':'
[12](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 13): NAME(NAME) 'p'
[13](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[13](01, 17)-(01, 18): NAME(NAME) 's'
[13](01, 18)-(01, 19): LSQB(OP) '['
[13](01, 19)-(01, 20): NAME(NAME) 'i'
[13](01, 20)-(01, 21): RSQB(OP) ']'
[13](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 10): NAME(NAME) 'return'
[14](01, 11)-(01, 12): NAME(NAME) 'p'
[14](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 03): NAME(NAME) 'def'
[16](01, 04)-(01, 13): NAME(NAME) 'lowercase'
[16](01, 13)-(01, 14): LPAR(OP) '('
[16](01, 14)-(01, 15): NAME(NAME) 's'
[16](01, 15)-(01, 16): RPAR(OP) ')'
[16](01, 16)-(01, 17): COLON(OP) ':'
[16](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 09): NAME(NAME) 'lower'
[17](01, 10)-(01, 11): EQUAL(OP) '='
[17](01, 12)-(01, 14): STRING(STRING) '""'
[17](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 07): NAME(NAME) 'for'
[18](01, 08)-(01, 09): NAME(NAME) 'i'
[18](01, 10)-(01, 12): NAME(NAME) 'in'
[18](01, 13)-(01, 18): NAME(NAME) 'range'
[18](01, 18)-(01, 19): LPAR(OP) '('
[18](01, 19)-(01, 22): NAME(NAME) 'len'
[18](01, 22)-(01, 23): LPAR(OP) '('
[18](01, 23)-(01, 24): NAME(NAME) 's'
[18](01, 24)-(01, 25): RPAR(OP) ')'
[18](01, 25)-(01, 26): RPAR(OP) ')'
[18](01, 26)-(01, 27): COLON(OP) ':'
[18](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 10): NAME(NAME) 'if'
[19](01, 11)-(01, 12): NAME(NAME) 's'
[19](01, 12)-(01, 13): LSQB(OP) '['
[19](01, 13)-(01, 14): NAME(NAME) 'i'
[19](01, 14)-(01, 15): RSQB(OP) ']'
[19](01, 16)-(01, 19): NAME(NAME) 'not'
[19](01, 20)-(01, 22): NAME(NAME) 'in'
[19](01, 23)-(01, 31): NAME(NAME) 'alphabet'
[19](01, 31)-(01, 32): COLON(OP) ':'
[19](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 18): NAME(NAME) 'letter'
[20](01, 19)-(01, 20): EQUAL(OP) '='
[20](01, 21)-(01, 24): NAME(NAME) 'chr'
[20](01, 24)-(01, 25): LPAR(OP) '('
[20](01, 25)-(01, 28): NAME(NAME) 'ord'
[20](01, 28)-(01, 29): LPAR(OP) '('
[20](01, 29)-(01, 32): STRING(STRING) '"a"'
[20](01, 32)-(01, 33): RPAR(OP) ')'
[20](01, 34)-(01, 35): PLUS(OP) '+'
[20](01, 36)-(01, 39): NAME(NAME) 'ord'
[20](01, 39)-(01, 40): LPAR(OP) '('
[20](01, 40)-(01, 41): NAME(NAME) 's'
[20](01, 41)-(01, 42): LSQB(OP) '['
[20](01, 42)-(01, 43): NAME(NAME) 'i'
[20](01, 43)-(01, 44): RSQB(OP) ']'
[20](01, 44)-(01, 45): RPAR(OP) ')'
[20](01, 46)-(01, 47): MINUS(OP) '-'
[20](01, 48)-(01, 51): NAME(NAME) 'ord'
[20](01, 51)-(01, 52): LPAR(OP) '('
[20](01, 52)-(01, 55): STRING(STRING) '"A"'
[20](01, 55)-(01, 56): RPAR(OP) ')'
[20](01, 56)-(01, 57): RPAR(OP) ')'
[20](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 17): NAME(NAME) 'lower'
[21](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[21](01, 21)-(01, 27): NAME(NAME) 'letter'
[21](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 12): NAME(NAME) 'else'
[22](01, 12)-(01, 13): COLON(OP) ':'
[22](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 17): NAME(NAME) 'lower'
[23](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[23](01, 21)-(01, 22): NAME(NAME) 's'
[23](01, 22)-(01, 23): LSQB(OP) '['
[23](01, 23)-(01, 24): NAME(NAME) 'i'
[23](01, 24)-(01, 25): RSQB(OP) ']'
[23](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 10): NAME(NAME) 'return'
[24](01, 11)-(01, 16): NAME(NAME) 'lower'
[24](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 04)-(01, 05): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 03): NAME(NAME) 'def'
[26](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[26](01, 26)-(01, 27): LPAR(OP) '('
[26](01, 27)-(01, 35): NAME(NAME) 'sentence'
[26](01, 35)-(01, 36): RPAR(OP) ')'
[26](01, 36)-(01, 37): COLON(OP) ':'
[26](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 16): NAME(NAME) 'new_sentence'
[27](01, 17)-(01, 18): EQUAL(OP) '='
[27](01, 19)-(01, 28): NAME(NAME) 'lowercase'
[27](01, 28)-(01, 29): LPAR(OP) '('
[27](01, 29)-(01, 40): NAME(NAME) 'punctuation'
[27](01, 40)-(01, 41): LPAR(OP) '('
[27](01, 41)-(01, 49): NAME(NAME) 'sentence'
[27](01, 49)-(01, 50): RPAR(OP) ')'
[27](01, 50)-(01, 51): RPAR(OP) ')'
[27](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 10): NAME(NAME) 'return'
[28](01, 11)-(01, 23): NAME(NAME) 'new_sentence'
[28](01, 24)-(01, 26): EQEQUAL(OP) '=='
[28](01, 27)-(01, 33): NAME(NAME) 'mirror'
[28](01, 33)-(01, 34): LPAR(OP) '('
[28](01, 34)-(01, 46): NAME(NAME) 'new_sentence'
[28](01, 46)-(01, 47): RPAR(OP) ')'
[28](01, 47)-(01, 48): NEWLINE(NEWLINE)
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

