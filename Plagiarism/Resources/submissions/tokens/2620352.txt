[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'merge_lists'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 21): NAME(NAME) 'first'
[00](01, 21)-(01, 22): COMMA(OP) ','
[00](01, 22)-(01, 28): NAME(NAME) 'second'
[00](01, 28)-(01, 29): RPAR(OP) ')'
[00](01, 29)-(01, 30): COLON(OP) ':'
[00](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 10): NAME(NAME) 'len'
[01](01, 10)-(01, 11): LPAR(OP) '('
[01](01, 11)-(01, 16): NAME(NAME) 'first'
[01](01, 16)-(01, 17): RPAR(OP) ')'
[01](01, 18)-(01, 19): GREATER(OP) '>'
[01](01, 20)-(01, 23): NAME(NAME) 'len'
[01](01, 23)-(01, 24): LPAR(OP) '('
[01](01, 24)-(01, 30): NAME(NAME) 'second'
[01](01, 30)-(01, 31): RPAR(OP) ')'
[01](01, 31)-(01, 32): COLON(OP) ':'
[01](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 15): NAME(NAME) 'newlist'
[02](01, 16)-(01, 17): EQUAL(OP) '='
[02](01, 18)-(01, 24): NAME(NAME) 'merger'
[02](01, 24)-(01, 25): LPAR(OP) '('
[02](01, 25)-(01, 31): NAME(NAME) 'second'
[02](01, 31)-(01, 32): COMMA(OP) ','
[02](01, 32)-(01, 37): NAME(NAME) 'first'
[02](01, 37)-(01, 38): RPAR(OP) ')'
[02](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'else'
[03](01, 08)-(01, 09): COLON(OP) ':'
[03](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 15): NAME(NAME) 'newlist'
[04](01, 16)-(01, 17): EQUAL(OP) '='
[04](01, 18)-(01, 24): NAME(NAME) 'merger'
[04](01, 24)-(01, 25): LPAR(OP) '('
[04](01, 25)-(01, 30): NAME(NAME) 'first'
[04](01, 30)-(01, 31): COMMA(OP) ','
[04](01, 31)-(01, 37): NAME(NAME) 'second'
[04](01, 37)-(01, 38): RPAR(OP) ')'
[04](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): NAME(NAME) 'def'
[07](01, 04)-(01, 14): NAME(NAME) 'merge_sort'
[07](01, 14)-(01, 15): LPAR(OP) '('
[07](01, 15)-(01, 16): NAME(NAME) 'l'
[07](01, 16)-(01, 17): RPAR(OP) ')'
[07](01, 17)-(01, 18): COLON(OP) ':'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 06): NAME(NAME) 'if'
[08](01, 07)-(01, 10): NAME(NAME) 'len'
[08](01, 10)-(01, 11): LPAR(OP) '('
[08](01, 11)-(01, 12): NAME(NAME) 'l'
[08](01, 12)-(01, 13): RPAR(OP) ')'
[08](01, 13)-(01, 15): LESSEQUAL(OP) '<='
[08](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[08](01, 16)-(01, 17): COLON(OP) ':'
[08](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 14): NAME(NAME) 'return'
[09](01, 15)-(01, 16): NAME(NAME) 'l'
[09](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 08): NAME(NAME) 'else'
[10](01, 08)-(01, 09): COLON(OP) ':'
[10](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 09): NAME(NAME) 'x'
[11](01, 10)-(01, 11): EQUAL(OP) '='
[11](01, 12)-(01, 15): NAME(NAME) 'len'
[11](01, 15)-(01, 16): LPAR(OP) '('
[11](01, 16)-(01, 17): NAME(NAME) 'l'
[11](01, 17)-(01, 18): RPAR(OP) ')'
[11](01, 18)-(01, 20): DOUBLESLASH(OP) '//'
[11](01, 20)-(01, 21): NUMBER(NUMBER) '2'
[11](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 12): NAME(NAME) 'léén'
[12](01, 12)-(01, 13): EQUAL(OP) '='
[12](01, 13)-(01, 23): NAME(NAME) 'merge_sort'
[12](01, 23)-(01, 24): LPAR(OP) '('
[12](01, 24)-(01, 25): NAME(NAME) 'l'
[12](01, 25)-(01, 26): LSQB(OP) '['
[12](01, 26)-(01, 27): COLON(OP) ':'
[12](01, 27)-(01, 28): NAME(NAME) 'x'
[12](01, 28)-(01, 29): RSQB(OP) ']'
[12](01, 29)-(01, 30): RPAR(OP) ')'
[12](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 13): NAME(NAME) 'ltwee'
[13](01, 14)-(01, 15): EQUAL(OP) '='
[13](01, 16)-(01, 26): NAME(NAME) 'merge_sort'
[13](01, 26)-(01, 27): LPAR(OP) '('
[13](01, 27)-(01, 28): NAME(NAME) 'l'
[13](01, 28)-(01, 29): LSQB(OP) '['
[13](01, 29)-(01, 30): NAME(NAME) 'x'
[13](01, 30)-(01, 31): COLON(OP) ':'
[13](01, 31)-(01, 32): RSQB(OP) ']'
[13](01, 32)-(01, 33): RPAR(OP) ')'
[13](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 13): NAME(NAME) 'ldrie'
[14](01, 14)-(01, 15): EQUAL(OP) '='
[14](01, 16)-(01, 27): NAME(NAME) 'merge_lists'
[14](01, 27)-(01, 28): LPAR(OP) '('
[14](01, 28)-(01, 32): NAME(NAME) 'léén'
[14](01, 32)-(01, 33): COMMA(OP) ','
[14](01, 33)-(01, 38): NAME(NAME) 'ltwee'
[14](01, 38)-(01, 39): RPAR(OP) ')'
[14](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 14): NAME(NAME) 'return'
[15](01, 15)-(01, 20): NAME(NAME) 'ldrie'
[15](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 03): NAME(NAME) 'def'
[17](01, 04)-(01, 10): NAME(NAME) 'merger'
[17](01, 10)-(01, 11): LPAR(OP) '('
[17](01, 11)-(01, 15): NAME(NAME) 'smal'
[17](01, 15)-(01, 16): COMMA(OP) ','
[17](01, 16)-(01, 19): NAME(NAME) 'big'
[17](01, 19)-(01, 20): RPAR(OP) ')'
[17](01, 20)-(01, 21): COLON(OP) ':'
[17](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 05): NAME(NAME) 'i'
[18](01, 06)-(01, 07): EQUAL(OP) '='
[18](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[18](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 05): NAME(NAME) 'j'
[19](01, 06)-(01, 07): EQUAL(OP) '='
[19](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[19](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 11): NAME(NAME) 'newlist'
[20](01, 12)-(01, 13): EQUAL(OP) '='
[20](01, 14)-(01, 15): LSQB(OP) '['
[20](01, 15)-(01, 16): RSQB(OP) ']'
[20](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 04): INDENT(INDENT) '    '
[21](01, 04)-(01, 09): NAME(NAME) 'while'
[21](01, 10)-(01, 11): NAME(NAME) 'i'
[21](01, 12)-(01, 13): LESS(OP) '<'
[21](01, 14)-(01, 17): NAME(NAME) 'len'
[21](01, 17)-(01, 18): LPAR(OP) '('
[21](01, 18)-(01, 22): NAME(NAME) 'smal'
[21](01, 22)-(01, 23): RPAR(OP) ')'
[21](01, 23)-(01, 24): MINUS(OP) '-'
[21](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[21](01, 25)-(01, 26): COLON(OP) ':'
[21](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 10): NAME(NAME) 'if'
[22](01, 11)-(01, 15): NAME(NAME) 'smal'
[22](01, 15)-(01, 16): LSQB(OP) '['
[22](01, 16)-(01, 17): NAME(NAME) 'i'
[22](01, 17)-(01, 18): RSQB(OP) ']'
[22](01, 19)-(01, 21): LESSEQUAL(OP) '<='
[22](01, 22)-(01, 25): NAME(NAME) 'big'
[22](01, 25)-(01, 26): LSQB(OP) '['
[22](01, 26)-(01, 27): NAME(NAME) 'j'
[22](01, 27)-(01, 28): RSQB(OP) ']'
[22](01, 28)-(01, 29): COLON(OP) ':'
[22](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 19): NAME(NAME) 'newlist'
[23](01, 19)-(01, 20): DOT(OP) '.'
[23](01, 20)-(01, 26): NAME(NAME) 'append'
[23](01, 26)-(01, 27): LPAR(OP) '('
[23](01, 27)-(01, 31): NAME(NAME) 'smal'
[23](01, 31)-(01, 32): LSQB(OP) '['
[23](01, 32)-(01, 33): NAME(NAME) 'i'
[23](01, 33)-(01, 34): RSQB(OP) ']'
[23](01, 34)-(01, 35): RPAR(OP) ')'
[23](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): INDENT(INDENT) '            '
[24](01, 12)-(01, 13): NAME(NAME) 'i'
[24](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[24](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[24](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 08): INDENT(INDENT) '        '
[25](01, 08)-(01, 12): NAME(NAME) 'else'
[25](01, 12)-(01, 13): COLON(OP) ':'
[25](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 12): INDENT(INDENT) '            '
[26](01, 12)-(01, 19): NAME(NAME) 'newlist'
[26](01, 19)-(01, 20): DOT(OP) '.'
[26](01, 20)-(01, 26): NAME(NAME) 'append'
[26](01, 26)-(01, 27): LPAR(OP) '('
[26](01, 27)-(01, 30): NAME(NAME) 'big'
[26](01, 30)-(01, 31): LSQB(OP) '['
[26](01, 31)-(01, 32): NAME(NAME) 'j'
[26](01, 32)-(01, 33): RSQB(OP) ']'
[26](01, 33)-(01, 34): RPAR(OP) ')'
[26](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 12): INDENT(INDENT) '            '
[27](01, 12)-(01, 13): NAME(NAME) 'j'
[27](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[27](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[27](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 11): NAME(NAME) 'newlist'
[28](01, 11)-(01, 12): DOT(OP) '.'
[28](01, 12)-(01, 18): NAME(NAME) 'append'
[28](01, 18)-(01, 19): LPAR(OP) '('
[28](01, 19)-(01, 22): NAME(NAME) 'big'
[28](01, 22)-(01, 23): LSQB(OP) '['
[28](01, 23)-(01, 24): NAME(NAME) 'j'
[28](01, 24)-(01, 25): COLON(OP) ':'
[28](01, 25)-(01, 26): RSQB(OP) ']'
[28](01, 26)-(01, 27): RPAR(OP) ')'
[28](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 04): INDENT(INDENT) '    '
[29](01, 04)-(01, 10): NAME(NAME) 'return'
[29](01, 11)-(01, 18): NAME(NAME) 'newlist'
[29](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

