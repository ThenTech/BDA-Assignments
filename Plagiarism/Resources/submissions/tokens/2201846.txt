[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 16): NAME(NAME) 'value'
[00](01, 16)-(01, 17): RPAR(OP) ')'
[00](01, 17)-(01, 18): COLON(OP) ':'
[00](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 16): NAME(NAME) 'encoded_form'
[01](01, 17)-(01, 18): EQUAL(OP) '='
[01](01, 19)-(01, 21): STRING(STRING) '""'
[01](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 04)-(01, 05): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 06): NAME(NAME) 'if'
[03](01, 07)-(01, 10): NAME(NAME) 'len'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 16): NAME(NAME) 'value'
[03](01, 16)-(01, 17): RPAR(OP) ')'
[03](01, 18)-(01, 20): EQEQUAL(OP) '=='
[03](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[03](01, 22)-(01, 23): COLON(OP) ':'
[03](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 18): STRING(STRING) '"0"'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 08)-(01, 09): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 06): NAME(NAME) 'if'
[06](01, 07)-(01, 10): NAME(NAME) 'len'
[06](01, 10)-(01, 11): LPAR(OP) '('
[06](01, 11)-(01, 16): NAME(NAME) 'value'
[06](01, 16)-(01, 17): RPAR(OP) ')'
[06](01, 18)-(01, 20): EQEQUAL(OP) '=='
[06](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[06](01, 22)-(01, 23): COLON(OP) ':'
[06](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 14): NAME(NAME) 'return'
[07](01, 15)-(01, 17): STRING(STRING) '""'
[07](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 04)-(01, 05): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 04)-(01, 05): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 06): NAME(NAME) 'if'
[10](01, 07)-(01, 12): NAME(NAME) 'value'
[10](01, 12)-(01, 13): LSQB(OP) '['
[10](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[10](01, 14)-(01, 15): RSQB(OP) ']'
[10](01, 16)-(01, 18): EQEQUAL(OP) '=='
[10](01, 19)-(01, 22): STRING(STRING) '"X"'
[10](01, 22)-(01, 23): COLON(OP) ':'
[10](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 20): NAME(NAME) 'encoded_form'
[11](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[11](01, 24)-(01, 27): STRING(STRING) '"1"'
[11](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 08): NAME(NAME) 'elif'
[12](01, 09)-(01, 14): NAME(NAME) 'value'
[12](01, 14)-(01, 15): LSQB(OP) '['
[12](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[12](01, 16)-(01, 17): RSQB(OP) ']'
[12](01, 18)-(01, 20): EQEQUAL(OP) '=='
[12](01, 21)-(01, 24): STRING(STRING) '" "'
[12](01, 24)-(01, 25): COLON(OP) ':'
[12](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 20): NAME(NAME) 'encoded_form'
[13](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[13](01, 24)-(01, 27): STRING(STRING) '"0"'
[13](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 04)-(01, 05): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'for'
[15](01, 08)-(01, 13): NAME(NAME) 'chars'
[15](01, 14)-(01, 16): NAME(NAME) 'in'
[15](01, 17)-(01, 22): NAME(NAME) 'range'
[15](01, 22)-(01, 23): LPAR(OP) '('
[15](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[15](01, 24)-(01, 25): COMMA(OP) ','
[15](01, 26)-(01, 29): NAME(NAME) 'len'
[15](01, 29)-(01, 30): LPAR(OP) '('
[15](01, 30)-(01, 35): NAME(NAME) 'value'
[15](01, 35)-(01, 36): RPAR(OP) ')'
[15](01, 36)-(01, 37): MINUS(OP) '-'
[15](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[15](01, 38)-(01, 39): RPAR(OP) ')'
[15](01, 39)-(01, 40): COLON(OP) ':'
[15](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 13): NAME(NAME) 'mines'
[16](01, 14)-(01, 15): EQUAL(OP) '='
[16](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[16](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 10): NAME(NAME) 'if'
[17](01, 11)-(01, 16): NAME(NAME) 'value'
[17](01, 16)-(01, 17): LSQB(OP) '['
[17](01, 17)-(01, 22): NAME(NAME) 'chars'
[17](01, 22)-(01, 23): MINUS(OP) '-'
[17](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[17](01, 24)-(01, 25): RSQB(OP) ']'
[17](01, 26)-(01, 28): EQEQUAL(OP) '=='
[17](01, 29)-(01, 32): STRING(STRING) '"X"'
[17](01, 32)-(01, 33): COLON(OP) ':'
[17](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 17): NAME(NAME) 'mines'
[18](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[18](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[18](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 10): NAME(NAME) 'if'
[19](01, 11)-(01, 16): NAME(NAME) 'value'
[19](01, 16)-(01, 17): LSQB(OP) '['
[19](01, 17)-(01, 22): NAME(NAME) 'chars'
[19](01, 22)-(01, 23): PLUS(OP) '+'
[19](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[19](01, 24)-(01, 25): RSQB(OP) ']'
[19](01, 26)-(01, 28): EQEQUAL(OP) '=='
[19](01, 29)-(01, 32): STRING(STRING) '"X"'
[19](01, 32)-(01, 33): COLON(OP) ':'
[19](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 17): NAME(NAME) 'mines'
[20](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[20](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[20](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 20): NAME(NAME) 'encoded_form'
[21](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[21](01, 24)-(01, 27): NAME(NAME) 'str'
[21](01, 27)-(01, 28): LPAR(OP) '('
[21](01, 28)-(01, 33): NAME(NAME) 'mines'
[21](01, 33)-(01, 34): RPAR(OP) ')'
[21](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 06): NAME(NAME) 'if'
[23](01, 07)-(01, 12): NAME(NAME) 'value'
[23](01, 12)-(01, 13): LSQB(OP) '['
[23](01, 13)-(01, 16): NAME(NAME) 'len'
[23](01, 16)-(01, 17): LPAR(OP) '('
[23](01, 17)-(01, 22): NAME(NAME) 'value'
[23](01, 22)-(01, 23): RPAR(OP) ')'
[23](01, 23)-(01, 24): MINUS(OP) '-'
[23](01, 24)-(01, 25): NUMBER(NUMBER) '2'
[23](01, 25)-(01, 26): RSQB(OP) ']'
[23](01, 27)-(01, 29): EQEQUAL(OP) '=='
[23](01, 30)-(01, 33): STRING(STRING) '"X"'
[23](01, 33)-(01, 34): COLON(OP) ':'
[23](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 20): NAME(NAME) 'encoded_form'
[24](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[24](01, 24)-(01, 27): STRING(STRING) '"1"'
[24](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 04): INDENT(INDENT) '    '
[25](01, 04)-(01, 08): NAME(NAME) 'elif'
[25](01, 09)-(01, 14): NAME(NAME) 'value'
[25](01, 14)-(01, 15): LSQB(OP) '['
[25](01, 15)-(01, 18): NAME(NAME) 'len'
[25](01, 18)-(01, 19): LPAR(OP) '('
[25](01, 19)-(01, 24): NAME(NAME) 'value'
[25](01, 24)-(01, 25): RPAR(OP) ')'
[25](01, 25)-(01, 26): MINUS(OP) '-'
[25](01, 26)-(01, 27): NUMBER(NUMBER) '2'
[25](01, 27)-(01, 28): RSQB(OP) ']'
[25](01, 29)-(01, 31): EQEQUAL(OP) '=='
[25](01, 32)-(01, 35): STRING(STRING) '" "'
[25](01, 35)-(01, 36): COLON(OP) ':'
[25](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 08): INDENT(INDENT) '        '
[26](01, 08)-(01, 20): NAME(NAME) 'encoded_form'
[26](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[26](01, 24)-(01, 27): STRING(STRING) '"0"'
[26](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 04)-(01, 05): NL(NL) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 10): NAME(NAME) 'return'
[28](01, 11)-(01, 23): NAME(NAME) 'encoded_form'
[28](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 03): NAME(NAME) 'def'
[30](01, 04)-(01, 10): NAME(NAME) 'decode'
[30](01, 10)-(01, 11): LPAR(OP) '('
[30](01, 11)-(01, 16): NAME(NAME) 'value'
[30](01, 16)-(01, 17): RPAR(OP) ')'
[30](01, 17)-(01, 18): COLON(OP) ':'
[30](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 04): INDENT(INDENT) '    '
[31](01, 04)-(01, 11): NAME(NAME) 'decoded'
[31](01, 12)-(01, 13): EQUAL(OP) '='
[31](01, 14)-(01, 16): STRING(STRING) '""'
[31](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 07): NAME(NAME) 'for'
[32](01, 08)-(01, 09): NAME(NAME) 'i'
[32](01, 10)-(01, 12): NAME(NAME) 'in'
[32](01, 13)-(01, 18): NAME(NAME) 'range'
[32](01, 18)-(01, 19): LPAR(OP) '('
[32](01, 19)-(01, 22): NAME(NAME) 'len'
[32](01, 22)-(01, 23): LPAR(OP) '('
[32](01, 23)-(01, 28): NAME(NAME) 'value'
[32](01, 28)-(01, 29): RPAR(OP) ')'
[32](01, 29)-(01, 30): RPAR(OP) ')'
[32](01, 30)-(01, 31): COLON(OP) ':'
[32](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 15): NAME(NAME) 'decoded'
[33](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[33](01, 19)-(01, 22): STRING(STRING) '" "'
[33](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 04)-(01, 05): NL(NL) '\n'
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 04): INDENT(INDENT) '    '
[35](01, 04)-(01, 07): NAME(NAME) 'for'
[35](01, 08)-(01, 13): NAME(NAME) 'chars'
[35](01, 14)-(01, 16): NAME(NAME) 'in'
[35](01, 17)-(01, 22): NAME(NAME) 'range'
[35](01, 22)-(01, 23): LPAR(OP) '('
[35](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[35](01, 24)-(01, 25): COMMA(OP) ','
[35](01, 26)-(01, 29): NAME(NAME) 'len'
[35](01, 29)-(01, 30): LPAR(OP) '('
[35](01, 30)-(01, 35): NAME(NAME) 'value'
[35](01, 35)-(01, 36): RPAR(OP) ')'
[35](01, 36)-(01, 37): MINUS(OP) '-'
[35](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[35](01, 38)-(01, 39): RPAR(OP) ')'
[35](01, 39)-(01, 40): COLON(OP) ':'
[35](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[36](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[36](01, 00)-(01, 08): INDENT(INDENT) '        '
[36](01, 08)-(01, 10): NAME(NAME) 'if'
[36](01, 11)-(01, 16): NAME(NAME) 'value'
[36](01, 16)-(01, 17): LSQB(OP) '['
[36](01, 17)-(01, 22): NAME(NAME) 'chars'
[36](01, 22)-(01, 23): RSQB(OP) ']'
[36](01, 24)-(01, 26): EQEQUAL(OP) '=='
[36](01, 27)-(01, 30): STRING(STRING) '"2"'
[36](01, 30)-(01, 31): COLON(OP) ':'
[36](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[36](02, 00)-(02, 00): DEDENT(DEDENT)
[36](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[37](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[37](01, 00)-(01, 12): INDENT(INDENT) '            '
[37](01, 12)-(01, 19): NAME(NAME) 'decoded'
[37](01, 20)-(01, 21): EQUAL(OP) '='
[37](01, 22)-(01, 29): NAME(NAME) 'decoded'
[37](01, 29)-(01, 30): LSQB(OP) '['
[37](01, 30)-(01, 31): COLON(OP) ':'
[37](01, 31)-(01, 36): NAME(NAME) 'chars'
[37](01, 36)-(01, 37): MINUS(OP) '-'
[37](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[37](01, 38)-(01, 39): RSQB(OP) ']'
[37](01, 40)-(01, 41): PLUS(OP) '+'
[37](01, 42)-(01, 45): STRING(STRING) '"X"'
[37](01, 46)-(01, 47): PLUS(OP) '+'
[37](01, 48)-(01, 55): NAME(NAME) 'decoded'
[37](01, 55)-(01, 56): LSQB(OP) '['
[37](01, 56)-(01, 61): NAME(NAME) 'chars'
[37](01, 61)-(01, 62): RSQB(OP) ']'
[37](01, 63)-(01, 64): PLUS(OP) '+'
[37](01, 65)-(01, 68): STRING(STRING) '"X"'
[37](01, 69)-(01, 70): PLUS(OP) '+'
[37](01, 71)-(01, 78): NAME(NAME) 'decoded'
[37](01, 78)-(01, 79): LSQB(OP) '['
[37](01, 79)-(01, 84): NAME(NAME) 'chars'
[37](01, 84)-(01, 85): PLUS(OP) '+'
[37](01, 85)-(01, 86): NUMBER(NUMBER) '2'
[37](01, 86)-(01, 87): COLON(OP) ':'
[37](01, 87)-(01, 88): RSQB(OP) ']'
[37](01, 88)-(01, 89): NEWLINE(NEWLINE) '\n'
[37](02, 00)-(02, 00): DEDENT(DEDENT)
[37](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[38](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[38](01, 12)-(01, 13): NL(NL) '\n'
[38](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[39](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[39](01, 00)-(01, 04): INDENT(INDENT) '    '
[39](01, 04)-(01, 07): NAME(NAME) 'for'
[39](01, 08)-(01, 13): NAME(NAME) 'chars'
[39](01, 14)-(01, 16): NAME(NAME) 'in'
[39](01, 17)-(01, 22): NAME(NAME) 'range'
[39](01, 22)-(01, 23): LPAR(OP) '('
[39](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[39](01, 24)-(01, 25): COMMA(OP) ','
[39](01, 26)-(01, 29): NAME(NAME) 'len'
[39](01, 29)-(01, 30): LPAR(OP) '('
[39](01, 30)-(01, 35): NAME(NAME) 'value'
[39](01, 35)-(01, 36): RPAR(OP) ')'
[39](01, 36)-(01, 37): MINUS(OP) '-'
[39](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[39](01, 38)-(01, 39): RPAR(OP) ')'
[39](01, 39)-(01, 40): COLON(OP) ':'
[39](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[39](02, 00)-(02, 00): DEDENT(DEDENT)
[39](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[40](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[40](01, 00)-(01, 08): INDENT(INDENT) '        '
[40](01, 08)-(01, 10): NAME(NAME) 'if'
[40](01, 11)-(01, 16): NAME(NAME) 'value'
[40](01, 16)-(01, 17): LSQB(OP) '['
[40](01, 17)-(01, 22): NAME(NAME) 'chars'
[40](01, 22)-(01, 23): RSQB(OP) ']'
[40](01, 24)-(01, 26): EQEQUAL(OP) '=='
[40](01, 27)-(01, 30): STRING(STRING) '"1"'
[40](01, 30)-(01, 31): COLON(OP) ':'
[40](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[40](02, 00)-(02, 00): DEDENT(DEDENT)
[40](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[41](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[41](01, 00)-(01, 12): INDENT(INDENT) '            '
[41](01, 12)-(01, 14): NAME(NAME) 'if'
[41](01, 15)-(01, 18): NAME(NAME) 'not'
[41](01, 19)-(01, 26): NAME(NAME) 'decoded'
[41](01, 26)-(01, 27): LSQB(OP) '['
[41](01, 27)-(01, 32): NAME(NAME) 'chars'
[41](01, 32)-(01, 33): MINUS(OP) '-'
[41](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[41](01, 34)-(01, 35): RSQB(OP) ']'
[41](01, 36)-(01, 38): EQEQUAL(OP) '=='
[41](01, 39)-(01, 42): STRING(STRING) '"X"'
[41](01, 43)-(01, 45): NAME(NAME) 'or'
[41](01, 46)-(01, 53): NAME(NAME) 'decoded'
[41](01, 53)-(01, 54): LSQB(OP) '['
[41](01, 54)-(01, 59): NAME(NAME) 'chars'
[41](01, 59)-(01, 60): PLUS(OP) '+'
[41](01, 60)-(01, 61): NUMBER(NUMBER) '1'
[41](01, 61)-(01, 62): RSQB(OP) ']'
[41](01, 63)-(01, 65): EQEQUAL(OP) '=='
[41](01, 66)-(01, 69): STRING(STRING) '"X"'
[41](01, 69)-(01, 70): COLON(OP) ':'
[41](01, 70)-(01, 71): NEWLINE(NEWLINE) '\n'
[41](02, 00)-(02, 00): DEDENT(DEDENT)
[41](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[42](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[42](01, 00)-(01, 16): INDENT(INDENT) '                '
[42](01, 16)-(01, 23): NAME(NAME) 'decoded'
[42](01, 24)-(01, 25): EQUAL(OP) '='
[42](01, 26)-(01, 33): NAME(NAME) 'decoded'
[42](01, 33)-(01, 34): LSQB(OP) '['
[42](01, 34)-(01, 35): COLON(OP) ':'
[42](01, 35)-(01, 40): NAME(NAME) 'chars'
[42](01, 40)-(01, 41): MINUS(OP) '-'
[42](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[42](01, 42)-(01, 43): RSQB(OP) ']'
[42](01, 44)-(01, 45): PLUS(OP) '+'
[42](01, 46)-(01, 49): STRING(STRING) '"X"'
[42](01, 50)-(01, 51): PLUS(OP) '+'
[42](01, 52)-(01, 59): NAME(NAME) 'decoded'
[42](01, 59)-(01, 60): LSQB(OP) '['
[42](01, 60)-(01, 65): NAME(NAME) 'chars'
[42](01, 65)-(01, 66): COLON(OP) ':'
[42](01, 66)-(01, 67): RSQB(OP) ']'
[42](01, 69)-(01, 70): NEWLINE(NEWLINE) '\n'
[42](02, 00)-(02, 00): DEDENT(DEDENT)
[42](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[43](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[43](01, 04)-(01, 05): NL(NL) '\n'
[43](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[44](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[44](01, 00)-(01, 04): INDENT(INDENT) '    '
[44](01, 04)-(01, 07): NAME(NAME) 'for'
[44](01, 08)-(01, 13): NAME(NAME) 'chars'
[44](01, 14)-(01, 16): NAME(NAME) 'in'
[44](01, 17)-(01, 22): NAME(NAME) 'range'
[44](01, 22)-(01, 23): LPAR(OP) '('
[44](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[44](01, 24)-(01, 25): COMMA(OP) ','
[44](01, 26)-(01, 29): NAME(NAME) 'len'
[44](01, 29)-(01, 30): LPAR(OP) '('
[44](01, 30)-(01, 35): NAME(NAME) 'value'
[44](01, 35)-(01, 36): RPAR(OP) ')'
[44](01, 36)-(01, 37): MINUS(OP) '-'
[44](01, 37)-(01, 38): NUMBER(NUMBER) '1'
[44](01, 38)-(01, 39): RPAR(OP) ')'
[44](01, 39)-(01, 40): COLON(OP) ':'
[44](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[44](02, 00)-(02, 00): DEDENT(DEDENT)
[44](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[45](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[45](01, 00)-(01, 08): INDENT(INDENT) '        '
[45](01, 08)-(01, 10): NAME(NAME) 'if'
[45](01, 11)-(01, 16): NAME(NAME) 'value'
[45](01, 16)-(01, 17): LSQB(OP) '['
[45](01, 17)-(01, 22): NAME(NAME) 'chars'
[45](01, 22)-(01, 23): RSQB(OP) ']'
[45](01, 24)-(01, 26): EQEQUAL(OP) '=='
[45](01, 27)-(01, 30): STRING(STRING) '"0"'
[45](01, 30)-(01, 31): COLON(OP) ':'
[45](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[45](02, 00)-(02, 00): DEDENT(DEDENT)
[45](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[46](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[46](01, 00)-(01, 12): INDENT(INDENT) '            '
[46](01, 12)-(01, 14): NAME(NAME) 'if'
[46](01, 15)-(01, 18): NAME(NAME) 'not'
[46](01, 19)-(01, 26): NAME(NAME) 'decoded'
[46](01, 26)-(01, 27): LSQB(OP) '['
[46](01, 27)-(01, 32): NAME(NAME) 'chars'
[46](01, 32)-(01, 33): MINUS(OP) '-'
[46](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[46](01, 34)-(01, 35): RSQB(OP) ']'
[46](01, 36)-(01, 38): EQEQUAL(OP) '=='
[46](01, 39)-(01, 42): STRING(STRING) '" "'
[46](01, 43)-(01, 46): NAME(NAME) 'and'
[46](01, 47)-(01, 54): NAME(NAME) 'decoded'
[46](01, 54)-(01, 55): LSQB(OP) '['
[46](01, 55)-(01, 60): NAME(NAME) 'chars'
[46](01, 60)-(01, 61): PLUS(OP) '+'
[46](01, 61)-(01, 62): NUMBER(NUMBER) '1'
[46](01, 62)-(01, 63): RSQB(OP) ']'
[46](01, 64)-(01, 66): EQEQUAL(OP) '=='
[46](01, 67)-(01, 70): STRING(STRING) '" "'
[46](01, 70)-(01, 71): COLON(OP) ':'
[46](01, 71)-(01, 72): NEWLINE(NEWLINE) '\n'
[46](02, 00)-(02, 00): DEDENT(DEDENT)
[46](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[47](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[47](01, 00)-(01, 16): INDENT(INDENT) '                '
[47](01, 16)-(01, 23): NAME(NAME) 'decoded'
[47](01, 24)-(01, 25): EQUAL(OP) '='
[47](01, 26)-(01, 33): NAME(NAME) 'decoded'
[47](01, 33)-(01, 34): LSQB(OP) '['
[47](01, 34)-(01, 35): COLON(OP) ':'
[47](01, 35)-(01, 40): NAME(NAME) 'chars'
[47](01, 40)-(01, 41): MINUS(OP) '-'
[47](01, 41)-(01, 42): NUMBER(NUMBER) '1'
[47](01, 42)-(01, 43): RSQB(OP) ']'
[47](01, 44)-(01, 45): PLUS(OP) '+'
[47](01, 46)-(01, 49): STRING(STRING) '" "'
[47](01, 50)-(01, 51): PLUS(OP) '+'
[47](01, 52)-(01, 59): NAME(NAME) 'decoded'
[47](01, 59)-(01, 60): LSQB(OP) '['
[47](01, 60)-(01, 65): NAME(NAME) 'chars'
[47](01, 65)-(01, 66): RSQB(OP) ']'
[47](01, 67)-(01, 68): PLUS(OP) '+'
[47](01, 69)-(01, 72): STRING(STRING) '" "'
[47](01, 73)-(01, 74): PLUS(OP) '+'
[47](01, 75)-(01, 82): NAME(NAME) 'decoded'
[47](01, 82)-(01, 83): LSQB(OP) '['
[47](01, 83)-(01, 88): NAME(NAME) 'chars'
[47](01, 88)-(01, 89): PLUS(OP) '+'
[47](01, 89)-(01, 90): NUMBER(NUMBER) '2'
[47](01, 90)-(01, 91): COLON(OP) ':'
[47](01, 91)-(01, 92): RSQB(OP) ']'
[47](01, 92)-(01, 93): NEWLINE(NEWLINE) '\n'
[47](02, 00)-(02, 00): DEDENT(DEDENT)
[47](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[48](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[48](01, 04)-(01, 05): NL(NL) '\n'
[48](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[49](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[49](01, 04)-(01, 05): NL(NL) '\n'
[49](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[50](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[50](01, 00)-(01, 04): INDENT(INDENT) '    '
[50](01, 04)-(01, 09): NAME(NAME) 'print'
[50](01, 09)-(01, 10): LPAR(OP) '('
[50](01, 10)-(01, 17): NAME(NAME) 'decoded'
[50](01, 17)-(01, 18): RPAR(OP) ')'
[50](01, 28)-(01, 29): NEWLINE(NEWLINE)
[50](02, 00)-(02, 00): DEDENT(DEDENT)
[50](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

