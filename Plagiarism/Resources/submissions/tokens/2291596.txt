[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 17): NAME(NAME) 'lucky_numbers'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 19): NAME(NAME) 'n'
[00](01, 19)-(01, 20): RPAR(OP) ')'
[00](01, 20)-(01, 21): COLON(OP) ':'
[00](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 14): NAME(NAME) 'lucky_list'
[01](01, 15)-(01, 16): EQUAL(OP) '='
[01](01, 17)-(01, 21): NAME(NAME) 'list'
[01](01, 21)-(01, 22): LPAR(OP) '('
[01](01, 22)-(01, 27): NAME(NAME) 'range'
[01](01, 27)-(01, 28): LPAR(OP) '('
[01](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[01](01, 29)-(01, 30): COMMA(OP) ','
[01](01, 31)-(01, 32): NAME(NAME) 'n'
[01](01, 32)-(01, 33): RPAR(OP) ')'
[01](01, 33)-(01, 34): RPAR(OP) ')'
[01](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'count'
[02](01, 10)-(01, 11): EQUAL(OP) '='
[02](01, 12)-(01, 13): NUMBER(NUMBER) '2'
[02](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'while'
[03](01, 10)-(01, 13): NAME(NAME) 'len'
[03](01, 13)-(01, 14): LPAR(OP) '('
[03](01, 14)-(01, 24): NAME(NAME) 'lucky_list'
[03](01, 24)-(01, 25): RPAR(OP) ')'
[03](01, 26)-(01, 27): GREATER(OP) '>'
[03](01, 28)-(01, 33): NAME(NAME) 'count'
[03](01, 33)-(01, 34): COLON(OP) ':'
[03](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 23): NAME(NAME) 'lucky_list_edit'
[04](01, 24)-(01, 25): EQUAL(OP) '='
[04](01, 26)-(01, 27): LSQB(OP) '['
[04](01, 27)-(01, 37): NAME(NAME) 'lucky_list'
[04](01, 37)-(01, 38): LSQB(OP) '['
[04](01, 38)-(01, 43): NAME(NAME) 'index'
[04](01, 43)-(01, 44): RSQB(OP) ']'
[04](01, 45)-(01, 48): NAME(NAME) 'for'
[04](01, 49)-(01, 54): NAME(NAME) 'index'
[04](01, 55)-(01, 57): NAME(NAME) 'in'
[04](01, 58)-(01, 63): NAME(NAME) 'range'
[04](01, 63)-(01, 64): LPAR(OP) '('
[04](01, 64)-(01, 67): NAME(NAME) 'len'
[04](01, 67)-(01, 68): LPAR(OP) '('
[04](01, 68)-(01, 78): NAME(NAME) 'lucky_list'
[04](01, 78)-(01, 79): RPAR(OP) ')'
[04](01, 79)-(01, 80): RPAR(OP) ')'
[04](01, 81)-(01, 83): NAME(NAME) 'if'
[04](01, 84)-(01, 89): NAME(NAME) 'index'
[04](01, 90)-(01, 91): PERCENT(OP) '%'
[04](01, 92)-(01, 97): NAME(NAME) 'count'
[04](01, 98)-(01, 100): EQEQUAL(OP) '=='
[04](01, 101)-(01, 102): NUMBER(NUMBER) '0'
[04](01, 102)-(01, 103): RSQB(OP) ']'
[04](01, 103)-(01, 104): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 18): NAME(NAME) 'lucky_list'
[05](01, 19)-(01, 20): EQUAL(OP) '='
[05](01, 21)-(01, 36): NAME(NAME) 'lucky_list_edit'
[05](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 13): NAME(NAME) 'count'
[06](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[06](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[06](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 10): NAME(NAME) 'return'
[07](01, 11)-(01, 21): NAME(NAME) 'lucky_list'
[07](01, 21)-(01, 22): NEWLINE(NEWLINE)
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

