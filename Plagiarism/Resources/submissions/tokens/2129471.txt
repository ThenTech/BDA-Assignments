[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 72): COMMENT(COMMENT) '#appologies, i realized yesterday that i read the requirements backwards'
[00](01, 72)-(01, 73): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 10): NAME(NAME) 'coinsOfOne'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 16): NAME(NAME) 'int'
[01](01, 16)-(01, 17): LPAR(OP) '('
[01](01, 17)-(01, 22): NAME(NAME) 'input'
[01](01, 22)-(01, 23): LPAR(OP) '('
[01](01, 23)-(01, 24): RPAR(OP) ')'
[01](01, 24)-(01, 25): RPAR(OP) ')'
[01](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 10): NAME(NAME) 'coinsOfTwo'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 13)-(01, 16): NAME(NAME) 'int'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 22): NAME(NAME) 'input'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 24): RPAR(OP) ')'
[02](01, 24)-(01, 25): RPAR(OP) ')'
[02](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 11): NAME(NAME) 'coinsOfFive'
[03](01, 12)-(01, 13): EQUAL(OP) '='
[03](01, 14)-(01, 17): NAME(NAME) 'int'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 23): NAME(NAME) 'input'
[03](01, 23)-(01, 24): LPAR(OP) '('
[03](01, 24)-(01, 25): RPAR(OP) ')'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 10): NAME(NAME) 'coinsOfTen'
[04](01, 11)-(01, 12): EQUAL(OP) '='
[04](01, 13)-(01, 16): NAME(NAME) 'int'
[04](01, 16)-(01, 17): LPAR(OP) '('
[04](01, 17)-(01, 22): NAME(NAME) 'input'
[04](01, 22)-(01, 23): LPAR(OP) '('
[04](01, 23)-(01, 24): RPAR(OP) ')'
[04](01, 24)-(01, 25): RPAR(OP) ')'
[04](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 13): NAME(NAME) 'coinsOfTwenty'
[05](01, 14)-(01, 15): EQUAL(OP) '='
[05](01, 16)-(01, 19): NAME(NAME) 'int'
[05](01, 19)-(01, 20): LPAR(OP) '('
[05](01, 20)-(01, 25): NAME(NAME) 'input'
[05](01, 25)-(01, 26): LPAR(OP) '('
[05](01, 26)-(01, 27): RPAR(OP) ')'
[05](01, 27)-(01, 28): RPAR(OP) ')'
[05](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 10): NAME(NAME) 'MoneyOwned'
[07](01, 11)-(01, 12): EQUAL(OP) '='
[07](01, 13)-(01, 14): LPAR(OP) '('
[07](01, 14)-(01, 27): NAME(NAME) 'coinsOfTwenty'
[07](01, 27)-(01, 28): STAR(OP) '*'
[07](01, 28)-(01, 30): NUMBER(NUMBER) '20'
[07](01, 30)-(01, 31): RPAR(OP) ')'
[07](01, 31)-(01, 32): PLUS(OP) '+'
[07](01, 32)-(01, 33): LPAR(OP) '('
[07](01, 33)-(01, 43): NAME(NAME) 'coinsOfTen'
[07](01, 43)-(01, 44): STAR(OP) '*'
[07](01, 44)-(01, 46): NUMBER(NUMBER) '10'
[07](01, 46)-(01, 47): RPAR(OP) ')'
[07](01, 47)-(01, 48): PLUS(OP) '+'
[07](01, 48)-(01, 49): LPAR(OP) '('
[07](01, 49)-(01, 60): NAME(NAME) 'coinsOfFive'
[07](01, 60)-(01, 61): STAR(OP) '*'
[07](01, 61)-(01, 62): NUMBER(NUMBER) '5'
[07](01, 62)-(01, 63): RPAR(OP) ')'
[07](01, 63)-(01, 64): PLUS(OP) '+'
[07](01, 64)-(01, 65): LPAR(OP) '('
[07](01, 65)-(01, 75): NAME(NAME) 'coinsOfTwo'
[07](01, 75)-(01, 76): STAR(OP) '*'
[07](01, 76)-(01, 77): NUMBER(NUMBER) '2'
[07](01, 77)-(01, 78): RPAR(OP) ')'
[07](01, 78)-(01, 79): PLUS(OP) '+'
[07](01, 79)-(01, 89): NAME(NAME) 'coinsOfOne'
[07](01, 89)-(01, 90): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 10): NAME(NAME) 'eurosOwned'
[08](01, 11)-(01, 12): EQUAL(OP) '='
[08](01, 13)-(01, 23): NAME(NAME) 'MoneyOwned'
[08](01, 24)-(01, 25): SLASH(OP) '/'
[08](01, 26)-(01, 29): NUMBER(NUMBER) '100'
[08](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 01): NL(NL) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 10): NAME(NAME) 'outputText'
[10](01, 11)-(01, 12): EQUAL(OP) '='
[10](01, 13)-(01, 19): STRING(STRING) '"%.2f"'
[10](01, 20)-(01, 21): PERCENT(OP) '%'
[10](01, 22)-(01, 32): NAME(NAME) 'eurosOwned'
[10](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 05): NAME(NAME) 'print'
[12](01, 05)-(01, 06): LPAR(OP) '('
[12](01, 06)-(01, 17): STRING(STRING) '"You have "'
[12](01, 17)-(01, 18): COMMA(OP) ','
[12](01, 19)-(01, 29): NAME(NAME) 'outputText'
[12](01, 29)-(01, 30): COMMA(OP) ','
[12](01, 31)-(01, 39): STRING(STRING) '" euro!"'
[12](01, 39)-(01, 40): COMMA(OP) ','
[12](01, 41)-(01, 44): NAME(NAME) 'sep'
[12](01, 44)-(01, 45): EQUAL(OP) '='
[12](01, 45)-(01, 47): STRING(STRING) '""'
[12](01, 47)-(01, 48): RPAR(OP) ')'
[12](01, 48)-(01, 49): NEWLINE(NEWLINE)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

