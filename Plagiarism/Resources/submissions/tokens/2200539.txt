[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[00](01, 26)-(01, 27): LPAR(OP) '('
[00](01, 27)-(01, 35): NAME(NAME) 'sentence'
[00](01, 35)-(01, 36): RPAR(OP) ')'
[00](01, 36)-(01, 37): COLON(OP) ':'
[00](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 10): NAME(NAME) 'letter'
[01](01, 11)-(01, 12): EQUAL(OP) '='
[01](01, 13)-(01, 67): STRING(STRING) '"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"'
[01](01, 67)-(01, 68): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 10): NAME(NAME) 'lengte'
[02](01, 11)-(01, 12): EQUAL(OP) '='
[02](01, 13)-(01, 16): NAME(NAME) 'len'
[02](01, 16)-(01, 17): LPAR(OP) '('
[02](01, 17)-(01, 25): NAME(NAME) 'sentence'
[02](01, 25)-(01, 26): RPAR(OP) ')'
[02](01, 26)-(01, 27): MINUS(OP) '-'
[02](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 11): NAME(NAME) 'lengtel'
[03](01, 12)-(01, 13): EQUAL(OP) '='
[03](01, 14)-(01, 17): NAME(NAME) 'len'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 24): NAME(NAME) 'letter'
[03](01, 24)-(01, 25): RPAR(OP) ')'
[03](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 15): NAME(NAME) 'woordzonder'
[04](01, 16)-(01, 17): EQUAL(OP) '='
[04](01, 18)-(01, 20): STRING(STRING) '""'
[04](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 04)-(01, 05): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'i'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 19)-(01, 20): LPAR(OP) '('
[06](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[06](01, 21)-(01, 22): COMMA(OP) ','
[06](01, 22)-(01, 28): NAME(NAME) 'lengte'
[06](01, 28)-(01, 29): RPAR(OP) ')'
[06](01, 29)-(01, 30): COLON(OP) ':'
[06](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 11): NAME(NAME) 'for'
[07](01, 12)-(01, 13): NAME(NAME) 'j'
[07](01, 14)-(01, 16): NAME(NAME) 'in'
[07](01, 17)-(01, 22): NAME(NAME) 'range'
[07](01, 23)-(01, 24): LPAR(OP) '('
[07](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[07](01, 25)-(01, 26): COMMA(OP) ','
[07](01, 26)-(01, 33): NAME(NAME) 'lengtel'
[07](01, 33)-(01, 34): RPAR(OP) ')'
[07](01, 34)-(01, 35): COLON(OP) ':'
[07](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 14): NAME(NAME) 'if'
[08](01, 15)-(01, 16): NAME(NAME) 'j'
[08](01, 17)-(01, 19): EQEQUAL(OP) '=='
[08](01, 20)-(01, 27): NAME(NAME) 'lengtel'
[08](01, 27)-(01, 28): MINUS(OP) '-'
[08](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[08](01, 29)-(01, 30): COLON(OP) ':'
[08](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 21): NAME(NAME) 'break'
[09](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 14): NAME(NAME) 'if'
[10](01, 15)-(01, 23): NAME(NAME) 'sentence'
[10](01, 23)-(01, 24): LSQB(OP) '['
[10](01, 24)-(01, 25): NAME(NAME) 'i'
[10](01, 25)-(01, 26): RSQB(OP) ']'
[10](01, 26)-(01, 28): EQEQUAL(OP) '=='
[10](01, 29)-(01, 35): NAME(NAME) 'letter'
[10](01, 35)-(01, 36): LSQB(OP) '['
[10](01, 36)-(01, 37): NAME(NAME) 'j'
[10](01, 37)-(01, 38): RSQB(OP) ']'
[10](01, 38)-(01, 39): COLON(OP) ':'
[10](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 27): NAME(NAME) 'woordzonder'
[11](01, 28)-(01, 30): PLUSEQUAL(OP) '+='
[11](01, 31)-(01, 37): NAME(NAME) 'letter'
[11](01, 37)-(01, 38): LSQB(OP) '['
[11](01, 38)-(01, 39): NAME(NAME) 'j'
[11](01, 39)-(01, 40): RSQB(OP) ']'
[11](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 21): NAME(NAME) 'break'
[12](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 19): NAME(NAME) 'woordzonderiets'
[13](01, 20)-(01, 21): EQUAL(OP) '='
[13](01, 22)-(01, 33): NAME(NAME) 'woordzonder'
[13](01, 33)-(01, 34): DOT(OP) '.'
[13](01, 34)-(01, 39): NAME(NAME) 'upper'
[13](01, 39)-(01, 40): LPAR(OP) '('
[13](01, 40)-(01, 41): RPAR(OP) ')'
[13](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 11): NAME(NAME) 'lengtew'
[14](01, 12)-(01, 13): EQUAL(OP) '='
[14](01, 14)-(01, 17): NAME(NAME) 'len'
[14](01, 18)-(01, 19): LPAR(OP) '('
[14](01, 19)-(01, 34): NAME(NAME) 'woordzonderiets'
[14](01, 34)-(01, 35): RPAR(OP) ')'
[14](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'for'
[15](01, 08)-(01, 09): NAME(NAME) 'i'
[15](01, 10)-(01, 12): NAME(NAME) 'in'
[15](01, 13)-(01, 18): NAME(NAME) 'range'
[15](01, 19)-(01, 20): LPAR(OP) '('
[15](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[15](01, 21)-(01, 22): COMMA(OP) ','
[15](01, 23)-(01, 30): NAME(NAME) 'lengtew'
[15](01, 30)-(01, 32): DOUBLESLASH(OP) '//'
[15](01, 32)-(01, 33): NUMBER(NUMBER) '2'
[15](01, 33)-(01, 34): RPAR(OP) ')'
[15](01, 34)-(01, 35): COLON(OP) ':'
[15](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 10): NAME(NAME) 'if'
[16](01, 11)-(01, 26): NAME(NAME) 'woordzonderiets'
[16](01, 26)-(01, 27): LSQB(OP) '['
[16](01, 27)-(01, 28): NAME(NAME) 'i'
[16](01, 28)-(01, 29): RSQB(OP) ']'
[16](01, 29)-(01, 31): NOTEQUAL(OP) '!='
[16](01, 31)-(01, 46): NAME(NAME) 'woordzonderiets'
[16](01, 46)-(01, 47): LSQB(OP) '['
[16](01, 47)-(01, 54): NAME(NAME) 'lengtew'
[16](01, 54)-(01, 55): MINUS(OP) '-'
[16](01, 55)-(01, 56): NAME(NAME) 'i'
[16](01, 56)-(01, 57): RSQB(OP) ']'
[16](01, 57)-(01, 58): COLON(OP) ':'
[16](01, 58)-(01, 59): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 18): NAME(NAME) 'return'
[17](01, 19)-(01, 24): NAME(NAME) 'False'
[17](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 10): NAME(NAME) 'return'
[18](01, 11)-(01, 15): NAME(NAME) 'True'
[18](01, 15)-(01, 16): NEWLINE(NEWLINE)
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

