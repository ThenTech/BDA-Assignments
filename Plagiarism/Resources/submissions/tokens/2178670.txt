[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 12): NAME(NAME) 'is_prime'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 14): NAME(NAME) 'x'
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): COLON(OP) ':'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 06): NAME(NAME) 'if'
[01](01, 07)-(01, 08): NAME(NAME) 'x'
[01](01, 09)-(01, 10): LESS(OP) '<'
[01](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[01](01, 12)-(01, 13): COLON(OP) ':'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 08): INDENT(INDENT) '        '
[02](01, 08)-(01, 14): NAME(NAME) 'return'
[02](01, 15)-(01, 20): NAME(NAME) 'False'
[02](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 08): NAME(NAME) 'elif'
[03](01, 09)-(01, 10): NAME(NAME) 'x'
[03](01, 11)-(01, 13): EQEQUAL(OP) '=='
[03](01, 14)-(01, 15): NUMBER(NUMBER) '3'
[03](01, 16)-(01, 18): NAME(NAME) 'or'
[03](01, 19)-(01, 20): NAME(NAME) 'x'
[03](01, 21)-(01, 23): EQEQUAL(OP) '=='
[03](01, 24)-(01, 25): NUMBER(NUMBER) '2'
[03](01, 25)-(01, 26): COLON(OP) ':'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 14): NAME(NAME) 'return'
[04](01, 15)-(01, 19): NAME(NAME) 'True'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 08): NAME(NAME) 'elif'
[05](01, 09)-(01, 10): NAME(NAME) 'x'
[05](01, 11)-(01, 13): EQEQUAL(OP) '=='
[05](01, 14)-(01, 15): NUMBER(NUMBER) '1'
[05](01, 15)-(01, 16): COLON(OP) ':'
[05](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 14): NAME(NAME) 'return'
[06](01, 15)-(01, 20): NAME(NAME) 'False'
[06](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 08): NAME(NAME) 'elif'
[07](01, 09)-(01, 10): NAME(NAME) 'x'
[07](01, 11)-(01, 12): LESS(OP) '<'
[07](01, 13)-(01, 15): NUMBER(NUMBER) '10'
[07](01, 15)-(01, 16): COLON(OP) ':'
[07](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 12): LPAR(OP) '('
[08](01, 12)-(01, 13): NAME(NAME) 'x'
[08](01, 14)-(01, 15): PERCENT(OP) '%'
[08](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[08](01, 18)-(01, 20): EQEQUAL(OP) '=='
[08](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[08](01, 22)-(01, 23): RPAR(OP) ')'
[08](01, 24)-(01, 27): NAME(NAME) 'and'
[08](01, 28)-(01, 29): LPAR(OP) '('
[08](01, 29)-(01, 30): NAME(NAME) 'x'
[08](01, 31)-(01, 32): PERCENT(OP) '%'
[08](01, 33)-(01, 34): NAME(NAME) 'x'
[08](01, 35)-(01, 37): EQEQUAL(OP) '=='
[08](01, 38)-(01, 39): NUMBER(NUMBER) '0'
[08](01, 39)-(01, 40): RPAR(OP) ')'
[08](01, 40)-(01, 41): COLON(OP) ':'
[08](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 14): NAME(NAME) 'if'
[09](01, 15)-(01, 16): LPAR(OP) '('
[09](01, 16)-(01, 17): NAME(NAME) 'x'
[09](01, 18)-(01, 19): PERCENT(OP) '%'
[09](01, 20)-(01, 21): NUMBER(NUMBER) '2'
[09](01, 22)-(01, 24): NOTEQUAL(OP) '!='
[09](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[09](01, 26)-(01, 27): RPAR(OP) ')'
[09](01, 28)-(01, 31): NAME(NAME) 'and'
[09](01, 32)-(01, 33): LPAR(OP) '('
[09](01, 33)-(01, 34): NAME(NAME) 'x'
[09](01, 35)-(01, 36): PERCENT(OP) '%'
[09](01, 37)-(01, 38): NUMBER(NUMBER) '3'
[09](01, 39)-(01, 41): NOTEQUAL(OP) '!='
[09](01, 42)-(01, 43): NUMBER(NUMBER) '0'
[09](01, 43)-(01, 44): RPAR(OP) ')'
[09](01, 44)-(01, 45): COLON(OP) ':'
[09](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 22): NAME(NAME) 'return'
[10](01, 23)-(01, 27): NAME(NAME) 'True'
[10](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 16): NAME(NAME) 'else'
[11](01, 16)-(01, 17): COLON(OP) ':'
[11](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 22): NAME(NAME) 'return'
[12](01, 23)-(01, 28): NAME(NAME) 'False'
[12](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 08): NAME(NAME) 'else'
[13](01, 08)-(01, 09): COLON(OP) ':'
[13](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 10): NAME(NAME) 'if'
[14](01, 11)-(01, 12): LPAR(OP) '('
[14](01, 12)-(01, 13): NAME(NAME) 'x'
[14](01, 14)-(01, 15): PERCENT(OP) '%'
[14](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[14](01, 18)-(01, 20): EQEQUAL(OP) '=='
[14](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[14](01, 22)-(01, 23): RPAR(OP) ')'
[14](01, 24)-(01, 27): NAME(NAME) 'and'
[14](01, 28)-(01, 29): LPAR(OP) '('
[14](01, 29)-(01, 30): NAME(NAME) 'x'
[14](01, 31)-(01, 32): PERCENT(OP) '%'
[14](01, 33)-(01, 34): NAME(NAME) 'x'
[14](01, 35)-(01, 37): EQEQUAL(OP) '=='
[14](01, 38)-(01, 39): NUMBER(NUMBER) '0'
[14](01, 39)-(01, 40): RPAR(OP) ')'
[14](01, 40)-(01, 41): COLON(OP) ':'
[14](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 14): NAME(NAME) 'if'
[15](01, 15)-(01, 16): LPAR(OP) '('
[15](01, 16)-(01, 17): NAME(NAME) 'x'
[15](01, 18)-(01, 19): PERCENT(OP) '%'
[15](01, 20)-(01, 21): NUMBER(NUMBER) '2'
[15](01, 22)-(01, 24): NOTEQUAL(OP) '!='
[15](01, 25)-(01, 26): NUMBER(NUMBER) '0'
[15](01, 26)-(01, 27): RPAR(OP) ')'
[15](01, 28)-(01, 31): NAME(NAME) 'and'
[15](01, 32)-(01, 33): LPAR(OP) '('
[15](01, 33)-(01, 34): NAME(NAME) 'x'
[15](01, 35)-(01, 36): PERCENT(OP) '%'
[15](01, 37)-(01, 38): NUMBER(NUMBER) '3'
[15](01, 39)-(01, 41): NOTEQUAL(OP) '!='
[15](01, 42)-(01, 43): NUMBER(NUMBER) '0'
[15](01, 43)-(01, 44): RPAR(OP) ')'
[15](01, 45)-(01, 48): NAME(NAME) 'and'
[15](01, 49)-(01, 50): LPAR(OP) '('
[15](01, 50)-(01, 51): NAME(NAME) 'x'
[15](01, 52)-(01, 53): PERCENT(OP) '%'
[15](01, 54)-(01, 55): NUMBER(NUMBER) '5'
[15](01, 56)-(01, 58): NOTEQUAL(OP) '!='
[15](01, 59)-(01, 60): NUMBER(NUMBER) '0'
[15](01, 60)-(01, 61): RPAR(OP) ')'
[15](01, 62)-(01, 65): NAME(NAME) 'and'
[15](01, 66)-(01, 67): LPAR(OP) '('
[15](01, 67)-(01, 68): NAME(NAME) 'x'
[15](01, 69)-(01, 70): PERCENT(OP) '%'
[15](01, 71)-(01, 72): NUMBER(NUMBER) '7'
[15](01, 73)-(01, 75): NOTEQUAL(OP) '!='
[15](01, 76)-(01, 77): NUMBER(NUMBER) '0'
[15](01, 77)-(01, 78): RPAR(OP) ')'
[15](01, 78)-(01, 79): COLON(OP) ':'
[15](01, 79)-(01, 80): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 22): NAME(NAME) 'return'
[16](01, 23)-(01, 27): NAME(NAME) 'True'
[16](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 16): NAME(NAME) 'else'
[17](01, 16)-(01, 17): COLON(OP) ':'
[17](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 16): INDENT(INDENT) '                '
[18](01, 16)-(01, 22): NAME(NAME) 'return'
[18](01, 23)-(01, 28): NAME(NAME) 'False'
[18](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 03): NAME(NAME) 'def'
[21](01, 04)-(01, 19): NAME(NAME) 'all_primes_upto'
[21](01, 19)-(01, 20): LPAR(OP) '('
[21](01, 20)-(01, 21): NAME(NAME) 'x'
[21](01, 21)-(01, 22): RPAR(OP) ')'
[21](01, 22)-(01, 23): COLON(OP) ':'
[21](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 07): NAME(NAME) 'for'
[22](01, 08)-(01, 10): NAME(NAME) 'el'
[22](01, 11)-(01, 13): NAME(NAME) 'in'
[22](01, 14)-(01, 19): NAME(NAME) 'range'
[22](01, 19)-(01, 20): LPAR(OP) '('
[22](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[22](01, 21)-(01, 22): COMMA(OP) ','
[22](01, 22)-(01, 23): NAME(NAME) 'x'
[22](01, 23)-(01, 24): PLUS(OP) '+'
[22](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[22](01, 25)-(01, 26): RPAR(OP) ')'
[22](01, 26)-(01, 27): COLON(OP) ':'
[22](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 12): NAME(NAME) 'antw'
[23](01, 14)-(01, 15): EQUAL(OP) '='
[23](01, 16)-(01, 24): NAME(NAME) 'is_prime'
[23](01, 24)-(01, 25): LPAR(OP) '('
[23](01, 25)-(01, 27): NAME(NAME) 'el'
[23](01, 27)-(01, 28): RPAR(OP) ')'
[23](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 10): NAME(NAME) 'if'
[24](01, 11)-(01, 15): NAME(NAME) 'antw'
[24](01, 16)-(01, 18): EQEQUAL(OP) '=='
[24](01, 19)-(01, 23): NAME(NAME) 'True'
[24](01, 23)-(01, 24): COLON(OP) ':'
[24](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 17): NAME(NAME) 'print'
[25](01, 17)-(01, 18): LPAR(OP) '('
[25](01, 18)-(01, 20): NAME(NAME) 'el'
[25](01, 20)-(01, 21): RPAR(OP) ')'
[25](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 12)-(01, 13): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 03): NAME(NAME) 'def'
[27](01, 04)-(01, 13): NAME(NAME) 'factorize'
[27](01, 13)-(01, 14): LPAR(OP) '('
[27](01, 14)-(01, 15): NAME(NAME) 'x'
[27](01, 15)-(01, 16): RPAR(OP) ')'
[27](01, 16)-(01, 17): COLON(OP) ':'
[27](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 07): NAME(NAME) 'for'
[28](01, 08)-(01, 10): NAME(NAME) 'el'
[28](01, 11)-(01, 13): NAME(NAME) 'in'
[28](01, 14)-(01, 19): NAME(NAME) 'range'
[28](01, 19)-(01, 20): LPAR(OP) '('
[28](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[28](01, 21)-(01, 22): COMMA(OP) ','
[28](01, 22)-(01, 23): NAME(NAME) 'x'
[28](01, 23)-(01, 24): PLUS(OP) '+'
[28](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[28](01, 25)-(01, 26): RPAR(OP) ')'
[28](01, 26)-(01, 27): COLON(OP) ':'
[28](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 08): INDENT(INDENT) '        '
[29](01, 08)-(01, 10): NAME(NAME) 'if'
[29](01, 11)-(01, 19): NAME(NAME) 'is_prime'
[29](01, 19)-(01, 20): LPAR(OP) '('
[29](01, 20)-(01, 22): NAME(NAME) 'el'
[29](01, 22)-(01, 23): RPAR(OP) ')'
[29](01, 24)-(01, 26): NAME(NAME) 'is'
[29](01, 27)-(01, 31): NAME(NAME) 'True'
[29](01, 31)-(01, 32): COLON(OP) ':'
[29](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 12): INDENT(INDENT) '            '
[30](01, 12)-(01, 17): NAME(NAME) 'while'
[30](01, 18)-(01, 19): NAME(NAME) 'x'
[30](01, 19)-(01, 20): PERCENT(OP) '%'
[30](01, 20)-(01, 22): NAME(NAME) 'el'
[30](01, 23)-(01, 25): EQEQUAL(OP) '=='
[30](01, 26)-(01, 27): NUMBER(NUMBER) '0'
[30](01, 27)-(01, 28): COLON(OP) ':'
[30](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 16): INDENT(INDENT) '                '
[31](01, 16)-(01, 21): NAME(NAME) 'print'
[31](01, 21)-(01, 22): LPAR(OP) '('
[31](01, 22)-(01, 24): NAME(NAME) 'el'
[31](01, 24)-(01, 25): RPAR(OP) ')'
[31](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[31](02, 00)-(02, 00): DEDENT(DEDENT)
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 16): INDENT(INDENT) '                '
[32](01, 16)-(01, 17): NAME(NAME) 'x'
[32](01, 18)-(01, 19): EQUAL(OP) '='
[32](01, 20)-(01, 21): NAME(NAME) 'x'
[32](01, 22)-(01, 23): SLASH(OP) '/'
[32](01, 24)-(01, 26): NAME(NAME) 'el'
[32](01, 26)-(01, 27): NEWLINE(NEWLINE)
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

