[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'import'
[00](01, 07)-(01, 11): NAME(NAME) 'math'
[00](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 07): NAME(NAME) 'letters'
[02](01, 08)-(01, 09): EQUAL(OP) '='
[02](01, 10)-(01, 38): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[02](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 10): NAME(NAME) 'encode'
[03](01, 10)-(01, 11): LPAR(OP) '('
[03](01, 11)-(01, 12): NAME(NAME) 's'
[03](01, 12)-(01, 13): COMMA(OP) ','
[03](01, 14)-(01, 15): NAME(NAME) 'n'
[03](01, 15)-(01, 16): RPAR(OP) ')'
[03](01, 16)-(01, 17): COLON(OP) ':'
[03](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 11): NAME(NAME) 'newword'
[04](01, 12)-(01, 13): EQUAL(OP) '='
[04](01, 14)-(01, 16): STRING(STRING) '""'
[04](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 05): NAME(NAME) 'x'
[05](01, 06)-(01, 07): EQUAL(OP) '='
[05](01, 08)-(01, 11): NAME(NAME) 'abs'
[05](01, 11)-(01, 12): LPAR(OP) '('
[05](01, 12)-(01, 13): NAME(NAME) 'n'
[05](01, 13)-(01, 14): RPAR(OP) ')'
[05](01, 15)-(01, 17): DOUBLESLASH(OP) '//'
[05](01, 18)-(01, 20): NUMBER(NUMBER) '26'
[05](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 07): NAME(NAME) 'for'
[06](01, 08)-(01, 09): NAME(NAME) 'i'
[06](01, 10)-(01, 12): NAME(NAME) 'in'
[06](01, 13)-(01, 18): NAME(NAME) 'range'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 22): NAME(NAME) 'len'
[06](01, 22)-(01, 23): LPAR(OP) '('
[06](01, 23)-(01, 24): NAME(NAME) 's'
[06](01, 24)-(01, 25): RPAR(OP) ')'
[06](01, 25)-(01, 26): RPAR(OP) ')'
[06](01, 26)-(01, 27): COLON(OP) ':'
[06](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 10): NAME(NAME) 'if'
[07](01, 11)-(01, 12): NAME(NAME) 's'
[07](01, 12)-(01, 13): LSQB(OP) '['
[07](01, 13)-(01, 14): NAME(NAME) 'i'
[07](01, 14)-(01, 15): RSQB(OP) ']'
[07](01, 16)-(01, 19): NAME(NAME) 'not'
[07](01, 20)-(01, 22): NAME(NAME) 'in'
[07](01, 23)-(01, 30): NAME(NAME) 'letters'
[07](01, 30)-(01, 31): COLON(OP) ':'
[07](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 19): NAME(NAME) 'newword'
[08](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[08](01, 23)-(01, 24): NAME(NAME) 's'
[08](01, 24)-(01, 25): LSQB(OP) '['
[08](01, 25)-(01, 26): NAME(NAME) 'i'
[08](01, 26)-(01, 27): RSQB(OP) ']'
[08](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 12): NAME(NAME) 'elif'
[09](01, 13)-(01, 16): NAME(NAME) 'ord'
[09](01, 16)-(01, 17): LPAR(OP) '('
[09](01, 17)-(01, 18): NAME(NAME) 's'
[09](01, 18)-(01, 19): LSQB(OP) '['
[09](01, 19)-(01, 20): NAME(NAME) 'i'
[09](01, 20)-(01, 21): RSQB(OP) ']'
[09](01, 21)-(01, 22): RPAR(OP) ')'
[09](01, 23)-(01, 24): PLUS(OP) '+'
[09](01, 25)-(01, 26): NAME(NAME) 'n'
[09](01, 27)-(01, 28): GREATER(OP) '>'
[09](01, 29)-(01, 32): NAME(NAME) 'ord'
[09](01, 32)-(01, 33): LPAR(OP) '('
[09](01, 33)-(01, 36): STRING(STRING) '"z"'
[09](01, 36)-(01, 37): RPAR(OP) ')'
[09](01, 37)-(01, 38): COLON(OP) ':'
[09](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 19): NAME(NAME) 'newword'
[10](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[10](01, 23)-(01, 26): NAME(NAME) 'chr'
[10](01, 26)-(01, 27): LPAR(OP) '('
[10](01, 27)-(01, 30): NAME(NAME) 'ord'
[10](01, 30)-(01, 31): LPAR(OP) '('
[10](01, 31)-(01, 32): NAME(NAME) 's'
[10](01, 32)-(01, 33): LSQB(OP) '['
[10](01, 33)-(01, 34): NAME(NAME) 'i'
[10](01, 34)-(01, 35): RSQB(OP) ']'
[10](01, 35)-(01, 36): RPAR(OP) ')'
[10](01, 37)-(01, 38): MINUS(OP) '-'
[10](01, 39)-(01, 41): NUMBER(NUMBER) '26'
[10](01, 42)-(01, 43): PLUS(OP) '+'
[10](01, 44)-(01, 45): LPAR(OP) '('
[10](01, 45)-(01, 46): NAME(NAME) 'x'
[10](01, 46)-(01, 47): PLUS(OP) '+'
[10](01, 47)-(01, 48): NUMBER(NUMBER) '1'
[10](01, 48)-(01, 49): RPAR(OP) ')'
[10](01, 49)-(01, 50): STAR(OP) '*'
[10](01, 50)-(01, 51): NAME(NAME) 'n'
[10](01, 51)-(01, 52): RPAR(OP) ')'
[10](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 12): NAME(NAME) 'elif'
[11](01, 13)-(01, 16): NAME(NAME) 'ord'
[11](01, 16)-(01, 17): LPAR(OP) '('
[11](01, 17)-(01, 18): NAME(NAME) 's'
[11](01, 18)-(01, 19): LSQB(OP) '['
[11](01, 19)-(01, 20): NAME(NAME) 'i'
[11](01, 20)-(01, 21): RSQB(OP) ']'
[11](01, 21)-(01, 22): RPAR(OP) ')'
[11](01, 23)-(01, 24): PLUS(OP) '+'
[11](01, 25)-(01, 26): NAME(NAME) 'n'
[11](01, 27)-(01, 28): LESS(OP) '<'
[11](01, 29)-(01, 32): NAME(NAME) 'ord'
[11](01, 32)-(01, 33): LPAR(OP) '('
[11](01, 33)-(01, 36): STRING(STRING) '"a"'
[11](01, 36)-(01, 37): RPAR(OP) ')'
[11](01, 37)-(01, 38): COLON(OP) ':'
[11](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 19): NAME(NAME) 'newword'
[12](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[12](01, 23)-(01, 26): NAME(NAME) 'chr'
[12](01, 26)-(01, 27): LPAR(OP) '('
[12](01, 27)-(01, 30): NAME(NAME) 'ord'
[12](01, 30)-(01, 31): LPAR(OP) '('
[12](01, 31)-(01, 32): NAME(NAME) 's'
[12](01, 32)-(01, 33): LSQB(OP) '['
[12](01, 33)-(01, 34): NAME(NAME) 'i'
[12](01, 34)-(01, 35): RSQB(OP) ']'
[12](01, 35)-(01, 36): RPAR(OP) ')'
[12](01, 37)-(01, 38): PLUS(OP) '+'
[12](01, 39)-(01, 41): NUMBER(NUMBER) '26'
[12](01, 42)-(01, 43): PLUS(OP) '+'
[12](01, 44)-(01, 45): LPAR(OP) '('
[12](01, 45)-(01, 46): NAME(NAME) 'x'
[12](01, 46)-(01, 47): PLUS(OP) '+'
[12](01, 47)-(01, 48): NUMBER(NUMBER) '1'
[12](01, 48)-(01, 49): RPAR(OP) ')'
[12](01, 49)-(01, 50): STAR(OP) '*'
[12](01, 50)-(01, 51): NAME(NAME) 'n'
[12](01, 51)-(01, 52): RPAR(OP) ')'
[12](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 12): NAME(NAME) 'else'
[13](01, 12)-(01, 13): COLON(OP) ':'
[13](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 19): NAME(NAME) 'newword'
[14](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[14](01, 23)-(01, 26): NAME(NAME) 'chr'
[14](01, 26)-(01, 27): LPAR(OP) '('
[14](01, 27)-(01, 30): NAME(NAME) 'ord'
[14](01, 30)-(01, 31): LPAR(OP) '('
[14](01, 31)-(01, 32): NAME(NAME) 's'
[14](01, 32)-(01, 33): LSQB(OP) '['
[14](01, 33)-(01, 34): NAME(NAME) 'i'
[14](01, 34)-(01, 35): RSQB(OP) ']'
[14](01, 35)-(01, 36): RPAR(OP) ')'
[14](01, 37)-(01, 38): PLUS(OP) '+'
[14](01, 39)-(01, 40): NAME(NAME) 'n'
[14](01, 40)-(01, 41): RPAR(OP) ')'
[14](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 10): NAME(NAME) 'return'
[15](01, 11)-(01, 18): NAME(NAME) 'newword'
[15](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 03): NAME(NAME) 'def'
[17](01, 04)-(01, 10): NAME(NAME) 'decode'
[17](01, 10)-(01, 11): LPAR(OP) '('
[17](01, 11)-(01, 12): NAME(NAME) 's'
[17](01, 12)-(01, 13): COMMA(OP) ','
[17](01, 13)-(01, 14): NAME(NAME) 'n'
[17](01, 14)-(01, 15): RPAR(OP) ')'
[17](01, 15)-(01, 16): COLON(OP) ':'
[17](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 11): NAME(NAME) 'newword'
[18](01, 12)-(01, 13): EQUAL(OP) '='
[18](01, 14)-(01, 16): STRING(STRING) '""'
[18](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 07): NAME(NAME) 'for'
[19](01, 08)-(01, 09): NAME(NAME) 'i'
[19](01, 10)-(01, 12): NAME(NAME) 'in'
[19](01, 13)-(01, 18): NAME(NAME) 'range'
[19](01, 18)-(01, 19): LPAR(OP) '('
[19](01, 19)-(01, 22): NAME(NAME) 'len'
[19](01, 22)-(01, 23): LPAR(OP) '('
[19](01, 23)-(01, 24): NAME(NAME) 's'
[19](01, 24)-(01, 25): RPAR(OP) ')'
[19](01, 25)-(01, 26): RPAR(OP) ')'
[19](01, 26)-(01, 27): COLON(OP) ':'
[19](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 08): INDENT(INDENT) '        '
[20](01, 08)-(01, 10): NAME(NAME) 'if'
[20](01, 11)-(01, 12): NAME(NAME) 's'
[20](01, 12)-(01, 13): LSQB(OP) '['
[20](01, 13)-(01, 14): NAME(NAME) 'i'
[20](01, 14)-(01, 15): RSQB(OP) ']'
[20](01, 16)-(01, 19): NAME(NAME) 'not'
[20](01, 20)-(01, 22): NAME(NAME) 'in'
[20](01, 23)-(01, 30): NAME(NAME) 'letters'
[20](01, 30)-(01, 31): COLON(OP) ':'
[20](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 12): INDENT(INDENT) '            '
[21](01, 12)-(01, 19): NAME(NAME) 'newword'
[21](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[21](01, 23)-(01, 24): NAME(NAME) 's'
[21](01, 24)-(01, 25): LSQB(OP) '['
[21](01, 25)-(01, 26): NAME(NAME) 'i'
[21](01, 26)-(01, 27): RSQB(OP) ']'
[21](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 08): INDENT(INDENT) '        '
[22](01, 08)-(01, 12): NAME(NAME) 'elif'
[22](01, 13)-(01, 16): NAME(NAME) 'ord'
[22](01, 16)-(01, 17): LPAR(OP) '('
[22](01, 17)-(01, 18): NAME(NAME) 's'
[22](01, 18)-(01, 19): LSQB(OP) '['
[22](01, 19)-(01, 20): NAME(NAME) 'i'
[22](01, 20)-(01, 21): RSQB(OP) ']'
[22](01, 21)-(01, 22): RPAR(OP) ')'
[22](01, 23)-(01, 24): MINUS(OP) '-'
[22](01, 25)-(01, 26): NAME(NAME) 'n'
[22](01, 27)-(01, 28): GREATER(OP) '>'
[22](01, 29)-(01, 32): NAME(NAME) 'ord'
[22](01, 32)-(01, 33): LPAR(OP) '('
[22](01, 33)-(01, 36): STRING(STRING) '"z"'
[22](01, 36)-(01, 37): RPAR(OP) ')'
[22](01, 37)-(01, 38): COLON(OP) ':'
[22](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 19): NAME(NAME) 'newword'
[23](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[23](01, 23)-(01, 26): NAME(NAME) 'chr'
[23](01, 26)-(01, 27): LPAR(OP) '('
[23](01, 27)-(01, 30): NAME(NAME) 'ord'
[23](01, 30)-(01, 31): LPAR(OP) '('
[23](01, 31)-(01, 32): NAME(NAME) 's'
[23](01, 32)-(01, 33): LSQB(OP) '['
[23](01, 33)-(01, 34): NAME(NAME) 'i'
[23](01, 34)-(01, 35): RSQB(OP) ']'
[23](01, 35)-(01, 36): RPAR(OP) ')'
[23](01, 37)-(01, 38): MINUS(OP) '-'
[23](01, 39)-(01, 41): NUMBER(NUMBER) '26'
[23](01, 42)-(01, 43): MINUS(OP) '-'
[23](01, 44)-(01, 45): NAME(NAME) 'n'
[23](01, 45)-(01, 46): RPAR(OP) ')'
[23](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 12): NAME(NAME) 'elif'
[24](01, 13)-(01, 16): NAME(NAME) 'ord'
[24](01, 16)-(01, 17): LPAR(OP) '('
[24](01, 17)-(01, 18): NAME(NAME) 's'
[24](01, 18)-(01, 19): LSQB(OP) '['
[24](01, 19)-(01, 20): NAME(NAME) 'i'
[24](01, 20)-(01, 21): RSQB(OP) ']'
[24](01, 21)-(01, 22): RPAR(OP) ')'
[24](01, 23)-(01, 24): MINUS(OP) '-'
[24](01, 25)-(01, 26): NAME(NAME) 'n'
[24](01, 27)-(01, 28): LESS(OP) '<'
[24](01, 29)-(01, 32): NAME(NAME) 'ord'
[24](01, 32)-(01, 33): LPAR(OP) '('
[24](01, 33)-(01, 36): STRING(STRING) '"a"'
[24](01, 36)-(01, 37): RPAR(OP) ')'
[24](01, 37)-(01, 38): COLON(OP) ':'
[24](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 19): NAME(NAME) 'newword'
[25](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[25](01, 23)-(01, 26): NAME(NAME) 'chr'
[25](01, 26)-(01, 27): LPAR(OP) '('
[25](01, 27)-(01, 30): NAME(NAME) 'ord'
[25](01, 30)-(01, 31): LPAR(OP) '('
[25](01, 31)-(01, 32): NAME(NAME) 's'
[25](01, 32)-(01, 33): LSQB(OP) '['
[25](01, 33)-(01, 34): NAME(NAME) 'i'
[25](01, 34)-(01, 35): RSQB(OP) ']'
[25](01, 35)-(01, 36): RPAR(OP) ')'
[25](01, 37)-(01, 38): PLUS(OP) '+'
[25](01, 39)-(01, 41): NUMBER(NUMBER) '26'
[25](01, 42)-(01, 43): PLUS(OP) '+'
[25](01, 44)-(01, 45): NAME(NAME) 'n'
[25](01, 45)-(01, 46): RPAR(OP) ')'
[25](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 08): INDENT(INDENT) '        '
[26](01, 08)-(01, 12): NAME(NAME) 'else'
[26](01, 12)-(01, 13): COLON(OP) ':'
[26](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 12): INDENT(INDENT) '            '
[27](01, 12)-(01, 19): NAME(NAME) 'newword'
[27](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[27](01, 23)-(01, 26): NAME(NAME) 'chr'
[27](01, 26)-(01, 27): LPAR(OP) '('
[27](01, 27)-(01, 30): NAME(NAME) 'ord'
[27](01, 30)-(01, 31): LPAR(OP) '('
[27](01, 31)-(01, 32): NAME(NAME) 's'
[27](01, 32)-(01, 33): LSQB(OP) '['
[27](01, 33)-(01, 34): NAME(NAME) 'i'
[27](01, 34)-(01, 35): RSQB(OP) ']'
[27](01, 35)-(01, 36): RPAR(OP) ')'
[27](01, 37)-(01, 38): MINUS(OP) '-'
[27](01, 39)-(01, 40): NAME(NAME) 'n'
[27](01, 40)-(01, 41): RPAR(OP) ')'
[27](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 10): NAME(NAME) 'return'
[28](01, 11)-(01, 18): NAME(NAME) 'newword'
[28](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 01): NL(NL) '\n'
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

