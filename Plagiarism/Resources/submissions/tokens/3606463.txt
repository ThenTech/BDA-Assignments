[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'x'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 09): NAME(NAME) 'input'
[02](01, 09)-(01, 10): LPAR(OP) '('
[02](01, 10)-(01, 11): RPAR(OP) ')'
[02](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 05): NAME(NAME) 'count'
[04](01, 06)-(01, 07): EQUAL(OP) '='
[04](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[04](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 06): NAME(NAME) 'string'
[05](01, 07)-(01, 08): EQUAL(OP) '='
[05](01, 09)-(01, 11): STRING(STRING) '""'
[05](01, 11)-(01, 12): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 03): NAME(NAME) 'for'
[06](01, 04)-(01, 05): NAME(NAME) 'i'
[06](01, 06)-(01, 08): NAME(NAME) 'in'
[06](01, 09)-(01, 14): NAME(NAME) 'range'
[06](01, 14)-(01, 15): LPAR(OP) '('
[06](01, 15)-(01, 18): NAME(NAME) 'len'
[06](01, 18)-(01, 19): LPAR(OP) '('
[06](01, 19)-(01, 20): NAME(NAME) 'x'
[06](01, 20)-(01, 21): RPAR(OP) ')'
[06](01, 21)-(01, 22): RPAR(OP) ')'
[06](01, 22)-(01, 23): COLON(OP) ':'
[06](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 06): NAME(NAME) 'if'
[07](01, 07)-(01, 08): NAME(NAME) 'x'
[07](01, 08)-(01, 09): LSQB(OP) '['
[07](01, 09)-(01, 10): NAME(NAME) 'i'
[07](01, 10)-(01, 11): RSQB(OP) ']'
[07](01, 12)-(01, 13): LESS(OP) '<'
[07](01, 14)-(01, 17): STRING(STRING) "'a'"
[07](01, 18)-(01, 20): NAME(NAME) 'or'
[07](01, 21)-(01, 22): NAME(NAME) 'x'
[07](01, 22)-(01, 23): LSQB(OP) '['
[07](01, 23)-(01, 24): NAME(NAME) 'i'
[07](01, 24)-(01, 25): RSQB(OP) ']'
[07](01, 26)-(01, 27): GREATER(OP) '>'
[07](01, 28)-(01, 31): STRING(STRING) "'z'"
[07](01, 31)-(01, 32): COLON(OP) ':'
[07](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 12): NAME(NAME) 'x'
[08](01, 12)-(01, 13): LSQB(OP) '['
[08](01, 13)-(01, 14): NAME(NAME) 'i'
[08](01, 14)-(01, 15): RSQB(OP) ']'
[08](01, 16)-(01, 17): LESS(OP) '<'
[08](01, 18)-(01, 21): STRING(STRING) "'A'"
[08](01, 22)-(01, 24): NAME(NAME) 'or'
[08](01, 25)-(01, 26): NAME(NAME) 'x'
[08](01, 26)-(01, 27): LSQB(OP) '['
[08](01, 27)-(01, 28): NAME(NAME) 'i'
[08](01, 28)-(01, 29): RSQB(OP) ']'
[08](01, 30)-(01, 31): GREATER(OP) '>'
[08](01, 32)-(01, 35): STRING(STRING) "'Z'"
[08](01, 35)-(01, 36): COLON(OP) ':'
[08](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 14): NAME(NAME) 'if'
[09](01, 15)-(01, 20): NAME(NAME) 'count'
[09](01, 21)-(01, 23): NOTEQUAL(OP) '!='
[09](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[09](01, 25)-(01, 26): COLON(OP) ':'
[09](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 21): NAME(NAME) 'print'
[10](01, 21)-(01, 22): LPAR(OP) '('
[10](01, 22)-(01, 28): NAME(NAME) 'string'
[10](01, 28)-(01, 29): COMMA(OP) ','
[10](01, 30)-(01, 35): NAME(NAME) 'count'
[10](01, 35)-(01, 36): RPAR(OP) ')'
[10](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 12): NAME(NAME) 'else'
[11](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 17): NAME(NAME) 'count'
[12](01, 18)-(01, 20): PLUSEQUAL(OP) '+='
[12](01, 21)-(01, 22): NUMBER(NUMBER) '1'
[12](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 18): NAME(NAME) 'string'
[13](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[13](01, 22)-(01, 23): NAME(NAME) 'x'
[13](01, 23)-(01, 24): LSQB(OP) '['
[13](01, 24)-(01, 25): NAME(NAME) 'i'
[13](01, 25)-(01, 26): RSQB(OP) ']'
[13](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 08): NAME(NAME) 'else'
[14](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): INDENT(INDENT) '        '
[15](01, 08)-(01, 13): NAME(NAME) 'count'
[15](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[15](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[15](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 14): NAME(NAME) 'string'
[16](01, 15)-(01, 17): PLUSEQUAL(OP) '+='
[16](01, 18)-(01, 19): NAME(NAME) 'x'
[16](01, 19)-(01, 20): LSQB(OP) '['
[16](01, 20)-(01, 21): NAME(NAME) 'i'
[16](01, 21)-(01, 22): RSQB(OP) ']'
[16](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 02): NAME(NAME) 'if'
[17](01, 03)-(01, 08): NAME(NAME) 'count'
[17](01, 09)-(01, 11): NOTEQUAL(OP) '!='
[17](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[17](01, 13)-(01, 14): COLON(OP) ':'
[17](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 09): NAME(NAME) 'print'
[18](01, 09)-(01, 10): LPAR(OP) '('
[18](01, 10)-(01, 16): NAME(NAME) 'string'
[18](01, 16)-(01, 17): COMMA(OP) ','
[18](01, 18)-(01, 23): NAME(NAME) 'count'
[18](01, 23)-(01, 24): RPAR(OP) ')'
[18](01, 24)-(01, 25): NEWLINE(NEWLINE)
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

