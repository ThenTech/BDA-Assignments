[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 15): NAME(NAME) 'in_alphabet'
[00](01, 15)-(01, 16): LPAR(OP) '('
[00](01, 16)-(01, 22): NAME(NAME) 'letter'
[00](01, 22)-(01, 23): RPAR(OP) ')'
[00](01, 23)-(01, 24): COLON(OP) ':'
[00](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 12): NAME(NAME) 'alphabet'
[01](01, 13)-(01, 14): EQUAL(OP) '='
[01](01, 15)-(01, 69): STRING(STRING) '"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWZYZ"'
[01](01, 69)-(01, 70): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 15): NAME(NAME) 'letters'
[02](01, 16)-(01, 18): NAME(NAME) 'in'
[02](01, 19)-(01, 27): NAME(NAME) 'alphabet'
[02](01, 27)-(01, 28): COLON(OP) ':'
[02](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 12): INDENT(INDENT) '            '
[03](01, 12)-(01, 14): NAME(NAME) 'if'
[03](01, 15)-(01, 22): NAME(NAME) 'letters'
[03](01, 23)-(01, 25): EQEQUAL(OP) '=='
[03](01, 26)-(01, 32): NAME(NAME) 'letter'
[03](01, 32)-(01, 33): COLON(OP) ':'
[03](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 16): INDENT(INDENT) '                '
[04](01, 16)-(01, 22): NAME(NAME) 'return'
[04](01, 23)-(01, 27): NAME(NAME) 'True'
[04](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'return'
[05](01, 11)-(01, 16): NAME(NAME) 'False'
[05](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 01): NL(NL) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'def'
[09](01, 04)-(01, 26): NAME(NAME) 'is_palindrome_sentence'
[09](01, 26)-(01, 27): LPAR(OP) '('
[09](01, 27)-(01, 35): NAME(NAME) 'sentence'
[09](01, 35)-(01, 36): RPAR(OP) ')'
[09](01, 36)-(01, 37): COLON(OP) ':'
[09](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 07): NAME(NAME) 'for'
[10](01, 08)-(01, 18): NAME(NAME) 'characters'
[10](01, 19)-(01, 21): NAME(NAME) 'in'
[10](01, 22)-(01, 30): NAME(NAME) 'sentence'
[10](01, 30)-(01, 31): COLON(OP) ':'
[10](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 10): NAME(NAME) 'if'
[11](01, 11)-(01, 22): NAME(NAME) 'in_alphabet'
[11](01, 22)-(01, 23): LPAR(OP) '('
[11](01, 23)-(01, 33): NAME(NAME) 'characters'
[11](01, 33)-(01, 34): RPAR(OP) ')'
[11](01, 34)-(01, 35): COLON(OP) ':'
[11](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 22): NAME(NAME) 'simple_sen'
[12](01, 23)-(01, 25): PLUSEQUAL(OP) '+='
[12](01, 26)-(01, 36): NAME(NAME) 'characters'
[12](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 14): NAME(NAME) 'simple_sen'
[13](01, 15)-(01, 16): EQUAL(OP) '='
[13](01, 17)-(01, 27): NAME(NAME) 'simple_sen'
[13](01, 27)-(01, 28): DOT(OP) '.'
[13](01, 28)-(01, 33): NAME(NAME) 'lower'
[13](01, 33)-(01, 34): LPAR(OP) '('
[13](01, 34)-(01, 35): RPAR(OP) ')'
[13](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 04)-(01, 05): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 07): NAME(NAME) 'for'
[15](01, 08)-(01, 18): NAME(NAME) 'characters'
[15](01, 19)-(01, 21): NAME(NAME) 'in'
[15](01, 22)-(01, 27): NAME(NAME) 'range'
[15](01, 27)-(01, 28): LPAR(OP) '('
[15](01, 28)-(01, 38): NAME(NAME) 'simple_sen'
[15](01, 38)-(01, 39): RPAR(OP) ')'
[15](01, 39)-(01, 40): COLON(OP) ':'
[15](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 10): NAME(NAME) 'if'
[16](01, 11)-(01, 14): NAME(NAME) 'not'
[16](01, 15)-(01, 25): NAME(NAME) 'simple_sen'
[16](01, 25)-(01, 26): LPAR(OP) '('
[16](01, 26)-(01, 36): NAME(NAME) 'characters'
[16](01, 36)-(01, 37): RPAR(OP) ')'
[16](01, 38)-(01, 40): EQEQUAL(OP) '=='
[16](01, 41)-(01, 51): NAME(NAME) 'simple_sen'
[16](01, 51)-(01, 52): LPAR(OP) '('
[16](01, 52)-(01, 55): NAME(NAME) 'len'
[16](01, 55)-(01, 56): LPAR(OP) '('
[16](01, 56)-(01, 66): NAME(NAME) 'simple_sen'
[16](01, 66)-(01, 67): RPAR(OP) ')'
[16](01, 68)-(01, 69): MINUS(OP) '-'
[16](01, 69)-(01, 70): NUMBER(NUMBER) '1'
[16](01, 71)-(01, 72): MINUS(OP) '-'
[16](01, 73)-(01, 83): NAME(NAME) 'characters'
[16](01, 83)-(01, 84): RPAR(OP) ')'
[16](01, 84)-(01, 85): COLON(OP) ':'
[16](01, 85)-(01, 86): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 12): INDENT(INDENT) '            '
[17](01, 12)-(01, 18): NAME(NAME) 'return'
[17](01, 19)-(01, 24): NAME(NAME) 'False'
[17](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 12)-(01, 13): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 10): NAME(NAME) 'return'
[19](01, 11)-(01, 15): NAME(NAME) 'True'
[19](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 00): ENDMARKER(ENDMARKER)

