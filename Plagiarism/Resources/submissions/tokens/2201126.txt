[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 18): NAME(NAME) 'cleanup_spaces'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 20): NAME(NAME) 's'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): COLON(OP) ':'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): INDENT(INDENT) '\t'
[01](01, 01)-(01, 02): NAME(NAME) 'i'
[01](01, 03)-(01, 04): EQUAL(OP) '='
[01](01, 05)-(01, 06): NUMBER(NUMBER) '0'
[01](01, 06)-(01, 07): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): INDENT(INDENT) '\t'
[02](01, 01)-(01, 08): NAME(NAME) 'cleaned'
[02](01, 09)-(01, 10): EQUAL(OP) '='
[02](01, 11)-(01, 13): STRING(STRING) '""'
[02](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): INDENT(INDENT) '\t'
[03](01, 01)-(01, 19): NAME(NAME) 'prev_char_is_space'
[03](01, 20)-(01, 21): EQUAL(OP) '='
[03](01, 22)-(01, 26): NAME(NAME) 'True'
[03](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): INDENT(INDENT) '\t'
[04](01, 01)-(01, 06): NAME(NAME) 'while'
[04](01, 07)-(01, 08): NAME(NAME) 'i'
[04](01, 09)-(01, 10): LESS(OP) '<'
[04](01, 11)-(01, 14): NAME(NAME) 'len'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 16): NAME(NAME) 's'
[04](01, 16)-(01, 17): RPAR(OP) ')'
[04](01, 17)-(01, 18): COLON(OP) ':'
[04](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[05](01, 02)-(01, 04): NAME(NAME) 'if'
[05](01, 05)-(01, 06): NAME(NAME) 's'
[05](01, 06)-(01, 07): LSQB(OP) '['
[05](01, 07)-(01, 08): NAME(NAME) 'i'
[05](01, 08)-(01, 09): RSQB(OP) ']'
[05](01, 10)-(01, 12): EQEQUAL(OP) '=='
[05](01, 13)-(01, 16): STRING(STRING) '" "'
[05](01, 17)-(01, 20): NAME(NAME) 'and'
[05](01, 21)-(01, 24): NAME(NAME) 'not'
[05](01, 25)-(01, 43): NAME(NAME) 'prev_char_is_space'
[05](01, 43)-(01, 44): COLON(OP) ':'
[05](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 03): INDENT(INDENT) '\t\t\t'
[06](01, 03)-(01, 21): NAME(NAME) 'prev_char_is_space'
[06](01, 22)-(01, 23): EQUAL(OP) '='
[06](01, 24)-(01, 28): NAME(NAME) 'True'
[06](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): INDENT(INDENT) '\t\t\t'
[07](01, 03)-(01, 10): NAME(NAME) 'cleaned'
[07](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[07](01, 14)-(01, 15): NAME(NAME) 's'
[07](01, 15)-(01, 16): LSQB(OP) '['
[07](01, 16)-(01, 17): NAME(NAME) 'i'
[07](01, 17)-(01, 18): RSQB(OP) ']'
[07](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[08](01, 02)-(01, 06): NAME(NAME) 'elif'
[08](01, 07)-(01, 08): NAME(NAME) 's'
[08](01, 08)-(01, 09): LSQB(OP) '['
[08](01, 09)-(01, 10): NAME(NAME) 'i'
[08](01, 10)-(01, 11): RSQB(OP) ']'
[08](01, 12)-(01, 14): NOTEQUAL(OP) '!='
[08](01, 15)-(01, 18): STRING(STRING) '" "'
[08](01, 18)-(01, 19): COLON(OP) ':'
[08](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): INDENT(INDENT) '\t\t\t'
[09](01, 03)-(01, 21): NAME(NAME) 'prev_char_is_space'
[09](01, 22)-(01, 23): EQUAL(OP) '='
[09](01, 24)-(01, 29): NAME(NAME) 'False'
[09](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 03): INDENT(INDENT) '\t\t\t'
[10](01, 03)-(01, 10): NAME(NAME) 'cleaned'
[10](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[10](01, 14)-(01, 15): NAME(NAME) 's'
[10](01, 15)-(01, 16): LSQB(OP) '['
[10](01, 16)-(01, 17): NAME(NAME) 'i'
[10](01, 17)-(01, 18): RSQB(OP) ']'
[10](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[11](01, 02)-(01, 03): NAME(NAME) 'i'
[11](01, 04)-(01, 06): PLUSEQUAL(OP) '+='
[11](01, 07)-(01, 08): NUMBER(NUMBER) '1'
[11](01, 08)-(01, 09): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 01): INDENT(INDENT) '\t'
[12](01, 01)-(01, 03): NAME(NAME) 'if'
[12](01, 04)-(01, 11): NAME(NAME) 'cleaned'
[12](01, 11)-(01, 12): LSQB(OP) '['
[12](01, 12)-(01, 15): NAME(NAME) 'len'
[12](01, 15)-(01, 16): LPAR(OP) '('
[12](01, 16)-(01, 23): NAME(NAME) 'cleaned'
[12](01, 23)-(01, 24): RPAR(OP) ')'
[12](01, 24)-(01, 25): MINUS(OP) '-'
[12](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[12](01, 26)-(01, 27): RSQB(OP) ']'
[12](01, 28)-(01, 30): EQEQUAL(OP) '=='
[12](01, 31)-(01, 34): STRING(STRING) '" "'
[12](01, 34)-(01, 35): COLON(OP) ':'
[12](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 02): INDENT(INDENT) '\t\t'
[13](01, 02)-(01, 09): NAME(NAME) 'cleaned'
[13](01, 10)-(01, 11): EQUAL(OP) '='
[13](01, 12)-(01, 19): NAME(NAME) 'cleaned'
[13](01, 19)-(01, 20): LSQB(OP) '['
[13](01, 20)-(01, 21): COLON(OP) ':'
[13](01, 21)-(01, 24): NAME(NAME) 'len'
[13](01, 24)-(01, 25): LPAR(OP) '('
[13](01, 25)-(01, 32): NAME(NAME) 'cleaned'
[13](01, 32)-(01, 33): RPAR(OP) ')'
[13](01, 33)-(01, 34): MINUS(OP) '-'
[13](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[13](01, 35)-(01, 36): RSQB(OP) ']'
[13](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): INDENT(INDENT) '\t'
[14](01, 01)-(01, 07): NAME(NAME) 'return'
[14](01, 08)-(01, 15): NAME(NAME) 'cleaned'
[14](01, 15)-(01, 16): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

