[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'import'
[00](01, 07)-(01, 13): NAME(NAME) 'string'
[00](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 15): NAME(NAME) 'count_words'
[03](01, 15)-(01, 16): LPAR(OP) '('
[03](01, 16)-(01, 17): NAME(NAME) 's'
[03](01, 17)-(01, 18): RPAR(OP) ')'
[03](01, 18)-(01, 19): COLON(OP) ':'
[03](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 19): NAME(NAME) 's_without_punct'
[04](01, 20)-(01, 21): EQUAL(OP) '='
[04](01, 22)-(01, 24): STRING(STRING) '""'
[04](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 21): NAME(NAME) 's_without_numbers'
[05](01, 22)-(01, 23): EQUAL(OP) '='
[05](01, 24)-(01, 26): STRING(STRING) '""'
[05](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 11): NAME(NAME) 'numbers'
[06](01, 12)-(01, 13): EQUAL(OP) '='
[06](01, 14)-(01, 25): STRING(STRING) '"123456789"'
[06](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 19): NAME(NAME) 's_without_punct'
[07](01, 20)-(01, 21): EQUAL(OP) '='
[07](01, 22)-(01, 23): NAME(NAME) 's'
[07](01, 23)-(01, 24): DOT(OP) '.'
[07](01, 24)-(01, 33): NAME(NAME) 'translate'
[07](01, 33)-(01, 34): LPAR(OP) '('
[07](01, 34)-(01, 35): NAME(NAME) 's'
[07](01, 35)-(01, 36): DOT(OP) '.'
[07](01, 36)-(01, 45): NAME(NAME) 'maketrans'
[07](01, 45)-(01, 46): LPAR(OP) '('
[07](01, 46)-(01, 52): NAME(NAME) 'string'
[07](01, 52)-(01, 53): DOT(OP) '.'
[07](01, 53)-(01, 64): NAME(NAME) 'punctuation'
[07](01, 64)-(01, 65): COMMA(OP) ','
[07](01, 66)-(01, 69): STRING(STRING) '" "'
[07](01, 69)-(01, 70): STAR(OP) '*'
[07](01, 70)-(01, 73): NAME(NAME) 'len'
[07](01, 73)-(01, 74): LPAR(OP) '('
[07](01, 74)-(01, 80): NAME(NAME) 'string'
[07](01, 80)-(01, 81): DOT(OP) '.'
[07](01, 81)-(01, 92): NAME(NAME) 'punctuation'
[07](01, 92)-(01, 93): RPAR(OP) ')'
[07](01, 93)-(01, 94): RPAR(OP) ')'
[07](01, 94)-(01, 95): RPAR(OP) ')'
[07](01, 95)-(01, 96): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 07): NAME(NAME) 'for'
[08](01, 08)-(01, 15): NAME(NAME) 'letters'
[08](01, 16)-(01, 18): NAME(NAME) 'in'
[08](01, 19)-(01, 34): NAME(NAME) 's_without_punct'
[08](01, 34)-(01, 35): COLON(OP) ':'
[08](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 10): NAME(NAME) 'if'
[09](01, 11)-(01, 18): NAME(NAME) 'letters'
[09](01, 19)-(01, 22): NAME(NAME) 'not'
[09](01, 23)-(01, 25): NAME(NAME) 'in'
[09](01, 26)-(01, 33): NAME(NAME) 'numbers'
[09](01, 33)-(01, 34): COLON(OP) ':'
[09](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 29): NAME(NAME) 's_without_numbers'
[10](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[10](01, 33)-(01, 40): NAME(NAME) 'letters'
[10](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 06): NAME(NAME) 'xs'
[11](01, 07)-(01, 08): EQUAL(OP) '='
[11](01, 09)-(01, 26): NAME(NAME) 's_without_numbers'
[11](01, 26)-(01, 27): DOT(OP) '.'
[11](01, 27)-(01, 32): NAME(NAME) 'split'
[11](01, 32)-(01, 33): LPAR(OP) '('
[11](01, 33)-(01, 34): RPAR(OP) ')'
[11](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 10): NAME(NAME) 'return'
[12](01, 11)-(01, 14): NAME(NAME) 'len'
[12](01, 14)-(01, 15): LPAR(OP) '('
[12](01, 15)-(01, 17): NAME(NAME) 'xs'
[12](01, 17)-(01, 18): RPAR(OP) ')'
[12](01, 18)-(01, 19): NEWLINE(NEWLINE)
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

