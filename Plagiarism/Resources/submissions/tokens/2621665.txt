[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 17): NAME(NAME) 'string'
[00](01, 17)-(01, 18): RPAR(OP) ')'
[00](01, 18)-(01, 19): COLON(OP) ':'
[00](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 14): NAME(NAME) 'new_string'
[01](01, 15)-(01, 16): EQUAL(OP) '='
[01](01, 16)-(01, 18): STRING(STRING) '""'
[01](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 07): NAME(NAME) 'for'
[02](01, 08)-(01, 09): NAME(NAME) 'i'
[02](01, 10)-(01, 12): NAME(NAME) 'in'
[02](01, 13)-(01, 18): NAME(NAME) 'range'
[02](01, 18)-(01, 19): LPAR(OP) '('
[02](01, 19)-(01, 22): NAME(NAME) 'len'
[02](01, 22)-(01, 23): LPAR(OP) '('
[02](01, 23)-(01, 29): NAME(NAME) 'string'
[02](01, 29)-(01, 30): RPAR(OP) ')'
[02](01, 30)-(01, 31): RPAR(OP) ')'
[02](01, 31)-(01, 32): COLON(OP) ':'
[02](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 10): NAME(NAME) 'if'
[03](01, 11)-(01, 12): NAME(NAME) 'i'
[03](01, 13)-(01, 15): EQEQUAL(OP) '=='
[03](01, 16)-(01, 17): NUMBER(NUMBER) '0'
[03](01, 18)-(01, 21): NAME(NAME) 'and'
[03](01, 22)-(01, 25): NAME(NAME) 'len'
[03](01, 25)-(01, 26): LPAR(OP) '('
[03](01, 26)-(01, 32): NAME(NAME) 'string'
[03](01, 32)-(01, 33): RPAR(OP) ')'
[03](01, 34)-(01, 35): GREATER(OP) '>'
[03](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[03](01, 37)-(01, 38): COLON(OP) ':'
[03](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 17): NAME(NAME) 'count'
[04](01, 18)-(01, 19): EQUAL(OP) '='
[04](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 14): NAME(NAME) 'if'
[05](01, 15)-(01, 21): NAME(NAME) 'string'
[05](01, 21)-(01, 22): LSQB(OP) '['
[05](01, 22)-(01, 23): NAME(NAME) 'i'
[05](01, 24)-(01, 25): PLUS(OP) '+'
[05](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[05](01, 27)-(01, 28): RSQB(OP) ']'
[05](01, 29)-(01, 31): EQEQUAL(OP) '=='
[05](01, 32)-(01, 35): STRING(STRING) '"X"'
[05](01, 35)-(01, 36): COLON(OP) ':'
[05](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 16): INDENT(INDENT) '                '
[06](01, 16)-(01, 21): NAME(NAME) 'count'
[06](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[06](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[06](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 14): NAME(NAME) 'if'
[07](01, 15)-(01, 20): NAME(NAME) 'count'
[07](01, 21)-(01, 23): EQEQUAL(OP) '=='
[07](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[07](01, 25)-(01, 26): COLON(OP) ':'
[07](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 16): INDENT(INDENT) '                '
[08](01, 16)-(01, 26): NAME(NAME) 'new_string'
[08](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[08](01, 30)-(01, 33): STRING(STRING) '"0"'
[08](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 16): NAME(NAME) 'else'
[09](01, 16)-(01, 17): COLON(OP) ':'
[09](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 26): NAME(NAME) 'new_string'
[10](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[10](01, 30)-(01, 33): NAME(NAME) 'str'
[10](01, 33)-(01, 34): LPAR(OP) '('
[10](01, 34)-(01, 39): NAME(NAME) 'count'
[10](01, 39)-(01, 40): RPAR(OP) ')'
[10](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 12): NAME(NAME) 'elif'
[12](01, 13)-(01, 14): NAME(NAME) 'i'
[12](01, 15)-(01, 17): EQEQUAL(OP) '=='
[12](01, 18)-(01, 21): NAME(NAME) 'len'
[12](01, 21)-(01, 22): LPAR(OP) '('
[12](01, 22)-(01, 28): NAME(NAME) 'string'
[12](01, 28)-(01, 29): RPAR(OP) ')'
[12](01, 29)-(01, 30): MINUS(OP) '-'
[12](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[12](01, 32)-(01, 35): NAME(NAME) 'and'
[12](01, 36)-(01, 39): NAME(NAME) 'len'
[12](01, 39)-(01, 40): LPAR(OP) '('
[12](01, 40)-(01, 46): NAME(NAME) 'string'
[12](01, 46)-(01, 47): RPAR(OP) ')'
[12](01, 48)-(01, 49): GREATER(OP) '>'
[12](01, 50)-(01, 51): NUMBER(NUMBER) '1'
[12](01, 51)-(01, 52): COLON(OP) ':'
[12](01, 52)-(01, 53): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 17): NAME(NAME) 'count'
[13](01, 18)-(01, 19): EQUAL(OP) '='
[13](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[13](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 14): NAME(NAME) 'if'
[14](01, 15)-(01, 21): NAME(NAME) 'string'
[14](01, 21)-(01, 22): LSQB(OP) '['
[14](01, 22)-(01, 23): NAME(NAME) 'i'
[14](01, 24)-(01, 25): MINUS(OP) '-'
[14](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[14](01, 27)-(01, 28): RSQB(OP) ']'
[14](01, 29)-(01, 31): EQEQUAL(OP) '=='
[14](01, 32)-(01, 35): STRING(STRING) '"X"'
[14](01, 35)-(01, 36): COLON(OP) ':'
[14](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 21): NAME(NAME) 'count'
[15](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[15](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[15](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 12): INDENT(INDENT) '            '
[16](01, 12)-(01, 14): NAME(NAME) 'if'
[16](01, 15)-(01, 20): NAME(NAME) 'count'
[16](01, 21)-(01, 23): EQEQUAL(OP) '=='
[16](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[16](01, 25)-(01, 26): COLON(OP) ':'
[16](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 16): INDENT(INDENT) '                '
[17](01, 16)-(01, 26): NAME(NAME) 'new_string'
[17](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[17](01, 30)-(01, 33): STRING(STRING) '"0"'
[17](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 12): INDENT(INDENT) '            '
[18](01, 12)-(01, 16): NAME(NAME) 'else'
[18](01, 16)-(01, 17): COLON(OP) ':'
[18](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 16): INDENT(INDENT) '                '
[19](01, 16)-(01, 26): NAME(NAME) 'new_string'
[19](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[19](01, 30)-(01, 33): NAME(NAME) 'str'
[19](01, 33)-(01, 34): LPAR(OP) '('
[19](01, 34)-(01, 39): NAME(NAME) 'count'
[19](01, 39)-(01, 40): RPAR(OP) ')'
[19](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 12): NAME(NAME) 'elif'
[21](01, 13)-(01, 16): NAME(NAME) 'len'
[21](01, 16)-(01, 17): LPAR(OP) '('
[21](01, 17)-(01, 23): NAME(NAME) 'string'
[21](01, 23)-(01, 24): RPAR(OP) ')'
[21](01, 25)-(01, 26): GREATER(OP) '>'
[21](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[21](01, 28)-(01, 29): COLON(OP) ':'
[21](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 17): NAME(NAME) 'count'
[22](01, 18)-(01, 19): EQUAL(OP) '='
[22](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[22](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 14): NAME(NAME) 'if'
[23](01, 15)-(01, 21): NAME(NAME) 'string'
[23](01, 21)-(01, 22): LSQB(OP) '['
[23](01, 22)-(01, 23): NAME(NAME) 'i'
[23](01, 23)-(01, 24): MINUS(OP) '-'
[23](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[23](01, 25)-(01, 26): RSQB(OP) ']'
[23](01, 27)-(01, 29): EQEQUAL(OP) '=='
[23](01, 30)-(01, 33): STRING(STRING) '"X"'
[23](01, 33)-(01, 34): COLON(OP) ':'
[23](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 16): INDENT(INDENT) '                '
[24](01, 16)-(01, 21): NAME(NAME) 'count'
[24](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[24](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[24](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 14): NAME(NAME) 'if'
[25](01, 15)-(01, 21): NAME(NAME) 'string'
[25](01, 21)-(01, 22): LSQB(OP) '['
[25](01, 22)-(01, 23): NAME(NAME) 'i'
[25](01, 23)-(01, 24): PLUS(OP) '+'
[25](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[25](01, 25)-(01, 26): RSQB(OP) ']'
[25](01, 27)-(01, 29): EQEQUAL(OP) '=='
[25](01, 30)-(01, 33): STRING(STRING) '"X"'
[25](01, 33)-(01, 34): COLON(OP) ':'
[25](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 16): INDENT(INDENT) '                '
[26](01, 16)-(01, 21): NAME(NAME) 'count'
[26](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[26](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[26](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 12): INDENT(INDENT) '            '
[27](01, 12)-(01, 14): NAME(NAME) 'if'
[27](01, 15)-(01, 20): NAME(NAME) 'count'
[27](01, 21)-(01, 23): EQEQUAL(OP) '=='
[27](01, 24)-(01, 25): NUMBER(NUMBER) '0'
[27](01, 25)-(01, 26): COLON(OP) ':'
[27](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 16): INDENT(INDENT) '                '
[28](01, 16)-(01, 26): NAME(NAME) 'new_string'
[28](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[28](01, 30)-(01, 33): STRING(STRING) '"0"'
[28](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 12): INDENT(INDENT) '            '
[29](01, 12)-(01, 16): NAME(NAME) 'else'
[29](01, 16)-(01, 17): COLON(OP) ':'
[29](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[29](02, 00)-(02, 00): DEDENT(DEDENT)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 16): INDENT(INDENT) '                '
[30](01, 16)-(01, 26): NAME(NAME) 'new_string'
[30](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[30](01, 30)-(01, 33): NAME(NAME) 'str'
[30](01, 33)-(01, 34): LPAR(OP) '('
[30](01, 34)-(01, 39): NAME(NAME) 'count'
[30](01, 39)-(01, 40): RPAR(OP) ')'
[30](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 01): NL(NL) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 08): INDENT(INDENT) '        '
[32](01, 08)-(01, 12): NAME(NAME) 'elif'
[32](01, 13)-(01, 19): NAME(NAME) 'string'
[32](01, 20)-(01, 22): EQEQUAL(OP) '=='
[32](01, 23)-(01, 26): STRING(STRING) '"X"'
[32](01, 27)-(01, 29): NAME(NAME) 'or'
[32](01, 30)-(01, 36): NAME(NAME) 'string'
[32](01, 37)-(01, 39): EQEQUAL(OP) '=='
[32](01, 40)-(01, 43): STRING(STRING) '" "'
[32](01, 43)-(01, 44): COLON(OP) ':'
[32](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 12): INDENT(INDENT) '            '
[33](01, 12)-(01, 18): NAME(NAME) 'string'
[33](01, 19)-(01, 20): EQUAL(OP) '='
[33](01, 21)-(01, 24): STRING(STRING) '"0"'
[33](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 04): INDENT(INDENT) '    '
[34](01, 04)-(01, 10): NAME(NAME) 'return'
[34](01, 11)-(01, 17): NAME(NAME) 'string'
[34](01, 17)-(01, 18): NEWLINE(NEWLINE)
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

