[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 06): NAME(NAME) 'string'
[00](01, 07)-(01, 08): EQUAL(OP) '='
[00](01, 09)-(01, 14): NAME(NAME) 'input'
[00](01, 14)-(01, 15): LPAR(OP) '('
[00](01, 15)-(01, 32): STRING(STRING) '"give a string: "'
[00](01, 32)-(01, 33): RPAR(OP) ')'
[00](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 02): NAME(NAME) 'if'
[01](01, 03)-(01, 04): LPAR(OP) '('
[01](01, 04)-(01, 07): NAME(NAME) 'len'
[01](01, 07)-(01, 08): LPAR(OP) '('
[01](01, 08)-(01, 14): NAME(NAME) 'string'
[01](01, 14)-(01, 15): RPAR(OP) ')'
[01](01, 15)-(01, 16): RPAR(OP) ')'
[01](01, 17)-(01, 19): EQEQUAL(OP) '=='
[01](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[01](01, 21)-(01, 22): COLON(OP) ':'
[01](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'print'
[02](01, 09)-(01, 10): LPAR(OP) '('
[02](01, 10)-(01, 12): STRING(STRING) '""'
[02](01, 12)-(01, 13): RPAR(OP) ')'
[02](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): NAME(NAME) 'else'
[03](01, 04)-(01, 05): COLON(OP) ':'
[03](01, 05)-(01, 06): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 16): NAME(NAME) 'split_string'
[04](01, 17)-(01, 18): EQUAL(OP) '='
[04](01, 19)-(01, 22): STRING(STRING) '" "'
[04](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 10): NAME(NAME) 'string'
[05](01, 11)-(01, 13): PLUSEQUAL(OP) '+='
[05](01, 14)-(01, 17): STRING(STRING) '"!"'
[05](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 07): NAME(NAME) 'for'
[07](01, 08)-(01, 09): NAME(NAME) 'i'
[07](01, 10)-(01, 12): NAME(NAME) 'in'
[07](01, 13)-(01, 18): NAME(NAME) 'range'
[07](01, 18)-(01, 19): LPAR(OP) '('
[07](01, 19)-(01, 22): NAME(NAME) 'len'
[07](01, 22)-(01, 23): LPAR(OP) '('
[07](01, 23)-(01, 29): NAME(NAME) 'string'
[07](01, 29)-(01, 30): RPAR(OP) ')'
[07](01, 31)-(01, 32): MINUS(OP) '-'
[07](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[07](01, 34)-(01, 35): RPAR(OP) ')'
[07](01, 35)-(01, 36): COLON(OP) ':'
[07](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 10): NAME(NAME) 'if'
[08](01, 11)-(01, 17): NAME(NAME) 'string'
[08](01, 17)-(01, 18): LSQB(OP) '['
[08](01, 18)-(01, 19): NAME(NAME) 'i'
[08](01, 19)-(01, 20): RSQB(OP) ']'
[08](01, 21)-(01, 23): GREATEREQUAL(OP) '>='
[08](01, 24)-(01, 27): STRING(STRING) '"A"'
[08](01, 28)-(01, 31): NAME(NAME) 'and'
[08](01, 32)-(01, 38): NAME(NAME) 'string'
[08](01, 38)-(01, 39): LSQB(OP) '['
[08](01, 39)-(01, 40): NAME(NAME) 'i'
[08](01, 40)-(01, 41): RSQB(OP) ']'
[08](01, 42)-(01, 44): LESSEQUAL(OP) '<='
[08](01, 45)-(01, 48): STRING(STRING) '"z"'
[08](01, 48)-(01, 49): COLON(OP) ':'
[08](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 24): NAME(NAME) 'split_string'
[09](01, 25)-(01, 27): PLUSEQUAL(OP) '+='
[09](01, 28)-(01, 34): NAME(NAME) 'string'
[09](01, 34)-(01, 35): LSQB(OP) '['
[09](01, 35)-(01, 36): NAME(NAME) 'i'
[09](01, 36)-(01, 37): RSQB(OP) ']'
[09](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 12): NAME(NAME) 'elif'
[10](01, 13)-(01, 19): NAME(NAME) 'string'
[10](01, 19)-(01, 20): LSQB(OP) '['
[10](01, 20)-(01, 21): NAME(NAME) 'i'
[10](01, 21)-(01, 22): RSQB(OP) ']'
[10](01, 23)-(01, 25): NOTEQUAL(OP) '!='
[10](01, 26)-(01, 29): STRING(STRING) '" "'
[10](01, 29)-(01, 30): COLON(OP) ':'
[10](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 24): NAME(NAME) 'split_string'
[11](01, 25)-(01, 27): PLUSEQUAL(OP) '+='
[11](01, 28)-(01, 31): STRING(STRING) '" "'
[11](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 08): INDENT(INDENT) '        '
[12](01, 08)-(01, 12): NAME(NAME) 'elif'
[12](01, 13)-(01, 19): NAME(NAME) 'string'
[12](01, 19)-(01, 20): LSQB(OP) '['
[12](01, 20)-(01, 21): NAME(NAME) 'i'
[12](01, 21)-(01, 22): RSQB(OP) ']'
[12](01, 23)-(01, 25): EQEQUAL(OP) '=='
[12](01, 26)-(01, 29): STRING(STRING) '" "'
[12](01, 29)-(01, 30): COLON(OP) ':'
[12](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 24): NAME(NAME) 'split_string'
[13](01, 25)-(01, 27): PLUSEQUAL(OP) '+='
[13](01, 28)-(01, 31): STRING(STRING) '" "'
[13](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 01): NL(NL) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 16): NAME(NAME) 'split_string'
[15](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[15](01, 20)-(01, 23): STRING(STRING) '" "'
[15](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 01): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 18): NAME(NAME) 'split_string_2'
[18](01, 19)-(01, 20): EQUAL(OP) '='
[18](01, 21)-(01, 23): STRING(STRING) '""'
[18](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): INDENT(INDENT) '    '
[20](01, 04)-(01, 07): NAME(NAME) 'for'
[20](01, 08)-(01, 09): NAME(NAME) 'i'
[20](01, 10)-(01, 12): NAME(NAME) 'in'
[20](01, 13)-(01, 18): NAME(NAME) 'range'
[20](01, 18)-(01, 19): LPAR(OP) '('
[20](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[20](01, 20)-(01, 21): COMMA(OP) ','
[20](01, 21)-(01, 24): NAME(NAME) 'len'
[20](01, 24)-(01, 25): LPAR(OP) '('
[20](01, 25)-(01, 37): NAME(NAME) 'split_string'
[20](01, 37)-(01, 38): RPAR(OP) ')'
[20](01, 38)-(01, 39): MINUS(OP) '-'
[20](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[20](01, 40)-(01, 41): RPAR(OP) ')'
[20](01, 41)-(01, 42): COLON(OP) ':'
[20](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 10): NAME(NAME) 'if'
[21](01, 11)-(01, 23): NAME(NAME) 'split_string'
[21](01, 23)-(01, 24): LSQB(OP) '['
[21](01, 24)-(01, 25): NAME(NAME) 'i'
[21](01, 25)-(01, 26): RSQB(OP) ']'
[21](01, 27)-(01, 29): EQEQUAL(OP) '=='
[21](01, 30)-(01, 33): STRING(STRING) '" "'
[21](01, 34)-(01, 37): NAME(NAME) 'and'
[21](01, 38)-(01, 50): NAME(NAME) 'split_string'
[21](01, 50)-(01, 51): LSQB(OP) '['
[21](01, 51)-(01, 52): NAME(NAME) 'i'
[21](01, 53)-(01, 54): PLUS(OP) '+'
[21](01, 55)-(01, 56): NUMBER(NUMBER) '1'
[21](01, 56)-(01, 57): RSQB(OP) ']'
[21](01, 58)-(01, 60): EQEQUAL(OP) '=='
[21](01, 61)-(01, 64): STRING(STRING) '" "'
[21](01, 64)-(01, 65): COLON(OP) ':'
[21](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 26): NAME(NAME) 'split_string_2'
[22](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[22](01, 30)-(01, 32): STRING(STRING) '""'
[22](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 08): INDENT(INDENT) '        '
[23](01, 08)-(01, 12): NAME(NAME) 'else'
[23](01, 12)-(01, 13): COLON(OP) ':'
[23](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 12): INDENT(INDENT) '            '
[24](01, 12)-(01, 26): NAME(NAME) 'split_string_2'
[24](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[24](01, 30)-(01, 42): NAME(NAME) 'split_string'
[24](01, 42)-(01, 43): LSQB(OP) '['
[24](01, 43)-(01, 44): NAME(NAME) 'i'
[24](01, 44)-(01, 45): RSQB(OP) ']'
[24](01, 45)-(01, 46): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 01): NL(NL) '\n'
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 04): INDENT(INDENT) '    '
[26](01, 04)-(01, 18): NAME(NAME) 'split_string_2'
[26](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[26](01, 22)-(01, 25): STRING(STRING) '" "'
[26](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 04): INDENT(INDENT) '    '
[27](01, 04)-(01, 18): NAME(NAME) 'split_string_2'
[27](01, 19)-(01, 21): PLUSEQUAL(OP) '+='
[27](01, 22)-(01, 25): STRING(STRING) '" "'
[27](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 01): NL(NL) '\n'
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 01): NL(NL) '\n'
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[30](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[30](01, 00)-(01, 04): INDENT(INDENT) '    '
[30](01, 04)-(01, 09): NAME(NAME) 'index'
[30](01, 10)-(01, 11): EQUAL(OP) '='
[30](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[30](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[30](02, 00)-(02, 00): DEDENT(DEDENT)
[30](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[31](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[31](01, 00)-(01, 01): NL(NL) '\n'
[31](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[32](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[32](01, 00)-(01, 04): INDENT(INDENT) '    '
[32](01, 04)-(01, 07): NAME(NAME) 'for'
[32](01, 08)-(01, 09): NAME(NAME) 'i'
[32](01, 10)-(01, 12): NAME(NAME) 'in'
[32](01, 13)-(01, 18): NAME(NAME) 'range'
[32](01, 18)-(01, 19): LPAR(OP) '('
[32](01, 19)-(01, 22): NAME(NAME) 'len'
[32](01, 22)-(01, 23): LPAR(OP) '('
[32](01, 23)-(01, 37): NAME(NAME) 'split_string_2'
[32](01, 37)-(01, 38): RPAR(OP) ')'
[32](01, 38)-(01, 39): MINUS(OP) '-'
[32](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[32](01, 40)-(01, 41): RPAR(OP) ')'
[32](01, 41)-(01, 42): COLON(OP) ':'
[32](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[32](02, 00)-(02, 00): DEDENT(DEDENT)
[32](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[33](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[33](01, 00)-(01, 08): INDENT(INDENT) '        '
[33](01, 08)-(01, 10): NAME(NAME) 'if'
[33](01, 11)-(01, 25): NAME(NAME) 'split_string_2'
[33](01, 25)-(01, 26): LSQB(OP) '['
[33](01, 26)-(01, 27): NAME(NAME) 'i'
[33](01, 27)-(01, 28): RSQB(OP) ']'
[33](01, 29)-(01, 31): EQEQUAL(OP) '=='
[33](01, 32)-(01, 35): STRING(STRING) '" "'
[33](01, 35)-(01, 36): COLON(OP) ':'
[33](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[33](02, 00)-(02, 00): DEDENT(DEDENT)
[33](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[34](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[34](01, 00)-(01, 12): INDENT(INDENT) '            '
[34](01, 12)-(01, 17): NAME(NAME) 'print'
[34](01, 17)-(01, 18): LPAR(OP) '('
[34](01, 18)-(01, 32): NAME(NAME) 'split_string_2'
[34](01, 32)-(01, 33): LSQB(OP) '['
[34](01, 33)-(01, 38): NAME(NAME) 'index'
[34](01, 38)-(01, 39): COLON(OP) ':'
[34](01, 39)-(01, 40): NAME(NAME) 'i'
[34](01, 40)-(01, 41): RSQB(OP) ']'
[34](01, 41)-(01, 42): COMMA(OP) ','
[34](01, 43)-(01, 46): NAME(NAME) 'len'
[34](01, 46)-(01, 47): LPAR(OP) '('
[34](01, 47)-(01, 61): NAME(NAME) 'split_string_2'
[34](01, 61)-(01, 62): LSQB(OP) '['
[34](01, 62)-(01, 67): NAME(NAME) 'index'
[34](01, 67)-(01, 68): COLON(OP) ':'
[34](01, 68)-(01, 69): NAME(NAME) 'i'
[34](01, 69)-(01, 70): RSQB(OP) ']'
[34](01, 70)-(01, 71): RPAR(OP) ')'
[34](01, 71)-(01, 72): RPAR(OP) ')'
[34](01, 72)-(01, 73): NEWLINE(NEWLINE) '\n'
[34](02, 00)-(02, 00): DEDENT(DEDENT)
[34](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[35](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[35](01, 00)-(01, 12): INDENT(INDENT) '            '
[35](01, 12)-(01, 17): NAME(NAME) 'index'
[35](01, 18)-(01, 19): EQUAL(OP) '='
[35](01, 20)-(01, 21): NAME(NAME) 'i'
[35](01, 22)-(01, 23): PLUS(OP) '+'
[35](01, 24)-(01, 25): NUMBER(NUMBER) '1'
[35](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[35](02, 00)-(02, 00): DEDENT(DEDENT)
[35](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

