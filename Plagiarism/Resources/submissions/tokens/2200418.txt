[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 18): NAME(NAME) 'cleanup_spaces'
[00](01, 18)-(01, 19): LPAR(OP) '('
[00](01, 19)-(01, 20): NAME(NAME) 's'
[00](01, 20)-(01, 21): RPAR(OP) ')'
[00](01, 21)-(01, 22): COLON(OP) ':'
[00](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'word'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 13): STRING(STRING) '""'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 05): NAME(NAME) 'i'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[02](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'while'
[03](01, 10)-(01, 11): NAME(NAME) 'i'
[03](01, 12)-(01, 13): LESS(OP) '<'
[03](01, 14)-(01, 17): NAME(NAME) 'len'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 19): NAME(NAME) 's'
[03](01, 19)-(01, 20): RPAR(OP) ')'
[03](01, 20)-(01, 21): COLON(OP) ':'
[03](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): NAME(NAME) 's'
[04](01, 12)-(01, 13): LSQB(OP) '['
[04](01, 13)-(01, 14): NAME(NAME) 'i'
[04](01, 14)-(01, 15): RSQB(OP) ']'
[04](01, 16)-(01, 18): NOTEQUAL(OP) '!='
[04](01, 19)-(01, 22): STRING(STRING) '" "'
[04](01, 22)-(01, 23): COLON(OP) ':'
[04](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 16): NAME(NAME) 'word'
[05](01, 17)-(01, 19): PLUSEQUAL(OP) '+='
[05](01, 20)-(01, 21): NAME(NAME) 's'
[05](01, 21)-(01, 22): LSQB(OP) '['
[05](01, 22)-(01, 23): NAME(NAME) 'i'
[05](01, 23)-(01, 24): RSQB(OP) ']'
[05](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 17): NAME(NAME) 'count'
[06](01, 18)-(01, 19): EQUAL(OP) '='
[06](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[06](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 08): INDENT(INDENT) '        '
[07](01, 08)-(01, 12): NAME(NAME) 'elif'
[07](01, 13)-(01, 14): NAME(NAME) 's'
[07](01, 14)-(01, 15): LSQB(OP) '['
[07](01, 15)-(01, 16): NAME(NAME) 'i'
[07](01, 16)-(01, 17): RSQB(OP) ']'
[07](01, 18)-(01, 20): EQEQUAL(OP) '=='
[07](01, 21)-(01, 24): STRING(STRING) '" "'
[07](01, 25)-(01, 28): NAME(NAME) 'and'
[07](01, 29)-(01, 32): NAME(NAME) 'len'
[07](01, 32)-(01, 33): LPAR(OP) '('
[07](01, 33)-(01, 37): NAME(NAME) 'word'
[07](01, 37)-(01, 38): RPAR(OP) ')'
[07](01, 39)-(01, 41): NOTEQUAL(OP) '!='
[07](01, 42)-(01, 43): NUMBER(NUMBER) '0'
[07](01, 43)-(01, 44): COLON(OP) ':'
[07](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 17): NAME(NAME) 'count'
[08](01, 18)-(01, 19): EQUAL(OP) '='
[08](01, 20)-(01, 21): NUMBER(NUMBER) '1'
[08](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 14): NAME(NAME) 'if'
[09](01, 15)-(01, 16): NAME(NAME) 'i'
[09](01, 16)-(01, 17): PLUS(OP) '+'
[09](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[09](01, 19)-(01, 20): LESS(OP) '<'
[09](01, 21)-(01, 24): NAME(NAME) 'len'
[09](01, 24)-(01, 25): LPAR(OP) '('
[09](01, 25)-(01, 26): NAME(NAME) 's'
[09](01, 26)-(01, 27): RPAR(OP) ')'
[09](01, 27)-(01, 28): MINUS(OP) '-'
[09](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[09](01, 30)-(01, 33): NAME(NAME) 'and'
[09](01, 34)-(01, 35): NAME(NAME) 's'
[09](01, 35)-(01, 36): LSQB(OP) '['
[09](01, 36)-(01, 37): NAME(NAME) 'i'
[09](01, 37)-(01, 38): PLUS(OP) '+'
[09](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[09](01, 39)-(01, 40): RSQB(OP) ']'
[09](01, 41)-(01, 43): EQEQUAL(OP) '=='
[09](01, 44)-(01, 47): STRING(STRING) '"!"'
[09](01, 48)-(01, 50): NAME(NAME) 'or'
[09](01, 51)-(01, 54): STRING(STRING) '"?"'
[09](01, 55)-(01, 57): NAME(NAME) 'or'
[09](01, 58)-(01, 61): STRING(STRING) '"."'
[09](01, 62)-(01, 65): NAME(NAME) 'and'
[09](01, 66)-(01, 71): NAME(NAME) 'count'
[09](01, 72)-(01, 74): EQEQUAL(OP) '=='
[09](01, 75)-(01, 76): NUMBER(NUMBER) '1'
[09](01, 76)-(01, 77): COLON(OP) ':'
[09](01, 77)-(01, 78): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 20): NAME(NAME) 'word'
[10](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[10](01, 24)-(01, 26): STRING(STRING) '""'
[10](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 16): NAME(NAME) 'elif'
[11](01, 17)-(01, 18): NAME(NAME) 'i'
[11](01, 18)-(01, 19): PLUS(OP) '+'
[11](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[11](01, 21)-(01, 22): LESS(OP) '<'
[11](01, 23)-(01, 26): NAME(NAME) 'len'
[11](01, 26)-(01, 27): LPAR(OP) '('
[11](01, 27)-(01, 28): NAME(NAME) 's'
[11](01, 28)-(01, 29): RPAR(OP) ')'
[11](01, 29)-(01, 30): MINUS(OP) '-'
[11](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[11](01, 32)-(01, 35): NAME(NAME) 'and'
[11](01, 36)-(01, 37): NAME(NAME) 's'
[11](01, 37)-(01, 38): LSQB(OP) '['
[11](01, 38)-(01, 39): NAME(NAME) 'i'
[11](01, 39)-(01, 40): PLUS(OP) '+'
[11](01, 40)-(01, 41): NUMBER(NUMBER) '1'
[11](01, 41)-(01, 42): RSQB(OP) ']'
[11](01, 43)-(01, 45): NOTEQUAL(OP) '!='
[11](01, 46)-(01, 49): STRING(STRING) '" "'
[11](01, 50)-(01, 53): NAME(NAME) 'and'
[11](01, 54)-(01, 59): NAME(NAME) 'count'
[11](01, 60)-(01, 62): EQEQUAL(OP) '=='
[11](01, 63)-(01, 64): NUMBER(NUMBER) '1'
[11](01, 64)-(01, 65): COLON(OP) ':'
[11](01, 65)-(01, 66): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 16): INDENT(INDENT) '                '
[12](01, 16)-(01, 20): NAME(NAME) 'word'
[12](01, 21)-(01, 23): PLUSEQUAL(OP) '+='
[12](01, 24)-(01, 27): STRING(STRING) '" "'
[12](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 08): INDENT(INDENT) '        '
[13](01, 08)-(01, 09): NAME(NAME) 'i'
[13](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[13](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[13](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): INDENT(INDENT) '    '
[14](01, 04)-(01, 10): NAME(NAME) 'return'
[14](01, 11)-(01, 15): NAME(NAME) 'word'
[14](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 04): INDENT(INDENT) '    '
[15](01, 04)-(01, 10): NAME(NAME) 'return'
[15](01, 11)-(01, 15): NAME(NAME) 'word'
[15](01, 15)-(01, 16): NEWLINE(NEWLINE)
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

