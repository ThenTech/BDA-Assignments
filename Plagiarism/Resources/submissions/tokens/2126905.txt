[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 04): NAME(NAME) 'iOne'
[00](01, 05)-(01, 06): EQUAL(OP) '='
[00](01, 07)-(01, 12): NAME(NAME) 'input'
[00](01, 12)-(01, 13): LPAR(OP) '('
[00](01, 13)-(01, 15): STRING(STRING) '""'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): NAME(NAME) 'iTwo'
[01](01, 05)-(01, 06): EQUAL(OP) '='
[01](01, 07)-(01, 12): NAME(NAME) 'input'
[01](01, 12)-(01, 13): LPAR(OP) '('
[01](01, 13)-(01, 15): STRING(STRING) '""'
[01](01, 15)-(01, 16): RPAR(OP) ')'
[01](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 05): NAME(NAME) 'iFive'
[02](01, 06)-(01, 07): EQUAL(OP) '='
[02](01, 08)-(01, 13): NAME(NAME) 'input'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 16): STRING(STRING) '""'
[02](01, 16)-(01, 17): RPAR(OP) ')'
[02](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): NAME(NAME) 'iTen'
[03](01, 05)-(01, 06): EQUAL(OP) '='
[03](01, 07)-(01, 12): NAME(NAME) 'input'
[03](01, 12)-(01, 13): LPAR(OP) '('
[03](01, 13)-(01, 15): STRING(STRING) '""'
[03](01, 15)-(01, 16): RPAR(OP) ')'
[03](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 07): NAME(NAME) 'iTwenty'
[04](01, 08)-(01, 09): EQUAL(OP) '='
[04](01, 10)-(01, 15): NAME(NAME) 'input'
[04](01, 15)-(01, 16): LPAR(OP) '('
[04](01, 16)-(01, 18): STRING(STRING) '""'
[04](01, 18)-(01, 19): RPAR(OP) ')'
[04](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 03): NAME(NAME) 'one'
[06](01, 04)-(01, 05): EQUAL(OP) '='
[06](01, 06)-(01, 09): NAME(NAME) 'int'
[06](01, 09)-(01, 10): LPAR(OP) '('
[06](01, 10)-(01, 14): NAME(NAME) 'iOne'
[06](01, 14)-(01, 15): RPAR(OP) ')'
[06](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): NAME(NAME) 'two'
[07](01, 04)-(01, 05): EQUAL(OP) '='
[07](01, 06)-(01, 09): NAME(NAME) 'int'
[07](01, 09)-(01, 10): LPAR(OP) '('
[07](01, 10)-(01, 14): NAME(NAME) 'iTwo'
[07](01, 14)-(01, 15): RPAR(OP) ')'
[07](01, 16)-(01, 17): STAR(OP) '*'
[07](01, 18)-(01, 19): NUMBER(NUMBER) '2'
[07](01, 19)-(01, 20): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): NAME(NAME) 'five'
[08](01, 05)-(01, 06): EQUAL(OP) '='
[08](01, 07)-(01, 10): NAME(NAME) 'int'
[08](01, 10)-(01, 11): LPAR(OP) '('
[08](01, 11)-(01, 16): NAME(NAME) 'iFive'
[08](01, 16)-(01, 17): RPAR(OP) ')'
[08](01, 18)-(01, 19): STAR(OP) '*'
[08](01, 20)-(01, 21): NUMBER(NUMBER) '5'
[08](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 03): NAME(NAME) 'ten'
[09](01, 04)-(01, 05): EQUAL(OP) '='
[09](01, 06)-(01, 09): NAME(NAME) 'int'
[09](01, 09)-(01, 10): LPAR(OP) '('
[09](01, 10)-(01, 14): NAME(NAME) 'iTen'
[09](01, 14)-(01, 15): RPAR(OP) ')'
[09](01, 16)-(01, 17): STAR(OP) '*'
[09](01, 18)-(01, 20): NUMBER(NUMBER) '10'
[09](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 06): NAME(NAME) 'twenty'
[10](01, 07)-(01, 08): EQUAL(OP) '='
[10](01, 09)-(01, 12): NAME(NAME) 'int'
[10](01, 12)-(01, 13): LPAR(OP) '('
[10](01, 13)-(01, 20): NAME(NAME) 'iTwenty'
[10](01, 20)-(01, 21): RPAR(OP) ')'
[10](01, 22)-(01, 23): STAR(OP) '*'
[10](01, 24)-(01, 26): NUMBER(NUMBER) '20'
[10](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 01): NL(NL) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 06): NAME(NAME) 'result'
[12](01, 07)-(01, 08): EQUAL(OP) '='
[12](01, 09)-(01, 10): LPAR(OP) '('
[12](01, 10)-(01, 13): NAME(NAME) 'one'
[12](01, 14)-(01, 15): PLUS(OP) '+'
[12](01, 16)-(01, 19): NAME(NAME) 'two'
[12](01, 20)-(01, 21): PLUS(OP) '+'
[12](01, 22)-(01, 26): NAME(NAME) 'five'
[12](01, 27)-(01, 28): PLUS(OP) '+'
[12](01, 29)-(01, 32): NAME(NAME) 'ten'
[12](01, 33)-(01, 34): PLUS(OP) '+'
[12](01, 35)-(01, 41): NAME(NAME) 'twenty'
[12](01, 41)-(01, 42): RPAR(OP) ')'
[12](01, 43)-(01, 44): SLASH(OP) '/'
[12](01, 45)-(01, 48): NUMBER(NUMBER) '100'
[12](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 05): NAME(NAME) 'print'
[14](01, 05)-(01, 06): LPAR(OP) '('
[14](01, 06)-(01, 27): STRING(STRING) '"You have %.2f euro!"'
[14](01, 28)-(01, 29): PERCENT(OP) '%'
[14](01, 30)-(01, 36): NAME(NAME) 'result'
[14](01, 36)-(01, 37): RPAR(OP) ')'
[14](01, 37)-(01, 38): NEWLINE(NEWLINE)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

