[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 05): NAME(NAME) 'x'
[01](01, 06)-(01, 07): EQUAL(OP) '='
[01](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[01](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 14): NAME(NAME) 'pattern'
[02](01, 15)-(01, 18): NAME(NAME) 'not'
[02](01, 19)-(01, 21): NAME(NAME) 'in'
[02](01, 22)-(01, 28): NAME(NAME) 'corpus'
[02](01, 28)-(01, 29): COLON(OP) ':'
[02](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 13): NAME(NAME) 'print'
[03](01, 13)-(01, 14): LPAR(OP) '('
[03](01, 14)-(01, 33): STRING(STRING) '"Pattern not found"'
[03](01, 33)-(01, 34): RPAR(OP) ')'
[03](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 08): NAME(NAME) 'else'
[04](01, 08)-(01, 09): COLON(OP) ':'
[04](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 13): NAME(NAME) 'while'
[05](01, 14)-(01, 15): NAME(NAME) 'x'
[05](01, 16)-(01, 17): LESS(OP) '<'
[05](01, 18)-(01, 21): NAME(NAME) 'len'
[05](01, 21)-(01, 22): LPAR(OP) '('
[05](01, 22)-(01, 28): NAME(NAME) 'corpus'
[05](01, 28)-(01, 29): RPAR(OP) ')'
[05](01, 29)-(01, 30): COLON(OP) ':'
[05](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 14): NAME(NAME) 'if'
[06](01, 15)-(01, 21): NAME(NAME) 'corpus'
[06](01, 21)-(01, 22): LSQB(OP) '['
[06](01, 22)-(01, 23): NAME(NAME) 'x'
[06](01, 23)-(01, 24): COLON(OP) ':'
[06](01, 24)-(01, 25): NAME(NAME) 'x'
[06](01, 25)-(01, 26): PLUS(OP) '+'
[06](01, 26)-(01, 29): NAME(NAME) 'len'
[06](01, 29)-(01, 30): LPAR(OP) '('
[06](01, 30)-(01, 37): NAME(NAME) 'pattern'
[06](01, 37)-(01, 38): RPAR(OP) ')'
[06](01, 38)-(01, 39): RSQB(OP) ']'
[06](01, 40)-(01, 42): EQEQUAL(OP) '=='
[06](01, 43)-(01, 50): NAME(NAME) 'pattern'
[06](01, 50)-(01, 51): COLON(OP) ':'
[06](01, 51)-(01, 52): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 16): INDENT(INDENT) '                '
[07](01, 16)-(01, 22): NAME(NAME) 'corpus'
[07](01, 23)-(01, 24): EQUAL(OP) '='
[07](01, 25)-(01, 31): NAME(NAME) 'corpus'
[07](01, 31)-(01, 32): LSQB(OP) '['
[07](01, 32)-(01, 33): COLON(OP) ':'
[07](01, 33)-(01, 34): NAME(NAME) 'x'
[07](01, 34)-(01, 35): RSQB(OP) ']'
[07](01, 36)-(01, 37): PLUS(OP) '+'
[07](01, 38)-(01, 49): NAME(NAME) 'replacement'
[07](01, 50)-(01, 51): PLUS(OP) '+'
[07](01, 52)-(01, 58): NAME(NAME) 'corpus'
[07](01, 58)-(01, 59): LSQB(OP) '['
[07](01, 59)-(01, 60): NAME(NAME) 'x'
[07](01, 60)-(01, 61): PLUS(OP) '+'
[07](01, 61)-(01, 64): NAME(NAME) 'len'
[07](01, 64)-(01, 65): LPAR(OP) '('
[07](01, 65)-(01, 76): NAME(NAME) 'replacement'
[07](01, 76)-(01, 77): RPAR(OP) ')'
[07](01, 77)-(01, 78): PLUS(OP) '+'
[07](01, 78)-(01, 79): NUMBER(NUMBER) '1'
[07](01, 79)-(01, 80): COLON(OP) ':'
[07](01, 80)-(01, 81): RSQB(OP) ']'
[07](01, 81)-(01, 82): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 13): NAME(NAME) 'x'
[08](01, 14)-(01, 16): PLUSEQUAL(OP) '+='
[08](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[08](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 13): NAME(NAME) 'print'
[09](01, 13)-(01, 14): LPAR(OP) '('
[09](01, 14)-(01, 20): NAME(NAME) 'corpus'
[09](01, 20)-(01, 21): RPAR(OP) ')'
[09](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 07): NAME(NAME) 'replace'
[10](01, 07)-(01, 08): LPAR(OP) '('
[10](01, 08)-(01, 14): STRING(STRING) '"with"'
[10](01, 14)-(01, 15): COMMA(OP) ','
[10](01, 16)-(01, 21): STRING(STRING) '"for"'
[10](01, 21)-(01, 22): COMMA(OP) ','
[10](01, 23)-(01, 61): STRING(STRING) '"I play with a sentence without words"'
[10](01, 61)-(01, 62): RPAR(OP) ')'
[10](01, 62)-(01, 63): NEWLINE(NEWLINE)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

