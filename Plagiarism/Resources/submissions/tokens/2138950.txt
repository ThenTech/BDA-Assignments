[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 06): NAME(NAME) 'input1'
[02](01, 07)-(01, 08): EQUAL(OP) '='
[02](01, 09)-(01, 14): NAME(NAME) 'input'
[02](01, 14)-(01, 15): LPAR(OP) '('
[02](01, 15)-(01, 23): STRING(STRING) '"input1"'
[02](01, 23)-(01, 24): RPAR(OP) ')'
[02](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 06): NAME(NAME) 'input2'
[03](01, 07)-(01, 08): EQUAL(OP) '='
[03](01, 09)-(01, 14): NAME(NAME) 'input'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 23): STRING(STRING) '"input2"'
[03](01, 23)-(01, 24): RPAR(OP) ')'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 07): NAME(NAME) 'alfabet'
[05](01, 08)-(01, 09): EQUAL(OP) '='
[05](01, 10)-(01, 38): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[05](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 01): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 03): NAME(NAME) 'for'
[07](01, 04)-(01, 05): NAME(NAME) 'i'
[07](01, 06)-(01, 08): NAME(NAME) 'in'
[07](01, 09)-(01, 16): NAME(NAME) 'alfabet'
[07](01, 16)-(01, 17): COLON(OP) ':'
[07](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 11): NAME(NAME) 'amount1'
[08](01, 12)-(01, 13): EQUAL(OP) '='
[08](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[08](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 11): NAME(NAME) 'amount2'
[09](01, 12)-(01, 13): EQUAL(OP) '='
[09](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[09](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 05): NAME(NAME) 'y'
[10](01, 06)-(01, 07): EQUAL(OP) '='
[10](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[10](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 05): NAME(NAME) 'z'
[11](01, 06)-(01, 07): EQUAL(OP) '='
[11](01, 08)-(01, 09): NUMBER(NUMBER) '0'
[11](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 04)-(01, 05): NL(NL) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 09): NAME(NAME) 'while'
[13](01, 10)-(01, 11): NAME(NAME) 'y'
[13](01, 11)-(01, 12): PLUS(OP) '+'
[13](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[13](01, 14)-(01, 16): LESSEQUAL(OP) '<='
[13](01, 17)-(01, 20): NAME(NAME) 'len'
[13](01, 20)-(01, 21): LPAR(OP) '('
[13](01, 21)-(01, 27): NAME(NAME) 'input1'
[13](01, 27)-(01, 28): RPAR(OP) ')'
[13](01, 28)-(01, 29): COLON(OP) ':'
[13](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 10): NAME(NAME) 'if'
[14](01, 11)-(01, 12): NAME(NAME) 'i'
[14](01, 13)-(01, 15): EQEQUAL(OP) '=='
[14](01, 16)-(01, 22): NAME(NAME) 'input1'
[14](01, 22)-(01, 23): LSQB(OP) '['
[14](01, 23)-(01, 24): NAME(NAME) 'y'
[14](01, 24)-(01, 25): RSQB(OP) ']'
[14](01, 25)-(01, 26): COLON(OP) ':'
[14](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 19): NAME(NAME) 'amount1'
[15](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[15](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[15](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 08): INDENT(INDENT) '        '
[16](01, 08)-(01, 09): NAME(NAME) 'y'
[16](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[16](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[16](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 04)-(01, 05): NL(NL) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 09): NAME(NAME) 'while'
[18](01, 10)-(01, 11): NAME(NAME) 'z'
[18](01, 11)-(01, 12): PLUS(OP) '+'
[18](01, 12)-(01, 13): NUMBER(NUMBER) '1'
[18](01, 14)-(01, 16): LESSEQUAL(OP) '<='
[18](01, 17)-(01, 20): NAME(NAME) 'len'
[18](01, 20)-(01, 21): LPAR(OP) '('
[18](01, 21)-(01, 27): NAME(NAME) 'input2'
[18](01, 27)-(01, 28): RPAR(OP) ')'
[18](01, 28)-(01, 29): COLON(OP) ':'
[18](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 10): NAME(NAME) 'if'
[19](01, 11)-(01, 12): NAME(NAME) 'i'
[19](01, 13)-(01, 15): EQEQUAL(OP) '=='
[19](01, 16)-(01, 22): NAME(NAME) 'input2'
[19](01, 22)-(01, 23): LSQB(OP) '['
[19](01, 23)-(01, 24): NAME(NAME) 'z'
[19](01, 24)-(01, 25): RSQB(OP) ']'
[19](01, 25)-(01, 26): COLON(OP) ':'
[19](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 19): NAME(NAME) 'amount2'
[20](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[20](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[20](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 09): NAME(NAME) 'z'
[21](01, 10)-(01, 12): PLUSEQUAL(OP) '+='
[21](01, 13)-(01, 14): NUMBER(NUMBER) '1'
[21](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 08)-(01, 09): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): INDENT(INDENT) '    '
[23](01, 04)-(01, 06): NAME(NAME) 'if'
[23](01, 07)-(01, 14): NAME(NAME) 'amount1'
[23](01, 15)-(01, 17): NOTEQUAL(OP) '!='
[23](01, 18)-(01, 25): NAME(NAME) 'amount2'
[23](01, 25)-(01, 26): COLON(OP) ':'
[23](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): INDENT(INDENT) '        '
[24](01, 08)-(01, 13): NAME(NAME) 'print'
[24](01, 13)-(01, 14): LPAR(OP) '('
[24](01, 14)-(01, 20): NAME(NAME) 'input1'
[24](01, 20)-(01, 21): COMMA(OP) ','
[24](01, 22)-(01, 27): STRING(STRING) '"and"'
[24](01, 27)-(01, 28): COMMA(OP) ','
[24](01, 29)-(01, 35): NAME(NAME) 'input2'
[24](01, 35)-(01, 36): COMMA(OP) ','
[24](01, 37)-(01, 55): STRING(STRING) '"are not anagrams"'
[24](01, 55)-(01, 56): RPAR(OP) ')'
[24](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 08): INDENT(INDENT) '        '
[25](01, 08)-(01, 13): NAME(NAME) 'break'
[25](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 04)-(01, 05): NL(NL) '\n'
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 02): NAME(NAME) 'if'
[27](01, 03)-(01, 10): NAME(NAME) 'amount1'
[27](01, 11)-(01, 13): EQEQUAL(OP) '=='
[27](01, 14)-(01, 21): NAME(NAME) 'amount2'
[27](01, 21)-(01, 22): COLON(OP) ':'
[27](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 09): NAME(NAME) 'print'
[28](01, 09)-(01, 10): LPAR(OP) '('
[28](01, 10)-(01, 16): NAME(NAME) 'input1'
[28](01, 16)-(01, 17): COMMA(OP) ','
[28](01, 18)-(01, 23): STRING(STRING) '"and"'
[28](01, 23)-(01, 24): COMMA(OP) ','
[28](01, 25)-(01, 31): NAME(NAME) 'input2'
[28](01, 31)-(01, 32): COMMA(OP) ','
[28](01, 33)-(01, 47): STRING(STRING) '"are anagrams"'
[28](01, 47)-(01, 48): RPAR(OP) ')'
[28](01, 48)-(01, 49): NEWLINE(NEWLINE)
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

