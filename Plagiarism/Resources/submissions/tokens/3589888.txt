[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 12): NAME(NAME) 'position'
[01](01, 13)-(01, 14): EQUAL(OP) '='
[01](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[01](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 17): NAME(NAME) 'patternLooper'
[02](01, 18)-(01, 19): EQUAL(OP) '='
[02](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[02](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 13): NAME(NAME) 'newString'
[03](01, 14)-(01, 15): EQUAL(OP) '='
[03](01, 16)-(01, 18): STRING(STRING) '""'
[03](01, 18)-(01, 19): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'i'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 18): NAME(NAME) 'range'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 22): NAME(NAME) 'len'
[04](01, 22)-(01, 23): LPAR(OP) '('
[04](01, 23)-(01, 29): NAME(NAME) 'corpus'
[04](01, 29)-(01, 30): RPAR(OP) ')'
[04](01, 30)-(01, 31): RPAR(OP) ')'
[04](01, 31)-(01, 32): COLON(OP) ':'
[04](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 18): NAME(NAME) 'pattern'
[05](01, 18)-(01, 19): LSQB(OP) '['
[05](01, 19)-(01, 20): NUMBER(NUMBER) '0'
[05](01, 20)-(01, 21): RSQB(OP) ']'
[05](01, 22)-(01, 24): EQEQUAL(OP) '=='
[05](01, 25)-(01, 31): NAME(NAME) 'corpus'
[05](01, 31)-(01, 32): LSQB(OP) '['
[05](01, 32)-(01, 33): NAME(NAME) 'i'
[05](01, 33)-(01, 34): RSQB(OP) ']'
[05](01, 34)-(01, 35): COLON(OP) ':'
[05](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 20): NAME(NAME) 'position'
[06](01, 21)-(01, 22): EQUAL(OP) '='
[06](01, 23)-(01, 24): NAME(NAME) 'i'
[06](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 25): NAME(NAME) 'patternLooper'
[07](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[07](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[07](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'elif'
[08](01, 13)-(01, 20): NAME(NAME) 'pattern'
[08](01, 20)-(01, 21): LSQB(OP) '['
[08](01, 21)-(01, 34): NAME(NAME) 'patternLooper'
[08](01, 34)-(01, 35): RSQB(OP) ']'
[08](01, 36)-(01, 38): NOTEQUAL(OP) '!='
[08](01, 39)-(01, 45): NAME(NAME) 'corpus'
[08](01, 45)-(01, 46): LSQB(OP) '['
[08](01, 46)-(01, 47): NAME(NAME) 'i'
[08](01, 47)-(01, 48): RSQB(OP) ']'
[08](01, 48)-(01, 49): COLON(OP) ':'
[08](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 14): NAME(NAME) 'if'
[09](01, 15)-(01, 21): NAME(NAME) 'corpus'
[09](01, 21)-(01, 22): LSQB(OP) '['
[09](01, 22)-(01, 23): NAME(NAME) 'i'
[09](01, 23)-(01, 24): RSQB(OP) ']'
[09](01, 25)-(01, 27): NOTEQUAL(OP) '!='
[09](01, 28)-(01, 31): STRING(STRING) '" "'
[09](01, 32)-(01, 35): NAME(NAME) 'and'
[09](01, 36)-(01, 44): NAME(NAME) 'position'
[09](01, 45)-(01, 47): NOTEQUAL(OP) '!='
[09](01, 48)-(01, 49): NUMBER(NUMBER) '0'
[09](01, 50)-(01, 53): NAME(NAME) 'and'
[09](01, 54)-(01, 67): NAME(NAME) 'patternLooper'
[09](01, 68)-(01, 70): EQEQUAL(OP) '=='
[09](01, 71)-(01, 72): NUMBER(NUMBER) '1'
[09](01, 72)-(01, 73): COLON(OP) ':'
[09](01, 73)-(01, 74): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 25): NAME(NAME) 'newString'
[10](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[10](01, 29)-(01, 35): NAME(NAME) 'corpus'
[10](01, 35)-(01, 36): LSQB(OP) '['
[10](01, 36)-(01, 37): NAME(NAME) 'i'
[10](01, 37)-(01, 38): MINUS(OP) '-'
[10](01, 38)-(01, 39): NUMBER(NUMBER) '1'
[10](01, 39)-(01, 40): RSQB(OP) ']'
[10](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 12): INDENT(INDENT) '            '
[11](01, 12)-(01, 20): NAME(NAME) 'position'
[11](01, 21)-(01, 22): EQUAL(OP) '='
[11](01, 23)-(01, 24): NUMBER(NUMBER) '0'
[11](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 25): NAME(NAME) 'patternLooper'
[12](01, 26)-(01, 27): EQUAL(OP) '='
[12](01, 28)-(01, 29): NUMBER(NUMBER) '0'
[12](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 12): INDENT(INDENT) '            '
[13](01, 12)-(01, 21): NAME(NAME) 'newString'
[13](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[13](01, 25)-(01, 31): NAME(NAME) 'corpus'
[13](01, 31)-(01, 32): LSQB(OP) '['
[13](01, 32)-(01, 33): NAME(NAME) 'i'
[13](01, 33)-(01, 34): RSQB(OP) ']'
[13](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 08): INDENT(INDENT) '        '
[14](01, 08)-(01, 12): NAME(NAME) 'elif'
[14](01, 13)-(01, 20): NAME(NAME) 'pattern'
[14](01, 20)-(01, 21): LSQB(OP) '['
[14](01, 21)-(01, 24): NAME(NAME) 'len'
[14](01, 24)-(01, 25): LPAR(OP) '('
[14](01, 25)-(01, 32): NAME(NAME) 'pattern'
[14](01, 32)-(01, 33): RPAR(OP) ')'
[14](01, 33)-(01, 34): MINUS(OP) '-'
[14](01, 34)-(01, 35): NUMBER(NUMBER) '1'
[14](01, 35)-(01, 36): RSQB(OP) ']'
[14](01, 37)-(01, 39): EQEQUAL(OP) '=='
[14](01, 40)-(01, 46): NAME(NAME) 'corpus'
[14](01, 46)-(01, 47): LSQB(OP) '['
[14](01, 47)-(01, 48): NAME(NAME) 'i'
[14](01, 48)-(01, 49): RSQB(OP) ']'
[14](01, 49)-(01, 50): COLON(OP) ':'
[14](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 12): INDENT(INDENT) '            '
[15](01, 12)-(01, 15): NAME(NAME) 'for'
[15](01, 16)-(01, 17): NAME(NAME) 'i'
[15](01, 18)-(01, 20): NAME(NAME) 'in'
[15](01, 21)-(01, 26): NAME(NAME) 'range'
[15](01, 26)-(01, 27): LPAR(OP) '('
[15](01, 27)-(01, 30): NAME(NAME) 'len'
[15](01, 30)-(01, 31): LPAR(OP) '('
[15](01, 31)-(01, 38): NAME(NAME) 'pattern'
[15](01, 38)-(01, 39): RPAR(OP) ')'
[15](01, 39)-(01, 40): RPAR(OP) ')'
[15](01, 40)-(01, 41): COLON(OP) ':'
[15](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 16): INDENT(INDENT) '                '
[16](01, 16)-(01, 18): NAME(NAME) 'if'
[16](01, 19)-(01, 20): NAME(NAME) 'i'
[16](01, 21)-(01, 22): LESS(OP) '<'
[16](01, 23)-(01, 26): NAME(NAME) 'len'
[16](01, 26)-(01, 27): LPAR(OP) '('
[16](01, 27)-(01, 38): NAME(NAME) 'replacement'
[16](01, 38)-(01, 39): RPAR(OP) ')'
[16](01, 39)-(01, 40): COLON(OP) ':'
[16](01, 40)-(01, 41): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 20): INDENT(INDENT) '                    '
[17](01, 20)-(01, 29): NAME(NAME) 'newString'
[17](01, 30)-(01, 32): PLUSEQUAL(OP) '+='
[17](01, 33)-(01, 44): NAME(NAME) 'replacement'
[17](01, 44)-(01, 45): LSQB(OP) '['
[17](01, 45)-(01, 46): NAME(NAME) 'i'
[17](01, 46)-(01, 47): RSQB(OP) ']'
[17](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 12): NAME(NAME) 'elif'
[19](01, 13)-(01, 20): NAME(NAME) 'pattern'
[19](01, 20)-(01, 21): LSQB(OP) '['
[19](01, 21)-(01, 34): NAME(NAME) 'patternLooper'
[19](01, 34)-(01, 35): RSQB(OP) ']'
[19](01, 36)-(01, 38): EQEQUAL(OP) '=='
[19](01, 39)-(01, 45): NAME(NAME) 'corpus'
[19](01, 45)-(01, 46): LSQB(OP) '['
[19](01, 46)-(01, 47): NAME(NAME) 'i'
[19](01, 47)-(01, 48): RSQB(OP) ']'
[19](01, 48)-(01, 49): COLON(OP) ':'
[19](01, 49)-(01, 50): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 25): NAME(NAME) 'patternLooper'
[20](01, 26)-(01, 28): PLUSEQUAL(OP) '+='
[20](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[20](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 12): NAME(NAME) 'else'
[21](01, 12)-(01, 13): COLON(OP) ':'
[21](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 21): NAME(NAME) 'newString'
[22](01, 22)-(01, 24): PLUSEQUAL(OP) '+='
[22](01, 25)-(01, 31): NAME(NAME) 'corpus'
[22](01, 31)-(01, 32): LSQB(OP) '['
[22](01, 32)-(01, 33): NAME(NAME) 'i'
[22](01, 33)-(01, 34): RSQB(OP) ']'
[22](01, 34)-(01, 35): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 12)-(01, 13): NL(NL) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 04): INDENT(INDENT) '    '
[24](01, 04)-(01, 10): NAME(NAME) 'return'
[24](01, 11)-(01, 20): NAME(NAME) 'newString'
[24](01, 20)-(01, 21): NEWLINE(NEWLINE)
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

