[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 17): NAME(NAME) 'lucky_numbers'
[00](01, 17)-(01, 18): LPAR(OP) '('
[00](01, 18)-(01, 19): NAME(NAME) 'a'
[00](01, 19)-(01, 20): RPAR(OP) ')'
[00](01, 20)-(01, 21): COLON(OP) ':'
[00](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 08): NAME(NAME) 'step'
[01](01, 09)-(01, 10): EQUAL(OP) '='
[01](01, 11)-(01, 12): NUMBER(NUMBER) '2'
[01](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 09): NAME(NAME) 'while'
[02](01, 10)-(01, 13): NAME(NAME) 'len'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 15): NAME(NAME) 'a'
[02](01, 15)-(01, 16): RPAR(OP) ')'
[02](01, 17)-(01, 18): GREATER(OP) '>'
[02](01, 19)-(01, 23): NAME(NAME) 'step'
[02](01, 23)-(01, 24): COLON(OP) ':'
[02](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 21): NAME(NAME) 'filtered_list'
[03](01, 22)-(01, 23): EQUAL(OP) '='
[03](01, 24)-(01, 25): LSQB(OP) '['
[03](01, 25)-(01, 26): NAME(NAME) 'a'
[03](01, 26)-(01, 27): LSQB(OP) '['
[03](01, 27)-(01, 28): NAME(NAME) 'i'
[03](01, 29)-(01, 30): MINUS(OP) '-'
[03](01, 31)-(01, 32): NUMBER(NUMBER) '1'
[03](01, 32)-(01, 33): RSQB(OP) ']'
[03](01, 34)-(01, 37): NAME(NAME) 'for'
[03](01, 38)-(01, 39): NAME(NAME) 'i'
[03](01, 40)-(01, 42): NAME(NAME) 'in'
[03](01, 43)-(01, 48): NAME(NAME) 'range'
[03](01, 48)-(01, 49): LPAR(OP) '('
[03](01, 49)-(01, 52): NAME(NAME) 'len'
[03](01, 52)-(01, 53): LPAR(OP) '('
[03](01, 53)-(01, 54): NAME(NAME) 'a'
[03](01, 54)-(01, 55): RPAR(OP) ')'
[03](01, 56)-(01, 57): PLUS(OP) '+'
[03](01, 58)-(01, 59): NUMBER(NUMBER) '1'
[03](01, 59)-(01, 60): RPAR(OP) ')'
[03](01, 61)-(01, 63): NAME(NAME) 'if'
[03](01, 64)-(01, 65): NAME(NAME) 'i'
[03](01, 66)-(01, 67): PERCENT(OP) '%'
[03](01, 68)-(01, 72): NAME(NAME) 'step'
[03](01, 73)-(01, 75): NOTEQUAL(OP) '!='
[03](01, 76)-(01, 77): NUMBER(NUMBER) '0'
[03](01, 77)-(01, 78): RSQB(OP) ']'
[03](01, 78)-(01, 79): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 12): NAME(NAME) 'step'
[04](01, 13)-(01, 15): PLUSEQUAL(OP) '+='
[04](01, 16)-(01, 17): NUMBER(NUMBER) '1'
[04](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 09): NAME(NAME) 'a'
[05](01, 10)-(01, 11): EQUAL(OP) '='
[05](01, 12)-(01, 25): NAME(NAME) 'filtered_list'
[05](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 10): NAME(NAME) 'return'
[06](01, 11)-(01, 12): NAME(NAME) 'a'
[06](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

