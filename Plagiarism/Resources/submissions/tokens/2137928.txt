[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 04): NAME(NAME) 'word'
[00](01, 05)-(01, 06): EQUAL(OP) '='
[00](01, 07)-(01, 10): NAME(NAME) 'str'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 16): NAME(NAME) 'input'
[00](01, 16)-(01, 17): LPAR(OP) '('
[00](01, 17)-(01, 24): STRING(STRING) '"Word:"'
[00](01, 24)-(01, 25): RPAR(OP) ')'
[00](01, 25)-(01, 26): RPAR(OP) ')'
[00](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'n'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 07): NAME(NAME) 'len'
[01](01, 07)-(01, 08): LPAR(OP) '('
[01](01, 08)-(01, 12): NAME(NAME) 'word'
[01](01, 12)-(01, 13): RPAR(OP) ')'
[01](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 05): NAME(NAME) 'while'
[02](01, 06)-(01, 07): NAME(NAME) 'n'
[02](01, 08)-(01, 10): NOTEQUAL(OP) '!='
[02](01, 11)-(01, 12): NUMBER(NUMBER) '0'
[02](01, 12)-(01, 13): COLON(OP) ':'
[02](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 09): NAME(NAME) 'print'
[03](01, 09)-(01, 10): LPAR(OP) '('
[03](01, 10)-(01, 14): NAME(NAME) 'word'
[03](01, 14)-(01, 15): LSQB(OP) '['
[03](01, 15)-(01, 16): NAME(NAME) 'n'
[03](01, 16)-(01, 17): MINUS(OP) '-'
[03](01, 17)-(01, 18): NUMBER(NUMBER) '1'
[03](01, 18)-(01, 19): RSQB(OP) ']'
[03](01, 19)-(01, 20): COMMA(OP) ','
[03](01, 21)-(01, 24): NAME(NAME) 'end'
[03](01, 24)-(01, 25): EQUAL(OP) '='
[03](01, 25)-(01, 27): STRING(STRING) '""'
[03](01, 27)-(01, 28): RPAR(OP) ')'
[03](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 05): NAME(NAME) 'n'
[04](01, 06)-(01, 08): MINEQUAL(OP) '-='
[04](01, 09)-(01, 10): NUMBER(NUMBER) '1'
[04](01, 10)-(01, 11): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

