[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 23): NAME(NAME) 'input_string'
[00](01, 23)-(01, 24): RPAR(OP) ')'
[00](01, 24)-(01, 25): COLON(OP) ':'
[00](01, 25)-(01, 26): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 15): NAME(NAME) 'encoded_str'
[01](01, 16)-(01, 17): EQUAL(OP) '='
[01](01, 18)-(01, 20): STRING(STRING) '""'
[01](01, 20)-(01, 21): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 13): NAME(NAME) 'index'
[03](01, 14)-(01, 16): NAME(NAME) 'in'
[03](01, 17)-(01, 22): NAME(NAME) 'range'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 26): NAME(NAME) 'len'
[03](01, 26)-(01, 27): LPAR(OP) '('
[03](01, 27)-(01, 39): NAME(NAME) 'input_string'
[03](01, 39)-(01, 40): RPAR(OP) ')'
[03](01, 40)-(01, 41): RPAR(OP) ')'
[03](01, 41)-(01, 42): COLON(OP) ':'
[03](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 18): NAME(NAME) 'line_count'
[04](01, 19)-(01, 20): EQUAL(OP) '='
[04](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[04](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 10): NAME(NAME) 'if'
[05](01, 11)-(01, 16): NAME(NAME) 'index'
[05](01, 17)-(01, 19): EQEQUAL(OP) '=='
[05](01, 20)-(01, 21): NUMBER(NUMBER) '0'
[05](01, 22)-(01, 25): NAME(NAME) 'and'
[05](01, 26)-(01, 29): NAME(NAME) 'len'
[05](01, 29)-(01, 30): LPAR(OP) '('
[05](01, 30)-(01, 42): NAME(NAME) 'input_string'
[05](01, 42)-(01, 43): RPAR(OP) ')'
[05](01, 44)-(01, 45): GREATER(OP) '>'
[05](01, 46)-(01, 47): NUMBER(NUMBER) '1'
[05](01, 47)-(01, 48): COLON(OP) ':'
[05](01, 48)-(01, 49): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 12): INDENT(INDENT) '            '
[06](01, 12)-(01, 14): NAME(NAME) 'if'
[06](01, 15)-(01, 27): NAME(NAME) 'input_string'
[06](01, 27)-(01, 28): LSQB(OP) '['
[06](01, 28)-(01, 33): NAME(NAME) 'index'
[06](01, 34)-(01, 35): PLUS(OP) '+'
[06](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[06](01, 37)-(01, 38): RSQB(OP) ']'
[06](01, 39)-(01, 41): EQEQUAL(OP) '=='
[06](01, 42)-(01, 45): STRING(STRING) '"X"'
[06](01, 45)-(01, 46): COLON(OP) ':'
[06](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 16): INDENT(INDENT) '                '
[07](01, 16)-(01, 26): NAME(NAME) 'line_count'
[07](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[07](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[07](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 12): NAME(NAME) 'elif'
[08](01, 13)-(01, 18): NAME(NAME) 'index'
[08](01, 19)-(01, 21): EQEQUAL(OP) '=='
[08](01, 22)-(01, 25): NAME(NAME) 'len'
[08](01, 25)-(01, 26): LPAR(OP) '('
[08](01, 26)-(01, 38): NAME(NAME) 'input_string'
[08](01, 38)-(01, 39): RPAR(OP) ')'
[08](01, 40)-(01, 41): MINUS(OP) '-'
[08](01, 42)-(01, 43): NUMBER(NUMBER) '1'
[08](01, 44)-(01, 47): NAME(NAME) 'and'
[08](01, 48)-(01, 51): NAME(NAME) 'len'
[08](01, 51)-(01, 52): LPAR(OP) '('
[08](01, 52)-(01, 64): NAME(NAME) 'input_string'
[08](01, 64)-(01, 65): RPAR(OP) ')'
[08](01, 66)-(01, 67): GREATER(OP) '>'
[08](01, 68)-(01, 69): NUMBER(NUMBER) '1'
[08](01, 69)-(01, 70): COLON(OP) ':'
[08](01, 70)-(01, 71): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 12): INDENT(INDENT) '            '
[09](01, 12)-(01, 14): NAME(NAME) 'if'
[09](01, 15)-(01, 27): NAME(NAME) 'input_string'
[09](01, 27)-(01, 28): LSQB(OP) '['
[09](01, 28)-(01, 33): NAME(NAME) 'index'
[09](01, 34)-(01, 35): MINUS(OP) '-'
[09](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[09](01, 37)-(01, 38): RSQB(OP) ']'
[09](01, 39)-(01, 41): EQEQUAL(OP) '=='
[09](01, 42)-(01, 45): STRING(STRING) '"X"'
[09](01, 45)-(01, 46): COLON(OP) ':'
[09](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 16): INDENT(INDENT) '                '
[10](01, 16)-(01, 26): NAME(NAME) 'line_count'
[10](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[10](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[10](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 08): INDENT(INDENT) '        '
[11](01, 08)-(01, 12): NAME(NAME) 'elif'
[11](01, 13)-(01, 16): NAME(NAME) 'len'
[11](01, 16)-(01, 17): LPAR(OP) '('
[11](01, 17)-(01, 29): NAME(NAME) 'input_string'
[11](01, 29)-(01, 30): RPAR(OP) ')'
[11](01, 31)-(01, 32): GREATER(OP) '>'
[11](01, 33)-(01, 34): NUMBER(NUMBER) '2'
[11](01, 34)-(01, 35): COLON(OP) ':'
[11](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 14): NAME(NAME) 'if'
[12](01, 15)-(01, 27): NAME(NAME) 'input_string'
[12](01, 27)-(01, 28): LSQB(OP) '['
[12](01, 28)-(01, 33): NAME(NAME) 'index'
[12](01, 34)-(01, 35): MINUS(OP) '-'
[12](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[12](01, 37)-(01, 38): RSQB(OP) ']'
[12](01, 39)-(01, 41): EQEQUAL(OP) '=='
[12](01, 42)-(01, 45): STRING(STRING) '"X"'
[12](01, 45)-(01, 46): COLON(OP) ':'
[12](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 16): INDENT(INDENT) '                '
[13](01, 16)-(01, 26): NAME(NAME) 'line_count'
[13](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[13](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[13](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 12): INDENT(INDENT) '            '
[14](01, 12)-(01, 14): NAME(NAME) 'if'
[14](01, 15)-(01, 27): NAME(NAME) 'input_string'
[14](01, 27)-(01, 28): LSQB(OP) '['
[14](01, 28)-(01, 33): NAME(NAME) 'index'
[14](01, 34)-(01, 35): PLUS(OP) '+'
[14](01, 36)-(01, 37): NUMBER(NUMBER) '1'
[14](01, 37)-(01, 38): RSQB(OP) ']'
[14](01, 39)-(01, 41): EQEQUAL(OP) '=='
[14](01, 42)-(01, 45): STRING(STRING) '"X"'
[14](01, 45)-(01, 46): COLON(OP) ':'
[14](01, 46)-(01, 47): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): DEDENT(DEDENT)
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 16): INDENT(INDENT) '                '
[15](01, 16)-(01, 26): NAME(NAME) 'line_count'
[15](01, 27)-(01, 29): PLUSEQUAL(OP) '+='
[15](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[15](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): DEDENT(DEDENT)
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 08): INDENT(INDENT) '        '
[17](01, 08)-(01, 19): NAME(NAME) 'encoded_str'
[17](01, 20)-(01, 22): PLUSEQUAL(OP) '+='
[17](01, 23)-(01, 26): NAME(NAME) 'str'
[17](01, 26)-(01, 27): LPAR(OP) '('
[17](01, 27)-(01, 37): NAME(NAME) 'line_count'
[17](01, 37)-(01, 38): RPAR(OP) ')'
[17](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 01): NL(NL) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 04): INDENT(INDENT) '    '
[19](01, 04)-(01, 10): NAME(NAME) 'return'
[19](01, 11)-(01, 22): NAME(NAME) 'encoded_str'
[19](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 01): NL(NL) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 03): NAME(NAME) 'def'
[21](01, 04)-(01, 10): NAME(NAME) 'decode'
[21](01, 10)-(01, 11): LPAR(OP) '('
[21](01, 11)-(01, 12): RPAR(OP) ')'
[21](01, 12)-(01, 13): COLON(OP) ':'
[21](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 04): INDENT(INDENT) '    '
[22](01, 04)-(01, 08): NAME(NAME) 'pass'
[22](01, 08)-(01, 09): NEWLINE(NEWLINE)
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

