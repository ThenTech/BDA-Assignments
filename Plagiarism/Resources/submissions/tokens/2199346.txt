[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 10): NAME(NAME) 'encode'
[00](01, 10)-(01, 11): LPAR(OP) '('
[00](01, 11)-(01, 12): NAME(NAME) 's'
[00](01, 12)-(01, 13): COMMA(OP) ','
[00](01, 14)-(01, 15): NAME(NAME) 'n'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): COLON(OP) ':'
[00](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 07): NAME(NAME) 'new'
[01](01, 08)-(01, 09): EQUAL(OP) '='
[01](01, 10)-(01, 12): STRING(STRING) '""'
[01](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 12): NAME(NAME) 'alphabet'
[02](01, 13)-(01, 14): EQUAL(OP) '='
[02](01, 14)-(01, 42): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[02](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 04): INDENT(INDENT) '    '
[03](01, 04)-(01, 07): NAME(NAME) 'for'
[03](01, 08)-(01, 09): NAME(NAME) 'i'
[03](01, 10)-(01, 12): NAME(NAME) 'in'
[03](01, 13)-(01, 18): NAME(NAME) 'range'
[03](01, 18)-(01, 19): LPAR(OP) '('
[03](01, 19)-(01, 22): NAME(NAME) 'len'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 24): NAME(NAME) 's'
[03](01, 24)-(01, 25): RPAR(OP) ')'
[03](01, 25)-(01, 26): RPAR(OP) ')'
[03](01, 26)-(01, 27): COLON(OP) ':'
[03](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 08): INDENT(INDENT) '        '
[04](01, 08)-(01, 10): NAME(NAME) 'if'
[04](01, 11)-(01, 12): NAME(NAME) 's'
[04](01, 12)-(01, 13): LSQB(OP) '['
[04](01, 13)-(01, 14): NAME(NAME) 'i'
[04](01, 14)-(01, 15): RSQB(OP) ']'
[04](01, 16)-(01, 19): NAME(NAME) 'not'
[04](01, 20)-(01, 22): NAME(NAME) 'in'
[04](01, 23)-(01, 31): NAME(NAME) 'alphabet'
[04](01, 31)-(01, 32): COLON(OP) ':'
[04](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 12): INDENT(INDENT) '            '
[05](01, 12)-(01, 15): NAME(NAME) 'new'
[05](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[05](01, 19)-(01, 20): NAME(NAME) 's'
[05](01, 20)-(01, 21): LSQB(OP) '['
[05](01, 21)-(01, 22): NAME(NAME) 'i'
[05](01, 22)-(01, 23): RSQB(OP) ']'
[05](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 08): INDENT(INDENT) '        '
[06](01, 08)-(01, 12): NAME(NAME) 'else'
[06](01, 12)-(01, 13): COLON(OP) ':'
[06](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 12): INDENT(INDENT) '            '
[07](01, 12)-(01, 21): NAME(NAME) 'character'
[07](01, 21)-(01, 22): EQUAL(OP) '='
[07](01, 23)-(01, 26): NAME(NAME) 'chr'
[07](01, 26)-(01, 27): LPAR(OP) '('
[07](01, 27)-(01, 30): NAME(NAME) 'ord'
[07](01, 30)-(01, 31): LPAR(OP) '('
[07](01, 31)-(01, 32): NAME(NAME) 's'
[07](01, 32)-(01, 33): LSQB(OP) '['
[07](01, 33)-(01, 34): NAME(NAME) 'i'
[07](01, 34)-(01, 35): RSQB(OP) ']'
[07](01, 35)-(01, 36): RPAR(OP) ')'
[07](01, 36)-(01, 37): PLUS(OP) '+'
[07](01, 37)-(01, 38): NAME(NAME) 'n'
[07](01, 38)-(01, 39): RPAR(OP) ')'
[07](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 12): INDENT(INDENT) '            '
[08](01, 12)-(01, 17): NAME(NAME) 'while'
[08](01, 18)-(01, 21): NAME(NAME) 'ord'
[08](01, 21)-(01, 22): LPAR(OP) '('
[08](01, 22)-(01, 31): NAME(NAME) 'character'
[08](01, 31)-(01, 32): RPAR(OP) ')'
[08](01, 33)-(01, 34): GREATER(OP) '>'
[08](01, 35)-(01, 38): NUMBER(NUMBER) '122'
[08](01, 38)-(01, 39): COLON(OP) ':'
[08](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 16): INDENT(INDENT) '                '
[09](01, 16)-(01, 25): NAME(NAME) 'character'
[09](01, 26)-(01, 27): EQUAL(OP) '='
[09](01, 28)-(01, 31): NAME(NAME) 'chr'
[09](01, 31)-(01, 32): LPAR(OP) '('
[09](01, 32)-(01, 34): NUMBER(NUMBER) '96'
[09](01, 35)-(01, 36): PLUS(OP) '+'
[09](01, 36)-(01, 37): LPAR(OP) '('
[09](01, 37)-(01, 40): NAME(NAME) 'ord'
[09](01, 40)-(01, 41): LPAR(OP) '('
[09](01, 41)-(01, 50): NAME(NAME) 'character'
[09](01, 50)-(01, 51): RPAR(OP) ')'
[09](01, 51)-(01, 52): MINUS(OP) '-'
[09](01, 52)-(01, 55): NUMBER(NUMBER) '122'
[09](01, 55)-(01, 56): RPAR(OP) ')'
[09](01, 56)-(01, 57): RPAR(OP) ')'
[09](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 12): INDENT(INDENT) '            '
[10](01, 12)-(01, 17): NAME(NAME) 'while'
[10](01, 18)-(01, 21): NAME(NAME) 'ord'
[10](01, 21)-(01, 22): LPAR(OP) '('
[10](01, 22)-(01, 31): NAME(NAME) 'character'
[10](01, 31)-(01, 32): RPAR(OP) ')'
[10](01, 33)-(01, 34): LESS(OP) '<'
[10](01, 35)-(01, 37): NUMBER(NUMBER) '97'
[10](01, 37)-(01, 38): COLON(OP) ':'
[10](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 16): INDENT(INDENT) '                '
[11](01, 16)-(01, 25): NAME(NAME) 'character'
[11](01, 26)-(01, 27): EQUAL(OP) '='
[11](01, 28)-(01, 31): NAME(NAME) 'chr'
[11](01, 31)-(01, 32): LPAR(OP) '('
[11](01, 32)-(01, 35): NUMBER(NUMBER) '122'
[11](01, 35)-(01, 36): MINUS(OP) '-'
[11](01, 36)-(01, 37): LPAR(OP) '('
[11](01, 37)-(01, 39): NUMBER(NUMBER) '96'
[11](01, 39)-(01, 40): MINUS(OP) '-'
[11](01, 40)-(01, 43): NAME(NAME) 'ord'
[11](01, 43)-(01, 44): LPAR(OP) '('
[11](01, 44)-(01, 53): NAME(NAME) 'character'
[11](01, 53)-(01, 54): RPAR(OP) ')'
[11](01, 54)-(01, 55): RPAR(OP) ')'
[11](01, 55)-(01, 56): RPAR(OP) ')'
[11](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 12): INDENT(INDENT) '            '
[12](01, 12)-(01, 15): NAME(NAME) 'new'
[12](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[12](01, 19)-(01, 28): NAME(NAME) 'character'
[12](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 04): INDENT(INDENT) '    '
[13](01, 04)-(01, 10): NAME(NAME) 'return'
[13](01, 11)-(01, 14): NAME(NAME) 'new'
[13](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[13](02, 00)-(02, 00): DEDENT(DEDENT)
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 05): NAME(NAME) 'print'
[14](01, 05)-(01, 06): LPAR(OP) '('
[14](01, 06)-(01, 12): NAME(NAME) 'encode'
[14](01, 12)-(01, 13): LPAR(OP) '('
[14](01, 13)-(01, 41): STRING(STRING) '"be positive, not negative!"'
[14](01, 41)-(01, 42): COMMA(OP) ','
[14](01, 43)-(01, 45): NUMBER(NUMBER) '26'
[14](01, 45)-(01, 46): RPAR(OP) ')'
[14](01, 46)-(01, 47): RPAR(OP) ')'
[14](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 03): NAME(NAME) 'def'
[15](01, 04)-(01, 10): NAME(NAME) 'decode'
[15](01, 10)-(01, 11): LPAR(OP) '('
[15](01, 11)-(01, 12): NAME(NAME) 's'
[15](01, 12)-(01, 13): COMMA(OP) ','
[15](01, 14)-(01, 15): NAME(NAME) 'n'
[15](01, 15)-(01, 16): RPAR(OP) ')'
[15](01, 16)-(01, 17): COLON(OP) ':'
[15](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 04): INDENT(INDENT) '    '
[16](01, 04)-(01, 07): NAME(NAME) 'new'
[16](01, 08)-(01, 09): EQUAL(OP) '='
[16](01, 10)-(01, 12): STRING(STRING) '""'
[16](01, 12)-(01, 13): NEWLINE(NEWLINE) '\n'
[16](02, 00)-(02, 00): DEDENT(DEDENT)
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 04): INDENT(INDENT) '    '
[17](01, 04)-(01, 12): NAME(NAME) 'alphabet'
[17](01, 13)-(01, 14): EQUAL(OP) '='
[17](01, 14)-(01, 42): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[17](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): DEDENT(DEDENT)
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 04): INDENT(INDENT) '    '
[18](01, 04)-(01, 07): NAME(NAME) 'for'
[18](01, 08)-(01, 09): NAME(NAME) 'i'
[18](01, 10)-(01, 12): NAME(NAME) 'in'
[18](01, 13)-(01, 18): NAME(NAME) 'range'
[18](01, 18)-(01, 19): LPAR(OP) '('
[18](01, 19)-(01, 22): NAME(NAME) 'len'
[18](01, 22)-(01, 23): LPAR(OP) '('
[18](01, 23)-(01, 24): NAME(NAME) 's'
[18](01, 24)-(01, 25): RPAR(OP) ')'
[18](01, 25)-(01, 26): RPAR(OP) ')'
[18](01, 26)-(01, 27): COLON(OP) ':'
[18](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): DEDENT(DEDENT)
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 08): INDENT(INDENT) '        '
[19](01, 08)-(01, 10): NAME(NAME) 'if'
[19](01, 11)-(01, 12): NAME(NAME) 's'
[19](01, 12)-(01, 13): LSQB(OP) '['
[19](01, 13)-(01, 14): NAME(NAME) 'i'
[19](01, 14)-(01, 15): RSQB(OP) ']'
[19](01, 16)-(01, 19): NAME(NAME) 'not'
[19](01, 20)-(01, 22): NAME(NAME) 'in'
[19](01, 23)-(01, 31): NAME(NAME) 'alphabet'
[19](01, 31)-(01, 32): COLON(OP) ':'
[19](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[19](02, 00)-(02, 00): DEDENT(DEDENT)
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 12): INDENT(INDENT) '            '
[20](01, 12)-(01, 15): NAME(NAME) 'new'
[20](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[20](01, 19)-(01, 20): NAME(NAME) 's'
[20](01, 20)-(01, 21): LSQB(OP) '['
[20](01, 21)-(01, 22): NAME(NAME) 'i'
[20](01, 22)-(01, 23): RSQB(OP) ']'
[20](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): DEDENT(DEDENT)
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): INDENT(INDENT) '        '
[21](01, 08)-(01, 12): NAME(NAME) 'else'
[21](01, 12)-(01, 13): COLON(OP) ':'
[21](01, 13)-(01, 14): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): DEDENT(DEDENT)
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 12): INDENT(INDENT) '            '
[22](01, 12)-(01, 21): NAME(NAME) 'character'
[22](01, 22)-(01, 23): EQUAL(OP) '='
[22](01, 24)-(01, 27): NAME(NAME) 'chr'
[22](01, 27)-(01, 28): LPAR(OP) '('
[22](01, 28)-(01, 31): NAME(NAME) 'ord'
[22](01, 31)-(01, 32): LPAR(OP) '('
[22](01, 32)-(01, 33): NAME(NAME) 's'
[22](01, 33)-(01, 34): LSQB(OP) '['
[22](01, 34)-(01, 35): NAME(NAME) 'i'
[22](01, 35)-(01, 36): RSQB(OP) ']'
[22](01, 37)-(01, 38): RPAR(OP) ')'
[22](01, 38)-(01, 39): MINUS(OP) '-'
[22](01, 39)-(01, 40): NAME(NAME) 'n'
[22](01, 40)-(01, 41): RPAR(OP) ')'
[22](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[22](02, 00)-(02, 00): DEDENT(DEDENT)
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 12): INDENT(INDENT) '            '
[23](01, 12)-(01, 17): NAME(NAME) 'while'
[23](01, 18)-(01, 21): NAME(NAME) 'ord'
[23](01, 21)-(01, 22): LPAR(OP) '('
[23](01, 22)-(01, 31): NAME(NAME) 'character'
[23](01, 31)-(01, 32): RPAR(OP) ')'
[23](01, 33)-(01, 34): LESS(OP) '<'
[23](01, 35)-(01, 37): NUMBER(NUMBER) '97'
[23](01, 37)-(01, 38): COLON(OP) ':'
[23](01, 38)-(01, 39): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): DEDENT(DEDENT)
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 16): INDENT(INDENT) '                '
[24](01, 16)-(01, 25): NAME(NAME) 'character'
[24](01, 26)-(01, 27): EQUAL(OP) '='
[24](01, 28)-(01, 31): NAME(NAME) 'chr'
[24](01, 31)-(01, 32): LPAR(OP) '('
[24](01, 32)-(01, 35): NUMBER(NUMBER) '122'
[24](01, 35)-(01, 36): MINUS(OP) '-'
[24](01, 37)-(01, 38): LPAR(OP) '('
[24](01, 38)-(01, 40): NUMBER(NUMBER) '96'
[24](01, 41)-(01, 42): MINUS(OP) '-'
[24](01, 43)-(01, 46): NAME(NAME) 'ord'
[24](01, 46)-(01, 47): LPAR(OP) '('
[24](01, 47)-(01, 56): NAME(NAME) 'character'
[24](01, 56)-(01, 57): RPAR(OP) ')'
[24](01, 57)-(01, 58): RPAR(OP) ')'
[24](01, 58)-(01, 59): RPAR(OP) ')'
[24](01, 59)-(01, 60): NEWLINE(NEWLINE) '\n'
[24](02, 00)-(02, 00): DEDENT(DEDENT)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[25](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[25](01, 00)-(01, 12): INDENT(INDENT) '            '
[25](01, 12)-(01, 17): NAME(NAME) 'while'
[25](01, 18)-(01, 21): NAME(NAME) 'ord'
[25](01, 21)-(01, 22): LPAR(OP) '('
[25](01, 22)-(01, 31): NAME(NAME) 'character'
[25](01, 31)-(01, 32): RPAR(OP) ')'
[25](01, 33)-(01, 34): GREATER(OP) '>'
[25](01, 35)-(01, 38): NUMBER(NUMBER) '122'
[25](01, 38)-(01, 39): COLON(OP) ':'
[25](01, 39)-(01, 40): NEWLINE(NEWLINE) '\n'
[25](02, 00)-(02, 00): DEDENT(DEDENT)
[25](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[26](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[26](01, 00)-(01, 16): INDENT(INDENT) '                '
[26](01, 16)-(01, 25): NAME(NAME) 'character'
[26](01, 26)-(01, 27): EQUAL(OP) '='
[26](01, 28)-(01, 31): NAME(NAME) 'chr'
[26](01, 31)-(01, 32): LPAR(OP) '('
[26](01, 32)-(01, 34): NUMBER(NUMBER) '96'
[26](01, 35)-(01, 36): PLUS(OP) '+'
[26](01, 36)-(01, 37): LPAR(OP) '('
[26](01, 37)-(01, 40): NAME(NAME) 'ord'
[26](01, 40)-(01, 41): LPAR(OP) '('
[26](01, 41)-(01, 50): NAME(NAME) 'character'
[26](01, 50)-(01, 51): RPAR(OP) ')'
[26](01, 51)-(01, 52): MINUS(OP) '-'
[26](01, 52)-(01, 55): NUMBER(NUMBER) '122'
[26](01, 55)-(01, 56): RPAR(OP) ')'
[26](01, 56)-(01, 57): RPAR(OP) ')'
[26](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[26](02, 00)-(02, 00): DEDENT(DEDENT)
[26](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[27](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[27](01, 00)-(01, 12): INDENT(INDENT) '            '
[27](01, 12)-(01, 15): NAME(NAME) 'new'
[27](01, 16)-(01, 18): PLUSEQUAL(OP) '+='
[27](01, 19)-(01, 28): NAME(NAME) 'character'
[27](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[27](02, 00)-(02, 00): DEDENT(DEDENT)
[27](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[28](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[28](01, 00)-(01, 04): INDENT(INDENT) '    '
[28](01, 04)-(01, 10): NAME(NAME) 'return'
[28](01, 11)-(01, 14): NAME(NAME) 'new'
[28](01, 14)-(01, 15): NEWLINE(NEWLINE) '\n'
[28](02, 00)-(02, 00): DEDENT(DEDENT)
[28](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[29](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[29](01, 00)-(01, 05): NAME(NAME) 'print'
[29](01, 05)-(01, 06): LPAR(OP) '('
[29](01, 06)-(01, 12): NAME(NAME) 'decode'
[29](01, 12)-(01, 13): LPAR(OP) '('
[29](01, 13)-(01, 31): STRING(STRING) "'d vhfuhw phvvdjh'"
[29](01, 31)-(01, 32): COMMA(OP) ','
[29](01, 33)-(01, 34): NUMBER(NUMBER) '3'
[29](01, 34)-(01, 35): RPAR(OP) ')'
[29](01, 35)-(01, 36): RPAR(OP) ')'
[29](01, 36)-(01, 37): NEWLINE(NEWLINE)
[29](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

