[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'n'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 09): NAME(NAME) 'input'
[00](01, 09)-(01, 10): LPAR(OP) '('
[00](01, 10)-(01, 15): STRING(STRING) '"oke"'
[00](01, 15)-(01, 16): RPAR(OP) ')'
[00](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 12): NAME(NAME) 'mogelijkheid'
[01](01, 13)-(01, 14): EQUAL(OP) '='
[01](01, 15)-(01, 17): STRING(STRING) '""'
[01](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'def'
[03](01, 04)-(01, 24): NAME(NAME) 'mogelijkecombinaties'
[03](01, 24)-(01, 25): LPAR(OP) '('
[03](01, 25)-(01, 26): NAME(NAME) 'i'
[03](01, 26)-(01, 27): COMMA(OP) ','
[03](01, 27)-(01, 28): NAME(NAME) 'j'
[03](01, 28)-(01, 29): RPAR(OP) ')'
[03](01, 29)-(01, 30): COLON(OP) ':'
[03](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 16): NAME(NAME) 'eerste_getal'
[04](01, 17)-(01, 18): EQUAL(OP) '='
[04](01, 19)-(01, 20): NAME(NAME) 'i'
[04](01, 20)-(01, 21): STAR(OP) '*'
[04](01, 21)-(01, 22): NUMBER(NUMBER) '2'
[04](01, 22)-(01, 23): MINUS(OP) '-'
[04](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[04](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 04): INDENT(INDENT) '    '
[05](01, 04)-(01, 16): NAME(NAME) 'tweede_getal'
[05](01, 17)-(01, 18): EQUAL(OP) '='
[05](01, 19)-(01, 20): NAME(NAME) 'j'
[05](01, 20)-(01, 21): STAR(OP) '*'
[05](01, 21)-(01, 22): NUMBER(NUMBER) '2'
[05](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 04)-(01, 05): NL(NL) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 04): INDENT(INDENT) '    '
[07](01, 04)-(01, 06): NAME(NAME) 'if'
[07](01, 07)-(01, 19): NAME(NAME) 'eerste_getal'
[07](01, 20)-(01, 21): LESS(OP) '<'
[07](01, 22)-(01, 25): NAME(NAME) 'len'
[07](01, 25)-(01, 26): LPAR(OP) '('
[07](01, 26)-(01, 27): NAME(NAME) 'n'
[07](01, 27)-(01, 28): RPAR(OP) ')'
[07](01, 29)-(01, 31): NAME(NAME) 'or'
[07](01, 32)-(01, 44): NAME(NAME) 'tweede_getal'
[07](01, 45)-(01, 46): GREATER(OP) '>'
[07](01, 47)-(01, 58): NAME(NAME) 'eerstegetal'
[07](01, 58)-(01, 59): COLON(OP) ':'
[07](01, 59)-(01, 60): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): DEDENT(DEDENT)
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 08): INDENT(INDENT) '        '
[08](01, 08)-(01, 13): NAME(NAME) 'print'
[08](01, 14)-(01, 15): LPAR(OP) '('
[08](01, 15)-(01, 16): NAME(NAME) 'n'
[08](01, 16)-(01, 17): LSQB(OP) '['
[08](01, 17)-(01, 29): NAME(NAME) 'eerste_getal'
[08](01, 29)-(01, 30): COLON(OP) ':'
[08](01, 30)-(01, 42): NAME(NAME) 'tweede_getal'
[08](01, 42)-(01, 43): RSQB(OP) ']'
[08](01, 43)-(01, 44): RPAR(OP) ')'
[08](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 04): INDENT(INDENT) '    '
[09](01, 04)-(01, 08): NAME(NAME) 'else'
[09](01, 08)-(01, 09): COLON(OP) ':'
[09](01, 09)-(01, 10): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 08): INDENT(INDENT) '        '
[10](01, 08)-(01, 14): NAME(NAME) 'return'
[10](01, 15)-(01, 17): STRING(STRING) '""'
[10](01, 17)-(01, 18): NEWLINE(NEWLINE) '\n'
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 04): INDENT(INDENT) '    '
[11](01, 04)-(01, 24): NAME(NAME) 'mogelijkecombinaties'
[11](01, 24)-(01, 25): LPAR(OP) '('
[11](01, 25)-(01, 26): NAME(NAME) 'i'
[11](01, 26)-(01, 27): PLUS(OP) '+'
[11](01, 27)-(01, 28): NUMBER(NUMBER) '1'
[11](01, 28)-(01, 29): COMMA(OP) ','
[11](01, 29)-(01, 30): NAME(NAME) 'j'
[11](01, 30)-(01, 31): RPAR(OP) ')'
[11](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): DEDENT(DEDENT)
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 04): INDENT(INDENT) '    '
[12](01, 04)-(01, 24): NAME(NAME) 'mogelijkecombinaties'
[12](01, 24)-(01, 25): LPAR(OP) '('
[12](01, 25)-(01, 26): NAME(NAME) 'i'
[12](01, 26)-(01, 27): COMMA(OP) ','
[12](01, 27)-(01, 28): NAME(NAME) 'j'
[12](01, 28)-(01, 29): MINUS(OP) '-'
[12](01, 29)-(01, 30): NUMBER(NUMBER) '1'
[12](01, 30)-(01, 31): RPAR(OP) ')'
[12](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): DEDENT(DEDENT)
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 04)-(01, 05): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 20): NAME(NAME) 'mogelijkecombinaties'
[14](01, 20)-(01, 21): LPAR(OP) '('
[14](01, 21)-(01, 22): NUMBER(NUMBER) '0'
[14](01, 22)-(01, 23): COMMA(OP) ','
[14](01, 23)-(01, 26): NAME(NAME) 'len'
[14](01, 26)-(01, 27): LPAR(OP) '('
[14](01, 27)-(01, 28): NAME(NAME) 'n'
[14](01, 28)-(01, 29): RPAR(OP) ')'
[14](01, 29)-(01, 30): MINUS(OP) '-'
[14](01, 30)-(01, 31): NUMBER(NUMBER) '1'
[14](01, 31)-(01, 32): RPAR(OP) ')'
[14](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 01): NL(NL) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

