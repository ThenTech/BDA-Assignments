[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'x'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 32): STRING(STRING) '"abcdefghijklmnopqrstuvwxyz"'
[00](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NAME(NAME) 'y'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 04)-(01, 07): NAME(NAME) 'str'
[02](01, 07)-(01, 08): LPAR(OP) '('
[02](01, 08)-(01, 13): NAME(NAME) 'input'
[02](01, 13)-(01, 14): LPAR(OP) '('
[02](01, 14)-(01, 33): STRING(STRING) '"Give a sentence: "'
[02](01, 33)-(01, 34): RPAR(OP) ')'
[02](01, 34)-(01, 35): RPAR(OP) ')'
[02](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 01): NL(NL) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'for'
[04](01, 04)-(01, 05): NAME(NAME) 'i'
[04](01, 06)-(01, 08): NAME(NAME) 'in'
[04](01, 09)-(01, 14): NAME(NAME) 'range'
[04](01, 14)-(01, 15): LPAR(OP) '('
[04](01, 15)-(01, 16): NUMBER(NUMBER) '0'
[04](01, 16)-(01, 17): COMMA(OP) ','
[04](01, 17)-(01, 19): NUMBER(NUMBER) '26'
[04](01, 19)-(01, 20): RPAR(OP) ')'
[04](01, 20)-(01, 21): COLON(OP) ':'
[04](01, 21)-(01, 22): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 01): NL(NL) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'print'
[06](01, 09)-(01, 10): LPAR(OP) '('
[06](01, 10)-(01, 11): NAME(NAME) 'x'
[06](01, 11)-(01, 12): LSQB(OP) '['
[06](01, 12)-(01, 13): NUMBER(NUMBER) '0'
[06](01, 14)-(01, 15): PLUS(OP) '+'
[06](01, 16)-(01, 17): NAME(NAME) 'i'
[06](01, 17)-(01, 18): RSQB(OP) ']'
[06](01, 18)-(01, 19): COMMA(OP) ','
[06](01, 20)-(01, 24): STRING(STRING) '": "'
[06](01, 24)-(01, 25): COMMA(OP) ','
[06](01, 26)-(01, 27): NAME(NAME) 'y'
[06](01, 27)-(01, 28): DOT(OP) '.'
[06](01, 28)-(01, 33): NAME(NAME) 'count'
[06](01, 33)-(01, 34): LPAR(OP) '('
[06](01, 34)-(01, 37): NAME(NAME) 'str'
[06](01, 37)-(01, 38): LPAR(OP) '('
[06](01, 38)-(01, 39): NAME(NAME) 'x'
[06](01, 39)-(01, 40): LSQB(OP) '['
[06](01, 40)-(01, 41): NUMBER(NUMBER) '0'
[06](01, 42)-(01, 43): PLUS(OP) '+'
[06](01, 44)-(01, 45): NAME(NAME) 'i'
[06](01, 45)-(01, 46): RSQB(OP) ']'
[06](01, 46)-(01, 47): RPAR(OP) ')'
[06](01, 47)-(01, 48): RPAR(OP) ')'
[06](01, 49)-(01, 50): COMMA(OP) ','
[06](01, 50)-(01, 53): NAME(NAME) 'sep'
[06](01, 53)-(01, 54): EQUAL(OP) '='
[06](01, 54)-(01, 56): STRING(STRING) "''"
[06](01, 56)-(01, 57): RPAR(OP) ')'
[06](01, 57)-(01, 58): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

