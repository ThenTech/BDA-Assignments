[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 03): NAME(NAME) 'def'
[00](01, 04)-(01, 11): NAME(NAME) 'replace'
[00](01, 11)-(01, 12): LPAR(OP) '('
[00](01, 12)-(01, 19): NAME(NAME) 'pattern'
[00](01, 19)-(01, 20): COMMA(OP) ','
[00](01, 21)-(01, 32): NAME(NAME) 'replacement'
[00](01, 32)-(01, 33): COMMA(OP) ','
[00](01, 34)-(01, 40): NAME(NAME) 'corpus'
[00](01, 40)-(01, 41): RPAR(OP) ')'
[00](01, 41)-(01, 42): COLON(OP) ':'
[00](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 04): INDENT(INDENT) '    '
[01](01, 04)-(01, 18): NAME(NAME) 'list_locations'
[01](01, 19)-(01, 20): EQUAL(OP) '='
[01](01, 21)-(01, 22): LSQB(OP) '['
[01](01, 22)-(01, 23): RSQB(OP) ']'
[01](01, 23)-(01, 24): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): DEDENT(DEDENT)
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 04): INDENT(INDENT) '    '
[02](01, 04)-(01, 06): NAME(NAME) 'if'
[02](01, 07)-(01, 10): NAME(NAME) 'len'
[02](01, 10)-(01, 11): LPAR(OP) '('
[02](01, 11)-(01, 18): NAME(NAME) 'pattern'
[02](01, 18)-(01, 19): RPAR(OP) ')'
[02](01, 20)-(01, 22): LESSEQUAL(OP) '<='
[02](01, 23)-(01, 26): NAME(NAME) 'len'
[02](01, 26)-(01, 27): LPAR(OP) '('
[02](01, 27)-(01, 33): NAME(NAME) 'corpus'
[02](01, 33)-(01, 34): RPAR(OP) ')'
[02](01, 34)-(01, 35): COLON(OP) ':'
[02](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): DEDENT(DEDENT)
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 08): INDENT(INDENT) '        '
[03](01, 08)-(01, 11): NAME(NAME) 'for'
[03](01, 12)-(01, 13): NAME(NAME) 'i'
[03](01, 14)-(01, 16): NAME(NAME) 'in'
[03](01, 17)-(01, 22): NAME(NAME) 'range'
[03](01, 22)-(01, 23): LPAR(OP) '('
[03](01, 23)-(01, 26): NAME(NAME) 'len'
[03](01, 26)-(01, 27): LPAR(OP) '('
[03](01, 27)-(01, 33): NAME(NAME) 'corpus'
[03](01, 33)-(01, 34): RPAR(OP) ')'
[03](01, 34)-(01, 35): RPAR(OP) ')'
[03](01, 35)-(01, 36): COLON(OP) ':'
[03](01, 36)-(01, 37): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): DEDENT(DEDENT)
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 12): INDENT(INDENT) '            '
[04](01, 12)-(01, 14): NAME(NAME) 'if'
[04](01, 15)-(01, 16): NAME(NAME) 'i'
[04](01, 17)-(01, 19): LESSEQUAL(OP) '<='
[04](01, 20)-(01, 23): NAME(NAME) 'len'
[04](01, 23)-(01, 24): LPAR(OP) '('
[04](01, 24)-(01, 30): NAME(NAME) 'corpus'
[04](01, 30)-(01, 31): RPAR(OP) ')'
[04](01, 32)-(01, 33): MINUS(OP) '-'
[04](01, 33)-(01, 34): NUMBER(NUMBER) '1'
[04](01, 35)-(01, 36): MINUS(OP) '-'
[04](01, 37)-(01, 40): NAME(NAME) 'len'
[04](01, 40)-(01, 41): LPAR(OP) '('
[04](01, 41)-(01, 48): NAME(NAME) 'pattern'
[04](01, 48)-(01, 49): RPAR(OP) ')'
[04](01, 49)-(01, 50): COLON(OP) ':'
[04](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 16): INDENT(INDENT) '                '
[05](01, 16)-(01, 18): NAME(NAME) 'if'
[05](01, 19)-(01, 26): NAME(NAME) 'pattern'
[05](01, 27)-(01, 29): EQEQUAL(OP) '=='
[05](01, 30)-(01, 36): NAME(NAME) 'corpus'
[05](01, 36)-(01, 37): LSQB(OP) '['
[05](01, 37)-(01, 38): NAME(NAME) 'i'
[05](01, 38)-(01, 39): COLON(OP) ':'
[05](01, 39)-(01, 40): NAME(NAME) 'i'
[05](01, 40)-(01, 41): PLUS(OP) '+'
[05](01, 41)-(01, 44): NAME(NAME) 'len'
[05](01, 44)-(01, 45): LPAR(OP) '('
[05](01, 45)-(01, 52): NAME(NAME) 'pattern'
[05](01, 52)-(01, 53): RPAR(OP) ')'
[05](01, 53)-(01, 54): RSQB(OP) ']'
[05](01, 54)-(01, 55): COLON(OP) ':'
[05](01, 55)-(01, 56): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 20): INDENT(INDENT) '                    '
[06](01, 20)-(01, 34): NAME(NAME) 'list_locations'
[06](01, 34)-(01, 35): DOT(OP) '.'
[06](01, 35)-(01, 41): NAME(NAME) 'append'
[06](01, 41)-(01, 42): LPAR(OP) '('
[06](01, 42)-(01, 43): NAME(NAME) 'i'
[06](01, 43)-(01, 44): RPAR(OP) ')'
[06](01, 44)-(01, 45): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 04): INDENT(INDENT) '    '
[08](01, 04)-(01, 07): NAME(NAME) 'for'
[08](01, 08)-(01, 09): NAME(NAME) 'i'
[08](01, 10)-(01, 12): NAME(NAME) 'in'
[08](01, 13)-(01, 18): NAME(NAME) 'range'
[08](01, 18)-(01, 19): LPAR(OP) '('
[08](01, 19)-(01, 22): NAME(NAME) 'len'
[08](01, 22)-(01, 23): LPAR(OP) '('
[08](01, 23)-(01, 37): NAME(NAME) 'list_locations'
[08](01, 37)-(01, 38): RPAR(OP) ')'
[08](01, 38)-(01, 39): MINUS(OP) '-'
[08](01, 39)-(01, 40): NUMBER(NUMBER) '1'
[08](01, 40)-(01, 41): COMMA(OP) ','
[08](01, 42)-(01, 43): MINUS(OP) '-'
[08](01, 43)-(01, 44): NUMBER(NUMBER) '1'
[08](01, 44)-(01, 45): COMMA(OP) ','
[08](01, 46)-(01, 47): MINUS(OP) '-'
[08](01, 47)-(01, 48): NUMBER(NUMBER) '1'
[08](01, 48)-(01, 49): RPAR(OP) ')'
[08](01, 49)-(01, 50): COLON(OP) ':'
[08](01, 50)-(01, 51): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): DEDENT(DEDENT)
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 08): INDENT(INDENT) '        '
[09](01, 08)-(01, 14): NAME(NAME) 'corpus'
[09](01, 15)-(01, 16): EQUAL(OP) '='
[09](01, 17)-(01, 23): NAME(NAME) 'corpus'
[09](01, 23)-(01, 24): LSQB(OP) '['
[09](01, 24)-(01, 25): COLON(OP) ':'
[09](01, 25)-(01, 39): NAME(NAME) 'list_locations'
[09](01, 39)-(01, 40): LSQB(OP) '['
[09](01, 40)-(01, 41): NAME(NAME) 'i'
[09](01, 41)-(01, 42): RSQB(OP) ']'
[09](01, 42)-(01, 43): RSQB(OP) ']'
[09](01, 44)-(01, 45): PLUS(OP) '+'
[09](01, 46)-(01, 57): NAME(NAME) 'replacement'
[09](01, 58)-(01, 59): PLUS(OP) '+'
[09](01, 60)-(01, 66): NAME(NAME) 'corpus'
[09](01, 66)-(01, 67): LSQB(OP) '['
[09](01, 67)-(01, 81): NAME(NAME) 'list_locations'
[09](01, 81)-(01, 82): LSQB(OP) '['
[09](01, 82)-(01, 83): NAME(NAME) 'i'
[09](01, 83)-(01, 84): RSQB(OP) ']'
[09](01, 84)-(01, 85): PLUS(OP) '+'
[09](01, 85)-(01, 88): NAME(NAME) 'len'
[09](01, 88)-(01, 89): LPAR(OP) '('
[09](01, 89)-(01, 96): NAME(NAME) 'pattern'
[09](01, 96)-(01, 97): RPAR(OP) ')'
[09](01, 97)-(01, 98): COLON(OP) ':'
[09](01, 98)-(01, 99): RSQB(OP) ']'
[09](01, 99)-(01, 100): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): DEDENT(DEDENT)
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 04): INDENT(INDENT) '    '
[10](01, 04)-(01, 09): NAME(NAME) 'print'
[10](01, 09)-(01, 10): LPAR(OP) '('
[10](01, 10)-(01, 16): NAME(NAME) 'corpus'
[10](01, 16)-(01, 17): RPAR(OP) ')'
[10](01, 17)-(01, 18): NEWLINE(NEWLINE)
[10](02, 00)-(02, 00): DEDENT(DEDENT)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

