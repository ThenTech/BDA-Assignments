[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 22): COMMENT(COMMENT) '# write your code here'
[00](01, 22)-(01, 23): NL(NL) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 02): NAME(NAME) 'N1'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 08)-(01, 11): NAME(NAME) 'int'
[01](01, 11)-(01, 12): LPAR(OP) '('
[01](01, 12)-(01, 17): NAME(NAME) 'input'
[01](01, 17)-(01, 18): LPAR(OP) '('
[01](01, 18)-(01, 39): STRING(STRING) '"hoeveelheid 1 cent:"'
[01](01, 39)-(01, 40): RPAR(OP) ')'
[01](01, 40)-(01, 41): RPAR(OP) ')'
[01](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 02): NAME(NAME) 'N2'
[02](01, 02)-(01, 03): EQUAL(OP) '='
[02](01, 08)-(01, 11): NAME(NAME) 'int'
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 17): NAME(NAME) 'input'
[02](01, 17)-(01, 18): LPAR(OP) '('
[02](01, 18)-(01, 39): STRING(STRING) '"hoeveelheid 2 cent:"'
[02](01, 39)-(01, 40): RPAR(OP) ')'
[02](01, 40)-(01, 41): RPAR(OP) ')'
[02](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 02): NAME(NAME) 'N5'
[03](01, 02)-(01, 03): EQUAL(OP) '='
[03](01, 08)-(01, 11): NAME(NAME) 'int'
[03](01, 11)-(01, 12): LPAR(OP) '('
[03](01, 12)-(01, 17): NAME(NAME) 'input'
[03](01, 17)-(01, 18): LPAR(OP) '('
[03](01, 18)-(01, 39): STRING(STRING) '"hoeveelheid 5 cent:"'
[03](01, 39)-(01, 40): RPAR(OP) ')'
[03](01, 40)-(01, 41): RPAR(OP) ')'
[03](01, 41)-(01, 42): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 03): NAME(NAME) 'N10'
[04](01, 03)-(01, 04): EQUAL(OP) '='
[04](01, 08)-(01, 11): NAME(NAME) 'int'
[04](01, 11)-(01, 12): LPAR(OP) '('
[04](01, 12)-(01, 17): NAME(NAME) 'input'
[04](01, 17)-(01, 18): LPAR(OP) '('
[04](01, 18)-(01, 40): STRING(STRING) '"hoeveelheid 10 cent:"'
[04](01, 40)-(01, 41): RPAR(OP) ')'
[04](01, 41)-(01, 42): RPAR(OP) ')'
[04](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'N20'
[05](01, 03)-(01, 04): EQUAL(OP) '='
[05](01, 08)-(01, 11): NAME(NAME) 'int'
[05](01, 11)-(01, 12): LPAR(OP) '('
[05](01, 12)-(01, 17): NAME(NAME) 'input'
[05](01, 17)-(01, 18): LPAR(OP) '('
[05](01, 18)-(01, 40): STRING(STRING) '"hoeveelheid 20 cent:"'
[05](01, 40)-(01, 41): RPAR(OP) ')'
[05](01, 41)-(01, 42): RPAR(OP) ')'
[05](01, 42)-(01, 43): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 06): NAME(NAME) 'totaal'
[06](01, 06)-(01, 07): EQUAL(OP) '='
[06](01, 08)-(01, 11): NAME(NAME) 'str'
[06](01, 11)-(01, 12): LPAR(OP) '('
[06](01, 12)-(01, 14): NAME(NAME) 'N1'
[06](01, 15)-(01, 16): PLUS(OP) '+'
[06](01, 17)-(01, 19): NAME(NAME) 'N2'
[06](01, 19)-(01, 20): STAR(OP) '*'
[06](01, 20)-(01, 21): NUMBER(NUMBER) '2'
[06](01, 22)-(01, 23): PLUS(OP) '+'
[06](01, 24)-(01, 26): NAME(NAME) 'N5'
[06](01, 26)-(01, 27): STAR(OP) '*'
[06](01, 27)-(01, 28): NUMBER(NUMBER) '5'
[06](01, 29)-(01, 30): PLUS(OP) '+'
[06](01, 31)-(01, 34): NAME(NAME) 'N10'
[06](01, 34)-(01, 35): STAR(OP) '*'
[06](01, 35)-(01, 37): NUMBER(NUMBER) '10'
[06](01, 38)-(01, 39): PLUS(OP) '+'
[06](01, 40)-(01, 43): NAME(NAME) 'N20'
[06](01, 43)-(01, 44): STAR(OP) '*'
[06](01, 44)-(01, 46): NUMBER(NUMBER) '20'
[06](01, 46)-(01, 47): RPAR(OP) ')'
[06](01, 47)-(01, 48): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 05): NAME(NAME) 'getal'
[07](01, 05)-(01, 06): EQUAL(OP) '='
[07](01, 07)-(01, 13): NAME(NAME) 'totaal'
[07](01, 13)-(01, 14): LSQB(OP) '['
[07](01, 14)-(01, 17): NAME(NAME) 'len'
[07](01, 17)-(01, 18): LPAR(OP) '('
[07](01, 18)-(01, 24): NAME(NAME) 'totaal'
[07](01, 24)-(01, 25): RPAR(OP) ')'
[07](01, 25)-(01, 26): MINUS(OP) '-'
[07](01, 26)-(01, 27): NUMBER(NUMBER) '1'
[07](01, 27)-(01, 28): RSQB(OP) ']'
[07](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 07): NAME(NAME) 'tiental'
[08](01, 07)-(01, 08): EQUAL(OP) '='
[08](01, 09)-(01, 15): NAME(NAME) 'totaal'
[08](01, 15)-(01, 16): LSQB(OP) '['
[08](01, 16)-(01, 19): NAME(NAME) 'len'
[08](01, 19)-(01, 20): LPAR(OP) '('
[08](01, 20)-(01, 26): NAME(NAME) 'totaal'
[08](01, 26)-(01, 27): RPAR(OP) ')'
[08](01, 27)-(01, 28): MINUS(OP) '-'
[08](01, 28)-(01, 29): NUMBER(NUMBER) '2'
[08](01, 29)-(01, 30): RSQB(OP) ']'
[08](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 05): NAME(NAME) 'euros'
[09](01, 05)-(01, 06): EQUAL(OP) '='
[09](01, 07)-(01, 13): NAME(NAME) 'totaal'
[09](01, 13)-(01, 14): LSQB(OP) '['
[09](01, 14)-(01, 15): NUMBER(NUMBER) '0'
[09](01, 15)-(01, 16): RSQB(OP) ']'
[09](01, 16)-(01, 17): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 05): NAME(NAME) 'print'
[10](01, 05)-(01, 06): LPAR(OP) '('
[10](01, 06)-(01, 17): STRING(STRING) '"You have "'
[10](01, 17)-(01, 18): COMMA(OP) ','
[10](01, 19)-(01, 24): NAME(NAME) 'euros'
[10](01, 24)-(01, 25): COMMA(OP) ','
[10](01, 26)-(01, 29): STRING(STRING) '"."'
[10](01, 29)-(01, 30): COMMA(OP) ','
[10](01, 31)-(01, 38): NAME(NAME) 'tiental'
[10](01, 38)-(01, 39): COMMA(OP) ','
[10](01, 40)-(01, 45): NAME(NAME) 'getal'
[10](01, 45)-(01, 46): COMMA(OP) ','
[10](01, 47)-(01, 55): STRING(STRING) '" euro!"'
[10](01, 55)-(01, 56): COMMA(OP) ','
[10](01, 57)-(01, 60): NAME(NAME) 'sep'
[10](01, 60)-(01, 61): EQUAL(OP) '='
[10](01, 61)-(01, 63): STRING(STRING) '""'
[10](01, 63)-(01, 64): RPAR(OP) ')'
[10](01, 64)-(01, 65): NEWLINE(NEWLINE)
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

