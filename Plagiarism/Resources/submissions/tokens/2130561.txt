[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 01): NAME(NAME) 'y'
[00](01, 02)-(01, 03): EQUAL(OP) '='
[00](01, 04)-(01, 07): NAME(NAME) 'int'
[00](01, 07)-(01, 08): LPAR(OP) '('
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 54): STRING(STRING) '"Geef het aantal kolommen van de matrix"'
[00](01, 54)-(01, 55): RPAR(OP) ')'
[00](01, 55)-(01, 56): RPAR(OP) ')'
[00](01, 56)-(01, 57): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NAME(NAME) 'x'
[01](01, 02)-(01, 03): EQUAL(OP) '='
[01](01, 04)-(01, 07): NAME(NAME) 'int'
[01](01, 07)-(01, 08): LPAR(OP) '('
[01](01, 08)-(01, 13): NAME(NAME) 'input'
[01](01, 13)-(01, 14): LPAR(OP) '('
[01](01, 14)-(01, 51): STRING(STRING) '"Geef het aantal rijen van de matrix"'
[01](01, 51)-(01, 52): RPAR(OP) ')'
[01](01, 52)-(01, 53): RPAR(OP) ')'
[01](01, 53)-(01, 54): NEWLINE(NEWLINE) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 01): NL(NL) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 03): NAME(NAME) 'for'
[03](01, 04)-(01, 05): NAME(NAME) 'i'
[03](01, 06)-(01, 08): NAME(NAME) 'in'
[03](01, 09)-(01, 14): NAME(NAME) 'range'
[03](01, 14)-(01, 15): LPAR(OP) '('
[03](01, 15)-(01, 16): NUMBER(NUMBER) '1'
[03](01, 16)-(01, 17): COMMA(OP) ','
[03](01, 17)-(01, 18): NAME(NAME) 'x'
[03](01, 18)-(01, 19): PLUS(OP) '+'
[03](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[03](01, 20)-(01, 21): RPAR(OP) ')'
[03](01, 21)-(01, 22): COLON(OP) ':'
[03](01, 22)-(01, 23): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 04): INDENT(INDENT) '    '
[04](01, 04)-(01, 07): NAME(NAME) 'for'
[04](01, 08)-(01, 09): NAME(NAME) 'j'
[04](01, 10)-(01, 12): NAME(NAME) 'in'
[04](01, 13)-(01, 18): NAME(NAME) 'range'
[04](01, 18)-(01, 19): LPAR(OP) '('
[04](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[04](01, 20)-(01, 21): COMMA(OP) ','
[04](01, 21)-(01, 22): NAME(NAME) 'y'
[04](01, 22)-(01, 23): PLUS(OP) '+'
[04](01, 23)-(01, 24): NUMBER(NUMBER) '1'
[04](01, 24)-(01, 25): RPAR(OP) ')'
[04](01, 25)-(01, 26): COLON(OP) ':'
[04](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[04](02, 00)-(02, 00): DEDENT(DEDENT)
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 08): INDENT(INDENT) '        '
[05](01, 08)-(01, 13): NAME(NAME) 'print'
[05](01, 13)-(01, 14): LPAR(OP) '('
[05](01, 14)-(01, 15): NAME(NAME) 'j'
[05](01, 15)-(01, 16): PLUS(OP) '+'
[05](01, 16)-(01, 17): LPAR(OP) '('
[05](01, 17)-(01, 18): NAME(NAME) 'i'
[05](01, 18)-(01, 19): MINUS(OP) '-'
[05](01, 19)-(01, 20): NUMBER(NUMBER) '1'
[05](01, 20)-(01, 21): RPAR(OP) ')'
[05](01, 21)-(01, 22): STAR(OP) '*'
[05](01, 22)-(01, 23): NAME(NAME) 'y'
[05](01, 23)-(01, 24): COMMA(OP) ','
[05](01, 25)-(01, 28): NAME(NAME) 'end'
[05](01, 28)-(01, 29): EQUAL(OP) '='
[05](01, 29)-(01, 32): STRING(STRING) '" "'
[05](01, 32)-(01, 33): RPAR(OP) ')'
[05](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): DEDENT(DEDENT)
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 04): INDENT(INDENT) '    '
[06](01, 04)-(01, 09): NAME(NAME) 'print'
[06](01, 09)-(01, 10): LPAR(OP) '('
[06](01, 10)-(01, 11): RPAR(OP) ')'
[06](01, 11)-(01, 12): NEWLINE(NEWLINE)
[06](02, 00)-(02, 00): DEDENT(DEDENT)
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

