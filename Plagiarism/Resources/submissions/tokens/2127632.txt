[00](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[00](01, 00)-(01, 05): NAME(NAME) 'total'
[00](01, 06)-(01, 07): EQUAL(OP) '='
[00](01, 08)-(01, 13): NAME(NAME) 'input'
[00](01, 13)-(01, 14): LPAR(OP) '('
[00](01, 14)-(01, 15): RPAR(OP) ')'
[00](01, 15)-(01, 16): NEWLINE(NEWLINE) '\n'
[00](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[01](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[01](01, 00)-(01, 01): NL(NL) '\n'
[01](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[02](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[02](01, 00)-(01, 03): NAME(NAME) 'two'
[02](01, 03)-(01, 04): COLON(OP) ':'
[02](01, 05)-(01, 10): NAME(NAME) 'print'
[02](01, 10)-(01, 11): LPAR(OP) '('
[02](01, 11)-(01, 12): LPAR(OP) '('
[02](01, 12)-(01, 15): NAME(NAME) 'int'
[02](01, 15)-(01, 16): LPAR(OP) '('
[02](01, 16)-(01, 21): NAME(NAME) 'total'
[02](01, 21)-(01, 22): RPAR(OP) ')'
[02](01, 22)-(01, 24): DOUBLESLASH(OP) '//'
[02](01, 24)-(01, 27): NUMBER(NUMBER) '200'
[02](01, 27)-(01, 28): RPAR(OP) ')'
[02](01, 28)-(01, 29): RPAR(OP) ')'
[02](01, 29)-(01, 30): NEWLINE(NEWLINE) '\n'
[02](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[03](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[03](01, 00)-(01, 07): NAME(NAME) 'resttwo'
[03](01, 08)-(01, 09): EQUAL(OP) '='
[03](01, 10)-(01, 13): NAME(NAME) 'int'
[03](01, 13)-(01, 14): LPAR(OP) '('
[03](01, 14)-(01, 19): NAME(NAME) 'total'
[03](01, 19)-(01, 20): RPAR(OP) ')'
[03](01, 20)-(01, 21): PERCENT(OP) '%'
[03](01, 21)-(01, 24): NUMBER(NUMBER) '200'
[03](01, 24)-(01, 25): NEWLINE(NEWLINE) '\n'
[03](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[04](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[04](01, 00)-(01, 01): NL(NL) '\n'
[04](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[05](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[05](01, 00)-(01, 03): NAME(NAME) 'one'
[05](01, 03)-(01, 04): COLON(OP) ':'
[05](01, 05)-(01, 10): NAME(NAME) 'print'
[05](01, 10)-(01, 11): LPAR(OP) '('
[05](01, 11)-(01, 12): LPAR(OP) '('
[05](01, 12)-(01, 15): NAME(NAME) 'int'
[05](01, 15)-(01, 16): LPAR(OP) '('
[05](01, 16)-(01, 23): NAME(NAME) 'resttwo'
[05](01, 23)-(01, 24): RPAR(OP) ')'
[05](01, 24)-(01, 26): DOUBLESLASH(OP) '//'
[05](01, 26)-(01, 29): NUMBER(NUMBER) '100'
[05](01, 29)-(01, 30): RPAR(OP) ')'
[05](01, 30)-(01, 31): RPAR(OP) ')'
[05](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[05](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[06](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[06](01, 00)-(01, 07): NAME(NAME) 'restone'
[06](01, 08)-(01, 09): EQUAL(OP) '='
[06](01, 10)-(01, 13): NAME(NAME) 'int'
[06](01, 13)-(01, 14): LPAR(OP) '('
[06](01, 14)-(01, 21): NAME(NAME) 'resttwo'
[06](01, 21)-(01, 22): RPAR(OP) ')'
[06](01, 22)-(01, 23): PERCENT(OP) '%'
[06](01, 23)-(01, 26): NUMBER(NUMBER) '100'
[06](01, 26)-(01, 27): NEWLINE(NEWLINE) '\n'
[06](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[07](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[07](01, 00)-(01, 01): NL(NL) '\n'
[07](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[08](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[08](01, 00)-(01, 06): NAME(NAME) 'fiftyc'
[08](01, 06)-(01, 07): COLON(OP) ':'
[08](01, 08)-(01, 13): NAME(NAME) 'print'
[08](01, 13)-(01, 14): LPAR(OP) '('
[08](01, 14)-(01, 15): LPAR(OP) '('
[08](01, 15)-(01, 18): NAME(NAME) 'int'
[08](01, 18)-(01, 19): LPAR(OP) '('
[08](01, 19)-(01, 26): NAME(NAME) 'restone'
[08](01, 26)-(01, 27): RPAR(OP) ')'
[08](01, 27)-(01, 29): DOUBLESLASH(OP) '//'
[08](01, 29)-(01, 31): NUMBER(NUMBER) '50'
[08](01, 31)-(01, 32): RPAR(OP) ')'
[08](01, 32)-(01, 33): RPAR(OP) ')'
[08](01, 33)-(01, 34): NEWLINE(NEWLINE) '\n'
[08](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[09](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[09](01, 00)-(01, 10): NAME(NAME) 'restfiftyc'
[09](01, 11)-(01, 12): EQUAL(OP) '='
[09](01, 13)-(01, 16): NAME(NAME) 'int'
[09](01, 16)-(01, 17): LPAR(OP) '('
[09](01, 17)-(01, 24): NAME(NAME) 'restone'
[09](01, 24)-(01, 25): RPAR(OP) ')'
[09](01, 25)-(01, 26): PERCENT(OP) '%'
[09](01, 26)-(01, 28): NUMBER(NUMBER) '50'
[09](01, 28)-(01, 29): NEWLINE(NEWLINE) '\n'
[09](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[10](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[10](01, 00)-(01, 01): NL(NL) '\n'
[10](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[11](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[11](01, 00)-(01, 07): NAME(NAME) 'twentyc'
[11](01, 07)-(01, 08): COLON(OP) ':'
[11](01, 09)-(01, 14): NAME(NAME) 'print'
[11](01, 14)-(01, 15): LPAR(OP) '('
[11](01, 15)-(01, 16): LPAR(OP) '('
[11](01, 16)-(01, 19): NAME(NAME) 'int'
[11](01, 19)-(01, 20): LPAR(OP) '('
[11](01, 20)-(01, 30): NAME(NAME) 'restfiftyc'
[11](01, 30)-(01, 31): RPAR(OP) ')'
[11](01, 31)-(01, 33): DOUBLESLASH(OP) '//'
[11](01, 33)-(01, 35): NUMBER(NUMBER) '20'
[11](01, 35)-(01, 36): RPAR(OP) ')'
[11](01, 36)-(01, 37): RPAR(OP) ')'
[11](01, 37)-(01, 38): NEWLINE(NEWLINE) '\n'
[11](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[12](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[12](01, 00)-(01, 11): NAME(NAME) 'resttwentyc'
[12](01, 12)-(01, 13): EQUAL(OP) '='
[12](01, 14)-(01, 17): NAME(NAME) 'int'
[12](01, 17)-(01, 18): LPAR(OP) '('
[12](01, 18)-(01, 28): NAME(NAME) 'restfiftyc'
[12](01, 28)-(01, 29): RPAR(OP) ')'
[12](01, 29)-(01, 30): PERCENT(OP) '%'
[12](01, 30)-(01, 32): NUMBER(NUMBER) '20'
[12](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[12](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[13](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[13](01, 00)-(01, 01): NL(NL) '\n'
[13](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[14](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[14](01, 00)-(01, 04): NAME(NAME) 'tenc'
[14](01, 04)-(01, 05): COLON(OP) ':'
[14](01, 06)-(01, 11): NAME(NAME) 'print'
[14](01, 11)-(01, 12): LPAR(OP) '('
[14](01, 12)-(01, 13): LPAR(OP) '('
[14](01, 13)-(01, 16): NAME(NAME) 'int'
[14](01, 16)-(01, 17): LPAR(OP) '('
[14](01, 17)-(01, 28): NAME(NAME) 'resttwentyc'
[14](01, 28)-(01, 29): RPAR(OP) ')'
[14](01, 29)-(01, 31): DOUBLESLASH(OP) '//'
[14](01, 31)-(01, 33): NUMBER(NUMBER) '10'
[14](01, 33)-(01, 34): RPAR(OP) ')'
[14](01, 34)-(01, 35): RPAR(OP) ')'
[14](01, 35)-(01, 36): NEWLINE(NEWLINE) '\n'
[14](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[15](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[15](01, 00)-(01, 08): NAME(NAME) 'resttenc'
[15](01, 09)-(01, 10): EQUAL(OP) '='
[15](01, 11)-(01, 14): NAME(NAME) 'int'
[15](01, 14)-(01, 15): LPAR(OP) '('
[15](01, 15)-(01, 26): NAME(NAME) 'resttwentyc'
[15](01, 26)-(01, 27): RPAR(OP) ')'
[15](01, 27)-(01, 28): PERCENT(OP) '%'
[15](01, 28)-(01, 30): NUMBER(NUMBER) '10'
[15](01, 30)-(01, 31): NEWLINE(NEWLINE) '\n'
[15](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[16](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[16](01, 00)-(01, 01): NL(NL) '\n'
[16](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[17](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[17](01, 00)-(01, 05): NAME(NAME) 'fivec'
[17](01, 05)-(01, 06): COLON(OP) ':'
[17](01, 07)-(01, 12): NAME(NAME) 'print'
[17](01, 12)-(01, 13): LPAR(OP) '('
[17](01, 13)-(01, 14): LPAR(OP) '('
[17](01, 14)-(01, 17): NAME(NAME) 'int'
[17](01, 17)-(01, 18): LPAR(OP) '('
[17](01, 18)-(01, 26): NAME(NAME) 'resttenc'
[17](01, 26)-(01, 27): RPAR(OP) ')'
[17](01, 27)-(01, 29): DOUBLESLASH(OP) '//'
[17](01, 29)-(01, 30): NUMBER(NUMBER) '5'
[17](01, 30)-(01, 31): RPAR(OP) ')'
[17](01, 31)-(01, 32): RPAR(OP) ')'
[17](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[17](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[18](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[18](01, 00)-(01, 09): NAME(NAME) 'restfivec'
[18](01, 10)-(01, 11): EQUAL(OP) '='
[18](01, 12)-(01, 15): NAME(NAME) 'int'
[18](01, 15)-(01, 16): LPAR(OP) '('
[18](01, 16)-(01, 24): NAME(NAME) 'resttenc'
[18](01, 24)-(01, 25): RPAR(OP) ')'
[18](01, 25)-(01, 26): PERCENT(OP) '%'
[18](01, 26)-(01, 27): NUMBER(NUMBER) '5'
[18](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[18](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[19](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[19](01, 00)-(01, 01): NL(NL) '\n'
[19](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[20](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[20](01, 00)-(01, 04): NAME(NAME) 'twoc'
[20](01, 04)-(01, 05): COLON(OP) ':'
[20](01, 06)-(01, 11): NAME(NAME) 'print'
[20](01, 11)-(01, 12): LPAR(OP) '('
[20](01, 12)-(01, 13): LPAR(OP) '('
[20](01, 13)-(01, 16): NAME(NAME) 'int'
[20](01, 16)-(01, 17): LPAR(OP) '('
[20](01, 17)-(01, 26): NAME(NAME) 'restfivec'
[20](01, 26)-(01, 27): RPAR(OP) ')'
[20](01, 27)-(01, 29): DOUBLESLASH(OP) '//'
[20](01, 29)-(01, 30): NUMBER(NUMBER) '2'
[20](01, 30)-(01, 31): RPAR(OP) ')'
[20](01, 31)-(01, 32): RPAR(OP) ')'
[20](01, 32)-(01, 33): NEWLINE(NEWLINE) '\n'
[20](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[21](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[21](01, 00)-(01, 08): NAME(NAME) 'resttwoc'
[21](01, 09)-(01, 10): EQUAL(OP) '='
[21](01, 11)-(01, 14): NAME(NAME) 'int'
[21](01, 14)-(01, 15): LPAR(OP) '('
[21](01, 15)-(01, 24): NAME(NAME) 'restfivec'
[21](01, 24)-(01, 25): RPAR(OP) ')'
[21](01, 25)-(01, 26): PERCENT(OP) '%'
[21](01, 26)-(01, 27): NUMBER(NUMBER) '2'
[21](01, 27)-(01, 28): NEWLINE(NEWLINE) '\n'
[21](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[22](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[22](01, 00)-(01, 01): NL(NL) '\n'
[22](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[23](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[23](01, 00)-(01, 04): NAME(NAME) 'onec'
[23](01, 04)-(01, 05): COLON(OP) ':'
[23](01, 06)-(01, 11): NAME(NAME) 'print'
[23](01, 11)-(01, 12): LPAR(OP) '('
[23](01, 12)-(01, 13): LPAR(OP) '('
[23](01, 13)-(01, 16): NAME(NAME) 'int'
[23](01, 16)-(01, 17): LPAR(OP) '('
[23](01, 17)-(01, 25): NAME(NAME) 'resttwoc'
[23](01, 25)-(01, 26): RPAR(OP) ')'
[23](01, 26)-(01, 28): DOUBLESLASH(OP) '//'
[23](01, 28)-(01, 29): NUMBER(NUMBER) '1'
[23](01, 29)-(01, 30): RPAR(OP) ')'
[23](01, 30)-(01, 31): RPAR(OP) ')'
[23](01, 31)-(01, 32): NEWLINE(NEWLINE) '\n'
[23](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

[24](00, 00)-(00, 00): ENCODING(ENCODING) 'utf-8'
[24](01, 00)-(01, 08): NAME(NAME) 'restonec'
[24](01, 09)-(01, 10): EQUAL(OP) '='
[24](01, 11)-(01, 14): NAME(NAME) 'int'
[24](01, 14)-(01, 15): LPAR(OP) '('
[24](01, 15)-(01, 23): NAME(NAME) 'resttwoc'
[24](01, 23)-(01, 24): RPAR(OP) ')'
[24](01, 24)-(01, 25): PERCENT(OP) '%'
[24](01, 25)-(01, 26): NUMBER(NUMBER) '1'
[24](01, 26)-(01, 27): NEWLINE(NEWLINE)
[24](02, 00)-(02, 00): ENDMARKER(ENDMARKER)

